{"version":3,"sources":["webpack:///../node_modules/@cosmotech/core/dist/index.esm.js"],"names":["commonjsGlobal","globalThis","window","global","self","getDefaultExportFromCjs","x","__esModule","Object","prototype","hasOwnProperty","call","dist","CSV","Parser$2","defineProperty","value","Parser$1","Parser","input","comma","quote","this","pointer","linePointer","residueChars","_residueRegExp","RegExp","_simpleValueRegExp","_replaceQuoteRegExp","File","output","rows","tempointer","row","Row","length","pop","push","EOF","headers_1","shift","map","k","trim","reduce","data","i","Value","Comma","LineBreak","residue","Residue","quotedvalue","QuotedValue","slice","replace","simplevalue","SimpleValue","charAt","index","search","searchIndex","hasRequiredStreamer","hasRequiredCSV","exports","Streamer","requireCSV","Parser_1","Streamer_1","extendStatics","__extends","d","b","setPrototypeOf","__proto__","Array","p","__","constructor","create","stream_1","CSV_1","Streamer$1","_super","options","_this","readableObjectMode","writableObjectMode","buffer","sep","separator","quo","_transform","chunk","_encoding","callback","concat","toString","undefined","detect","csv","forEach","_flush","Transform","requireStreamer","eol","quoteCharReqex","specialCharReqex","_quoteIfRquired","includes","_shouldBeQuoted","reducer","item","memo","prependSep","s","JSON","stringify","_stringifySingleValue","idx","indexOf","prev","cur","ret","isArray","join","loop","key","read","Error","parse","sepOrOpts","opts","r","fields","readAll","readChunk","fetch","createStream","m","__export","has_buf","Buffer","process","versions","node","Buffer_from","nbfs","from","e","buf","enc","bind","buf_utf16le","chr0","Date","valueOf","___utf16le","ss","String","fromCharCode","__readUInt16LE","__utf16le","isBuffer","___utf8","__readUInt8","__utf8","___lpstr","len","__readUInt32LE","___cpstr","___lpwstr","___lpp4","___8lpp4","___double","Infinity","NaN","Math","pow","read_double_le","readUInt32LE","readDoubleLE","Uint8Array","subarray","_typeof$1","o","Symbol","iterator","toInteger","dirtyNumber","number","Number","isNaN","ceil","floor","requiredArgs","required","args","TypeError","toDate$1","argument","arguments","argStr","getTime","console","warn","stack","addMilliseconds","dirtyDate","dirtyAmount","timestamp","amount","defaultOptions","getDefaultOptions","getTimezoneOffsetInMilliseconds","date","utcDate","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","setUTCFullYear","isDate$2","isValid$2","subMilliseconds","startOfUTCISOWeek","weekStartsOn","day","getUTCDay","diff","setUTCDate","getUTCDate","setUTCHours","getUTCISOWeekYear","year","getUTCFullYear","fourthOfJanuaryOfNextYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","startOfUTCISOWeekYear","fourthOfJanuary","getUTCISOWeek","round","startOfUTCWeek","_ref","_ref2","_ref3","_options$weekStartsOn","_options$locale","_options$locale$optio","_defaultOptions$local","_defaultOptions$local2","locale","RangeError","getUTCWeekYear","_options$firstWeekCon","firstWeekContainsDate","firstWeekOfNextYear","firstWeekOfThisYear","startOfUTCWeekYear","firstWeek","getUTCWeek","addLeadingZeros","targetLength","sign","abs","formatters$3","y","token","signedYear","M","month","getUTCMonth","a","dayPeriodEnumValue","getUTCHours","toUpperCase","h","H","getUTCMinutes","getUTCSeconds","S","numberOfDigits","milliseconds","getUTCMilliseconds","dayPeriodEnum","formatTimezoneShort","offset","dirtyDelimiter","absOffset","hours","minutes","delimiter","formatTimezoneWithOptionalMinutes","formatTimezone","formatters$1","G","localize","era","width","ordinalNumber","unit","Y","signedWeekYear","weekYear","R","u","Q","quarter","context","q","L","w","week","I","isoWeek","D","dayOfYear","setUTCMonth","startOfYearTimestamp","difference","getUTCDayOfYear","E","dayOfWeek","localDayOfWeek","c","isoDayOfWeek","dayPeriod","toLowerCase","B","K","X","_localize","timezoneOffset","_originalDate","getTimezoneOffset","O","z","t","originalDate","T","dateLongFormatter","pattern","formatLong","timeLongFormatter","time","longFormatters$1","P","dateTimeFormat","matchResult","match","datePattern","timePattern","dateTime","protectedDayOfYearTokens","protectedWeekYearTokens","isProtectedDayOfYearToken","isProtectedWeekYearToken","throwProtectedError","format","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","formatDistance$1","count","result","tokenValue","addSuffix","comparison","buildFormatLongFn","defaultWidth","formats","full","long","medium","short","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","buildLocalizeFn","dirtyIndex","valuesArray","formattingValues","defaultFormattingWidth","_defaultWidth","_width","values","argumentCallback","buildMatchFn","string","matchPattern","matchPatterns","defaultMatchWidth","matchedString","parsePatterns","defaultParseWidth","findIndex","test","findKey","valueCallback","rest","object","predicate","array","defaultLocale","code","formatDistance","formatRelative","_date","_baseDate","_options","rem100","narrow","abbreviated","wide","am","pm","midnight","noon","morning","afternoon","evening","night","parsePattern","parseInt","parseResult","any","formattingTokensRegExp$1","longFormattingTokensRegExp$1","escapedStringRegExp$1","doubleQuoteRegExp$1","unescapedLatinCharacterRegExp$1","format$1","dirtyFormatStr","_ref4","_options$locale2","_options$locale2$opti","_ref5","_ref6","_ref7","_options$locale3","_options$locale3$opti","_defaultOptions$local3","_defaultOptions$local4","formatStr","formatterOptions","substring","firstCharacter","longFormatter","cleanEscapedString$1","formatter","useAdditionalWeekYearTokens","useAdditionalDayOfYearTokens","matched","assign","target","property","_arrayLikeToArray","arr","arr2","_createForOfIteratorHelper","allowArrayLike","it","minLen","n","name","_unsupportedIterableToArray","F","done","_e","f","err","normalCompletion","didErr","step","next","_e2","_assertThisInitialized","ReferenceError","_setPrototypeOf","_inherits","subClass","superClass","writable","configurable","_getPrototypeOf","getPrototypeOf","_possibleConstructorReturn","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","_isNativeReflectConstruct","Super","NewTarget","apply","_classCallCheck","instance","Constructor","_toPropertyKey","arg","hint","prim","toPrimitive","res","_toPrimitive","_defineProperties","props","descriptor","enumerable","_createClass","protoProps","staticProps","_defineProperty","obj","Setter","_utcDate","ValueSetter","_Setter","validateValue","setValue","priority","subPriority","flags","DateToSystemTimezoneSetter","_Setter2","_super2","_this2","_len","_key","timestampIsSet","convertedDate","setFullYear","setHours","dateString","setter","validate","set","_value","EraParser","_Parser","numericPatterns","timezonePatterns","mapValue","parseFnResult","mapFn","parseNumericPattern","parseTimezonePattern","parseAnyDigitsSigned","parseNDigits","parseNDigitsSigned","dayPeriodEnumToHours","normalizeTwoDigitYear","twoDigitYear","currentYear","isCommonEra","absCurrentYear","rangeEnd","isLeapYearIndex$1","YearParser","isTwoDigitYear","normalizedTwoDigitYear","LocalWeekYearParser","ISOWeekYearParser","_flags","firstWeekOfYear","ExtendedYearParser","QuarterParser","StandAloneQuarterParser","MonthParser","StandAloneMonthParser","LocalWeekParser","dirtyWeek","setUTCWeek","ISOWeekParser","dirtyISOWeek","setUTCISOWeek","DAYS_IN_MONTH","DAYS_IN_MONTH_LEAP_YEAR","DateParser","isLeapYear","DayOfYearParser","setUTCDay","dirtyDay","currentDay","remainder","dayIndex","DayParser","LocalDayParser","wholeWeekDays","StandAloneLocalDayParser","ISODayParser","setUTCISODay","AMPMParser","AMPMMidnightParser","DayPeriodParser","Hour1to12Parser","isPM","Hour0to23Parser","Hour0To11Parser","Hour1To24Parser","MinuteParser","setUTCMinutes","SecondParser","setUTCSeconds","FractionOfSecondParser","setUTCMilliseconds","ISOTimezoneWithZParser","ISOTimezoneParser","TimestampSecondsParser","TimestampMillisecondsParser","parsers","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","notWhitespaceRegExp","unescapedLatinCharacterRegExp","parse$1","dirtyDateString","dirtyFormatString","dirtyReferenceDate","formatString","_step","subFnOptions","setters","tokens","usedTokens","_iterator","_loop","parser","incompatibleTokens","incompatibleToken","find","usedToken","fullToken","run","v","cleanEscapedString","_ret","uniquePrioritySetters","sort","filter","setterArray","_step2","_iterator2","patterns$1","dateTimeDelimiter","timeZoneDelimiter","timezone","dateRegex","timeRegex","timezoneRegex","splitDateString","timeString","dateStrings","split","substr","exec","parseYear","additionalDigits","regex","captures","restDateString","century","parseDate","isWeekDate","parseDateUnit","_year","validateWeekDate","isoWeekYear","fourthOfJanuaryDay","dayOfISOWeekYear","daysInMonths","isLeapYearIndex","validateDate","validateDayOfYearDate","max","parseTime","parseTimeUnit","seconds","validateTime","parseFloat","parseTimezone","timezoneString","_hours","validateTimezone","decreaseDateByOffset","increaseDateByOffset","addLocalDateToUTCOffset","dateStr","dateFormat","error","DateUtils","addUTCToLocalDateOffset","getDateAtMidnightUTC","parseISO","_options$additionalDi","parseYearResult","parseISO$1","formatUTCDateAsLocal","dateWithReverseOffset","isValid","isMatch","isValidDate","min","dateA","dateB","strMin","dateStrA","dateStrB","strMax","validator$1","toDate","assertString","module","_typeof","default","invalidType","assertStringExports","_assertString","toDateExports","toFloat","isFloat$1","alpha$1","commaDecimal","dotDecimal","bengaliLocales","farsiLocales","arabicLocales","englishLocales","decimal","alphanumeric","alpha","ar","he","fa","bn","_locale","_i","_locale2","_i2","_locale3","_i3","_i4","_i5","str","_assertString$b","float","_alpha$2","lt","gt","locales","locales$5","keys","_isFloat","_interopRequireDefault","toFloatExports","toInt","radix","toIntExports","toBoolean","strict","toBooleanExports","equals","equalsExports","contains","toString$1","toStringExports","merge","defaults","mergeExports","elem","_merge","defaulContainsOptions","ignoreCase","_toString","minOccurrences","containsExports","matches","modifiers","matchesExports","isEmail","isByteLength","encodeURI","isByteLengthExports","isFQDN","default_fqdn_options","allow_trailing_dot","allow_wildcard","parts","tld","require_tld","allow_numeric_tld","every","part","ignore_max_length","allow_underscores","isFQDNExports","isIP","version","IPv4AddressRegExp","IPv6AddressRegExp","IPv4SegmentFormat","IPv4AddressFormat","IPv6SegmentFormat","isIPExports","default_email_options","require_display_name","allow_display_name","display_email","splitNameAddress","display_name","endsWith","display_name_without_quotes","validateDisplayName","domain","lower_domain","host_blacklist","host_whitelist","user","domain_specific_validation","username","_isByteLength","_user_parts","gmailUserPart","_isFQDN","allow_ip_domain","_isIP","startsWith","noBracketdomain","allow_utf8_local_part","quotedEmailUserUtf8","quotedEmailUser","emailUserUtf8Part","emailUserPart","user_parts","blacklisted_chars","isEmailExports","isURL","url","default_url_options","validate_length","allow_fragments","allow_query_components","protocol","auth","host","hostname","port","port_str","ipv6","require_valid_protocol","protocols","require_protocol","allow_protocol_relative_urls","require_host","disallow_auth","_auth$split2","_arrayWithHoles","_arr","_n","_d","_s","_iterableToArrayLimit","_nonIterableRest","_slicedToArray","password","ipv6_match","wrapped_ipv6","require_port","checkHost","isRegExp","isURLExports","isMACAddress","eui","no_colons","no_separators","macAddress48NoSeparators","macAddress64NoSeparators","macAddress48","macAddress48WithDots","macAddress64","macAddress64WithDots","isMACAddressExports","isIPRange","subnetMaybe","isValidIP","expectedSubnet","isIPRangeExports","isDate$1","default_date_options","isValidFormat","formatDelimiter","delimiters","dateDelimiter","strictMode","dateAndFormat","zippedArr","zip","dateObj","_e3","return","_step$value","dateWord","formatWord","fullYear","parsedYear","currentYearLastTwoDigits","isFinite","isDateExports","isTime","default_time_options","hourFormat","mode","hour24","withSeconds","hour12","isTimeExports","isBoolean","loose","looseBooleans","strictBooleans","isBooleanExports","isLocale","languageTagRegex","language","extension","grandfathered","langtag","isLocaleExports","isAlpha$1","_str","_assertString$a","ignore","_alpha$1","_interopRequireDefault$a","locales$4","isAlphanumeric$1","_assertString$9","_alpha","_interopRequireDefault$9","locales$3","isNumeric","no_symbols","numericNoSymbols","isNumericExports","isPassportNumber","countryCode","normalizedStr","passportRegexByCountryCode","AM","AR","AT","AU","AZ","BE","BG","BR","BY","CA","CH","CN","CY","CZ","DE","DK","DZ","EE","ES","FI","FR","GB","GR","HR","HU","IE","IN","ID","IR","IS","IT","JM","JP","KR","KZ","LI","LT","LU","LV","LY","MT","MZ","MY","MX","NL","NZ","PH","PK","PL","PT","RO","RU","SE","SL","SK","TH","TR","UA","US","isPassportNumberExports","isPort","isInt$1","allow_leading_zeroes","int","intLeadingZeroes","minCheckPassed","maxCheckPassed","ltCheckPassed","gtCheckPassed","isIntExports","_isInt","isPortExports","isLowercase","isLowercaseExports","isUppercase","isUppercaseExports","isIMEI","imeiRegex","imeiRegexWithoutHypens","allow_hyphens","imeiRegexWithHypens","sum","mul","digit","tp","isIMEIExports","isAscii","ascii","isAsciiExports","isFullWidth$1","_assertString$8","fullWidth","_interopRequireDefault$8","isHalfWidth$1","_assertString$7","halfWidth","_interopRequireDefault$7","isVariableWidth","_isFullWidth","_isHalfWidth","isVariableWidthExports","isMultibyte","multibyte","isMultibyteExports","isSemVer","multilineRegex","regexpAsStringLiteral","multilineRegexExports","semanticVersioningRegex","isSemVerExports","isSurrogatePair","surrogatePair","isSurrogatePairExports","isDecimal","_default","val","some","arrVal","includesExports","default_decimal_options","_includes","blacklist","decimal_digits","force_decimal","decimalRegExp","isDecimalExports","isHexadecimal","hexadecimal","isHexadecimalExports","isOctal","octal","isOctalExports","isDivisibleBy","num","_toFloat","isDivisibleByExports","isHexColor","hexcolor","isHexColorExports","isRgbColor","includePercentValues","rgbColor","rgbaColor","rgbColorPercent","rgbaColorPercent","isRgbColorExports","isHSL","strippedStr","hslComma","hslSpace","isHSLExports","isISRC","isrc","isISRCExports","isIBAN$1","_assertString$6","hasValidIbanFormat","hasValidIbanChecksum","_interopRequireDefault$6","ibanRegexThroughCountryCode","AD","AE","AL","BA","BH","CR","DO","EG","FO","GE","GI","GL","GT","IL","IQ","JO","KW","LB","LC","MA","MC","MD","ME","MK","MR","MU","NO","PS","QA","RS","SA","SC","SI","SM","SV","TL","TN","VA","VG","XK","isoCountryCode","isoCountryCodeInIbanRegexCodeObject","whitelist","char","charCodeAt","acc","locales$2","isBIC","isISO31661Alpha2$1","_assertString$5","validISO31661Alpha2CountriesCodes","has","CountryCodes","_interopRequireDefault$5","Set","_isISO31661Alpha","isBICReg","isBICExports","isMD5","md5","isMD5Exports","isHash","algorithm","lengths","md4","sha1","sha256","sha384","sha512","ripemd128","ripemd160","tiger128","tiger160","tiger192","crc32","crc32b","isHashExports","isJWT","isBase64","defaultBase64Options","urlSafe","urlSafeBase64","notBase64","firstPaddingChar","isBase64Exports","dotSplit","currElem","_isBase","isJWTExports","isJSON","default_json_options","primitives","allow_primitives","isJSONExports","isEmpty","default_is_empty_options","ignore_whitespace","isEmptyExports","isLength","presentationSequences","surrogatePairs","isLengthExports","isUUID","uuid","1","2","3","4","5","all","isUUIDExports","isMongoId","_isHexadecimal","isMongoIdExports","isAfter","comparisonDate","_toDate","original","isAfterExports","isBefore","isBeforeExports","isIn","isInExports","isLuhnNumber","tmpNum","shouldDouble","sanitized","isLuhnNumberExports","isCreditCard","card","provider","cards","allCards","cardProvider","_isLuhnNumber","amex","dinersclub","discover","jcb","mastercard","unionpay","visa","tmpCardsArray","isCreditCardExports","isIdentityCard","validators","validator","weightOfDigits","6","7","8","9","10","11","modulo","lastDigit","charsValue","Z","reverse","lastNumber","k1","k2","LK","incNum","id","idCardNo","provincesAndCities","powers","parityBit","checkAddressCode","addressCode","checkBirthDayCode","birDayCode","yyyy","mm","dd","xdata","checkParityBit","id17","power","getParityBit","check","check15IdCardNo","check18IdCardNo","regexIsDigit","checkSumVal","ALPHABET_CODES","A","C","J","N","U","V","W","isIdentityCardExports","isEAN","actualCheckDigit","validEanRegex","ean","getPositionWeightThroughLengthAndIndex","partialSum","isEANExports","isISIN","isin","double","lo","hi","trunc","_digit","isISINExports","isISBN","isbn","sanitizedIsbn","checksum","possibleIsbn10","possibleIsbn13","factor","isISBNExports","isISSN","testIssn","issn","require_hyphen","case_sensitive","digits","isISSNExports","isTaxID","algorithms$1","iso7064Check","checkvalue","luhnCheck","second","product","reverseMultiplyAndSum","base","total","verhoeffCheck","d_table","p_table","str_copy","strcopy","taxIdFormat","sanitizeRegexes","taxIdCheck","algorithms","cache","_getRequireWildcardCache","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","desc","_interopRequireWildcard","_isDate","WeakMap","_toConsumableArray","_arrayWithoutHoles","iter","_iterableToArray","_nonIterableSpread","enUsCampusPrefix","andover","atlanta","austin","brookhaven","cincinnati","fresno","internet","kansas","memphis","ogden","philadelphia","sba","itItNameCheck","vowelflag","xflag","tin","century_year","multip_lookup","full_year","checkdigit","occurences","j","trip_locations","recurrent","weight","digitsArray","even","_","prefixes","location","enUsGetPrefixes","chars","lead_replace","splice","unshift","checkdigits","number_replace","_number_locations","char_to_int","odd_convert","0","_i6","_char_to_int","multiplier","first_part","lookup","_checksum","_i7","_sum","_i8","identifiers","verificators","pos","_i9","_i10","multipliers","tin_copy","current_year","current_century","allsymbols","isTaxIDExports","isMobilePhone$1","_assertString$4","phones","_interopRequireDefault$4","locales$1","isEthereumAddress","eth","isEthereumAddressExports","isCurrency","digits_after_decimal","symbol","require_symbol","whole_dollar_amount_with_sep","thousands_separator","whole_dollar_amount","decimal_amount","decimal_separator","require_decimal","allow_decimal","allow_negatives","parens_for_negatives","negative_sign_after_digits","negative_sign_before_digits","allow_negative_sign_placeholder","allow_space_after_symbol","allow_space_after_digits","symbol_after_digits","currencyRegex","default_currency_options","isCurrencyExports","isBtcAddress","bech32","base58","isBtcAddressExports","isISO6346$1","isISO6346","isFreightContainerID","_assertString$3","_interopRequireDefault$3","isISO6346Str","isDigit","letterCode","checkSumDigit","isISO6391","isISO6391Set","isISO6391Exports","isISO8601","strictSeparator","iso8601StrictSeparator","iso8601","ordinalMatch","oYear","oDay","monthString","dayString","isISO8601Exports","isRFC3339","rfc3339","timeHour","timeMinute","timeNumOffset","source","timeOffset","partialTime","fullDate","fullTime","isRFC3339Exports","isISO31661Alpha3","validISO31661Alpha3CountriesCodes","isISO31661Alpha3Exports","isISO4217$1","_assertString$2","validISO4217CurrencyCodes","CurrencyCodes","_interopRequireDefault$2","isBase32","defaultBase32Options","crockford","crockfordBase32","base32","isBase32Exports","isBase58","base58Reg","isBase58Exports","isDataURI","attributes","schemeAndMediaType","mediaType","validMediaType","validAttribute","validData","isDataURIExports","isMagnetURI","magnetURIComponent","isMagnetURIExports","isMailtoURI","rtrim","strIndex","rtrimExports","ltrim","ltrimExports","_rtrim","_ltrim","trimExports","_url$replace$split2","_url$replace$split2$","to","_url$replace$split2$2","queryString","query","allowedParams","cc","bcc","isParseFailed","queryParams","_q$split2","delete","parseMailtoQueryString","email","_trim","_isEmail","isMailtoURIExports","isMimeType","mimeTypeSimple","mimeTypeText","mimeTypeMultipart","isMimeTypeExports","isLatLong","defaultLatLongOptions","pair","checkDMS","latDMS","longDMS","lat","isLatLongExports","isPostalCode$1","_assertString$1","patterns","_interopRequireDefault$1","threeDigit","fourDigit","fiveDigit","sixDigit","HT","KE","MG","NP","PR","SG","TW","ZA","ZM","_escape","_escapeExports","_unescape","_unescapeExports","stripLow","blacklistExports","keep_new_lines","_blacklist","stripLowExports","whitelistExports","isWhitelisted","isWhitelistedExports","normalizeEmail","default_normalize_email_options","raw_parts","gmail_remove_subaddress","gmail_remove_dots","dotsReplacer","all_lowercase","gmail_lowercase","gmail_convert_googlemaildotcom","icloud_domains","icloud_remove_subaddress","icloud_lowercase","outlookdotcom_domains","outlookdotcom_remove_subaddress","outlookdotcom_lowercase","yahoo_domains","yahoo_remove_subaddress","components","yahoo_lowercase","yandex_domains","yandex_lowercase","normalizeEmailExports","isSlug","charsetRegex","isSlugExports","isLicensePlate","isLicensePlateExports","isStrongPassword","analysis","analyzePassword","returnScore","scorePassword","minLength","lowercaseCount","minLowercase","uppercaseCount","minUppercase","numberCount","minNumbers","symbolCount","minSymbols","upperCaseRegex","lowerCaseRegex","numberRegex","symbolRegex","pointsPerUnique","pointsPerRepeat","pointsForContainingLower","pointsForContainingUpper","pointsForContainingNumber","pointsForContainingSymbol","charMap","uniqueChars","scoringOptions","points","isStrongPasswordExports","isVAT$1","vatMatchers","EL","NG","weights","el","UZ","BO","CL","CO","EC","HN","NI","PA","PY","PE","UY","VE","_toInt","_toBoolean","_equals","_contains","_matches","_isURL","_isMACAddress","_isIPRange","_isTime","_isBoolean","_isLocale","_isAlpha","_isAlphanumeric","_isNumeric","_isPassportNumber","_isPort","_isLowercase","_isUppercase","_isIMEI","_isAscii","_isVariableWidth","_isMultibyte","_isSemVer","_isSurrogatePair","_isDecimal","_isOctal","_isDivisibleBy","_isHexColor","_isRgbColor","_isHSL","_isISRC","_isIBAN","_isBIC","_isMD","_isHash","_isJWT","_isJSON","_isEmpty","_isLength","_isUUID","_isMongoId","_isAfter","_isBefore","_isIn","_isCreditCard","_isIdentityCard","_isEAN","_isISIN","_isISBN","_isISSN","_isTaxID","_isMobilePhone","_isEthereumAddress","_isCurrency","_isBtcAddress","_isISO","_isISO2","_isISO3","_isRFC","_isISO31661Alpha2","_isISO4","_isBase2","_isBase3","_isDataURI","_isMagnetURI","_isMailtoURI","_isMimeType","_isLatLong","_isPostalCode","_stripLow","_whitelist","_isWhitelisted","_normalizeEmail","_isSlug","_isLicensePlate","_isStrongPassword","_isVAT","isIBAN","isAlpha","isAlphaLocales","isAlphanumeric","isAlphanumericLocales","isFullWidth","isHalfWidth","isInt","isFloat","isFloatLocales","isMobilePhone","isMobilePhoneLocales","isPostalCode","isPostalCodeLocales","isISO31661Alpha2","isISO4217","escape","unescape","isDate","isVAT","ibanLocales","PathUtils","getBaseNameFromFileName","fileName","nameParts","baseName","getExtensionFromFileName","isExtensionInFileTypeFilter","fileTypeFilter","fileType","DatasetUtils","getDatasetNames","datasets","scenarioDatasets","names","datasetId","dataset","NAME_VALIDATOR","scenarioExistsInList","scenarioName","scenarioList","scenario","ScenarioUtils","scenarioExistsInTree","scenarioTree","treeSearch","children","scenarioNameIsValid","trimEnd","getScenarioTree","compareFn","parentScenario","childScenario","parentId","grandParent","countScenariosInTree","treeData","copyBuffer","byteOffset","circles","refs","refsNew","proto","cloneProto","cloneArray","Map","o2","ArrayBuffer","isView","clone","fn","a2","rfdcCircles","rfdc$1"],"mappings":"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","file":"404058ad-4ded7014b1ce1b25d4c9.js","sourcesContent":["import \"core-js/modules/es.regexp.flags.js\";\nimport require$$0 from 'stream';\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty$1(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}\nfunction _defineProperty$1(obj, key, value) {\n  key = _toPropertyKey$1(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPrimitive$1(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nfunction _toPropertyKey$1(arg) {\n  var key = _toPrimitive$1(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\nfunction getDefaultExportFromCjs(x) {\n  return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\nvar dist = {};\nvar CSV = {};\nvar Parser$2 = {};\n\n/*\nfile:         row + EOF;\nrow:          value (Comma value)* (LineBreak | EOF);\nvalue:        SimpleValue | QuotedValue;\nComma:        ',';\nLineBreak:    '\\r'?'\\n' | '\\r';\nSimpleValue:  ~(',' | '\\r' | '\\n' | '\"')+;\nQuotedValue:  Residue '\"' ('\"\"' | ~'\"')* '\"' Residue;\nResidue:      (' ' | '\\t' | '\\f')*\n*/\nObject.defineProperty(Parser$2, \"__esModule\", {\n  value: true\n});\nvar Parser$1 = /** @class */function () {\n  function Parser(input, comma, quote) {\n    if (!(this instanceof Parser)) {\n      return new Parser(input, comma);\n    }\n    this.input = input;\n    this.pointer = 0;\n    this.linePointer = 0;\n    this.comma = comma && comma[0] || ',';\n    this.quote = quote && quote[0] || '\"';\n    // initialize RegExp Object\n    var residueChars = ' \\f\\v\\u00a0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000';\n    if (this.comma !== '\\t') {\n      residueChars += '\\t';\n    }\n    this._residueRegExp = new RegExp(\"[^\" + residueChars + \"]\");\n    // TODO: `(${this.comma}|\\r\\n)` instead?\n    this._simpleValueRegExp = new RegExp(\"[\" + this.comma + \"\\r\\n]\");\n    this._replaceQuoteRegExp = new RegExp(this.quote + this.quote, 'g');\n  }\n  Parser.prototype.File = function (output) {\n    var rows = [];\n    while (true) {\n      var tempointer = this.pointer;\n      var row = this.Row();\n      if (row.length > 0) {\n        this.linePointer = tempointer;\n        rows.push(row);\n      } else {\n        if (this.linePointer && this.pointer !== this.input.length) {\n          rows.pop();\n          this.pointer = this.linePointer;\n        }\n        break;\n      }\n      if (this.EOF()) {\n        if (this.linePointer && this.pointer !== this.input.length) {\n          rows.pop();\n          this.pointer = this.linePointer;\n        }\n        break;\n      }\n    }\n    if (output && output === \"objects\") {\n      if (rows.length === 0) {\n        return [];\n      }\n      var headers_1 = rows.shift().map(function (k) {\n        return k.trim();\n      });\n      return rows.map(function (row) {\n        return headers_1.reduce(function (data, k, i) {\n          data[k] = row[i];\n          return data;\n        }, {});\n      });\n    } else {\n      return rows;\n    }\n  };\n  Parser.prototype.Row = function () {\n    var row = [];\n    while (true) {\n      row.push(this.Value());\n      if (this.Comma()) {\n        continue;\n      }\n      if (this.LineBreak() || this.EOF()) {\n        return row;\n      } else {\n        row.pop();\n        return row;\n      }\n    }\n  };\n  Parser.prototype.Value = function () {\n    var residue = this.Residue();\n    var quotedvalue = this.QuotedValue();\n    if (quotedvalue) {\n      var value = quotedvalue.slice(1, -1).replace(this._replaceQuoteRegExp, this.quote);\n      this.Residue();\n      return value;\n    }\n    var simplevalue = this.SimpleValue();\n    if (simplevalue) {\n      return residue ? residue + simplevalue : simplevalue;\n    }\n    return '';\n  };\n  Parser.prototype.Comma = function () {\n    if (this.input.slice(this.pointer, this.pointer + this.comma.length) === this.comma) {\n      this.pointer += this.comma.length;\n      return this.comma;\n    }\n  };\n  Parser.prototype.LineBreak = function () {\n    if (this.input.slice(this.pointer, this.pointer + 2) === '\\r\\n') {\n      this.pointer += 2;\n      return '\\r\\n';\n    }\n    if (this.input.charAt(this.pointer) === '\\n') {\n      this.pointer += 1;\n      return '\\n';\n    }\n    if (this.input.charAt(this.pointer) === '\\r') {\n      this.pointer += 1;\n      return '\\r';\n    }\n  };\n  Parser.prototype.SimpleValue = function () {\n    var value = '';\n    var index = this.input.slice(this.pointer).search(this._simpleValueRegExp);\n    if (this.input.charAt(this.pointer) === this.quote) {\n      return;\n    } else if (index === -1) {\n      value = this.input.slice(this.pointer);\n    } else if (index === 0) {\n      return;\n    } else {\n      value = this.input.slice(this.pointer, this.pointer + index);\n    }\n    this.pointer += value.length;\n    return value;\n  };\n  Parser.prototype.QuotedValue = function () {\n    if (this.input.charAt(this.pointer) === this.quote) {\n      var searchIndex = void 0;\n      var index = 1;\n      while (true) {\n        searchIndex = this.input.slice(this.pointer + index).search(this.quote);\n        if (searchIndex === -1) {\n          return;\n        }\n        if (this.input.charAt(this.pointer + index + searchIndex + 1) === this.quote) {\n          index += searchIndex + 2;\n          continue;\n        }\n        var value = this.input.slice(this.pointer, this.pointer + index + searchIndex + 1);\n        this.pointer += value.length;\n        return value;\n      }\n    }\n  };\n  Parser.prototype.EOF = function () {\n    return this.pointer >= this.input.length;\n  };\n  Parser.prototype.Residue = function () {\n    var value = '';\n    var index = this.input.slice(this.pointer).search(this._residueRegExp);\n    if (index === -1) {\n      value = this.input.slice(this.pointer);\n    } else if (index === 0) {\n      return '';\n    } else {\n      value = this.input.slice(this.pointer, this.pointer + index);\n    }\n    this.pointer += value.length;\n    return value;\n  };\n  return Parser;\n}();\nParser$2.Parser = Parser$1;\nvar Streamer = {};\nvar hasRequiredStreamer;\nfunction requireStreamer() {\n  if (hasRequiredStreamer) return Streamer;\n  hasRequiredStreamer = 1;\n  var __extends = commonjsGlobal && commonjsGlobal.__extends || function () {\n    var extendStatics = function (d, b) {\n      extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n      };\n      return extendStatics(d, b);\n    };\n    return function (d, b) {\n      extendStatics(d, b);\n      function __() {\n        this.constructor = d;\n      }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n  }();\n  Object.defineProperty(Streamer, \"__esModule\", {\n    value: true\n  });\n  var stream_1 = require$$0;\n  var CSV_1 = requireCSV();\n  var Parser_1 = Parser$2;\n  var Streamer$1 = /** @class */function (_super) {\n    __extends(Streamer, _super);\n    function Streamer(options) {\n      var _this = _super.call(this, {\n        readableObjectMode: true,\n        writableObjectMode: false\n      }) || this;\n      // Transform.call(this, );\n      _this.buffer = '';\n      _this.sep = options && options.separator;\n      _this.quo = options && options.quote;\n      return _this;\n    }\n    // overridden function with same signature\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Streamer.prototype._transform = function (chunk, _encoding, callback) {\n      var _this = this;\n      this.buffer = this.buffer.concat(chunk.toString());\n      if (this.sep === undefined) {\n        // try to detect the separator if not provided\n        this.sep = CSV_1.detect(this.buffer);\n      }\n      var csv = new Parser_1.Parser(this.buffer, this.sep, this.quo);\n      var rows = csv.File();\n      if (csv.linePointer !== csv.pointer) {\n        rows.pop();\n      }\n      this.buffer = this.buffer.slice(csv.linePointer);\n      if (rows.length > 0) {\n        rows.forEach(function (row) {\n          _this.push(row);\n        });\n      }\n      callback();\n    };\n    // TODO\n    /*\n    push(chunk: any, encoding?: string | undefined): boolean {\n      throw new Error(\"Method not implemented.\");\n    }\n    */\n    Streamer.prototype._flush = function (callback) {\n      var _this = this;\n      var csv = new Parser_1.Parser(this.buffer, this.sep, this.quo);\n      var rows = csv.File();\n      if (rows.length > 0) {\n        rows.forEach(function (row) {\n          _this.push(row);\n        });\n      }\n      callback();\n    };\n    return Streamer;\n  }(stream_1.Transform);\n  Streamer.Streamer = Streamer$1;\n  return Streamer;\n}\nvar hasRequiredCSV;\nfunction requireCSV() {\n  if (hasRequiredCSV) return CSV;\n  hasRequiredCSV = 1;\n  Object.defineProperty(CSV, \"__esModule\", {\n    value: true\n  });\n  var Parser_1 = Parser$2;\n  var Streamer_1 = requireStreamer();\n  var EOL = '\\r\\n';\n  CSV.eol = EOL;\n  var SEPARATOR = ',';\n  CSV.separator = SEPARATOR;\n  var quoteCharReqex = new RegExp('\"', 'g');\n  var specialCharReqex = new RegExp('[\"\\r\\n]', 'g');\n  var _shouldBeQuoted = function (value, sep) {\n    return value.search(specialCharReqex) >= 0 || value.includes(sep);\n  };\n  var _quoteIfRquired = function (value, sep) {\n    return _shouldBeQuoted(value, sep) ? '\"' + value.replace(quoteCharReqex, '\"\"') + '\"' : value;\n  };\n  var _stringifySingleValue = function (item) {\n    if (item === 0) {\n      item = '0';\n    } else if (item === undefined || item === null) {\n      item = '';\n    }\n    if (typeof item != 'string') {\n      var s = item.toString();\n      if (s == '[object Object]') {\n        item = JSON.stringify(item);\n        if (item == '{}') {\n          item = '';\n        }\n      } else {\n        item = s;\n      }\n    }\n    return item;\n  };\n  var reducer = function (item, memo, sep, prependSep) {\n    item = _stringifySingleValue(item);\n    return (memo !== undefined || prependSep ? \"\" + memo + sep : '') + _quoteIfRquired(item, sep);\n  };\n  var detect = function (input) {\n    var separators = [',', ';', '|', '\\t'];\n    var idx = separators.map(function (separator) {\n      return input.indexOf(separator);\n    }).reduce(function (prev, cur) {\n      return prev === -1 || cur !== -1 && cur < prev ? cur : prev;\n    });\n    return input[idx] || ',';\n  };\n  CSV.detect = detect;\n  var stringify = function (input, sep) {\n    if (sep === void 0) {\n      sep = SEPARATOR;\n    }\n    var ret;\n    sep = sep || SEPARATOR;\n    if (Array.isArray(input)) {\n      if (input.length === 0) {\n        ret = EOL;\n      } else if (!Array.isArray(input[0])) {\n        for (var loop = 0; loop < input.length; loop++) {\n          ret = reducer(input[loop], ret, sep, loop > 0);\n        }\n        ret += EOL;\n      } else if (Array.isArray(input[0])) {\n        ret = input.map(function (item) {\n          return stringify(item, sep);\n        }).join('');\n      }\n    } else if (typeof input == 'object') {\n      for (var key in input) {\n        if (input.hasOwnProperty(key)) {\n          ret = reducer(input[key], ret, sep);\n        }\n      }\n      ret += EOL;\n    } else {\n      ret = reducer(input, ret, sep) + EOL;\n    }\n    return ret;\n  };\n  CSV.stringify = stringify;\n  function parse(input, sepOrOpts, quo) {\n    // Create an options hash, using positional parameters or the passed in options hash for values\n    var opts = typeof sepOrOpts === \"object\" ? sepOrOpts : {};\n    if (typeof sepOrOpts === \"string\") {\n      opts.comma = sepOrOpts;\n    }\n    if (quo) {\n      opts.quote = quo;\n    }\n    // try to detect the separator if not provided\n    if (opts.comma === undefined) {\n      opts.comma = detect(input);\n    }\n    // Clean characters, if necessary\n    // TODO: We should probably throw an error here to signal bad input to the user\n    if (opts.comma) {\n      opts.comma = opts.comma[0];\n    }\n    if (opts.quote) {\n      opts.quote = opts.quote[0];\n    }\n    var csv = new Parser_1.Parser(input, opts.comma, opts.quote);\n    return csv.File(opts.output);\n  }\n  CSV.parse = parse;\n  function read(input, sep, quo, callback) {\n    if (callback === undefined) {\n      if (quo === undefined) {\n        // arguments.length < 3) {\n        if (typeof sep !== 'function') {\n          throw Error('Last/second argument is not a callback');\n        }\n        callback = sep;\n        sep = ',';\n      } else {\n        // arguments.length < 4) {\n        if (typeof quo !== 'function') {\n          throw Error('Last/third argument is not a callback');\n        }\n        callback = quo;\n        quo = '\"';\n      }\n    }\n    var csv = new Parser_1.Parser(input, sep, quo);\n    var fields = csv.Row();\n    callback(fields);\n    return csv.pointer;\n  }\n  CSV.read = read;\n  function forEach(input, sep, quo, callback) {\n    if (callback === undefined) {\n      if (quo === undefined) {\n        // arguments.length < 3) {\n        if (typeof sep !== 'function') {\n          throw Error('Last/second argument is not a callback');\n        }\n        callback = sep;\n        sep = ',';\n      } else {\n        // arguments.length < 4) {\n        if (typeof quo !== 'function') {\n          throw Error('Last/third argument is not a callback');\n        }\n        callback = quo;\n        quo = '\"';\n      }\n    }\n    var i = 0;\n    var s = 0;\n    var r;\n    while (r = read(input.slice(s), sep, quo, function (fields) {\n      return callback(fields, i++);\n    })) {\n      s += r;\n    }\n  }\n  CSV.forEach = forEach;\n  function readAll(input, sep, quo, callback) {\n    if (callback === undefined) {\n      if (quo === undefined) {\n        // arguments.length < 3) {\n        if (typeof sep !== 'function') {\n          throw Error('Last/second argument is not a callback');\n        }\n        callback = sep;\n        sep = ',';\n      } else {\n        // arguments.length < 4) {\n        if (typeof quo !== 'function') {\n          throw Error('Last/third argument is not a callback');\n        }\n        callback = quo;\n        quo = '\"';\n      }\n    }\n    var csv = new Parser_1.Parser(input, sep, quo);\n    var rows = csv.File();\n    callback(rows);\n    return csv.pointer;\n  }\n  CSV.readAll = readAll;\n  function readChunk(input, sep, quo, callback) {\n    if (callback === undefined) {\n      if (quo === undefined) {\n        // arguments.length < 3) {\n        if (typeof sep !== 'function') {\n          throw Error('Last/second argument is not a callback');\n        }\n        callback = sep;\n        sep = ',';\n      } else {\n        // arguments.length < 4) {\n        if (typeof quo !== 'function') {\n          throw Error('Last/third argument is not a callback');\n        }\n        callback = quo;\n        quo = '\"';\n      }\n    }\n    var csv = new Parser_1.Parser(input, sep, quo);\n    var rows = csv.File();\n    var ret = 0;\n    if (csv.pointer < input.length) {\n      ret = csv.pointer;\n    } else {\n      rows.pop();\n      ret = csv.linePointer;\n    }\n    callback(rows);\n    return ret;\n  }\n  CSV.readChunk = readChunk;\n  var fetch = function (input, sep, quo) {\n    // TODO\n    var output;\n    read(input, sep, quo, function (fields) {\n      output = fields;\n    });\n    return output;\n  };\n  CSV.fetch = fetch;\n  var createStream = function (options) {\n    return new Streamer_1.Streamer(options);\n  };\n  CSV.createStream = createStream;\n  return CSV;\n}\n(function (exports) {\n  function __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n  }\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  __export(requireCSV());\n})(dist);\n\n// Copyright (c) Cosmo Tech.\n// Licensed under the MIT license.\n\nvar read$1 = dataStr => {\n  return dist.parse(dataStr).map(row => {\n    return row.map(cell => cell.trim());\n  });\n};\nvar write$1 = (dataArray, separator) => {\n  return dist.stringify(dataArray, separator);\n};\nvar CSVUtils = {\n  read: read$1,\n  write: write$1\n};\n\n/*! xlsx.js (C) 2013-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*exported XLSX */\n/*global process:false, Buffer:false, ArrayBuffer:false, DataView:false, Deno:false */\nvar XLSX = {};\nXLSX.version = '0.20.0';\nvar current_codepage = 1200;\n/*:: declare var cptable:any; */\n/*global cptable:true, window */\nvar $cptable;\nvar VALID_ANSI = [874, 932, 936, 949, 950, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 10000];\n/* ECMA-376 Part I 18.4.1 charset to codepage mapping */\nvar CS2CP = {\n  /*::[*/0 /*::]*/: 1252,\n  /* ANSI */\n  /*::[*/1 /*::]*/: 65001,\n  /* DEFAULT */\n  /*::[*/2 /*::]*/: 65001,\n  /* SYMBOL */\n  /*::[*/77 /*::]*/: 10000,\n  /* MAC */\n  /*::[*/128 /*::]*/: 932,\n  /* SHIFTJIS */\n  /*::[*/129 /*::]*/: 949,\n  /* HANGUL */\n  /*::[*/130 /*::]*/: 1361,\n  /* JOHAB */\n  /*::[*/134 /*::]*/: 936,\n  /* GB2312 */\n  /*::[*/136 /*::]*/: 950,\n  /* CHINESEBIG5 */\n  /*::[*/161 /*::]*/: 1253,\n  /* GREEK */\n  /*::[*/162 /*::]*/: 1254,\n  /* TURKISH */\n  /*::[*/163 /*::]*/: 1258,\n  /* VIETNAMESE */\n  /*::[*/177 /*::]*/: 1255,\n  /* HEBREW */\n  /*::[*/178 /*::]*/: 1256,\n  /* ARABIC */\n  /*::[*/186 /*::]*/: 1257,\n  /* BALTIC */\n  /*::[*/204 /*::]*/: 1251,\n  /* RUSSIAN */\n  /*::[*/222 /*::]*/: 874,\n  /* THAI */\n  /*::[*/238 /*::]*/: 1250,\n  /* EASTEUROPE */\n  /*::[*/255 /*::]*/: 1252,\n  /* OEM */\n  /*::[*/69 /*::]*/: 6969 /* MISC */\n} /*:any*/;\n\nvar set_ansi = function (cp /*:number*/) {\n  if (VALID_ANSI.indexOf(cp) == -1) return;\n  CS2CP[0] = cp;\n};\nfunction reset_ansi() {\n  set_ansi(1252);\n}\nvar set_cp = function (cp /*:number*/) {\n  current_codepage = cp;\n  set_ansi(cp);\n};\nfunction reset_cp() {\n  set_cp(1200);\n  reset_ansi();\n}\nfunction char_codes(data /*:string*/) /*:Array<number>*/{\n  var o /*:Array<number>*/ = [];\n  for (var i = 0, len = data.length; i < len; ++i) o[i] = data.charCodeAt(i);\n  return o;\n}\nfunction utf16leread(data /*:string*/) /*:string*/{\n  var o /*:Array<string>*/ = [];\n  for (var i = 0; i < data.length >> 1; ++i) o[i] = String.fromCharCode(data.charCodeAt(2 * i) + (data.charCodeAt(2 * i + 1) << 8));\n  return o.join(\"\");\n}\nfunction utf16lereadu(data /*:Uint8Array*/) /*:string*/{\n  var o /*:Array<string>*/ = [];\n  for (var i = 0; i < data.length >> 1; ++i) o[i] = String.fromCharCode(data[2 * i] + (data[2 * i + 1] << 8));\n  return o.join(\"\");\n}\nfunction utf16beread(data /*:string*/) /*:string*/{\n  var o /*:Array<string>*/ = [];\n  for (var i = 0; i < data.length >> 1; ++i) o[i] = String.fromCharCode(data.charCodeAt(2 * i + 1) + (data.charCodeAt(2 * i) << 8));\n  return o.join(\"\");\n}\nvar debom = function (data /*:string*/) /*:string*/{\n  var c1 = data.charCodeAt(0),\n    c2 = data.charCodeAt(1);\n  if (c1 == 0xFF && c2 == 0xFE) return utf16leread(data.slice(2));\n  if (c1 == 0xFE && c2 == 0xFF) return utf16beread(data.slice(2));\n  if (c1 == 0xFEFF) return data.slice(1);\n  return data;\n};\nvar _getchar = function _gc1(x /*:number*/) /*:string*/{\n  return String.fromCharCode(x);\n};\nvar _getansi = function _ga1(x /*:number*/) /*:string*/{\n  return String.fromCharCode(x);\n};\nvar DENSE = null;\nvar Base64_map = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\nfunction Base64_encode(input) {\n  var o = \"\";\n  var c1 = 0,\n    c2 = 0,\n    c3 = 0,\n    e1 = 0,\n    e2 = 0,\n    e3 = 0,\n    e4 = 0;\n  for (var i = 0; i < input.length;) {\n    c1 = input.charCodeAt(i++);\n    e1 = c1 >> 2;\n    c2 = input.charCodeAt(i++);\n    e2 = (c1 & 3) << 4 | c2 >> 4;\n    c3 = input.charCodeAt(i++);\n    e3 = (c2 & 15) << 2 | c3 >> 6;\n    e4 = c3 & 63;\n    if (isNaN(c2)) {\n      e3 = e4 = 64;\n    } else if (isNaN(c3)) {\n      e4 = 64;\n    }\n    o += Base64_map.charAt(e1) + Base64_map.charAt(e2) + Base64_map.charAt(e3) + Base64_map.charAt(e4);\n  }\n  return o;\n}\nfunction Base64_encode_pass(input) {\n  var o = \"\";\n  var c1 = 0,\n    c2 = 0,\n    c3 = 0,\n    e1 = 0,\n    e2 = 0,\n    e3 = 0,\n    e4 = 0;\n  for (var i = 0; i < input.length;) {\n    c1 = input.charCodeAt(i++);\n    if (c1 > 255) c1 = 95;\n    e1 = c1 >> 2;\n    c2 = input.charCodeAt(i++);\n    if (c2 > 255) c2 = 95;\n    e2 = (c1 & 3) << 4 | c2 >> 4;\n    c3 = input.charCodeAt(i++);\n    if (c3 > 255) c3 = 95;\n    e3 = (c2 & 15) << 2 | c3 >> 6;\n    e4 = c3 & 63;\n    if (isNaN(c2)) {\n      e3 = e4 = 64;\n    } else if (isNaN(c3)) {\n      e4 = 64;\n    }\n    o += Base64_map.charAt(e1) + Base64_map.charAt(e2) + Base64_map.charAt(e3) + Base64_map.charAt(e4);\n  }\n  return o;\n}\nfunction Base64_encode_arr(input) {\n  var o = \"\";\n  var c1 = 0,\n    c2 = 0,\n    c3 = 0,\n    e1 = 0,\n    e2 = 0,\n    e3 = 0,\n    e4 = 0;\n  for (var i = 0; i < input.length;) {\n    c1 = input[i++];\n    e1 = c1 >> 2;\n    c2 = input[i++];\n    e2 = (c1 & 3) << 4 | c2 >> 4;\n    c3 = input[i++];\n    e3 = (c2 & 15) << 2 | c3 >> 6;\n    e4 = c3 & 63;\n    if (isNaN(c2)) {\n      e3 = e4 = 64;\n    } else if (isNaN(c3)) {\n      e4 = 64;\n    }\n    o += Base64_map.charAt(e1) + Base64_map.charAt(e2) + Base64_map.charAt(e3) + Base64_map.charAt(e4);\n  }\n  return o;\n}\nfunction Base64_decode(input) {\n  var o = \"\";\n  var c1 = 0,\n    c2 = 0,\n    c3 = 0,\n    e1 = 0,\n    e2 = 0,\n    e3 = 0,\n    e4 = 0;\n  input = input.replace(/^data:([^\\/]+\\/[^\\/]+)?;base64\\,/, \"\").replace(/[^\\w\\+\\/\\=]/g, \"\");\n  for (var i = 0; i < input.length;) {\n    e1 = Base64_map.indexOf(input.charAt(i++));\n    e2 = Base64_map.indexOf(input.charAt(i++));\n    c1 = e1 << 2 | e2 >> 4;\n    o += String.fromCharCode(c1);\n    e3 = Base64_map.indexOf(input.charAt(i++));\n    c2 = (e2 & 15) << 4 | e3 >> 2;\n    if (e3 !== 64) {\n      o += String.fromCharCode(c2);\n    }\n    e4 = Base64_map.indexOf(input.charAt(i++));\n    c3 = (e3 & 3) << 6 | e4;\n    if (e4 !== 64) {\n      o += String.fromCharCode(c3);\n    }\n  }\n  return o;\n}\nvar has_buf = /*#__PURE__*/function () {\n  return typeof Buffer !== 'undefined' && typeof process !== 'undefined' && typeof process.versions !== 'undefined' && !!process.versions.node;\n}();\nvar Buffer_from = /*#__PURE__*/function () {\n  if (typeof Buffer !== 'undefined') {\n    var nbfs = !Buffer.from;\n    if (!nbfs) try {\n      Buffer.from(\"foo\", \"utf8\");\n    } catch (e) {\n      nbfs = true;\n    }\n    return nbfs ? function (buf, enc) {\n      return enc ? new Buffer(buf, enc) : new Buffer(buf);\n    } : Buffer.from.bind(Buffer);\n  }\n  return function () {};\n}();\nvar buf_utf16le = /*#__PURE__*/function () {\n  if (typeof Buffer === 'undefined') return false;\n  var x = Buffer_from([65, 0]);\n  if (!x) return false;\n  var o = x.toString(\"utf16le\");\n  return o.length == 1;\n}();\nfunction new_raw_buf(len /*:number*/) {\n  /* jshint -W056 */\n  if (has_buf) return Buffer.alloc ? Buffer.alloc(len) : new Buffer(len);\n  return typeof Uint8Array != \"undefined\" ? new Uint8Array(len) : new Array(len);\n  /* jshint +W056 */\n}\n\nfunction new_unsafe_buf(len /*:number*/) {\n  /* jshint -W056 */\n  if (has_buf) return Buffer.allocUnsafe ? Buffer.allocUnsafe(len) : new Buffer(len);\n  return typeof Uint8Array != \"undefined\" ? new Uint8Array(len) : new Array(len);\n  /* jshint +W056 */\n}\n\nvar s2a = function s2a(s /*:string*/) /*:any*/{\n  if (has_buf) return Buffer_from(s, \"binary\");\n  return s.split(\"\").map(function (x /*:string*/) /*:number*/{\n    return x.charCodeAt(0) & 0xff;\n  });\n};\nfunction s2ab(s /*:string*/) /*:any*/{\n  if (typeof ArrayBuffer === 'undefined') return s2a(s);\n  var buf = new ArrayBuffer(s.length),\n    view = new Uint8Array(buf);\n  for (var i = 0; i != s.length; ++i) view[i] = s.charCodeAt(i) & 0xFF;\n  return buf;\n}\nfunction a2s(data /*:any*/) /*:string*/{\n  if (Array.isArray(data)) return data.map(function (c) {\n    return String.fromCharCode(c);\n  }).join(\"\");\n  var o /*:Array<string>*/ = [];\n  for (var i = 0; i < data.length; ++i) o[i] = String.fromCharCode(data[i]);\n  return o.join(\"\");\n}\nfunction a2u(data /*:Array<number>*/) /*:Uint8Array*/{\n  if (typeof Uint8Array === 'undefined') throw new Error(\"Unsupported\");\n  return new Uint8Array(data);\n}\nfunction ab2a(data /*:ArrayBuffer|Uint8Array*/) /*:Array<number>*/{\n  if (typeof ArrayBuffer == 'undefined') throw new Error(\"Unsupported\");\n  if (data instanceof ArrayBuffer) return ab2a(new Uint8Array(data));\n  /*:: if(data instanceof ArrayBuffer) throw new Error(\"unreachable\"); */\n  var o = new Array(data.length);\n  for (var i = 0; i < data.length; ++i) o[i] = data[i];\n  return o;\n}\nvar bconcat = has_buf ? function (bufs) {\n  return Buffer.concat(bufs.map(function (buf) {\n    return Buffer.isBuffer(buf) ? buf : Buffer_from(buf);\n  }));\n} : function (bufs) {\n  if (typeof Uint8Array !== \"undefined\") {\n    var i = 0,\n      maxlen = 0;\n    for (i = 0; i < bufs.length; ++i) maxlen += bufs[i].length;\n    var o = new Uint8Array(maxlen);\n    var len = 0;\n    for (i = 0, maxlen = 0; i < bufs.length; maxlen += len, ++i) {\n      len = bufs[i].length;\n      if (bufs[i] instanceof Uint8Array) o.set(bufs[i], maxlen);else if (typeof bufs[i] == \"string\") o.set(new Uint8Array(s2a(bufs[i])), maxlen);else o.set(new Uint8Array(bufs[i]), maxlen);\n    }\n    return o;\n  }\n  return [].concat.apply([], bufs.map(function (buf) {\n    return Array.isArray(buf) ? buf : [].slice.call(buf);\n  }));\n};\nfunction utf8decode(content /*:string*/) {\n  var out = [],\n    widx = 0,\n    L = content.length + 250;\n  var o = new_raw_buf(content.length + 255);\n  for (var ridx = 0; ridx < content.length; ++ridx) {\n    var c = content.charCodeAt(ridx);\n    if (c < 0x80) o[widx++] = c;else if (c < 0x800) {\n      o[widx++] = 192 | c >> 6 & 31;\n      o[widx++] = 128 | c & 63;\n    } else if (c >= 0xD800 && c < 0xE000) {\n      c = (c & 1023) + 64;\n      var d = content.charCodeAt(++ridx) & 1023;\n      o[widx++] = 240 | c >> 8 & 7;\n      o[widx++] = 128 | c >> 2 & 63;\n      o[widx++] = 128 | d >> 6 & 15 | (c & 3) << 4;\n      o[widx++] = 128 | d & 63;\n    } else {\n      o[widx++] = 224 | c >> 12 & 15;\n      o[widx++] = 128 | c >> 6 & 63;\n      o[widx++] = 128 | c & 63;\n    }\n    if (widx > L) {\n      out.push(o.slice(0, widx));\n      widx = 0;\n      o = new_raw_buf(65535);\n      L = 65530;\n    }\n  }\n  out.push(o.slice(0, widx));\n  return bconcat(out);\n}\nvar chr0 = /\\u0000/g,\n  chr1 = /[\\u0001-\\u0006]/g;\n/*::\ndeclare type Block = any;\ndeclare type BufArray = {\n\tnewblk(sz:number):Block;\n\tnext(sz:number):Block;\n\tend():any;\n\tpush(buf:Block):void;\n};\n\ntype RecordHopperCB = {(d:any, Rn:string, RT:number):?boolean;};\n\ntype EvertType = {[string]:string};\ntype EvertNumType = {[string]:number};\ntype EvertArrType = {[string]:Array<string>};\n\ntype StringConv = {(string):string};\n\n*/\n/* ssf.js (C) 2013-present SheetJS -- http://sheetjs.com */\n/*jshint -W041 */\nfunction _strrev(x /*:string*/) /*:string*/{\n  var o = \"\",\n    i = x.length - 1;\n  while (i >= 0) o += x.charAt(i--);\n  return o;\n}\nfunction pad0(v /*:any*/, d /*:number*/) /*:string*/{\n  var t = \"\" + v;\n  return t.length >= d ? t : fill('0', d - t.length) + t;\n}\nfunction pad_(v /*:any*/, d /*:number*/) /*:string*/{\n  var t = \"\" + v;\n  return t.length >= d ? t : fill(' ', d - t.length) + t;\n}\nfunction rpad_(v /*:any*/, d /*:number*/) /*:string*/{\n  var t = \"\" + v;\n  return t.length >= d ? t : t + fill(' ', d - t.length);\n}\nfunction pad0r1(v /*:any*/, d /*:number*/) /*:string*/{\n  var t = \"\" + Math.round(v);\n  return t.length >= d ? t : fill('0', d - t.length) + t;\n}\nfunction pad0r2(v /*:any*/, d /*:number*/) /*:string*/{\n  var t = \"\" + v;\n  return t.length >= d ? t : fill('0', d - t.length) + t;\n}\nvar p2_32 = /*#__PURE__*/Math.pow(2, 32);\nfunction pad0r(v /*:any*/, d /*:number*/) /*:string*/{\n  if (v > p2_32 || v < -p2_32) return pad0r1(v, d);\n  var i = Math.round(v);\n  return pad0r2(i, d);\n}\n/* yes, in 2022 this is still faster than string compare */\nfunction SSF_isgeneral(s /*:string*/, i /*:?number*/) /*:boolean*/{\n  i = i || 0;\n  return s.length >= 7 + i && (s.charCodeAt(i) | 32) === 103 && (s.charCodeAt(i + 1) | 32) === 101 && (s.charCodeAt(i + 2) | 32) === 110 && (s.charCodeAt(i + 3) | 32) === 101 && (s.charCodeAt(i + 4) | 32) === 114 && (s.charCodeAt(i + 5) | 32) === 97 && (s.charCodeAt(i + 6) | 32) === 108;\n}\nvar days /*:Array<Array<string> >*/ = [['Sun', 'Sunday'], ['Mon', 'Monday'], ['Tue', 'Tuesday'], ['Wed', 'Wednesday'], ['Thu', 'Thursday'], ['Fri', 'Friday'], ['Sat', 'Saturday']];\nvar months /*:Array<Array<string> >*/ = [['J', 'Jan', 'January'], ['F', 'Feb', 'February'], ['M', 'Mar', 'March'], ['A', 'Apr', 'April'], ['M', 'May', 'May'], ['J', 'Jun', 'June'], ['J', 'Jul', 'July'], ['A', 'Aug', 'August'], ['S', 'Sep', 'September'], ['O', 'Oct', 'October'], ['N', 'Nov', 'November'], ['D', 'Dec', 'December']];\nfunction SSF_init_table(t /*:any*/) {\n  if (!t) t = {};\n  t[0] = 'General';\n  t[1] = '0';\n  t[2] = '0.00';\n  t[3] = '#,##0';\n  t[4] = '#,##0.00';\n  t[9] = '0%';\n  t[10] = '0.00%';\n  t[11] = '0.00E+00';\n  t[12] = '# ?/?';\n  t[13] = '# ??/??';\n  t[14] = 'm/d/yy';\n  t[15] = 'd-mmm-yy';\n  t[16] = 'd-mmm';\n  t[17] = 'mmm-yy';\n  t[18] = 'h:mm AM/PM';\n  t[19] = 'h:mm:ss AM/PM';\n  t[20] = 'h:mm';\n  t[21] = 'h:mm:ss';\n  t[22] = 'm/d/yy h:mm';\n  t[37] = '#,##0 ;(#,##0)';\n  t[38] = '#,##0 ;[Red](#,##0)';\n  t[39] = '#,##0.00;(#,##0.00)';\n  t[40] = '#,##0.00;[Red](#,##0.00)';\n  t[45] = 'mm:ss';\n  t[46] = '[h]:mm:ss';\n  t[47] = 'mmss.0';\n  t[48] = '##0.0E+0';\n  t[49] = '@';\n  t[56] = '\"上午/下午 \"hh\"時\"mm\"分\"ss\"秒 \"';\n  return t;\n}\n/* repeated to satiate webpack */\nvar table_fmt = {\n  0: 'General',\n  1: '0',\n  2: '0.00',\n  3: '#,##0',\n  4: '#,##0.00',\n  9: '0%',\n  10: '0.00%',\n  11: '0.00E+00',\n  12: '# ?/?',\n  13: '# ??/??',\n  14: 'm/d/yy',\n  15: 'd-mmm-yy',\n  16: 'd-mmm',\n  17: 'mmm-yy',\n  18: 'h:mm AM/PM',\n  19: 'h:mm:ss AM/PM',\n  20: 'h:mm',\n  21: 'h:mm:ss',\n  22: 'm/d/yy h:mm',\n  37: '#,##0 ;(#,##0)',\n  38: '#,##0 ;[Red](#,##0)',\n  39: '#,##0.00;(#,##0.00)',\n  40: '#,##0.00;[Red](#,##0.00)',\n  45: 'mm:ss',\n  46: '[h]:mm:ss',\n  47: 'mmss.0',\n  48: '##0.0E+0',\n  49: '@',\n  56: '\"上午/下午 \"hh\"時\"mm\"分\"ss\"秒 \"'\n};\n\n/* Defaults determined by systematically testing in Excel 2019 */\n\n/* These formats appear to default to other formats in the table */\nvar SSF_default_map = {\n  5: 37,\n  6: 38,\n  7: 39,\n  8: 40,\n  //  5 -> 37 ...  8 -> 40\n\n  23: 0,\n  24: 0,\n  25: 0,\n  26: 0,\n  // 23 ->  0 ... 26 ->  0\n\n  27: 14,\n  28: 14,\n  29: 14,\n  30: 14,\n  31: 14,\n  // 27 -> 14 ... 31 -> 14\n\n  50: 14,\n  51: 14,\n  52: 14,\n  53: 14,\n  54: 14,\n  // 50 -> 14 ... 58 -> 14\n  55: 14,\n  56: 14,\n  57: 14,\n  58: 14,\n  59: 1,\n  60: 2,\n  61: 3,\n  62: 4,\n  // 59 ->  1 ... 62 ->  4\n\n  67: 9,\n  68: 10,\n  // 67 ->  9 ... 68 -> 10\n  69: 12,\n  70: 13,\n  71: 14,\n  // 69 -> 12 ... 71 -> 14\n  72: 14,\n  73: 15,\n  74: 16,\n  75: 17,\n  // 72 -> 14 ... 75 -> 17\n  76: 20,\n  77: 21,\n  78: 22,\n  // 76 -> 20 ... 78 -> 22\n  79: 45,\n  80: 46,\n  81: 47,\n  // 79 -> 45 ... 81 -> 47\n  82: 0 // 82 ->  0 ... 65536 -> 0 (omitted)\n};\n\n/* These formats technically refer to Accounting formats with no equivalent */\nvar SSF_default_str = {\n  //  5 -- Currency,   0 decimal, black negative\n  5: '\"$\"#,##0_);\\\\(\"$\"#,##0\\\\)',\n  63: '\"$\"#,##0_);\\\\(\"$\"#,##0\\\\)',\n  //  6 -- Currency,   0 decimal, red   negative\n  6: '\"$\"#,##0_);[Red]\\\\(\"$\"#,##0\\\\)',\n  64: '\"$\"#,##0_);[Red]\\\\(\"$\"#,##0\\\\)',\n  //  7 -- Currency,   2 decimal, black negative\n  7: '\"$\"#,##0.00_);\\\\(\"$\"#,##0.00\\\\)',\n  65: '\"$\"#,##0.00_);\\\\(\"$\"#,##0.00\\\\)',\n  //  8 -- Currency,   2 decimal, red   negative\n  8: '\"$\"#,##0.00_);[Red]\\\\(\"$\"#,##0.00\\\\)',\n  66: '\"$\"#,##0.00_);[Red]\\\\(\"$\"#,##0.00\\\\)',\n  // 41 -- Accounting, 0 decimal, No Symbol\n  41: '_(* #,##0_);_(* \\\\(#,##0\\\\);_(* \"-\"_);_(@_)',\n  // 42 -- Accounting, 0 decimal, $  Symbol\n  42: '_(\"$\"* #,##0_);_(\"$\"* \\\\(#,##0\\\\);_(\"$\"* \"-\"_);_(@_)',\n  // 43 -- Accounting, 2 decimal, No Symbol\n  43: '_(* #,##0.00_);_(* \\\\(#,##0.00\\\\);_(* \"-\"??_);_(@_)',\n  // 44 -- Accounting, 2 decimal, $  Symbol\n  44: '_(\"$\"* #,##0.00_);_(\"$\"* \\\\(#,##0.00\\\\);_(\"$\"* \"-\"??_);_(@_)'\n};\nfunction SSF_frac(x /*:number*/, D /*:number*/, mixed /*:?boolean*/) /*:Array<number>*/{\n  var sgn = x < 0 ? -1 : 1;\n  var B = x * sgn;\n  var P_2 = 0,\n    P_1 = 1,\n    P = 0;\n  var Q_2 = 1,\n    Q_1 = 0,\n    Q = 0;\n  var A = Math.floor(B);\n  while (Q_1 < D) {\n    A = Math.floor(B);\n    P = A * P_1 + P_2;\n    Q = A * Q_1 + Q_2;\n    if (B - A < 0.00000005) break;\n    B = 1 / (B - A);\n    P_2 = P_1;\n    P_1 = P;\n    Q_2 = Q_1;\n    Q_1 = Q;\n  }\n  if (Q > D) {\n    if (Q_1 > D) {\n      Q = Q_2;\n      P = P_2;\n    } else {\n      Q = Q_1;\n      P = P_1;\n    }\n  }\n  if (!mixed) return [0, sgn * P, Q];\n  var q = Math.floor(sgn * P / Q);\n  return [q, sgn * P - q * Q, Q];\n}\nfunction SSF_parse_date_code(v /*:number*/, opts /*:?any*/, b2 /*:?boolean*/) {\n  if (v > 2958465 || v < 0) return null;\n  var date = v | 0,\n    time = Math.floor(86400 * (v - date)),\n    dow = 0;\n  var dout = [];\n  var out = {\n    D: date,\n    T: time,\n    u: 86400 * (v - date) - time,\n    y: 0,\n    m: 0,\n    d: 0,\n    H: 0,\n    M: 0,\n    S: 0,\n    q: 0\n  };\n  if (Math.abs(out.u) < 1e-6) out.u = 0;\n  if (opts && opts.date1904) date += 1462;\n  if (out.u > 0.9999) {\n    out.u = 0;\n    if (++time == 86400) {\n      out.T = time = 0;\n      ++date;\n      ++out.D;\n    }\n  }\n  if (date === 60) {\n    dout = b2 ? [1317, 10, 29] : [1900, 2, 29];\n    dow = 3;\n  } else if (date === 0) {\n    dout = b2 ? [1317, 8, 29] : [1900, 1, 0];\n    dow = 6;\n  } else {\n    if (date > 60) --date;\n    /* 1 = Jan 1 1900 in Gregorian */\n    var d = new Date(1900, 0, 1);\n    d.setDate(d.getDate() + date - 1);\n    dout = [d.getFullYear(), d.getMonth() + 1, d.getDate()];\n    dow = d.getDay();\n    if (date < 60) dow = (dow + 6) % 7;\n    if (b2) dow = SSF_fix_hijri(d, dout);\n  }\n  out.y = dout[0];\n  out.m = dout[1];\n  out.d = dout[2];\n  out.S = time % 60;\n  time = Math.floor(time / 60);\n  out.M = time % 60;\n  time = Math.floor(time / 60);\n  out.H = time;\n  out.q = dow;\n  return out;\n}\n/* ECMA-376 18.8.30 numFmt*/\n/* Note: `toPrecision` uses standard form when prec > E and E >= -6 */\n/* exponent >= -9 and <= 9 */\nfunction SSF_strip_decimal(o /*:string*/) /*:string*/{\n  return o.indexOf(\".\") == -1 ? o : o.replace(/(?:\\.0*|(\\.\\d*[1-9])0+)$/, \"$1\");\n}\n\n/* General Exponential always shows 2 digits exp and trims the mantissa */\nfunction SSF_normalize_exp(o /*:string*/) /*:string*/{\n  if (o.indexOf(\"E\") == -1) return o;\n  return o.replace(/(?:\\.0*|(\\.\\d*[1-9])0+)[Ee]/, \"$1E\").replace(/(E[+-])(\\d)$/, \"$10$2\");\n}\n\n/* exponent >= -9 and <= 9 */\nfunction SSF_small_exp(v /*:number*/) /*:string*/{\n  var w = v < 0 ? 12 : 11;\n  var o = SSF_strip_decimal(v.toFixed(12));\n  if (o.length <= w) return o;\n  o = v.toPrecision(10);\n  if (o.length <= w) return o;\n  return v.toExponential(5);\n}\n\n/* exponent >= 11 or <= -10 likely exponential */\nfunction SSF_large_exp(v /*:number*/) /*:string*/{\n  var o = SSF_strip_decimal(v.toFixed(11));\n  return o.length > (v < 0 ? 12 : 11) || o === \"0\" || o === \"-0\" ? v.toPrecision(6) : o;\n}\nfunction SSF_general_num(v /*:number*/) /*:string*/{\n  var V = Math.floor(Math.log(Math.abs(v)) * Math.LOG10E),\n    o;\n  if (V >= -4 && V <= -1) o = v.toPrecision(10 + V);else if (Math.abs(V) <= 9) o = SSF_small_exp(v);else if (V === 10) o = v.toFixed(10).substr(0, 12);else o = SSF_large_exp(v);\n  return SSF_strip_decimal(SSF_normalize_exp(o.toUpperCase()));\n}\n\n/*\n\t\"General\" rules:\n\t- text is passed through (\"@\")\n\t- booleans are rendered as TRUE/FALSE\n\t- \"up to 11 characters\" displayed for numbers\n\t- Default date format (code 14) used for Dates\n\n\tThe longest 32-bit integer text is \"-2147483648\", exactly 11 chars\n\tTODO: technically the display depends on the width of the cell\n*/\nfunction SSF_general(v /*:any*/, opts /*:any*/) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n    case 'boolean':\n      return v ? \"TRUE\" : \"FALSE\";\n    case 'number':\n      return (v | 0) === v ? v.toString(10) : SSF_general_num(v);\n    case 'undefined':\n      return \"\";\n    case 'object':\n      if (v == null) return \"\";\n      if (v instanceof Date) return SSF_format(14, datenum(v, opts && opts.date1904), opts);\n  }\n  throw new Error(\"unsupported value in General format: \" + v);\n}\nfunction SSF_fix_hijri(date /*:Date*/, o /*:[number, number, number]*/) {\n  /* TODO: properly adjust y/m/d and  */\n  o[0] -= 581;\n  var dow = date.getDay();\n  if (date < 60) dow = (dow + 6) % 7;\n  return dow;\n}\n//var THAI_DIGITS = \"\\u0E50\\u0E51\\u0E52\\u0E53\\u0E54\\u0E55\\u0E56\\u0E57\\u0E58\\u0E59\".split(\"\");\nfunction SSF_write_date(type /*:number*/, fmt /*:string*/, val, ss0 /*:?number*/) /*:string*/{\n  var o = \"\",\n    ss = 0,\n    tt = 0,\n    y = val.y,\n    out,\n    outl = 0;\n  switch (type) {\n    case 98:\n      /* 'b' buddhist year */\n      y = val.y + 543;\n    /* falls through */\n    case 121:\n      /* 'y' year */\n      switch (fmt.length) {\n        case 1:\n        case 2:\n          out = y % 100;\n          outl = 2;\n          break;\n        default:\n          out = y % 10000;\n          outl = 4;\n          break;\n      }\n      break;\n    case 109:\n      /* 'm' month */\n      switch (fmt.length) {\n        case 1:\n        case 2:\n          out = val.m;\n          outl = fmt.length;\n          break;\n        case 3:\n          return months[val.m - 1][1];\n        case 5:\n          return months[val.m - 1][0];\n        default:\n          return months[val.m - 1][2];\n      }\n      break;\n    case 100:\n      /* 'd' day */\n      switch (fmt.length) {\n        case 1:\n        case 2:\n          out = val.d;\n          outl = fmt.length;\n          break;\n        case 3:\n          return days[val.q][0];\n        default:\n          return days[val.q][1];\n      }\n      break;\n    case 104:\n      /* 'h' 12-hour */\n      switch (fmt.length) {\n        case 1:\n        case 2:\n          out = 1 + (val.H + 11) % 12;\n          outl = fmt.length;\n          break;\n        default:\n          throw 'bad hour format: ' + fmt;\n      }\n      break;\n    case 72:\n      /* 'H' 24-hour */\n      switch (fmt.length) {\n        case 1:\n        case 2:\n          out = val.H;\n          outl = fmt.length;\n          break;\n        default:\n          throw 'bad hour format: ' + fmt;\n      }\n      break;\n    case 77:\n      /* 'M' minutes */\n      switch (fmt.length) {\n        case 1:\n        case 2:\n          out = val.M;\n          outl = fmt.length;\n          break;\n        default:\n          throw 'bad minute format: ' + fmt;\n      }\n      break;\n    case 115:\n      /* 's' seconds */\n      if (fmt != 's' && fmt != 'ss' && fmt != '.0' && fmt != '.00' && fmt != '.000') throw 'bad second format: ' + fmt;\n      if (val.u === 0 && (fmt == \"s\" || fmt == \"ss\")) return pad0(val.S, fmt.length);\n      /*::if(!ss0) ss0 = 0; */\n      if (ss0 >= 2) tt = ss0 === 3 ? 1000 : 100;else tt = ss0 === 1 ? 10 : 1;\n      ss = Math.round(tt * (val.S + val.u));\n      if (ss >= 60 * tt) ss = 0;\n      if (fmt === 's') return ss === 0 ? \"0\" : \"\" + ss / tt;\n      o = pad0(ss, 2 + ss0);\n      if (fmt === 'ss') return o.substr(0, 2);\n      return \".\" + o.substr(2, fmt.length - 1);\n    case 90:\n      /* 'Z' absolute time */\n      switch (fmt) {\n        case '[h]':\n        case '[hh]':\n          out = val.D * 24 + val.H;\n          break;\n        case '[m]':\n        case '[mm]':\n          out = (val.D * 24 + val.H) * 60 + val.M;\n          break;\n        case '[s]':\n        case '[ss]':\n          out = ((val.D * 24 + val.H) * 60 + val.M) * 60 + Math.round(val.S + val.u);\n          break;\n        default:\n          throw 'bad abstime format: ' + fmt;\n      }\n      outl = fmt.length === 3 ? 1 : 2;\n      break;\n    case 101:\n      /* 'e' era */\n      out = y;\n      outl = 1;\n      break;\n  }\n  var outstr = outl > 0 ? pad0(out, outl) : \"\";\n  return outstr;\n}\n\n/*jshint -W086 */\n/*jshint +W086 */\nfunction commaify(s /*:string*/) /*:string*/{\n  var w = 3;\n  if (s.length <= w) return s;\n  var j = s.length % w,\n    o = s.substr(0, j);\n  for (; j != s.length; j += w) o += (o.length > 0 ? \",\" : \"\") + s.substr(j, w);\n  return o;\n}\nvar pct1 = /%/g;\nfunction write_num_pct(type /*:string*/, fmt /*:string*/, val /*:number*/) /*:string*/{\n  var sfmt = fmt.replace(pct1, \"\"),\n    mul = fmt.length - sfmt.length;\n  return write_num(type, sfmt, val * Math.pow(10, 2 * mul)) + fill(\"%\", mul);\n}\nfunction write_num_cm(type /*:string*/, fmt /*:string*/, val /*:number*/) /*:string*/{\n  var idx = fmt.length - 1;\n  while (fmt.charCodeAt(idx - 1) === 44) --idx;\n  return write_num(type, fmt.substr(0, idx), val / Math.pow(10, 3 * (fmt.length - idx)));\n}\nfunction write_num_exp(fmt /*:string*/, val /*:number*/) /*:string*/{\n  var o /*:string*/;\n  var idx = fmt.indexOf(\"E\") - fmt.indexOf(\".\") - 1;\n  if (fmt.match(/^#+0.0E\\+0$/)) {\n    if (val == 0) return \"0.0E+0\";else if (val < 0) return \"-\" + write_num_exp(fmt, -val);\n    var period = fmt.indexOf(\".\");\n    if (period === -1) period = fmt.indexOf('E');\n    var ee = Math.floor(Math.log(val) * Math.LOG10E) % period;\n    if (ee < 0) ee += period;\n    o = (val / Math.pow(10, ee)).toPrecision(idx + 1 + (period + ee) % period);\n    if (o.indexOf(\"e\") === -1) {\n      var fakee = Math.floor(Math.log(val) * Math.LOG10E);\n      if (o.indexOf(\".\") === -1) o = o.charAt(0) + \".\" + o.substr(1) + \"E+\" + (fakee - o.length + ee);else o += \"E+\" + (fakee - ee);\n      while (o.substr(0, 2) === \"0.\") {\n        o = o.charAt(0) + o.substr(2, period) + \".\" + o.substr(2 + period);\n        o = o.replace(/^0+([1-9])/, \"$1\").replace(/^0+\\./, \"0.\");\n      }\n      o = o.replace(/\\+-/, \"-\");\n    }\n    o = o.replace(/^([+-]?)(\\d*)\\.(\\d*)[Ee]/, function ($$, $1, $2, $3) {\n      return $1 + $2 + $3.substr(0, (period + ee) % period) + \".\" + $3.substr(ee) + \"E\";\n    });\n  } else o = val.toExponential(idx);\n  if (fmt.match(/E\\+00$/) && o.match(/e[+-]\\d$/)) o = o.substr(0, o.length - 1) + \"0\" + o.charAt(o.length - 1);\n  if (fmt.match(/E\\-/) && o.match(/e\\+/)) o = o.replace(/e\\+/, \"e\");\n  return o.replace(\"e\", \"E\");\n}\nvar frac1 = /# (\\?+)( ?)\\/( ?)(\\d+)/;\nfunction write_num_f1(r /*:Array<string>*/, aval /*:number*/, sign /*:string*/) /*:string*/{\n  var den = parseInt(r[4], 10),\n    rr = Math.round(aval * den),\n    base = Math.floor(rr / den);\n  var myn = rr - base * den,\n    myd = den;\n  return sign + (base === 0 ? \"\" : \"\" + base) + \" \" + (myn === 0 ? fill(\" \", r[1].length + 1 + r[4].length) : pad_(myn, r[1].length) + r[2] + \"/\" + r[3] + pad0(myd, r[4].length));\n}\nfunction write_num_f2(r /*:Array<string>*/, aval /*:number*/, sign /*:string*/) /*:string*/{\n  return sign + (aval === 0 ? \"\" : \"\" + aval) + fill(\" \", r[1].length + 2 + r[4].length);\n}\nvar dec1 = /^#*0*\\.([0#]+)/;\nvar closeparen = /\\).*[0#]/;\nvar phone = /\\(###\\) ###\\\\?-####/;\nfunction hashq(str /*:string*/) /*:string*/{\n  var o = \"\",\n    cc;\n  for (var i = 0; i != str.length; ++i) switch (cc = str.charCodeAt(i)) {\n    case 35:\n      break;\n    case 63:\n      o += \" \";\n      break;\n    case 48:\n      o += \"0\";\n      break;\n    default:\n      o += String.fromCharCode(cc);\n  }\n  return o;\n}\nfunction rnd(val /*:number*/, d /*:number*/) /*:string*/{\n  var dd = Math.pow(10, d);\n  return \"\" + Math.round(val * dd) / dd;\n}\nfunction dec(val /*:number*/, d /*:number*/) /*:number*/{\n  var _frac = val - Math.floor(val),\n    dd = Math.pow(10, d);\n  if (d < ('' + Math.round(_frac * dd)).length) return 0;\n  return Math.round(_frac * dd);\n}\nfunction carry(val /*:number*/, d /*:number*/) /*:number*/{\n  if (d < ('' + Math.round((val - Math.floor(val)) * Math.pow(10, d))).length) {\n    return 1;\n  }\n  return 0;\n}\nfunction flr(val /*:number*/) /*:string*/{\n  if (val < 2147483647 && val > -2147483648) return \"\" + (val >= 0 ? val | 0 : val - 1 | 0);\n  return \"\" + Math.floor(val);\n}\nfunction write_num_flt(type /*:string*/, fmt /*:string*/, val /*:number*/) /*:string*/{\n  if (type.charCodeAt(0) === 40 && !fmt.match(closeparen)) {\n    var ffmt = fmt.replace(/\\( */, \"\").replace(/ \\)/, \"\").replace(/\\)/, \"\");\n    if (val >= 0) return write_num_flt('n', ffmt, val);\n    return '(' + write_num_flt('n', ffmt, -val) + ')';\n  }\n  if (fmt.charCodeAt(fmt.length - 1) === 44) return write_num_cm(type, fmt, val);\n  if (fmt.indexOf('%') !== -1) return write_num_pct(type, fmt, val);\n  if (fmt.indexOf('E') !== -1) return write_num_exp(fmt, val);\n  if (fmt.charCodeAt(0) === 36) return \"$\" + write_num_flt(type, fmt.substr(fmt.charAt(1) == ' ' ? 2 : 1), val);\n  var o;\n  var r /*:?Array<string>*/,\n    ri,\n    ff,\n    aval = Math.abs(val),\n    sign = val < 0 ? \"-\" : \"\";\n  if (fmt.match(/^00+$/)) return sign + pad0r(aval, fmt.length);\n  if (fmt.match(/^[#?]+$/)) {\n    o = pad0r(val, 0);\n    if (o === \"0\") o = \"\";\n    return o.length > fmt.length ? o : hashq(fmt.substr(0, fmt.length - o.length)) + o;\n  }\n  if (r = fmt.match(frac1)) return write_num_f1(r, aval, sign);\n  if (fmt.match(/^#+0+$/)) return sign + pad0r(aval, fmt.length - fmt.indexOf(\"0\"));\n  if (r = fmt.match(dec1)) {\n    o = rnd(val, r[1].length).replace(/^([^\\.]+)$/, \"$1.\" + hashq(r[1])).replace(/\\.$/, \".\" + hashq(r[1])).replace(/\\.(\\d*)$/, function ($$, $1) {\n      return \".\" + $1 + fill(\"0\", hashq( /*::(*/r /*::||[\"\"])*/[1]).length - $1.length);\n    });\n    return fmt.indexOf(\"0.\") !== -1 ? o : o.replace(/^0\\./, \".\");\n  }\n  fmt = fmt.replace(/^#+([0.])/, \"$1\");\n  if (r = fmt.match(/^(0*)\\.(#*)$/)) {\n    return sign + rnd(aval, r[2].length).replace(/\\.(\\d*[1-9])0*$/, \".$1\").replace(/^(-?\\d*)$/, \"$1.\").replace(/^0\\./, r[1].length ? \"0.\" : \".\");\n  }\n  if (r = fmt.match(/^#{1,3},##0(\\.?)$/)) return sign + commaify(pad0r(aval, 0));\n  if (r = fmt.match(/^#,##0\\.([#0]*0)$/)) {\n    return val < 0 ? \"-\" + write_num_flt(type, fmt, -val) : commaify(\"\" + (Math.floor(val) + carry(val, r[1].length))) + \".\" + pad0(dec(val, r[1].length), r[1].length);\n  }\n  if (r = fmt.match(/^#,#*,#0/)) return write_num_flt(type, fmt.replace(/^#,#*,/, \"\"), val);\n  if (r = fmt.match(/^([0#]+)(\\\\?-([0#]+))+$/)) {\n    o = _strrev(write_num_flt(type, fmt.replace(/[\\\\-]/g, \"\"), val));\n    ri = 0;\n    return _strrev(_strrev(fmt.replace(/\\\\/g, \"\")).replace(/[0#]/g, function (x) {\n      return ri < o.length ? o.charAt(ri++) : x === '0' ? '0' : \"\";\n    }));\n  }\n  if (fmt.match(phone)) {\n    o = write_num_flt(type, \"##########\", val);\n    return \"(\" + o.substr(0, 3) + \") \" + o.substr(3, 3) + \"-\" + o.substr(6);\n  }\n  var oa = \"\";\n  if (r = fmt.match(/^([#0?]+)( ?)\\/( ?)([#0?]+)/)) {\n    ri = Math.min( /*::String(*/r[4] /*::)*/.length, 7);\n    ff = SSF_frac(aval, Math.pow(10, ri) - 1, false);\n    o = \"\" + sign;\n    oa = write_num(\"n\", /*::String(*/r[1] /*::)*/, ff[1]);\n    if (oa.charAt(oa.length - 1) == \" \") oa = oa.substr(0, oa.length - 1) + \"0\";\n    o += oa + /*::String(*/r[2] /*::)*/ + \"/\" + /*::String(*/r[3] /*::)*/;\n    oa = rpad_(ff[2], ri);\n    if (oa.length < r[4].length) oa = hashq(r[4].substr(r[4].length - oa.length)) + oa;\n    o += oa;\n    return o;\n  }\n  if (r = fmt.match(/^# ([#0?]+)( ?)\\/( ?)([#0?]+)/)) {\n    ri = Math.min(Math.max(r[1].length, r[4].length), 7);\n    ff = SSF_frac(aval, Math.pow(10, ri) - 1, true);\n    return sign + (ff[0] || (ff[1] ? \"\" : \"0\")) + \" \" + (ff[1] ? pad_(ff[1], ri) + r[2] + \"/\" + r[3] + rpad_(ff[2], ri) : fill(\" \", 2 * ri + 1 + r[2].length + r[3].length));\n  }\n  if (r = fmt.match(/^[#0?]+$/)) {\n    o = pad0r(val, 0);\n    if (fmt.length <= o.length) return o;\n    return hashq(fmt.substr(0, fmt.length - o.length)) + o;\n  }\n  if (r = fmt.match(/^([#0?]+)\\.([#0]+)$/)) {\n    o = \"\" + val.toFixed(Math.min(r[2].length, 10)).replace(/([^0])0+$/, \"$1\");\n    ri = o.indexOf(\".\");\n    var lres = fmt.indexOf(\".\") - ri,\n      rres = fmt.length - o.length - lres;\n    return hashq(fmt.substr(0, lres) + o + fmt.substr(fmt.length - rres));\n  }\n  if (r = fmt.match(/^00,000\\.([#0]*0)$/)) {\n    ri = dec(val, r[1].length);\n    return val < 0 ? \"-\" + write_num_flt(type, fmt, -val) : commaify(flr(val)).replace(/^\\d,\\d{3}$/, \"0$&\").replace(/^\\d*$/, function ($$) {\n      return \"00,\" + ($$.length < 3 ? pad0(0, 3 - $$.length) : \"\") + $$;\n    }) + \".\" + pad0(ri, r[1].length);\n  }\n  switch (fmt) {\n    case \"###,##0.00\":\n      return write_num_flt(type, \"#,##0.00\", val);\n    case \"###,###\":\n    case \"##,###\":\n    case \"#,###\":\n      var x = commaify(pad0r(aval, 0));\n      return x !== \"0\" ? sign + x : \"\";\n    case \"###,###.00\":\n      return write_num_flt(type, \"###,##0.00\", val).replace(/^0\\./, \".\");\n    case \"#,###.00\":\n      return write_num_flt(type, \"#,##0.00\", val).replace(/^0\\./, \".\");\n  }\n  throw new Error(\"unsupported format |\" + fmt + \"|\");\n}\nfunction write_num_cm2(type /*:string*/, fmt /*:string*/, val /*:number*/) /*:string*/{\n  var idx = fmt.length - 1;\n  while (fmt.charCodeAt(idx - 1) === 44) --idx;\n  return write_num(type, fmt.substr(0, idx), val / Math.pow(10, 3 * (fmt.length - idx)));\n}\nfunction write_num_pct2(type /*:string*/, fmt /*:string*/, val /*:number*/) /*:string*/{\n  var sfmt = fmt.replace(pct1, \"\"),\n    mul = fmt.length - sfmt.length;\n  return write_num(type, sfmt, val * Math.pow(10, 2 * mul)) + fill(\"%\", mul);\n}\nfunction write_num_exp2(fmt /*:string*/, val /*:number*/) /*:string*/{\n  var o /*:string*/;\n  var idx = fmt.indexOf(\"E\") - fmt.indexOf(\".\") - 1;\n  if (fmt.match(/^#+0.0E\\+0$/)) {\n    if (val == 0) return \"0.0E+0\";else if (val < 0) return \"-\" + write_num_exp2(fmt, -val);\n    var period = fmt.indexOf(\".\");\n    if (period === -1) period = fmt.indexOf('E');\n    var ee = Math.floor(Math.log(val) * Math.LOG10E) % period;\n    if (ee < 0) ee += period;\n    o = (val / Math.pow(10, ee)).toPrecision(idx + 1 + (period + ee) % period);\n    if (!o.match(/[Ee]/)) {\n      var fakee = Math.floor(Math.log(val) * Math.LOG10E);\n      if (o.indexOf(\".\") === -1) o = o.charAt(0) + \".\" + o.substr(1) + \"E+\" + (fakee - o.length + ee);else o += \"E+\" + (fakee - ee);\n      o = o.replace(/\\+-/, \"-\");\n    }\n    o = o.replace(/^([+-]?)(\\d*)\\.(\\d*)[Ee]/, function ($$, $1, $2, $3) {\n      return $1 + $2 + $3.substr(0, (period + ee) % period) + \".\" + $3.substr(ee) + \"E\";\n    });\n  } else o = val.toExponential(idx);\n  if (fmt.match(/E\\+00$/) && o.match(/e[+-]\\d$/)) o = o.substr(0, o.length - 1) + \"0\" + o.charAt(o.length - 1);\n  if (fmt.match(/E\\-/) && o.match(/e\\+/)) o = o.replace(/e\\+/, \"e\");\n  return o.replace(\"e\", \"E\");\n}\nfunction write_num_int(type /*:string*/, fmt /*:string*/, val /*:number*/) /*:string*/{\n  if (type.charCodeAt(0) === 40 && !fmt.match(closeparen)) {\n    var ffmt = fmt.replace(/\\( */, \"\").replace(/ \\)/, \"\").replace(/\\)/, \"\");\n    if (val >= 0) return write_num_int('n', ffmt, val);\n    return '(' + write_num_int('n', ffmt, -val) + ')';\n  }\n  if (fmt.charCodeAt(fmt.length - 1) === 44) return write_num_cm2(type, fmt, val);\n  if (fmt.indexOf('%') !== -1) return write_num_pct2(type, fmt, val);\n  if (fmt.indexOf('E') !== -1) return write_num_exp2(fmt, val);\n  if (fmt.charCodeAt(0) === 36) return \"$\" + write_num_int(type, fmt.substr(fmt.charAt(1) == ' ' ? 2 : 1), val);\n  var o;\n  var r /*:?Array<string>*/,\n    ri,\n    ff,\n    aval = Math.abs(val),\n    sign = val < 0 ? \"-\" : \"\";\n  if (fmt.match(/^00+$/)) return sign + pad0(aval, fmt.length);\n  if (fmt.match(/^[#?]+$/)) {\n    o = \"\" + val;\n    if (val === 0) o = \"\";\n    return o.length > fmt.length ? o : hashq(fmt.substr(0, fmt.length - o.length)) + o;\n  }\n  if (r = fmt.match(frac1)) return write_num_f2(r, aval, sign);\n  if (fmt.match(/^#+0+$/)) return sign + pad0(aval, fmt.length - fmt.indexOf(\"0\"));\n  if (r = fmt.match(dec1)) {\n    /*:: if(!Array.isArray(r)) throw new Error(\"unreachable\"); */\n    o = (\"\" + val).replace(/^([^\\.]+)$/, \"$1.\" + hashq(r[1])).replace(/\\.$/, \".\" + hashq(r[1]));\n    o = o.replace(/\\.(\\d*)$/, function ($$, $1) {\n      /*:: if(!Array.isArray(r)) throw new Error(\"unreachable\"); */\n      return \".\" + $1 + fill(\"0\", hashq(r[1]).length - $1.length);\n    });\n    return fmt.indexOf(\"0.\") !== -1 ? o : o.replace(/^0\\./, \".\");\n  }\n  fmt = fmt.replace(/^#+([0.])/, \"$1\");\n  if (r = fmt.match(/^(0*)\\.(#*)$/)) {\n    return sign + (\"\" + aval).replace(/\\.(\\d*[1-9])0*$/, \".$1\").replace(/^(-?\\d*)$/, \"$1.\").replace(/^0\\./, r[1].length ? \"0.\" : \".\");\n  }\n  if (r = fmt.match(/^#{1,3},##0(\\.?)$/)) return sign + commaify(\"\" + aval);\n  if (r = fmt.match(/^#,##0\\.([#0]*0)$/)) {\n    return val < 0 ? \"-\" + write_num_int(type, fmt, -val) : commaify(\"\" + val) + \".\" + fill('0', r[1].length);\n  }\n  if (r = fmt.match(/^#,#*,#0/)) return write_num_int(type, fmt.replace(/^#,#*,/, \"\"), val);\n  if (r = fmt.match(/^([0#]+)(\\\\?-([0#]+))+$/)) {\n    o = _strrev(write_num_int(type, fmt.replace(/[\\\\-]/g, \"\"), val));\n    ri = 0;\n    return _strrev(_strrev(fmt.replace(/\\\\/g, \"\")).replace(/[0#]/g, function (x) {\n      return ri < o.length ? o.charAt(ri++) : x === '0' ? '0' : \"\";\n    }));\n  }\n  if (fmt.match(phone)) {\n    o = write_num_int(type, \"##########\", val);\n    return \"(\" + o.substr(0, 3) + \") \" + o.substr(3, 3) + \"-\" + o.substr(6);\n  }\n  var oa = \"\";\n  if (r = fmt.match(/^([#0?]+)( ?)\\/( ?)([#0?]+)/)) {\n    ri = Math.min( /*::String(*/r[4] /*::)*/.length, 7);\n    ff = SSF_frac(aval, Math.pow(10, ri) - 1, false);\n    o = \"\" + sign;\n    oa = write_num(\"n\", /*::String(*/r[1] /*::)*/, ff[1]);\n    if (oa.charAt(oa.length - 1) == \" \") oa = oa.substr(0, oa.length - 1) + \"0\";\n    o += oa + /*::String(*/r[2] /*::)*/ + \"/\" + /*::String(*/r[3] /*::)*/;\n    oa = rpad_(ff[2], ri);\n    if (oa.length < r[4].length) oa = hashq(r[4].substr(r[4].length - oa.length)) + oa;\n    o += oa;\n    return o;\n  }\n  if (r = fmt.match(/^# ([#0?]+)( ?)\\/( ?)([#0?]+)/)) {\n    ri = Math.min(Math.max(r[1].length, r[4].length), 7);\n    ff = SSF_frac(aval, Math.pow(10, ri) - 1, true);\n    return sign + (ff[0] || (ff[1] ? \"\" : \"0\")) + \" \" + (ff[1] ? pad_(ff[1], ri) + r[2] + \"/\" + r[3] + rpad_(ff[2], ri) : fill(\" \", 2 * ri + 1 + r[2].length + r[3].length));\n  }\n  if (r = fmt.match(/^[#0?]+$/)) {\n    o = \"\" + val;\n    if (fmt.length <= o.length) return o;\n    return hashq(fmt.substr(0, fmt.length - o.length)) + o;\n  }\n  if (r = fmt.match(/^([#0]+)\\.([#0]+)$/)) {\n    o = \"\" + val.toFixed(Math.min(r[2].length, 10)).replace(/([^0])0+$/, \"$1\");\n    ri = o.indexOf(\".\");\n    var lres = fmt.indexOf(\".\") - ri,\n      rres = fmt.length - o.length - lres;\n    return hashq(fmt.substr(0, lres) + o + fmt.substr(fmt.length - rres));\n  }\n  if (r = fmt.match(/^00,000\\.([#0]*0)$/)) {\n    return val < 0 ? \"-\" + write_num_int(type, fmt, -val) : commaify(\"\" + val).replace(/^\\d,\\d{3}$/, \"0$&\").replace(/^\\d*$/, function ($$) {\n      return \"00,\" + ($$.length < 3 ? pad0(0, 3 - $$.length) : \"\") + $$;\n    }) + \".\" + pad0(0, r[1].length);\n  }\n  switch (fmt) {\n    case \"###,###\":\n    case \"##,###\":\n    case \"#,###\":\n      var x = commaify(\"\" + aval);\n      return x !== \"0\" ? sign + x : \"\";\n    default:\n      if (fmt.match(/\\.[0#?]*$/)) return write_num_int(type, fmt.slice(0, fmt.lastIndexOf(\".\")), val) + hashq(fmt.slice(fmt.lastIndexOf(\".\")));\n  }\n  throw new Error(\"unsupported format |\" + fmt + \"|\");\n}\nfunction write_num(type /*:string*/, fmt /*:string*/, val /*:number*/) /*:string*/{\n  return (val | 0) === val ? write_num_int(type, fmt, val) : write_num_flt(type, fmt, val);\n}\nfunction SSF_split_fmt(fmt /*:string*/) /*:Array<string>*/{\n  var out /*:Array<string>*/ = [];\n  var in_str = false /*, cc*/;\n  for (var i = 0, j = 0; i < fmt.length; ++i) switch ( /*cc=*/fmt.charCodeAt(i)) {\n    case 34:\n      /* '\"' */\n      in_str = !in_str;\n      break;\n    case 95:\n    case 42:\n    case 92:\n      /* '_' '*' '\\\\' */\n      ++i;\n      break;\n    case 59:\n      /* ';' */\n      out[out.length] = fmt.substr(j, i - j);\n      j = i + 1;\n  }\n  out[out.length] = fmt.substr(j);\n  if (in_str === true) throw new Error(\"Format |\" + fmt + \"| unterminated string \");\n  return out;\n}\nvar SSF_abstime = /\\[[HhMmSs\\u0E0A\\u0E19\\u0E17]*\\]/;\nfunction fmt_is_date(fmt /*:string*/) /*:boolean*/{\n  var i = 0,\n    /*cc = 0,*/c = \"\",\n    o = \"\";\n  while (i < fmt.length) {\n    switch (c = fmt.charAt(i)) {\n      case 'G':\n        if (SSF_isgeneral(fmt, i)) i += 6;\n        i++;\n        break;\n      case '\"':\n        for (; /*cc=*/fmt.charCodeAt(++i) !== 34 && i < fmt.length;) {/*empty*/}\n        ++i;\n        break;\n      case '\\\\':\n        i += 2;\n        break;\n      case '_':\n        i += 2;\n        break;\n      case '@':\n        ++i;\n        break;\n      case 'B':\n      case 'b':\n        if (fmt.charAt(i + 1) === \"1\" || fmt.charAt(i + 1) === \"2\") return true;\n      /* falls through */\n      case 'M':\n      case 'D':\n      case 'Y':\n      case 'H':\n      case 'S':\n      case 'E':\n      /* falls through */\n      case 'm':\n      case 'd':\n      case 'y':\n      case 'h':\n      case 's':\n      case 'e':\n      case 'g':\n        return true;\n      case 'A':\n      case 'a':\n      case '上':\n        if (fmt.substr(i, 3).toUpperCase() === \"A/P\") return true;\n        if (fmt.substr(i, 5).toUpperCase() === \"AM/PM\") return true;\n        if (fmt.substr(i, 5).toUpperCase() === \"上午/下午\") return true;\n        ++i;\n        break;\n      case '[':\n        o = c;\n        while (fmt.charAt(i++) !== ']' && i < fmt.length) o += fmt.charAt(i);\n        if (o.match(SSF_abstime)) return true;\n        break;\n      case '.':\n      /* falls through */\n      case '0':\n      case '#':\n        while (i < fmt.length && (\"0#?.,E+-%\".indexOf(c = fmt.charAt(++i)) > -1 || c == '\\\\' && fmt.charAt(i + 1) == \"-\" && \"0#\".indexOf(fmt.charAt(i + 2)) > -1)) {/* empty */}\n        break;\n      case '?':\n        while (fmt.charAt(++i) === c) {/* empty */}\n        break;\n      case '*':\n        ++i;\n        if (fmt.charAt(i) == ' ' || fmt.charAt(i) == '*') ++i;\n        break;\n      case '(':\n      case ')':\n        ++i;\n        break;\n      case '1':\n      case '2':\n      case '3':\n      case '4':\n      case '5':\n      case '6':\n      case '7':\n      case '8':\n      case '9':\n        while (i < fmt.length && \"0123456789\".indexOf(fmt.charAt(++i)) > -1) {/* empty */}\n        break;\n      case ' ':\n        ++i;\n        break;\n      default:\n        ++i;\n        break;\n    }\n  }\n  return false;\n}\nfunction eval_fmt(fmt /*:string*/, v /*:any*/, opts /*:any*/, flen /*:number*/) {\n  var out = [],\n    o = \"\",\n    i = 0,\n    c = \"\",\n    lst = 't',\n    dt,\n    j,\n    cc;\n  var hr = 'H';\n  /* Tokenize */\n  while (i < fmt.length) {\n    switch (c = fmt.charAt(i)) {\n      case 'G':\n        /* General */\n        if (!SSF_isgeneral(fmt, i)) throw new Error('unrecognized character ' + c + ' in ' + fmt);\n        out[out.length] = {\n          t: 'G',\n          v: 'General'\n        };\n        i += 7;\n        break;\n      case '\"':\n        /* Literal text */\n        for (o = \"\"; (cc = fmt.charCodeAt(++i)) !== 34 && i < fmt.length;) o += String.fromCharCode(cc);\n        out[out.length] = {\n          t: 't',\n          v: o\n        };\n        ++i;\n        break;\n      case '\\\\':\n        var w = fmt.charAt(++i),\n          t = w === \"(\" || w === \")\" ? w : 't';\n        out[out.length] = {\n          t: t,\n          v: w\n        };\n        ++i;\n        break;\n      case '_':\n        out[out.length] = {\n          t: 't',\n          v: \" \"\n        };\n        i += 2;\n        break;\n      case '@':\n        /* Text Placeholder */\n        out[out.length] = {\n          t: 'T',\n          v: v\n        };\n        ++i;\n        break;\n      case 'B':\n      case 'b':\n        if (fmt.charAt(i + 1) === \"1\" || fmt.charAt(i + 1) === \"2\") {\n          if (dt == null) {\n            dt = SSF_parse_date_code(v, opts, fmt.charAt(i + 1) === \"2\");\n            if (dt == null) return \"\";\n          }\n          out[out.length] = {\n            t: 'X',\n            v: fmt.substr(i, 2)\n          };\n          lst = c;\n          i += 2;\n          break;\n        }\n      /* falls through */\n      case 'M':\n      case 'D':\n      case 'Y':\n      case 'H':\n      case 'S':\n      case 'E':\n        c = c.toLowerCase();\n      /* falls through */\n      case 'm':\n      case 'd':\n      case 'y':\n      case 'h':\n      case 's':\n      case 'e':\n      case 'g':\n        if (v < 0) return \"\";\n        if (dt == null) {\n          dt = SSF_parse_date_code(v, opts);\n          if (dt == null) return \"\";\n        }\n        o = c;\n        while (++i < fmt.length && fmt.charAt(i).toLowerCase() === c) o += c;\n        if (c === 'm' && lst.toLowerCase() === 'h') c = 'M';\n        if (c === 'h') c = hr;\n        out[out.length] = {\n          t: c,\n          v: o\n        };\n        lst = c;\n        break;\n      case 'A':\n      case 'a':\n      case '上':\n        var q = {\n          t: c,\n          v: c\n        };\n        if (dt == null) dt = SSF_parse_date_code(v, opts);\n        if (fmt.substr(i, 3).toUpperCase() === \"A/P\") {\n          if (dt != null) q.v = dt.H >= 12 ? fmt.charAt(i + 2) : c;\n          q.t = 'T';\n          hr = 'h';\n          i += 3;\n        } else if (fmt.substr(i, 5).toUpperCase() === \"AM/PM\") {\n          if (dt != null) q.v = dt.H >= 12 ? \"PM\" : \"AM\";\n          q.t = 'T';\n          i += 5;\n          hr = 'h';\n        } else if (fmt.substr(i, 5).toUpperCase() === \"上午/下午\") {\n          if (dt != null) q.v = dt.H >= 12 ? \"下午\" : \"上午\";\n          q.t = 'T';\n          i += 5;\n          hr = 'h';\n        } else {\n          q.t = \"t\";\n          ++i;\n        }\n        if (dt == null && q.t === 'T') return \"\";\n        out[out.length] = q;\n        lst = c;\n        break;\n      case '[':\n        o = c;\n        while (fmt.charAt(i++) !== ']' && i < fmt.length) o += fmt.charAt(i);\n        if (o.slice(-1) !== ']') throw 'unterminated \"[\" block: |' + o + '|';\n        if (o.match(SSF_abstime)) {\n          if (dt == null) {\n            dt = SSF_parse_date_code(v, opts);\n            if (dt == null) return \"\";\n          }\n          out[out.length] = {\n            t: 'Z',\n            v: o.toLowerCase()\n          };\n          lst = o.charAt(1);\n        } else if (o.indexOf(\"$\") > -1) {\n          o = (o.match(/\\$([^-\\[\\]]*)/) || [])[1] || \"$\";\n          if (!fmt_is_date(fmt)) out[out.length] = {\n            t: 't',\n            v: o\n          };\n        }\n        break;\n      /* Numbers */\n      case '.':\n        if (dt != null) {\n          o = c;\n          while (++i < fmt.length && (c = fmt.charAt(i)) === \"0\") o += c;\n          out[out.length] = {\n            t: 's',\n            v: o\n          };\n          break;\n        }\n      /* falls through */\n      case '0':\n      case '#':\n        o = c;\n        while (++i < fmt.length && \"0#?.,E+-%\".indexOf(c = fmt.charAt(i)) > -1) o += c;\n        out[out.length] = {\n          t: 'n',\n          v: o\n        };\n        break;\n      case '?':\n        o = c;\n        while (fmt.charAt(++i) === c) o += c;\n        out[out.length] = {\n          t: c,\n          v: o\n        };\n        lst = c;\n        break;\n      case '*':\n        ++i;\n        if (fmt.charAt(i) == ' ' || fmt.charAt(i) == '*') ++i;\n        break;\n      // **\n      case '(':\n      case ')':\n        out[out.length] = {\n          t: flen === 1 ? 't' : c,\n          v: c\n        };\n        ++i;\n        break;\n      case '1':\n      case '2':\n      case '3':\n      case '4':\n      case '5':\n      case '6':\n      case '7':\n      case '8':\n      case '9':\n        o = c;\n        while (i < fmt.length && \"0123456789\".indexOf(fmt.charAt(++i)) > -1) o += fmt.charAt(i);\n        out[out.length] = {\n          t: 'D',\n          v: o\n        };\n        break;\n      case ' ':\n        out[out.length] = {\n          t: c,\n          v: c\n        };\n        ++i;\n        break;\n      case '$':\n        out[out.length] = {\n          t: 't',\n          v: '$'\n        };\n        ++i;\n        break;\n      default:\n        if (\",$-+/():!^&'~{}<>=€acfijklopqrtuvwxzP\".indexOf(c) === -1) throw new Error('unrecognized character ' + c + ' in ' + fmt);\n        out[out.length] = {\n          t: 't',\n          v: c\n        };\n        ++i;\n        break;\n    }\n  }\n\n  /* Scan for date/time parts */\n  var bt = 0,\n    ss0 = 0,\n    ssm;\n  for (i = out.length - 1, lst = 't'; i >= 0; --i) {\n    switch (out[i].t) {\n      case 'h':\n      case 'H':\n        out[i].t = hr;\n        lst = 'h';\n        if (bt < 1) bt = 1;\n        break;\n      case 's':\n        if (ssm = out[i].v.match(/\\.0+$/)) ss0 = Math.max(ss0, ssm[0].length - 1);\n        if (bt < 3) bt = 3;\n      /* falls through */\n      case 'd':\n      case 'y':\n      case 'M':\n      case 'e':\n        lst = out[i].t;\n        break;\n      case 'm':\n        if (lst === 's') {\n          out[i].t = 'M';\n          if (bt < 2) bt = 2;\n        }\n        break;\n      case 'X':\n        /*if(out[i].v === \"B2\");*/\n        break;\n      case 'Z':\n        if (bt < 1 && out[i].v.match(/[Hh]/)) bt = 1;\n        if (bt < 2 && out[i].v.match(/[Mm]/)) bt = 2;\n        if (bt < 3 && out[i].v.match(/[Ss]/)) bt = 3;\n    }\n  }\n  /* time rounding depends on presence of minute / second / usec fields */\n  switch (bt) {\n    case 0:\n      break;\n    case 1:\n      /*::if(!dt) break;*/\n      if (dt.u >= 0.5) {\n        dt.u = 0;\n        ++dt.S;\n      }\n      if (dt.S >= 60) {\n        dt.S = 0;\n        ++dt.M;\n      }\n      if (dt.M >= 60) {\n        dt.M = 0;\n        ++dt.H;\n      }\n      break;\n    case 2:\n      /*::if(!dt) break;*/\n      if (dt.u >= 0.5) {\n        dt.u = 0;\n        ++dt.S;\n      }\n      if (dt.S >= 60) {\n        dt.S = 0;\n        ++dt.M;\n      }\n      break;\n  }\n\n  /* replace fields */\n  var nstr = \"\",\n    jj;\n  for (i = 0; i < out.length; ++i) {\n    switch (out[i].t) {\n      case 't':\n      case 'T':\n      case ' ':\n      case 'D':\n        break;\n      case 'X':\n        out[i].v = \"\";\n        out[i].t = \";\";\n        break;\n      case 'd':\n      case 'm':\n      case 'y':\n      case 'h':\n      case 'H':\n      case 'M':\n      case 's':\n      case 'e':\n      case 'b':\n      case 'Z':\n        /*::if(!dt) throw \"unreachable\"; */\n        out[i].v = SSF_write_date(out[i].t.charCodeAt(0), out[i].v, dt, ss0);\n        out[i].t = 't';\n        break;\n      case 'n':\n      case '?':\n        jj = i + 1;\n        while (out[jj] != null && ((c = out[jj].t) === \"?\" || c === \"D\" || (c === \" \" || c === \"t\") && out[jj + 1] != null && (out[jj + 1].t === '?' || out[jj + 1].t === \"t\" && out[jj + 1].v === '/') || out[i].t === '(' && (c === ' ' || c === 'n' || c === ')') || c === 't' && (out[jj].v === '/' || out[jj].v === ' ' && out[jj + 1] != null && out[jj + 1].t == '?'))) {\n          out[i].v += out[jj].v;\n          out[jj] = {\n            v: \"\",\n            t: \";\"\n          };\n          ++jj;\n        }\n        nstr += out[i].v;\n        i = jj - 1;\n        break;\n      case 'G':\n        out[i].t = 't';\n        out[i].v = SSF_general(v, opts);\n        break;\n    }\n  }\n  var vv = \"\",\n    myv,\n    ostr;\n  if (nstr.length > 0) {\n    if (nstr.charCodeAt(0) == 40) /* '(' */{\n        myv = v < 0 && nstr.charCodeAt(0) === 45 ? -v : v;\n        ostr = write_num('n', nstr, myv);\n      } else {\n      myv = v < 0 && flen > 1 ? -v : v;\n      ostr = write_num('n', nstr, myv);\n      if (myv < 0 && out[0] && out[0].t == 't') {\n        ostr = ostr.substr(1);\n        out[0].v = \"-\" + out[0].v;\n      }\n    }\n    jj = ostr.length - 1;\n    var decpt = out.length;\n    for (i = 0; i < out.length; ++i) if (out[i] != null && out[i].t != 't' && out[i].v.indexOf(\".\") > -1) {\n      decpt = i;\n      break;\n    }\n    var lasti = out.length;\n    if (decpt === out.length && ostr.indexOf(\"E\") === -1) {\n      for (i = out.length - 1; i >= 0; --i) {\n        if (out[i] == null || 'n?'.indexOf(out[i].t) === -1) continue;\n        if (jj >= out[i].v.length - 1) {\n          jj -= out[i].v.length;\n          out[i].v = ostr.substr(jj + 1, out[i].v.length);\n        } else if (jj < 0) out[i].v = \"\";else {\n          out[i].v = ostr.substr(0, jj + 1);\n          jj = -1;\n        }\n        out[i].t = 't';\n        lasti = i;\n      }\n      if (jj >= 0 && lasti < out.length) out[lasti].v = ostr.substr(0, jj + 1) + out[lasti].v;\n    } else if (decpt !== out.length && ostr.indexOf(\"E\") === -1) {\n      jj = ostr.indexOf(\".\") - 1;\n      for (i = decpt; i >= 0; --i) {\n        if (out[i] == null || 'n?'.indexOf(out[i].t) === -1) continue;\n        j = out[i].v.indexOf(\".\") > -1 && i === decpt ? out[i].v.indexOf(\".\") - 1 : out[i].v.length - 1;\n        vv = out[i].v.substr(j + 1);\n        for (; j >= 0; --j) {\n          if (jj >= 0 && (out[i].v.charAt(j) === \"0\" || out[i].v.charAt(j) === \"#\")) vv = ostr.charAt(jj--) + vv;\n        }\n        out[i].v = vv;\n        out[i].t = 't';\n        lasti = i;\n      }\n      if (jj >= 0 && lasti < out.length) out[lasti].v = ostr.substr(0, jj + 1) + out[lasti].v;\n      jj = ostr.indexOf(\".\") + 1;\n      for (i = decpt; i < out.length; ++i) {\n        if (out[i] == null || 'n?('.indexOf(out[i].t) === -1 && i !== decpt) continue;\n        j = out[i].v.indexOf(\".\") > -1 && i === decpt ? out[i].v.indexOf(\".\") + 1 : 0;\n        vv = out[i].v.substr(0, j);\n        for (; j < out[i].v.length; ++j) {\n          if (jj < ostr.length) vv += ostr.charAt(jj++);\n        }\n        out[i].v = vv;\n        out[i].t = 't';\n        lasti = i;\n      }\n    }\n  }\n  for (i = 0; i < out.length; ++i) if (out[i] != null && 'n?'.indexOf(out[i].t) > -1) {\n    myv = flen > 1 && v < 0 && i > 0 && out[i - 1].v === \"-\" ? -v : v;\n    out[i].v = write_num(out[i].t, out[i].v, myv);\n    out[i].t = 't';\n  }\n  var retval = \"\";\n  for (i = 0; i !== out.length; ++i) if (out[i] != null) retval += out[i].v;\n  return retval;\n}\nvar cfregex2 = /\\[(=|>[=]?|<[>=]?)(-?\\d+(?:\\.\\d*)?)\\]/;\nfunction chkcond(v, rr) {\n  if (rr == null) return false;\n  var thresh = parseFloat(rr[2]);\n  switch (rr[1]) {\n    case \"=\":\n      if (v == thresh) return true;\n      break;\n    case \">\":\n      if (v > thresh) return true;\n      break;\n    case \"<\":\n      if (v < thresh) return true;\n      break;\n    case \"<>\":\n      if (v != thresh) return true;\n      break;\n    case \">=\":\n      if (v >= thresh) return true;\n      break;\n    case \"<=\":\n      if (v <= thresh) return true;\n      break;\n  }\n  return false;\n}\nfunction choose_fmt(f /*:string*/, v /*:any*/) {\n  var fmt = SSF_split_fmt(f);\n  var l = fmt.length,\n    lat = fmt[l - 1].indexOf(\"@\");\n  if (l < 4 && lat > -1) --l;\n  if (fmt.length > 4) throw new Error(\"cannot find right format for |\" + fmt.join(\"|\") + \"|\");\n  if (typeof v !== \"number\") return [4, fmt.length === 4 || lat > -1 ? fmt[fmt.length - 1] : \"@\"];\n  switch (fmt.length) {\n    case 1:\n      fmt = lat > -1 ? [\"General\", \"General\", \"General\", fmt[0]] : [fmt[0], fmt[0], fmt[0], \"@\"];\n      break;\n    case 2:\n      fmt = lat > -1 ? [fmt[0], fmt[0], fmt[0], fmt[1]] : [fmt[0], fmt[1], fmt[0], \"@\"];\n      break;\n    case 3:\n      fmt = lat > -1 ? [fmt[0], fmt[1], fmt[0], fmt[2]] : [fmt[0], fmt[1], fmt[2], \"@\"];\n      break;\n  }\n  var ff = v > 0 ? fmt[0] : v < 0 ? fmt[1] : fmt[2];\n  if (fmt[0].indexOf(\"[\") === -1 && fmt[1].indexOf(\"[\") === -1) return [l, ff];\n  if (fmt[0].match(/\\[[=<>]/) != null || fmt[1].match(/\\[[=<>]/) != null) {\n    var m1 = fmt[0].match(cfregex2);\n    var m2 = fmt[1].match(cfregex2);\n    return chkcond(v, m1) ? [l, fmt[0]] : chkcond(v, m2) ? [l, fmt[1]] : [l, fmt[m1 != null && m2 != null ? 2 : 1]];\n  }\n  return [l, ff];\n}\nfunction SSF_format(fmt /*:string|number*/, v /*:any*/, o /*:?any*/) {\n  if (o == null) o = {};\n  var sfmt = \"\";\n  switch (typeof fmt) {\n    case \"string\":\n      if (fmt == \"m/d/yy\" && o.dateNF) sfmt = o.dateNF;else sfmt = fmt;\n      break;\n    case \"number\":\n      if (fmt == 14 && o.dateNF) sfmt = o.dateNF;else sfmt = (o.table != null ? o.table /*:any*/ : table_fmt)[fmt];\n      if (sfmt == null) sfmt = o.table && o.table[SSF_default_map[fmt]] || table_fmt[SSF_default_map[fmt]];\n      if (sfmt == null) sfmt = SSF_default_str[fmt] || \"General\";\n      break;\n  }\n  if (SSF_isgeneral(sfmt, 0)) return SSF_general(v, o);\n  if (v instanceof Date) v = datenum(v, o.date1904);\n  var f = choose_fmt(sfmt, v);\n  if (SSF_isgeneral(f[1])) return SSF_general(v, o);\n  if (v === true) v = \"TRUE\";else if (v === false) v = \"FALSE\";else if (v === \"\" || v == null) return \"\";\n  return eval_fmt(f[1], v, o, f[0]);\n}\nfunction SSF_load(fmt /*:string*/, idx /*:?number*/) /*:number*/{\n  if (typeof idx != 'number') {\n    idx = +idx || -1;\n    /*::if(typeof idx != 'number') return 0x188; */\n    for (var i = 0; i < 0x0188; ++i) {\n      /*::if(typeof idx != 'number') return 0x188; */\n      if (table_fmt[i] == undefined) {\n        if (idx < 0) idx = i;\n        continue;\n      }\n      if (table_fmt[i] == fmt) {\n        idx = i;\n        break;\n      }\n    }\n    /*::if(typeof idx != 'number') return 0x188; */\n    if (idx < 0) idx = 0x187;\n  }\n  /*::if(typeof idx != 'number') return 0x188; */\n  table_fmt[idx] = fmt;\n  return idx;\n}\nfunction SSF_load_table(tbl /*:SSFTable*/) /*:void*/{\n  for (var i = 0; i != 0x0188; ++i) if (tbl[i] !== undefined) SSF_load(tbl[i], i);\n}\nfunction make_ssf() {\n  table_fmt = SSF_init_table();\n}\nvar SSFImplicit /*{[number]:string}*/ = {\n  \"5\": '\"$\"#,##0_);\\\\(\"$\"#,##0\\\\)',\n  \"6\": '\"$\"#,##0_);[Red]\\\\(\"$\"#,##0\\\\)',\n  \"7\": '\"$\"#,##0.00_);\\\\(\"$\"#,##0.00\\\\)',\n  \"8\": '\"$\"#,##0.00_);[Red]\\\\(\"$\"#,##0.00\\\\)',\n  \"23\": 'General',\n  \"24\": 'General',\n  \"25\": 'General',\n  \"26\": 'General',\n  \"27\": 'm/d/yy',\n  \"28\": 'm/d/yy',\n  \"29\": 'm/d/yy',\n  \"30\": 'm/d/yy',\n  \"31\": 'm/d/yy',\n  \"32\": 'h:mm:ss',\n  \"33\": 'h:mm:ss',\n  \"34\": 'h:mm:ss',\n  \"35\": 'h:mm:ss',\n  \"36\": 'm/d/yy',\n  \"41\": '_(* #,##0_);_(* \\(#,##0\\);_(* \"-\"_);_(@_)',\n  \"42\": '_(\"$\"* #,##0_);_(\"$\"* \\(#,##0\\);_(\"$\"* \"-\"_);_(@_)',\n  \"43\": '_(* #,##0.00_);_(* \\(#,##0.00\\);_(* \"-\"??_);_(@_)',\n  \"44\": '_(\"$\"* #,##0.00_);_(\"$\"* \\(#,##0.00\\);_(\"$\"* \"-\"??_);_(@_)',\n  \"50\": 'm/d/yy',\n  \"51\": 'm/d/yy',\n  \"52\": 'm/d/yy',\n  \"53\": 'm/d/yy',\n  \"54\": 'm/d/yy',\n  \"55\": 'm/d/yy',\n  \"56\": 'm/d/yy',\n  \"57\": 'm/d/yy',\n  \"58\": 'm/d/yy',\n  \"59\": '0',\n  \"60\": '0.00',\n  \"61\": '#,##0',\n  \"62\": '#,##0.00',\n  \"63\": '\"$\"#,##0_);\\\\(\"$\"#,##0\\\\)',\n  \"64\": '\"$\"#,##0_);[Red]\\\\(\"$\"#,##0\\\\)',\n  \"65\": '\"$\"#,##0.00_);\\\\(\"$\"#,##0.00\\\\)',\n  \"66\": '\"$\"#,##0.00_);[Red]\\\\(\"$\"#,##0.00\\\\)',\n  \"67\": '0%',\n  \"68\": '0.00%',\n  \"69\": '# ?/?',\n  \"70\": '# ??/??',\n  \"71\": 'm/d/yy',\n  \"72\": 'm/d/yy',\n  \"73\": 'd-mmm-yy',\n  \"74\": 'd-mmm',\n  \"75\": 'mmm-yy',\n  \"76\": 'h:mm',\n  \"77\": 'h:mm:ss',\n  \"78\": 'm/d/yy h:mm',\n  \"79\": 'mm:ss',\n  \"80\": '[h]:mm:ss',\n  \"81\": 'mmss.0'\n} /*:any*/;\n\n/* dateNF parse TODO: move to SSF */\nvar dateNFregex = /[dD]+|[mM]+|[yYeE]+|[Hh]+|[Ss]+/g;\nfunction dateNF_regex(dateNF /*:string|number*/) /*:RegExp*/{\n  var fmt = typeof dateNF == \"number\" ? table_fmt[dateNF] : dateNF;\n  fmt = fmt.replace(dateNFregex, \"(\\\\d+)\");\n  dateNFregex.lastIndex = 0;\n  return new RegExp(\"^\" + fmt + \"$\");\n}\nfunction dateNF_fix(str /*:string*/, dateNF /*:string*/, match /*:Array<string>*/) /*:string*/{\n  var Y = -1,\n    m = -1,\n    d = -1,\n    H = -1,\n    M = -1,\n    S = -1;\n  (dateNF.match(dateNFregex) || []).forEach(function (n, i) {\n    var v = parseInt(match[i + 1], 10);\n    switch (n.toLowerCase().charAt(0)) {\n      case 'y':\n        Y = v;\n        break;\n      case 'd':\n        d = v;\n        break;\n      case 'h':\n        H = v;\n        break;\n      case 's':\n        S = v;\n        break;\n      case 'm':\n        if (H >= 0) M = v;else m = v;\n        break;\n    }\n  });\n  dateNFregex.lastIndex = 0;\n  if (S >= 0 && M == -1 && m >= 0) {\n    M = m;\n    m = -1;\n  }\n  var datestr = (\"\" + (Y >= 0 ? Y : new Date().getFullYear())).slice(-4) + \"-\" + (\"00\" + (m >= 1 ? m : 1)).slice(-2) + \"-\" + (\"00\" + (d >= 1 ? d : 1)).slice(-2);\n  if (datestr.length == 7) datestr = \"0\" + datestr;\n  if (datestr.length == 8) datestr = \"20\" + datestr;\n  var timestr = (\"00\" + (H >= 0 ? H : 0)).slice(-2) + \":\" + (\"00\" + (M >= 0 ? M : 0)).slice(-2) + \":\" + (\"00\" + (S >= 0 ? S : 0)).slice(-2);\n  if (H == -1 && M == -1 && S == -1) return datestr;\n  if (Y == -1 && m == -1 && d == -1) return timestr;\n  return datestr + \"T\" + timestr;\n}\n\n/* table of bad formats written by third-party tools */\nvar bad_formats = {\n  \"d.m\": \"d\\\\.m\" // Issue #2571 Google Sheets writes invalid format 'd.m', correct format is 'd\".\"m' or 'd\\\\.m'\n};\n\nfunction SSF__load(fmt, idx) {\n  return SSF_load(bad_formats[fmt] || fmt, idx);\n}\n\n/*::\ndeclare var ReadShift:any;\ndeclare var CheckField:any;\ndeclare var prep_blob:any;\ndeclare var __readUInt32LE:any;\ndeclare var __readInt32LE:any;\ndeclare var __toBuffer:any;\ndeclare var __utf16le:any;\ndeclare var bconcat:any;\ndeclare var s2a:any;\ndeclare var chr0:any;\ndeclare var chr1:any;\ndeclare var has_buf:boolean;\ndeclare var new_buf:any;\ndeclare var new_raw_buf:any;\ndeclare var new_unsafe_buf:any;\ndeclare var Buffer_from:any;\n*/\n/* cfb.js (C) 2013-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*jshint eqnull:true */\n/*exported CFB */\n/*global Uint8Array:false, Uint16Array:false */\n\n/*::\ntype SectorEntry = {\n\tname?:string;\n\tnodes?:Array<number>;\n\tdata:RawBytes;\n};\ntype SectorList = {\n\t[k:string|number]:SectorEntry;\n\tname:?string;\n\tfat_addrs:Array<number>;\n\tssz:number;\n}\ntype CFBFiles = {[n:string]:CFBEntry};\n*/\n/* crc32.js (C) 2014-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*exported CRC32 */\nvar CRC32 = /*#__PURE__*/function () {\n  var CRC32 = {};\n  CRC32.version = '1.2.0';\n  /* see perf/crc32table.js */\n  /*global Int32Array */\n  function signed_crc_table() /*:any*/{\n    var c = 0,\n      table /*:Array<number>*/ = new Array(256);\n    for (var n = 0; n != 256; ++n) {\n      c = n;\n      c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;\n      c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;\n      c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;\n      c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;\n      c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;\n      c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;\n      c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;\n      c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;\n      table[n] = c;\n    }\n    return typeof Int32Array !== 'undefined' ? new Int32Array(table) : table;\n  }\n  var T0 = signed_crc_table();\n  function slice_by_16_tables(T) {\n    var c = 0,\n      v = 0,\n      n = 0,\n      table /*:Array<number>*/ = typeof Int32Array !== 'undefined' ? new Int32Array(4096) : new Array(4096);\n    for (n = 0; n != 256; ++n) table[n] = T[n];\n    for (n = 0; n != 256; ++n) {\n      v = T[n];\n      for (c = 256 + n; c < 4096; c += 256) v = table[c] = v >>> 8 ^ T[v & 0xFF];\n    }\n    var out = [];\n    for (n = 1; n != 16; ++n) out[n - 1] = typeof Int32Array !== 'undefined' && typeof table.subarray == \"function\" ? table.subarray(n * 256, n * 256 + 256) : table.slice(n * 256, n * 256 + 256);\n    return out;\n  }\n  var TT = slice_by_16_tables(T0);\n  var T1 = TT[0],\n    T2 = TT[1],\n    T3 = TT[2],\n    T4 = TT[3],\n    T5 = TT[4];\n  var T6 = TT[5],\n    T7 = TT[6],\n    T8 = TT[7],\n    T9 = TT[8],\n    Ta = TT[9];\n  var Tb = TT[10],\n    Tc = TT[11],\n    Td = TT[12],\n    Te = TT[13],\n    Tf = TT[14];\n  function crc32_bstr(bstr /*:string*/, seed /*:number*/) /*:number*/{\n    var C = seed /*:: ? 0 : 0 */ ^ -1;\n    for (var i = 0, L = bstr.length; i < L;) C = C >>> 8 ^ T0[(C ^ bstr.charCodeAt(i++)) & 0xFF];\n    return ~C;\n  }\n  function crc32_buf(B /*:Uint8Array|Array<number>*/, seed /*:number*/) /*:number*/{\n    var C = seed /*:: ? 0 : 0 */ ^ -1,\n      L = B.length - 15,\n      i = 0;\n    for (; i < L;) C = Tf[B[i++] ^ C & 255] ^ Te[B[i++] ^ C >> 8 & 255] ^ Td[B[i++] ^ C >> 16 & 255] ^ Tc[B[i++] ^ C >>> 24] ^ Tb[B[i++]] ^ Ta[B[i++]] ^ T9[B[i++]] ^ T8[B[i++]] ^ T7[B[i++]] ^ T6[B[i++]] ^ T5[B[i++]] ^ T4[B[i++]] ^ T3[B[i++]] ^ T2[B[i++]] ^ T1[B[i++]] ^ T0[B[i++]];\n    L += 15;\n    while (i < L) C = C >>> 8 ^ T0[(C ^ B[i++]) & 0xFF];\n    return ~C;\n  }\n  function crc32_str(str /*:string*/, seed /*:number*/) /*:number*/{\n    var C = seed ^ -1;\n    for (var i = 0, L = str.length, c = 0, d = 0; i < L;) {\n      c = str.charCodeAt(i++);\n      if (c < 0x80) {\n        C = C >>> 8 ^ T0[(C ^ c) & 0xFF];\n      } else if (c < 0x800) {\n        C = C >>> 8 ^ T0[(C ^ (192 | c >> 6 & 31)) & 0xFF];\n        C = C >>> 8 ^ T0[(C ^ (128 | c & 63)) & 0xFF];\n      } else if (c >= 0xD800 && c < 0xE000) {\n        c = (c & 1023) + 64;\n        d = str.charCodeAt(i++) & 1023;\n        C = C >>> 8 ^ T0[(C ^ (240 | c >> 8 & 7)) & 0xFF];\n        C = C >>> 8 ^ T0[(C ^ (128 | c >> 2 & 63)) & 0xFF];\n        C = C >>> 8 ^ T0[(C ^ (128 | d >> 6 & 15 | (c & 3) << 4)) & 0xFF];\n        C = C >>> 8 ^ T0[(C ^ (128 | d & 63)) & 0xFF];\n      } else {\n        C = C >>> 8 ^ T0[(C ^ (224 | c >> 12 & 15)) & 0xFF];\n        C = C >>> 8 ^ T0[(C ^ (128 | c >> 6 & 63)) & 0xFF];\n        C = C >>> 8 ^ T0[(C ^ (128 | c & 63)) & 0xFF];\n      }\n    }\n    return ~C;\n  }\n  CRC32.table = T0;\n  CRC32.bstr = crc32_bstr;\n  CRC32.buf = crc32_buf;\n  CRC32.str = crc32_str;\n  return CRC32;\n}();\n/* [MS-CFB] v20171201 */\nvar CFB = /*#__PURE__*/function _CFB() {\n  var exports /*:CFBModule*/ = /*::(*/{} /*:: :any)*/;\n  exports.version = '1.2.2';\n  /* [MS-CFB] 2.6.4 */\n  function namecmp(l /*:string*/, r /*:string*/) /*:number*/{\n    var L = l.split(\"/\"),\n      R = r.split(\"/\");\n    for (var i = 0, c = 0, Z = Math.min(L.length, R.length); i < Z; ++i) {\n      if (c = L[i].length - R[i].length) return c;\n      if (L[i] != R[i]) return L[i] < R[i] ? -1 : 1;\n    }\n    return L.length - R.length;\n  }\n  function dirname(p /*:string*/) /*:string*/{\n    if (p.charAt(p.length - 1) == \"/\") return p.slice(0, -1).indexOf(\"/\") === -1 ? p : dirname(p.slice(0, -1));\n    var c = p.lastIndexOf(\"/\");\n    return c === -1 ? p : p.slice(0, c + 1);\n  }\n  function filename(p /*:string*/) /*:string*/{\n    if (p.charAt(p.length - 1) == \"/\") return filename(p.slice(0, -1));\n    var c = p.lastIndexOf(\"/\");\n    return c === -1 ? p : p.slice(c + 1);\n  }\n  /* -------------------------------------------------------------------------- */\n  /* DOS Date format:\n     high|YYYYYYYm.mmmddddd.HHHHHMMM.MMMSSSSS|low\n     add 1980 to stored year\n     stored second should be doubled\n  */\n\n  /* write JS date to buf as a DOS date */\n  function write_dos_date(buf /*:CFBlob*/, date /*:Date|string*/) {\n    if (typeof date === \"string\") date = new Date(date);\n    var hms /*:number*/ = date.getHours();\n    hms = hms << 6 | date.getMinutes();\n    hms = hms << 5 | date.getSeconds() >>> 1;\n    buf.write_shift(2, hms);\n    var ymd /*:number*/ = date.getFullYear() - 1980;\n    ymd = ymd << 4 | date.getMonth() + 1;\n    ymd = ymd << 5 | date.getDate();\n    buf.write_shift(2, ymd);\n  }\n\n  /* read four bytes from buf and interpret as a DOS date */\n  function parse_dos_date(buf /*:CFBlob*/) /*:Date*/{\n    var hms = buf.read_shift(2) & 0xFFFF;\n    var ymd = buf.read_shift(2) & 0xFFFF;\n    var val = new Date();\n    var d = ymd & 0x1F;\n    ymd >>>= 5;\n    var m = ymd & 0x0F;\n    ymd >>>= 4;\n    val.setMilliseconds(0);\n    val.setFullYear(ymd + 1980);\n    val.setMonth(m - 1);\n    val.setDate(d);\n    var S = hms & 0x1F;\n    hms >>>= 5;\n    var M = hms & 0x3F;\n    hms >>>= 6;\n    val.setHours(hms);\n    val.setMinutes(M);\n    val.setSeconds(S << 1);\n    return val;\n  }\n  function parse_extra_field(blob /*:CFBlob*/) /*:any*/{\n    prep_blob(blob, 0);\n    var o = /*::(*/{} /*:: :any)*/;\n    var flags = 0;\n    while (blob.l <= blob.length - 4) {\n      var type = blob.read_shift(2);\n      var sz = blob.read_shift(2),\n        tgt = blob.l + sz;\n      var p = {};\n      switch (type) {\n        /* UNIX-style Timestamps */\n        case 0x5455:\n          {\n            flags = blob.read_shift(1);\n            if (flags & 1) p.mtime = blob.read_shift(4);\n            /* for some reason, CD flag corresponds to LFH */\n            if (sz > 5) {\n              if (flags & 2) p.atime = blob.read_shift(4);\n              if (flags & 4) p.ctime = blob.read_shift(4);\n            }\n            if (p.mtime) p.mt = new Date(p.mtime * 1000);\n          }\n          break;\n        /* ZIP64 Extended Information Field */\n        case 0x0001:\n          {\n            var sz1 = blob.read_shift(4),\n              sz2 = blob.read_shift(4);\n            p.usz = sz2 * Math.pow(2, 32) + sz1;\n            sz1 = blob.read_shift(4);\n            sz2 = blob.read_shift(4);\n            p.csz = sz2 * Math.pow(2, 32) + sz1;\n            // NOTE: volume fields are skipped\n          }\n          break;\n      }\n      blob.l = tgt;\n      o[type] = p;\n    }\n    return o;\n  }\n  var fs /*:: = require('fs'); */;\n  function get_fs() {\n    return fs || (fs = _fs);\n  }\n  function parse(file /*:RawBytes*/, options /*:CFBReadOpts*/) /*:CFBContainer*/{\n    if (file[0] == 0x50 && file[1] == 0x4b) return parse_zip(file, options);\n    if ((file[0] | 0x20) == 0x6d && (file[1] | 0x20) == 0x69) return parse_mad(file, options);\n    if (file.length < 512) throw new Error(\"CFB file size \" + file.length + \" < 512\");\n    var mver = 3;\n    var ssz = 512;\n    var nmfs = 0; // number of mini FAT sectors\n    var difat_sec_cnt = 0;\n    var dir_start = 0;\n    var minifat_start = 0;\n    var difat_start = 0;\n    var fat_addrs /*:Array<number>*/ = []; // locations of FAT sectors\n\n    /* [MS-CFB] 2.2 Compound File Header */\n    var blob /*:CFBlob*/ = /*::(*/file.slice(0, 512) /*:: :any)*/;\n    prep_blob(blob, 0);\n\n    /* major version */\n    var mv = check_get_mver(blob);\n    mver = mv[0];\n    switch (mver) {\n      case 3:\n        ssz = 512;\n        break;\n      case 4:\n        ssz = 4096;\n        break;\n      case 0:\n        if (mv[1] == 0) return parse_zip(file, options);\n      /* falls through */\n      default:\n        throw new Error(\"Major Version: Expected 3 or 4 saw \" + mver);\n    }\n\n    /* reprocess header */\n    if (ssz !== 512) {\n      blob = /*::(*/file.slice(0, ssz) /*:: :any)*/;\n      prep_blob(blob, 28 /* blob.l */);\n    }\n    /* Save header for final object */\n    var header /*:RawBytes*/ = file.slice(0, ssz);\n    check_shifts(blob, mver);\n\n    // Number of Directory Sectors\n    var dir_cnt /*:number*/ = blob.read_shift(4, 'i');\n    if (mver === 3 && dir_cnt !== 0) throw new Error('# Directory Sectors: Expected 0 saw ' + dir_cnt);\n\n    // Number of FAT Sectors\n    blob.l += 4;\n\n    // First Directory Sector Location\n    dir_start = blob.read_shift(4, 'i');\n\n    // Transaction Signature\n    blob.l += 4;\n\n    // Mini Stream Cutoff Size\n    blob.chk('00100000', 'Mini Stream Cutoff Size: ');\n\n    // First Mini FAT Sector Location\n    minifat_start = blob.read_shift(4, 'i');\n\n    // Number of Mini FAT Sectors\n    nmfs = blob.read_shift(4, 'i');\n\n    // First DIFAT sector location\n    difat_start = blob.read_shift(4, 'i');\n\n    // Number of DIFAT Sectors\n    difat_sec_cnt = blob.read_shift(4, 'i');\n\n    // Grab FAT Sector Locations\n    for (var q = -1, j = 0; j < 109; ++j) {\n      /* 109 = (512 - blob.l)>>>2; */\n      q = blob.read_shift(4, 'i');\n      if (q < 0) break;\n      fat_addrs[j] = q;\n    }\n\n    /** Break the file up into sectors */\n    var sectors /*:Array<RawBytes>*/ = sectorify(file, ssz);\n    sleuth_fat(difat_start, difat_sec_cnt, sectors, ssz, fat_addrs);\n\n    /** Chains */\n    var sector_list /*:SectorList*/ = make_sector_list(sectors, dir_start, fat_addrs, ssz);\n    if (dir_start < sector_list.length) sector_list[dir_start].name = \"!Directory\";\n    if (nmfs > 0 && minifat_start !== ENDOFCHAIN) sector_list[minifat_start].name = \"!MiniFAT\";\n    sector_list[fat_addrs[0]].name = \"!FAT\";\n    sector_list.fat_addrs = fat_addrs;\n    sector_list.ssz = ssz;\n\n    /* [MS-CFB] 2.6.1 Compound File Directory Entry */\n    var files /*:CFBFiles*/ = {},\n      Paths /*:Array<string>*/ = [],\n      FileIndex /*:CFBFileIndex*/ = [],\n      FullPaths /*:Array<string>*/ = [];\n    read_directory(dir_start, sector_list, sectors, Paths, nmfs, files, FileIndex, minifat_start);\n    build_full_paths(FileIndex, FullPaths, Paths);\n    Paths.shift();\n    var o = {\n      FileIndex: FileIndex,\n      FullPaths: FullPaths\n    };\n\n    // $FlowIgnore\n    if (options && options.raw) o.raw = {\n      header: header,\n      sectors: sectors\n    };\n    return o;\n  } // parse\n\n  /* [MS-CFB] 2.2 Compound File Header -- read up to major version */\n  function check_get_mver(blob /*:CFBlob*/) /*:[number, number]*/{\n    if (blob[blob.l] == 0x50 && blob[blob.l + 1] == 0x4b) return [0, 0];\n    // header signature 8\n    blob.chk(HEADER_SIGNATURE, 'Header Signature: ');\n\n    // clsid 16\n    //blob.chk(HEADER_CLSID, 'CLSID: ');\n    blob.l += 16;\n\n    // minor version 2\n    var mver /*:number*/ = blob.read_shift(2, 'u');\n    return [blob.read_shift(2, 'u'), mver];\n  }\n  function check_shifts(blob /*:CFBlob*/, mver /*:number*/) /*:void*/{\n    var shift = 0x09;\n\n    // Byte Order\n    //blob.chk('feff', 'Byte Order: '); // note: some writers put 0xffff\n    blob.l += 2;\n\n    // Sector Shift\n    switch (shift = blob.read_shift(2)) {\n      case 0x09:\n        if (mver != 3) throw new Error('Sector Shift: Expected 9 saw ' + shift);\n        break;\n      case 0x0c:\n        if (mver != 4) throw new Error('Sector Shift: Expected 12 saw ' + shift);\n        break;\n      default:\n        throw new Error('Sector Shift: Expected 9 or 12 saw ' + shift);\n    }\n\n    // Mini Sector Shift\n    blob.chk('0600', 'Mini Sector Shift: ');\n\n    // Reserved\n    blob.chk('000000000000', 'Reserved: ');\n  }\n\n  /** Break the file up into sectors */\n  function sectorify(file /*:RawBytes*/, ssz /*:number*/) /*:Array<RawBytes>*/{\n    var nsectors = Math.ceil(file.length / ssz) - 1;\n    var sectors /*:Array<RawBytes>*/ = [];\n    for (var i = 1; i < nsectors; ++i) sectors[i - 1] = file.slice(i * ssz, (i + 1) * ssz);\n    sectors[nsectors - 1] = file.slice(nsectors * ssz);\n    return sectors;\n  }\n\n  /* [MS-CFB] 2.6.4 Red-Black Tree */\n  function build_full_paths(FI /*:CFBFileIndex*/, FP /*:Array<string>*/, Paths /*:Array<string>*/) /*:void*/{\n    var i = 0,\n      L = 0,\n      R = 0,\n      C = 0,\n      j = 0,\n      pl = Paths.length;\n    var dad /*:Array<number>*/ = [],\n      q /*:Array<number>*/ = [];\n    for (; i < pl; ++i) {\n      dad[i] = q[i] = i;\n      FP[i] = Paths[i];\n    }\n    for (; j < q.length; ++j) {\n      i = q[j];\n      L = FI[i].L;\n      R = FI[i].R;\n      C = FI[i].C;\n      if (dad[i] === i) {\n        if (L !== -1 /*NOSTREAM*/ && dad[L] !== L) dad[i] = dad[L];\n        if (R !== -1 && dad[R] !== R) dad[i] = dad[R];\n      }\n      if (C !== -1 /*NOSTREAM*/) dad[C] = i;\n      if (L !== -1 && i != dad[i]) {\n        dad[L] = dad[i];\n        if (q.lastIndexOf(L) < j) q.push(L);\n      }\n      if (R !== -1 && i != dad[i]) {\n        dad[R] = dad[i];\n        if (q.lastIndexOf(R) < j) q.push(R);\n      }\n    }\n    for (i = 1; i < pl; ++i) if (dad[i] === i) {\n      if (R !== -1 /*NOSTREAM*/ && dad[R] !== R) dad[i] = dad[R];else if (L !== -1 && dad[L] !== L) dad[i] = dad[L];\n    }\n    for (i = 1; i < pl; ++i) {\n      if (FI[i].type === 0 /* unknown */) continue;\n      j = i;\n      if (j != dad[j]) do {\n        j = dad[j];\n        FP[i] = FP[j] + \"/\" + FP[i];\n      } while (j !== 0 && -1 !== dad[j] && j != dad[j]);\n      dad[i] = -1;\n    }\n    FP[0] += \"/\";\n    for (i = 1; i < pl; ++i) {\n      if (FI[i].type !== 2 /* stream */) FP[i] += \"/\";\n    }\n  }\n  function get_mfat_entry(entry /*:CFBEntry*/, payload /*:RawBytes*/, mini /*:?RawBytes*/) /*:CFBlob*/{\n    var start = entry.start,\n      size = entry.size;\n    //return (payload.slice(start*MSSZ, start*MSSZ + size)/*:any*/);\n    var o = [];\n    var idx = start;\n    while (mini && size > 0 && idx >= 0) {\n      o.push(payload.slice(idx * MSSZ, idx * MSSZ + MSSZ));\n      size -= MSSZ;\n      idx = __readInt32LE(mini, idx * 4);\n    }\n    if (o.length === 0) return new_buf(0) /*:any*/;\n    return bconcat(o).slice(0, entry.size) /*:any*/;\n  }\n\n  /** Chase down the rest of the DIFAT chain to build a comprehensive list\n      DIFAT chains by storing the next sector number as the last 32 bits */\n  function sleuth_fat(idx /*:number*/, cnt /*:number*/, sectors /*:Array<RawBytes>*/, ssz /*:number*/, fat_addrs) /*:void*/{\n    var q /*:number*/ = ENDOFCHAIN;\n    if (idx === ENDOFCHAIN) {\n      if (cnt !== 0) throw new Error(\"DIFAT chain shorter than expected\");\n    } else if (idx !== -1 /*FREESECT*/) {\n      var sector = sectors[idx],\n        m = (ssz >>> 2) - 1;\n      if (!sector) return;\n      for (var i = 0; i < m; ++i) {\n        if ((q = __readInt32LE(sector, i * 4)) === ENDOFCHAIN) break;\n        fat_addrs.push(q);\n      }\n      if (cnt >= 1) sleuth_fat(__readInt32LE(sector, ssz - 4), cnt - 1, sectors, ssz, fat_addrs);\n    }\n  }\n\n  /** Follow the linked list of sectors for a given starting point */\n  function get_sector_list(sectors /*:Array<RawBytes>*/, start /*:number*/, fat_addrs /*:Array<number>*/, ssz /*:number*/, chkd /*:?Array<boolean>*/) /*:SectorEntry*/{\n    var buf /*:Array<number>*/ = [],\n      buf_chain /*:Array<any>*/ = [];\n    if (!chkd) chkd = [];\n    var modulus = ssz - 1,\n      j = 0,\n      jj = 0;\n    for (j = start; j >= 0;) {\n      chkd[j] = true;\n      buf[buf.length] = j;\n      buf_chain.push(sectors[j]);\n      var addr = fat_addrs[Math.floor(j * 4 / ssz)];\n      jj = j * 4 & modulus;\n      if (ssz < 4 + jj) throw new Error(\"FAT boundary crossed: \" + j + \" 4 \" + ssz);\n      if (!sectors[addr]) break;\n      j = __readInt32LE(sectors[addr], jj);\n    }\n    return {\n      nodes: buf,\n      data: __toBuffer([buf_chain])\n    };\n  }\n\n  /** Chase down the sector linked lists */\n  function make_sector_list(sectors /*:Array<RawBytes>*/, dir_start /*:number*/, fat_addrs /*:Array<number>*/, ssz /*:number*/) /*:SectorList*/{\n    var sl = sectors.length,\n      sector_list /*:SectorList*/ = [] /*:any*/;\n    var chkd /*:Array<boolean>*/ = [],\n      buf /*:Array<number>*/ = [],\n      buf_chain /*:Array<RawBytes>*/ = [];\n    var modulus = ssz - 1,\n      i = 0,\n      j = 0,\n      k = 0,\n      jj = 0;\n    for (i = 0; i < sl; ++i) {\n      buf = [] /*:Array<number>*/;\n      k = i + dir_start;\n      if (k >= sl) k -= sl;\n      if (chkd[k]) continue;\n      buf_chain = [];\n      var seen = [];\n      for (j = k; j >= 0;) {\n        seen[j] = true;\n        chkd[j] = true;\n        buf[buf.length] = j;\n        buf_chain.push(sectors[j]);\n        var addr /*:number*/ = fat_addrs[Math.floor(j * 4 / ssz)];\n        jj = j * 4 & modulus;\n        if (ssz < 4 + jj) throw new Error(\"FAT boundary crossed: \" + j + \" 4 \" + ssz);\n        if (!sectors[addr]) break;\n        j = __readInt32LE(sectors[addr], jj);\n        if (seen[j]) break;\n      }\n      sector_list[k] = {\n        nodes: buf,\n        data: __toBuffer([buf_chain])\n      } /*:SectorEntry*/;\n    }\n\n    return sector_list;\n  }\n\n  /* [MS-CFB] 2.6.1 Compound File Directory Entry */\n  function read_directory(dir_start /*:number*/, sector_list /*:SectorList*/, sectors /*:Array<RawBytes>*/, Paths /*:Array<string>*/, nmfs, files, FileIndex, mini) {\n    var minifat_store = 0,\n      pl = Paths.length ? 2 : 0;\n    var sector = sector_list[dir_start].data;\n    var i = 0,\n      namelen = 0,\n      name;\n    for (; i < sector.length; i += 128) {\n      var blob /*:CFBlob*/ = /*::(*/sector.slice(i, i + 128) /*:: :any)*/;\n      prep_blob(blob, 64);\n      namelen = blob.read_shift(2);\n      name = __utf16le(blob, 0, namelen - pl);\n      Paths.push(name);\n      var o /*:CFBEntry*/ = {\n        name: name,\n        type: blob.read_shift(1),\n        color: blob.read_shift(1),\n        L: blob.read_shift(4, 'i'),\n        R: blob.read_shift(4, 'i'),\n        C: blob.read_shift(4, 'i'),\n        clsid: blob.read_shift(16),\n        state: blob.read_shift(4, 'i'),\n        start: 0,\n        size: 0\n      };\n      var ctime /*:number*/ = blob.read_shift(2) + blob.read_shift(2) + blob.read_shift(2) + blob.read_shift(2);\n      if (ctime !== 0) o.ct = read_date(blob, blob.l - 8);\n      var mtime /*:number*/ = blob.read_shift(2) + blob.read_shift(2) + blob.read_shift(2) + blob.read_shift(2);\n      if (mtime !== 0) o.mt = read_date(blob, blob.l - 8);\n      o.start = blob.read_shift(4, 'i');\n      o.size = blob.read_shift(4, 'i');\n      if (o.size < 0 && o.start < 0) {\n        o.size = o.type = 0;\n        o.start = ENDOFCHAIN;\n        o.name = \"\";\n      }\n      if (o.type === 5) {\n        /* root */\n        minifat_store = o.start;\n        if (nmfs > 0 && minifat_store !== ENDOFCHAIN) sector_list[minifat_store].name = \"!StreamData\";\n        /*minifat_size = o.size;*/\n      } else if (o.size >= 4096 /* MSCSZ */) {\n        o.storage = 'fat';\n        if (sector_list[o.start] === undefined) sector_list[o.start] = get_sector_list(sectors, o.start, sector_list.fat_addrs, sector_list.ssz);\n        sector_list[o.start].name = o.name;\n        o.content = sector_list[o.start].data.slice(0, o.size) /*:any*/;\n      } else {\n        o.storage = 'minifat';\n        if (o.size < 0) o.size = 0;else if (minifat_store !== ENDOFCHAIN && o.start !== ENDOFCHAIN && sector_list[minifat_store]) {\n          o.content = get_mfat_entry(o, sector_list[minifat_store].data, (sector_list[mini] || {}).data);\n        }\n      }\n      if (o.content) prep_blob(o.content, 0);\n      files[name] = o;\n      FileIndex.push(o);\n    }\n  }\n  function read_date(blob /*:RawBytes|CFBlob*/, offset /*:number*/) /*:Date*/{\n    return new Date((__readUInt32LE(blob, offset + 4) / 1e7 * Math.pow(2, 32) + __readUInt32LE(blob, offset) / 1e7 - 11644473600) * 1000);\n  }\n  function read_file(filename /*:string*/, options /*:CFBReadOpts*/) {\n    get_fs();\n    return parse(fs.readFileSync(filename), options);\n  }\n  function read(blob /*:RawBytes|string*/, options /*:CFBReadOpts*/) {\n    var type = options && options.type;\n    if (!type) {\n      if (has_buf && Buffer.isBuffer(blob)) type = \"buffer\";\n    }\n    switch (type || \"base64\") {\n      case \"file\":\n        /*:: if(typeof blob !== 'string') throw \"Must pass a filename when type='file'\"; */return read_file(blob, options);\n      case \"base64\":\n        /*:: if(typeof blob !== 'string') throw \"Must pass a base64-encoded binary string when type='file'\"; */return parse(s2a(Base64_decode(blob)), options);\n      case \"binary\":\n        /*:: if(typeof blob !== 'string') throw \"Must pass a binary string when type='file'\"; */return parse(s2a(blob), options);\n    }\n    return parse( /*::typeof blob == 'string' ? new Buffer(blob, 'utf-8') : */blob, options);\n  }\n  function init_cfb(cfb /*:CFBContainer*/, opts /*:?any*/) /*:void*/{\n    var o = opts || {},\n      root = o.root || \"Root Entry\";\n    if (!cfb.FullPaths) cfb.FullPaths = [];\n    if (!cfb.FileIndex) cfb.FileIndex = [];\n    if (cfb.FullPaths.length !== cfb.FileIndex.length) throw new Error(\"inconsistent CFB structure\");\n    if (cfb.FullPaths.length === 0) {\n      cfb.FullPaths[0] = root + \"/\";\n      cfb.FileIndex[0] = {\n        name: root,\n        type: 5\n      } /*:any*/;\n    }\n\n    if (o.CLSID) cfb.FileIndex[0].clsid = o.CLSID;\n    seed_cfb(cfb);\n  }\n  function seed_cfb(cfb /*:CFBContainer*/) /*:void*/{\n    var nm = \"\\u0001Sh33tJ5\";\n    if (CFB.find(cfb, \"/\" + nm)) return;\n    var p = new_buf(4);\n    p[0] = 55;\n    p[1] = p[3] = 50;\n    p[2] = 54;\n    cfb.FileIndex.push({\n      name: nm,\n      type: 2,\n      content: p,\n      size: 4,\n      L: 69,\n      R: 69,\n      C: 69\n    } /*:any*/);\n    cfb.FullPaths.push(cfb.FullPaths[0] + nm);\n    rebuild_cfb(cfb);\n  }\n  function rebuild_cfb(cfb /*:CFBContainer*/, f /*:?boolean*/) /*:void*/{\n    init_cfb(cfb);\n    var gc = false,\n      s = false;\n    for (var i = cfb.FullPaths.length - 1; i >= 0; --i) {\n      var _file = cfb.FileIndex[i];\n      switch (_file.type) {\n        case 0:\n          if (s) gc = true;else {\n            cfb.FileIndex.pop();\n            cfb.FullPaths.pop();\n          }\n          break;\n        case 1:\n        case 2:\n        case 5:\n          s = true;\n          if (isNaN(_file.R * _file.L * _file.C)) gc = true;\n          if (_file.R > -1 && _file.L > -1 && _file.R == _file.L) gc = true;\n          break;\n        default:\n          gc = true;\n          break;\n      }\n    }\n    if (!gc && !f) return;\n    var now = new Date(1987, 1, 19),\n      j = 0;\n    // Track which names exist\n    var fullPaths = Object.create ? Object.create(null) : {};\n    var data /*:Array<[string, CFBEntry]>*/ = [];\n    for (i = 0; i < cfb.FullPaths.length; ++i) {\n      fullPaths[cfb.FullPaths[i]] = true;\n      if (cfb.FileIndex[i].type === 0) continue;\n      data.push([cfb.FullPaths[i], cfb.FileIndex[i]]);\n    }\n    for (i = 0; i < data.length; ++i) {\n      var dad = dirname(data[i][0]);\n      s = fullPaths[dad];\n      while (!s) {\n        while (dirname(dad) && !fullPaths[dirname(dad)]) dad = dirname(dad);\n        data.push([dad, {\n          name: filename(dad).replace(\"/\", \"\"),\n          type: 1,\n          clsid: HEADER_CLSID,\n          ct: now,\n          mt: now,\n          content: null\n        } /*:any*/]);\n\n        // Add name to set\n        fullPaths[dad] = true;\n        dad = dirname(data[i][0]);\n        s = fullPaths[dad];\n      }\n    }\n    data.sort(function (x, y) {\n      return namecmp(x[0], y[0]);\n    });\n    cfb.FullPaths = [];\n    cfb.FileIndex = [];\n    for (i = 0; i < data.length; ++i) {\n      cfb.FullPaths[i] = data[i][0];\n      cfb.FileIndex[i] = data[i][1];\n    }\n    for (i = 0; i < data.length; ++i) {\n      var elt = cfb.FileIndex[i];\n      var nm = cfb.FullPaths[i];\n      elt.name = filename(nm).replace(\"/\", \"\");\n      elt.L = elt.R = elt.C = -(elt.color = 1);\n      elt.size = elt.content ? elt.content.length : 0;\n      elt.start = 0;\n      elt.clsid = elt.clsid || HEADER_CLSID;\n      if (i === 0) {\n        elt.C = data.length > 1 ? 1 : -1;\n        elt.size = 0;\n        elt.type = 5;\n      } else if (nm.slice(-1) == \"/\") {\n        for (j = i + 1; j < data.length; ++j) if (dirname(cfb.FullPaths[j]) == nm) break;\n        elt.C = j >= data.length ? -1 : j;\n        for (j = i + 1; j < data.length; ++j) if (dirname(cfb.FullPaths[j]) == dirname(nm)) break;\n        elt.R = j >= data.length ? -1 : j;\n        elt.type = 1;\n      } else {\n        if (dirname(cfb.FullPaths[i + 1] || \"\") == dirname(nm)) elt.R = i + 1;\n        elt.type = 2;\n      }\n    }\n  }\n  function _write(cfb /*:CFBContainer*/, options /*:CFBWriteOpts*/) /*:RawBytes|string*/{\n    var _opts = options || {};\n    /* MAD is order-sensitive, skip rebuild and sort */\n    if (_opts.fileType == 'mad') return write_mad(cfb, _opts);\n    rebuild_cfb(cfb);\n    switch (_opts.fileType) {\n      case 'zip':\n        return write_zip(cfb, _opts);\n      //case 'mad': return write_mad(cfb, _opts);\n    }\n\n    var L = function (cfb /*:CFBContainer*/) /*:Array<number>*/{\n      var mini_size = 0,\n        fat_size = 0;\n      for (var i = 0; i < cfb.FileIndex.length; ++i) {\n        var file = cfb.FileIndex[i];\n        if (!file.content) continue;\n        var flen = file.content.length;\n        if (flen > 0) {\n          if (flen < 0x1000) mini_size += flen + 0x3F >> 6;else fat_size += flen + 0x01FF >> 9;\n        }\n      }\n      var dir_cnt = cfb.FullPaths.length + 3 >> 2;\n      var mini_cnt = mini_size + 7 >> 3;\n      var mfat_cnt = mini_size + 0x7F >> 7;\n      var fat_base = mini_cnt + fat_size + dir_cnt + mfat_cnt;\n      var fat_cnt = fat_base + 0x7F >> 7;\n      var difat_cnt = fat_cnt <= 109 ? 0 : Math.ceil((fat_cnt - 109) / 0x7F);\n      while (fat_base + fat_cnt + difat_cnt + 0x7F >> 7 > fat_cnt) difat_cnt = ++fat_cnt <= 109 ? 0 : Math.ceil((fat_cnt - 109) / 0x7F);\n      var L = [1, difat_cnt, fat_cnt, mfat_cnt, dir_cnt, fat_size, mini_size, 0];\n      cfb.FileIndex[0].size = mini_size << 6;\n      L[7] = (cfb.FileIndex[0].start = L[0] + L[1] + L[2] + L[3] + L[4] + L[5]) + (L[6] + 7 >> 3);\n      return L;\n    }(cfb);\n    var o = new_buf(L[7] << 9);\n    var i = 0,\n      T = 0;\n    {\n      for (i = 0; i < 8; ++i) o.write_shift(1, HEADER_SIG[i]);\n      for (i = 0; i < 8; ++i) o.write_shift(2, 0);\n      o.write_shift(2, 0x003E);\n      o.write_shift(2, 0x0003);\n      o.write_shift(2, 0xFFFE);\n      o.write_shift(2, 0x0009);\n      o.write_shift(2, 0x0006);\n      for (i = 0; i < 3; ++i) o.write_shift(2, 0);\n      o.write_shift(4, 0);\n      o.write_shift(4, L[2]);\n      o.write_shift(4, L[0] + L[1] + L[2] + L[3] - 1);\n      o.write_shift(4, 0);\n      o.write_shift(4, 1 << 12);\n      o.write_shift(4, L[3] ? L[0] + L[1] + L[2] - 1 : ENDOFCHAIN);\n      o.write_shift(4, L[3]);\n      o.write_shift(-4, L[1] ? L[0] - 1 : ENDOFCHAIN);\n      o.write_shift(4, L[1]);\n      for (i = 0; i < 109; ++i) o.write_shift(-4, i < L[2] ? L[1] + i : -1);\n    }\n    if (L[1]) {\n      for (T = 0; T < L[1]; ++T) {\n        for (; i < 236 + T * 127; ++i) o.write_shift(-4, i < L[2] ? L[1] + i : -1);\n        o.write_shift(-4, T === L[1] - 1 ? ENDOFCHAIN : T + 1);\n      }\n    }\n    var chainit = function (w /*:number*/) /*:void*/{\n      for (T += w; i < T - 1; ++i) o.write_shift(-4, i + 1);\n      if (w) {\n        ++i;\n        o.write_shift(-4, ENDOFCHAIN);\n      }\n    };\n    T = i = 0;\n    for (T += L[1]; i < T; ++i) o.write_shift(-4, consts.DIFSECT);\n    for (T += L[2]; i < T; ++i) o.write_shift(-4, consts.FATSECT);\n    chainit(L[3]);\n    chainit(L[4]);\n    var j /*:number*/ = 0,\n      flen /*:number*/ = 0;\n    var file /*:CFBEntry*/ = cfb.FileIndex[0];\n    for (; j < cfb.FileIndex.length; ++j) {\n      file = cfb.FileIndex[j];\n      if (!file.content) continue;\n      /*:: if(file.content == null) throw new Error(\"unreachable\"); */\n      flen = file.content.length;\n      if (flen < 0x1000) continue;\n      file.start = T;\n      chainit(flen + 0x01FF >> 9);\n    }\n    chainit(L[6] + 7 >> 3);\n    while (o.l & 0x1FF) o.write_shift(-4, consts.ENDOFCHAIN);\n    T = i = 0;\n    for (j = 0; j < cfb.FileIndex.length; ++j) {\n      file = cfb.FileIndex[j];\n      if (!file.content) continue;\n      /*:: if(file.content == null) throw new Error(\"unreachable\"); */\n      flen = file.content.length;\n      if (!flen || flen >= 0x1000) continue;\n      file.start = T;\n      chainit(flen + 0x3F >> 6);\n    }\n    while (o.l & 0x1FF) o.write_shift(-4, consts.ENDOFCHAIN);\n    for (i = 0; i < L[4] << 2; ++i) {\n      var nm = cfb.FullPaths[i];\n      if (!nm || nm.length === 0) {\n        for (j = 0; j < 17; ++j) o.write_shift(4, 0);\n        for (j = 0; j < 3; ++j) o.write_shift(4, -1);\n        for (j = 0; j < 12; ++j) o.write_shift(4, 0);\n        continue;\n      }\n      file = cfb.FileIndex[i];\n      if (i === 0) file.start = file.size ? file.start - 1 : ENDOFCHAIN;\n      var _nm /*:string*/ = i === 0 && _opts.root || file.name;\n      if (_nm.length > 32) {\n        console.error(\"Name \" + _nm + \" will be truncated to \" + _nm.slice(0, 32));\n        _nm = _nm.slice(0, 32);\n      }\n      flen = 2 * (_nm.length + 1);\n      o.write_shift(64, _nm, \"utf16le\");\n      o.write_shift(2, flen);\n      o.write_shift(1, file.type);\n      o.write_shift(1, file.color);\n      o.write_shift(-4, file.L);\n      o.write_shift(-4, file.R);\n      o.write_shift(-4, file.C);\n      if (!file.clsid) for (j = 0; j < 4; ++j) o.write_shift(4, 0);else o.write_shift(16, file.clsid, \"hex\");\n      o.write_shift(4, file.state || 0);\n      o.write_shift(4, 0);\n      o.write_shift(4, 0);\n      o.write_shift(4, 0);\n      o.write_shift(4, 0);\n      o.write_shift(4, file.start);\n      o.write_shift(4, file.size);\n      o.write_shift(4, 0);\n    }\n    for (i = 1; i < cfb.FileIndex.length; ++i) {\n      file = cfb.FileIndex[i];\n      /*:: if(!file.content) throw new Error(\"unreachable\"); */\n      if (file.size >= 0x1000) {\n        o.l = file.start + 1 << 9;\n        if (has_buf && Buffer.isBuffer(file.content)) {\n          file.content.copy(o, o.l, 0, file.size);\n          // o is a 0-filled Buffer so just set next offset\n          o.l += file.size + 511 & -512;\n        } else {\n          for (j = 0; j < file.size; ++j) o.write_shift(1, file.content[j]);\n          for (; j & 0x1FF; ++j) o.write_shift(1, 0);\n        }\n      }\n    }\n    for (i = 1; i < cfb.FileIndex.length; ++i) {\n      file = cfb.FileIndex[i];\n      /*:: if(!file.content) throw new Error(\"unreachable\"); */\n      if (file.size > 0 && file.size < 0x1000) {\n        if (has_buf && Buffer.isBuffer(file.content)) {\n          file.content.copy(o, o.l, 0, file.size);\n          // o is a 0-filled Buffer so just set next offset\n          o.l += file.size + 63 & -64;\n        } else {\n          for (j = 0; j < file.size; ++j) o.write_shift(1, file.content[j]);\n          for (; j & 0x3F; ++j) o.write_shift(1, 0);\n        }\n      }\n    }\n    if (has_buf) {\n      o.l = o.length;\n    } else {\n      // When using Buffer, already 0-filled\n      while (o.l < o.length) o.write_shift(1, 0);\n    }\n    return o;\n  }\n  /* [MS-CFB] 2.6.4 (Unicode 3.0.1 case conversion) */\n  function find(cfb /*:CFBContainer*/, path /*:string*/) /*:?CFBEntry*/{\n    var UCFullPaths /*:Array<string>*/ = cfb.FullPaths.map(function (x) {\n      return x.toUpperCase();\n    });\n    var UCPaths /*:Array<string>*/ = UCFullPaths.map(function (x) {\n      var y = x.split(\"/\");\n      return y[y.length - (x.slice(-1) == \"/\" ? 2 : 1)];\n    });\n    var k /*:boolean*/ = false;\n    if (path.charCodeAt(0) === 47 /* \"/\" */) {\n      k = true;\n      path = UCFullPaths[0].slice(0, -1) + path;\n    } else k = path.indexOf(\"/\") !== -1;\n    var UCPath /*:string*/ = path.toUpperCase();\n    var w /*:number*/ = k === true ? UCFullPaths.indexOf(UCPath) : UCPaths.indexOf(UCPath);\n    if (w !== -1) return cfb.FileIndex[w];\n    var m = !UCPath.match(chr1);\n    UCPath = UCPath.replace(chr0, '');\n    if (m) UCPath = UCPath.replace(chr1, '!');\n    for (w = 0; w < UCFullPaths.length; ++w) {\n      if ((m ? UCFullPaths[w].replace(chr1, '!') : UCFullPaths[w]).replace(chr0, '') == UCPath) return cfb.FileIndex[w];\n      if ((m ? UCPaths[w].replace(chr1, '!') : UCPaths[w]).replace(chr0, '') == UCPath) return cfb.FileIndex[w];\n    }\n    return null;\n  }\n  /** CFB Constants */\n  var MSSZ = 64; /* Mini Sector Size = 1<<6 */\n  //var MSCSZ = 4096; /* Mini Stream Cutoff Size */\n  /* 2.1 Compound File Sector Numbers and Types */\n  var ENDOFCHAIN = -2;\n  /* 2.2 Compound File Header */\n  var HEADER_SIGNATURE = 'd0cf11e0a1b11ae1';\n  var HEADER_SIG = [0xD0, 0xCF, 0x11, 0xE0, 0xA1, 0xB1, 0x1A, 0xE1];\n  var HEADER_CLSID = '00000000000000000000000000000000';\n  var consts = {\n    /* 2.1 Compund File Sector Numbers and Types */\n    MAXREGSECT: -6,\n    DIFSECT: -4,\n    FATSECT: -3,\n    ENDOFCHAIN: ENDOFCHAIN,\n    FREESECT: -1,\n    /* 2.2 Compound File Header */\n    HEADER_SIGNATURE: HEADER_SIGNATURE,\n    HEADER_MINOR_VERSION: '3e00',\n    MAXREGSID: -6,\n    NOSTREAM: -1,\n    HEADER_CLSID: HEADER_CLSID,\n    /* 2.6.1 Compound File Directory Entry */\n    EntryTypes: ['unknown', 'storage', 'stream', 'lockbytes', 'property', 'root']\n  };\n  function write_file(cfb /*:CFBContainer*/, filename /*:string*/, options /*:CFBWriteOpts*/) /*:void*/{\n    get_fs();\n    var o = _write(cfb, options);\n    /*:: if(typeof Buffer == 'undefined' || !Buffer.isBuffer(o) || !(o instanceof Buffer)) throw new Error(\"unreachable\"); */\n    fs.writeFileSync(filename, o);\n  }\n  function a2s(o /*:RawBytes*/) /*:string*/{\n    var out = new Array(o.length);\n    for (var i = 0; i < o.length; ++i) out[i] = String.fromCharCode(o[i]);\n    return out.join(\"\");\n  }\n  function write(cfb /*:CFBContainer*/, options /*:CFBWriteOpts*/) /*:RawBytes|string*/{\n    var o = _write(cfb, options);\n    switch (options && options.type || \"buffer\") {\n      case \"file\":\n        get_fs();\n        fs.writeFileSync(options.filename, o /*:any*/);\n        return o;\n      case \"binary\":\n        return typeof o == \"string\" ? o : a2s(o);\n      case \"base64\":\n        return Base64_encode(typeof o == \"string\" ? o : a2s(o));\n      case \"buffer\":\n        if (has_buf) return Buffer.isBuffer(o) ? o : Buffer_from(o);\n      /* falls through */\n      case \"array\":\n        return typeof o == \"string\" ? s2a(o) : o;\n    }\n    return o;\n  }\n  /* node < 8.1 zlib does not expose bytesRead, so default to pure JS */\n  var _zlib;\n  function use_zlib(zlib) {\n    try {\n      var InflateRaw = zlib.InflateRaw;\n      var InflRaw = new InflateRaw();\n      InflRaw._processChunk(new Uint8Array([3, 0]), InflRaw._finishFlushFlag);\n      if (InflRaw.bytesRead) _zlib = zlib;else throw new Error(\"zlib does not expose bytesRead\");\n    } catch (e) {\n      console.error(\"cannot use native zlib: \" + (e.message || e));\n    }\n  }\n  function _inflateRawSync(payload, usz) {\n    if (!_zlib) return _inflate(payload, usz);\n    var InflateRaw = _zlib.InflateRaw;\n    var InflRaw = new InflateRaw();\n    var out = InflRaw._processChunk(payload.slice(payload.l), InflRaw._finishFlushFlag);\n    payload.l += InflRaw.bytesRead;\n    return out;\n  }\n  function _deflateRawSync(payload) {\n    return _zlib ? _zlib.deflateRawSync(payload) : _deflate(payload);\n  }\n  var CLEN_ORDER = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];\n\n  /*  LEN_ID = [ 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285 ]; */\n  var LEN_LN = [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258];\n\n  /*  DST_ID = [  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13,  14,  15,  16,  17,  18,  19,   20,   21,   22,   23,   24,   25,   26,    27,    28,    29 ]; */\n  var DST_LN = [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577];\n  function bit_swap_8(n) {\n    var t = (n << 1 | n << 11) & 0x22110 | (n << 5 | n << 15) & 0x88440;\n    return (t >> 16 | t >> 8 | t) & 0xFF;\n  }\n  var use_typed_arrays = typeof Uint8Array !== 'undefined';\n  var bitswap8 = use_typed_arrays ? new Uint8Array(1 << 8) : [];\n  for (var q = 0; q < 1 << 8; ++q) bitswap8[q] = bit_swap_8(q);\n  function bit_swap_n(n, b) {\n    var rev = bitswap8[n & 0xFF];\n    if (b <= 8) return rev >>> 8 - b;\n    rev = rev << 8 | bitswap8[n >> 8 & 0xFF];\n    if (b <= 16) return rev >>> 16 - b;\n    rev = rev << 8 | bitswap8[n >> 16 & 0xFF];\n    return rev >>> 24 - b;\n  }\n\n  /* helpers for unaligned bit reads */\n  function read_bits_2(buf, bl) {\n    var w = bl & 7,\n      h = bl >>> 3;\n    return (buf[h] | (w <= 6 ? 0 : buf[h + 1] << 8)) >>> w & 0x03;\n  }\n  function read_bits_3(buf, bl) {\n    var w = bl & 7,\n      h = bl >>> 3;\n    return (buf[h] | (w <= 5 ? 0 : buf[h + 1] << 8)) >>> w & 0x07;\n  }\n  function read_bits_4(buf, bl) {\n    var w = bl & 7,\n      h = bl >>> 3;\n    return (buf[h] | (w <= 4 ? 0 : buf[h + 1] << 8)) >>> w & 0x0F;\n  }\n  function read_bits_5(buf, bl) {\n    var w = bl & 7,\n      h = bl >>> 3;\n    return (buf[h] | (w <= 3 ? 0 : buf[h + 1] << 8)) >>> w & 0x1F;\n  }\n  function read_bits_7(buf, bl) {\n    var w = bl & 7,\n      h = bl >>> 3;\n    return (buf[h] | (w <= 1 ? 0 : buf[h + 1] << 8)) >>> w & 0x7F;\n  }\n\n  /* works up to n = 3 * 8 + 1 = 25 */\n  function read_bits_n(buf, bl, n) {\n    var w = bl & 7,\n      h = bl >>> 3,\n      f = (1 << n) - 1;\n    var v = buf[h] >>> w;\n    if (n < 8 - w) return v & f;\n    v |= buf[h + 1] << 8 - w;\n    if (n < 16 - w) return v & f;\n    v |= buf[h + 2] << 16 - w;\n    if (n < 24 - w) return v & f;\n    v |= buf[h + 3] << 24 - w;\n    return v & f;\n  }\n\n  /* helpers for unaligned bit writes */\n  function write_bits_3(buf, bl, v) {\n    var w = bl & 7,\n      h = bl >>> 3;\n    if (w <= 5) buf[h] |= (v & 7) << w;else {\n      buf[h] |= v << w & 0xFF;\n      buf[h + 1] = (v & 7) >> 8 - w;\n    }\n    return bl + 3;\n  }\n  function write_bits_1(buf, bl, v) {\n    var w = bl & 7,\n      h = bl >>> 3;\n    v = (v & 1) << w;\n    buf[h] |= v;\n    return bl + 1;\n  }\n  function write_bits_8(buf, bl, v) {\n    var w = bl & 7,\n      h = bl >>> 3;\n    v <<= w;\n    buf[h] |= v & 0xFF;\n    v >>>= 8;\n    buf[h + 1] = v;\n    return bl + 8;\n  }\n  function write_bits_16(buf, bl, v) {\n    var w = bl & 7,\n      h = bl >>> 3;\n    v <<= w;\n    buf[h] |= v & 0xFF;\n    v >>>= 8;\n    buf[h + 1] = v & 0xFF;\n    buf[h + 2] = v >>> 8;\n    return bl + 16;\n  }\n\n  /* until ArrayBuffer#realloc is a thing, fake a realloc */\n  function realloc(b, sz /*:number*/) {\n    var L = b.length,\n      M = 2 * L > sz ? 2 * L : sz + 5,\n      i = 0;\n    if (L >= sz) return b;\n    if (has_buf) {\n      var o = new_unsafe_buf(M);\n      // $FlowIgnore\n      if (b.copy) b.copy(o);else for (; i < b.length; ++i) o[i] = b[i];\n      return o;\n    } else if (use_typed_arrays) {\n      var a = new Uint8Array(M);\n      if (a.set) a.set(b);else for (; i < L; ++i) a[i] = b[i];\n      return a;\n    }\n    b.length = M;\n    return b;\n  }\n\n  /* zero-filled arrays for older browsers */\n  function zero_fill_array(n) {\n    var o = new Array(n);\n    for (var i = 0; i < n; ++i) o[i] = 0;\n    return o;\n  }\n\n  /* build tree (used for literals and lengths) */\n  function build_tree(clens, cmap, MAX /*:number*/) /*:number*/{\n    var maxlen = 1,\n      w = 0,\n      i = 0,\n      j = 0,\n      ccode = 0,\n      L = clens.length;\n    var bl_count = use_typed_arrays ? new Uint16Array(32) : zero_fill_array(32);\n    for (i = 0; i < 32; ++i) bl_count[i] = 0;\n    for (i = L; i < MAX; ++i) clens[i] = 0;\n    L = clens.length;\n    var ctree = use_typed_arrays ? new Uint16Array(L) : zero_fill_array(L); // []\n\n    /* build code tree */\n    for (i = 0; i < L; ++i) {\n      bl_count[w = clens[i]]++;\n      if (maxlen < w) maxlen = w;\n      ctree[i] = 0;\n    }\n    bl_count[0] = 0;\n    for (i = 1; i <= maxlen; ++i) bl_count[i + 16] = ccode = ccode + bl_count[i - 1] << 1;\n    for (i = 0; i < L; ++i) {\n      ccode = clens[i];\n      if (ccode != 0) ctree[i] = bl_count[ccode + 16]++;\n    }\n\n    /* cmap[maxlen + 4 bits] = (off&15) + (lit<<4) reverse mapping */\n    var cleni = 0;\n    for (i = 0; i < L; ++i) {\n      cleni = clens[i];\n      if (cleni != 0) {\n        ccode = bit_swap_n(ctree[i], maxlen) >> maxlen - cleni;\n        for (j = (1 << maxlen + 4 - cleni) - 1; j >= 0; --j) cmap[ccode | j << cleni] = cleni & 15 | i << 4;\n      }\n    }\n    return maxlen;\n  }\n\n  /* Fixed Huffman */\n  var fix_lmap = use_typed_arrays ? new Uint16Array(512) : zero_fill_array(512);\n  var fix_dmap = use_typed_arrays ? new Uint16Array(32) : zero_fill_array(32);\n  if (!use_typed_arrays) {\n    for (var i = 0; i < 512; ++i) fix_lmap[i] = 0;\n    for (i = 0; i < 32; ++i) fix_dmap[i] = 0;\n  }\n  (function () {\n    var dlens /*:Array<number>*/ = [];\n    var i = 0;\n    for (; i < 32; i++) dlens.push(5);\n    build_tree(dlens, fix_dmap, 32);\n    var clens /*:Array<number>*/ = [];\n    i = 0;\n    for (; i <= 143; i++) clens.push(8);\n    for (; i <= 255; i++) clens.push(9);\n    for (; i <= 279; i++) clens.push(7);\n    for (; i <= 287; i++) clens.push(8);\n    build_tree(clens, fix_lmap, 288);\n  })();\n  var _deflateRaw = /*#__PURE__*/function _deflateRawIIFE() {\n    var DST_LN_RE = use_typed_arrays ? new Uint8Array(0x8000) : [];\n    var j = 0,\n      k = 0;\n    for (; j < DST_LN.length - 1; ++j) {\n      for (; k < DST_LN[j + 1]; ++k) DST_LN_RE[k] = j;\n    }\n    for (; k < 32768; ++k) DST_LN_RE[k] = 29;\n    var LEN_LN_RE = use_typed_arrays ? new Uint8Array(0x103) : [];\n    for (j = 0, k = 0; j < LEN_LN.length - 1; ++j) {\n      for (; k < LEN_LN[j + 1]; ++k) LEN_LN_RE[k] = j;\n    }\n    function write_stored(data, out) {\n      var boff = 0;\n      while (boff < data.length) {\n        var L = Math.min(0xFFFF, data.length - boff);\n        var h = boff + L == data.length;\n        out.write_shift(1, +h);\n        out.write_shift(2, L);\n        out.write_shift(2, ~L & 0xFFFF);\n        while (L-- > 0) out[out.l++] = data[boff++];\n      }\n      return out.l;\n    }\n\n    /* Fixed Huffman */\n    function write_huff_fixed(data, out) {\n      var bl = 0;\n      var boff = 0;\n      var addrs = use_typed_arrays ? new Uint16Array(0x8000) : [];\n      while (boff < data.length) {\n        var L = /* data.length - boff; */Math.min(0xFFFF, data.length - boff);\n\n        /* write a stored block for short data */\n        if (L < 10) {\n          bl = write_bits_3(out, bl, +!!(boff + L == data.length)); // jshint ignore:line\n          if (bl & 7) bl += 8 - (bl & 7);\n          out.l = bl / 8 | 0;\n          out.write_shift(2, L);\n          out.write_shift(2, ~L & 0xFFFF);\n          while (L-- > 0) out[out.l++] = data[boff++];\n          bl = out.l * 8;\n          continue;\n        }\n        bl = write_bits_3(out, bl, +!!(boff + L == data.length) + 2); // jshint ignore:line\n        var hash = 0;\n        while (L-- > 0) {\n          var d = data[boff];\n          hash = (hash << 5 ^ d) & 0x7FFF;\n          var match = -1,\n            mlen = 0;\n          if (match = addrs[hash]) {\n            match |= boff & ~0x7FFF;\n            if (match > boff) match -= 0x8000;\n            if (match < boff) while (data[match + mlen] == data[boff + mlen] && mlen < 250) ++mlen;\n          }\n          if (mlen > 2) {\n            /* Copy Token  */\n            d = LEN_LN_RE[mlen];\n            if (d <= 22) bl = write_bits_8(out, bl, bitswap8[d + 1] >> 1) - 1;else {\n              write_bits_8(out, bl, 3);\n              bl += 5;\n              write_bits_8(out, bl, bitswap8[d - 23] >> 5);\n              bl += 3;\n            }\n            var len_eb = d < 8 ? 0 : d - 4 >> 2;\n            if (len_eb > 0) {\n              write_bits_16(out, bl, mlen - LEN_LN[d]);\n              bl += len_eb;\n            }\n            d = DST_LN_RE[boff - match];\n            bl = write_bits_8(out, bl, bitswap8[d] >> 3);\n            bl -= 3;\n            var dst_eb = d < 4 ? 0 : d - 2 >> 1;\n            if (dst_eb > 0) {\n              write_bits_16(out, bl, boff - match - DST_LN[d]);\n              bl += dst_eb;\n            }\n            for (var q = 0; q < mlen; ++q) {\n              addrs[hash] = boff & 0x7FFF;\n              hash = (hash << 5 ^ data[boff]) & 0x7FFF;\n              ++boff;\n            }\n            L -= mlen - 1;\n          } else {\n            /* Literal Token */\n            if (d <= 143) d = d + 48;else bl = write_bits_1(out, bl, 1);\n            bl = write_bits_8(out, bl, bitswap8[d]);\n            addrs[hash] = boff & 0x7FFF;\n            ++boff;\n          }\n        }\n        bl = write_bits_8(out, bl, 0) - 1;\n      }\n      out.l = (bl + 7) / 8 | 0;\n      return out.l;\n    }\n    return function _deflateRaw(data, out) {\n      if (data.length < 8) return write_stored(data, out);\n      return write_huff_fixed(data, out);\n    };\n  }();\n  function _deflate(data) {\n    var buf = new_buf(50 + Math.floor(data.length * 1.1));\n    var off = _deflateRaw(data, buf);\n    return buf.slice(0, off);\n  }\n  /* modified inflate function also moves original read head */\n\n  var dyn_lmap = use_typed_arrays ? new Uint16Array(32768) : zero_fill_array(32768);\n  var dyn_dmap = use_typed_arrays ? new Uint16Array(32768) : zero_fill_array(32768);\n  var dyn_cmap = use_typed_arrays ? new Uint16Array(128) : zero_fill_array(128);\n  var dyn_len_1 = 1,\n    dyn_len_2 = 1;\n\n  /* 5.5.3 Expanding Huffman Codes */\n  function dyn(data, boff /*:number*/) {\n    /* nomenclature from RFC1951 refers to bit values; these are offset by the implicit constant */\n    var _HLIT = read_bits_5(data, boff) + 257;\n    boff += 5;\n    var _HDIST = read_bits_5(data, boff) + 1;\n    boff += 5;\n    var _HCLEN = read_bits_4(data, boff) + 4;\n    boff += 4;\n    var w = 0;\n\n    /* grab and store code lengths */\n    var clens = use_typed_arrays ? new Uint8Array(19) : zero_fill_array(19);\n    var ctree = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    var maxlen = 1;\n    var bl_count = use_typed_arrays ? new Uint8Array(8) : zero_fill_array(8);\n    var next_code = use_typed_arrays ? new Uint8Array(8) : zero_fill_array(8);\n    var L = clens.length; /* 19 */\n    for (var i = 0; i < _HCLEN; ++i) {\n      clens[CLEN_ORDER[i]] = w = read_bits_3(data, boff);\n      if (maxlen < w) maxlen = w;\n      bl_count[w]++;\n      boff += 3;\n    }\n\n    /* build code tree */\n    var ccode = 0;\n    bl_count[0] = 0;\n    for (i = 1; i <= maxlen; ++i) next_code[i] = ccode = ccode + bl_count[i - 1] << 1;\n    for (i = 0; i < L; ++i) if ((ccode = clens[i]) != 0) ctree[i] = next_code[ccode]++;\n    /* cmap[7 bits from stream] = (off&7) + (lit<<3) */\n    var cleni = 0;\n    for (i = 0; i < L; ++i) {\n      cleni = clens[i];\n      if (cleni != 0) {\n        ccode = bitswap8[ctree[i]] >> 8 - cleni;\n        for (var j = (1 << 7 - cleni) - 1; j >= 0; --j) dyn_cmap[ccode | j << cleni] = cleni & 7 | i << 3;\n      }\n    }\n\n    /* read literal and dist codes at once */\n    var hcodes /*:Array<number>*/ = [];\n    maxlen = 1;\n    for (; hcodes.length < _HLIT + _HDIST;) {\n      ccode = dyn_cmap[read_bits_7(data, boff)];\n      boff += ccode & 7;\n      switch (ccode >>>= 3) {\n        case 16:\n          w = 3 + read_bits_2(data, boff);\n          boff += 2;\n          ccode = hcodes[hcodes.length - 1];\n          while (w-- > 0) hcodes.push(ccode);\n          break;\n        case 17:\n          w = 3 + read_bits_3(data, boff);\n          boff += 3;\n          while (w-- > 0) hcodes.push(0);\n          break;\n        case 18:\n          w = 11 + read_bits_7(data, boff);\n          boff += 7;\n          while (w-- > 0) hcodes.push(0);\n          break;\n        default:\n          hcodes.push(ccode);\n          if (maxlen < ccode) maxlen = ccode;\n          break;\n      }\n    }\n\n    /* build literal / length trees */\n    var h1 = hcodes.slice(0, _HLIT),\n      h2 = hcodes.slice(_HLIT);\n    for (i = _HLIT; i < 286; ++i) h1[i] = 0;\n    for (i = _HDIST; i < 30; ++i) h2[i] = 0;\n    dyn_len_1 = build_tree(h1, dyn_lmap, 286);\n    dyn_len_2 = build_tree(h2, dyn_dmap, 30);\n    return boff;\n  }\n\n  /* return [ data, bytesRead ] */\n  function inflate(data, usz /*:number*/) {\n    /* shortcircuit for empty buffer [0x03, 0x00] */\n    if (data[0] == 3 && !(data[1] & 0x3)) {\n      return [new_raw_buf(usz), 2];\n    }\n\n    /* bit offset */\n    var boff = 0;\n\n    /* header includes final bit and type bits */\n    var header = 0;\n    var outbuf = new_unsafe_buf(usz ? usz : 1 << 18);\n    var woff = 0;\n    var OL = outbuf.length >>> 0;\n    var max_len_1 = 0,\n      max_len_2 = 0;\n    while ((header & 1) == 0) {\n      header = read_bits_3(data, boff);\n      boff += 3;\n      if (header >>> 1 == 0) {\n        /* Stored block */\n        if (boff & 7) boff += 8 - (boff & 7);\n        /* 2 bytes sz, 2 bytes bit inverse */\n        var sz = data[boff >>> 3] | data[(boff >>> 3) + 1] << 8;\n        boff += 32;\n        /* push sz bytes */\n        if (sz > 0) {\n          if (!usz && OL < woff + sz) {\n            outbuf = realloc(outbuf, woff + sz);\n            OL = outbuf.length;\n          }\n          while (sz-- > 0) {\n            outbuf[woff++] = data[boff >>> 3];\n            boff += 8;\n          }\n        }\n        continue;\n      } else if (header >> 1 == 1) {\n        /* Fixed Huffman */\n        max_len_1 = 9;\n        max_len_2 = 5;\n      } else {\n        /* Dynamic Huffman */\n        boff = dyn(data, boff);\n        max_len_1 = dyn_len_1;\n        max_len_2 = dyn_len_2;\n      }\n      for (;;) {\n        // while(true) is apparently out of vogue in modern JS circles\n        if (!usz && OL < woff + 32767) {\n          outbuf = realloc(outbuf, woff + 32767);\n          OL = outbuf.length;\n        }\n        /* ingest code and move read head */\n        var bits = read_bits_n(data, boff, max_len_1);\n        var code = header >>> 1 == 1 ? fix_lmap[bits] : dyn_lmap[bits];\n        boff += code & 15;\n        code >>>= 4;\n        /* 0-255 are literals, 256 is end of block token, 257+ are copy tokens */\n        if ((code >>> 8 & 0xFF) === 0) outbuf[woff++] = code;else if (code == 256) break;else {\n          code -= 257;\n          var len_eb = code < 8 ? 0 : code - 4 >> 2;\n          if (len_eb > 5) len_eb = 0;\n          var tgt = woff + LEN_LN[code];\n          /* length extra bits */\n          if (len_eb > 0) {\n            tgt += read_bits_n(data, boff, len_eb);\n            boff += len_eb;\n          }\n\n          /* dist code */\n          bits = read_bits_n(data, boff, max_len_2);\n          code = header >>> 1 == 1 ? fix_dmap[bits] : dyn_dmap[bits];\n          boff += code & 15;\n          code >>>= 4;\n          var dst_eb = code < 4 ? 0 : code - 2 >> 1;\n          var dst = DST_LN[code];\n          /* dist extra bits */\n          if (dst_eb > 0) {\n            dst += read_bits_n(data, boff, dst_eb);\n            boff += dst_eb;\n          }\n\n          /* in the common case, manual byte copy is faster than TA set / Buffer copy */\n          if (!usz && OL < tgt) {\n            outbuf = realloc(outbuf, tgt + 100);\n            OL = outbuf.length;\n          }\n          while (woff < tgt) {\n            outbuf[woff] = outbuf[woff - dst];\n            ++woff;\n          }\n        }\n      }\n    }\n    if (usz) return [outbuf, boff + 7 >>> 3];\n    return [outbuf.slice(0, woff), boff + 7 >>> 3];\n  }\n  function _inflate(payload, usz) {\n    var data = payload.slice(payload.l || 0);\n    var out = inflate(data, usz);\n    payload.l += out[1];\n    return out[0];\n  }\n  function warn_or_throw(wrn, msg) {\n    if (wrn) {\n      if (typeof console !== 'undefined') console.error(msg);\n    } else throw new Error(msg);\n  }\n  function parse_zip(file /*:RawBytes*/, options /*:CFBReadOpts*/) /*:CFBContainer*/{\n    var blob /*:CFBlob*/ = /*::(*/file /*:: :any)*/;\n    prep_blob(blob, 0);\n    var FileIndex /*:CFBFileIndex*/ = [],\n      FullPaths /*:Array<string>*/ = [];\n    var o = {\n      FileIndex: FileIndex,\n      FullPaths: FullPaths\n    };\n    init_cfb(o, {\n      root: options.root\n    });\n\n    /* find end of central directory, start just after signature */\n    var i = blob.length - 4;\n    while ((blob[i] != 0x50 || blob[i + 1] != 0x4b || blob[i + 2] != 0x05 || blob[i + 3] != 0x06) && i >= 0) --i;\n    blob.l = i + 4;\n\n    /* parse end of central directory */\n    blob.l += 4;\n    var fcnt = blob.read_shift(2);\n    blob.l += 6;\n    var start_cd = blob.read_shift(4);\n\n    /* parse central directory */\n    blob.l = start_cd;\n    for (i = 0; i < fcnt; ++i) {\n      /* trust local file header instead of CD entry */\n      blob.l += 20;\n      var csz = blob.read_shift(4);\n      var usz = blob.read_shift(4);\n      var namelen = blob.read_shift(2);\n      var efsz = blob.read_shift(2);\n      var fcsz = blob.read_shift(2);\n      blob.l += 8;\n      var offset = blob.read_shift(4);\n      var EF = parse_extra_field( /*::(*/blob.slice(blob.l + namelen, blob.l + namelen + efsz) /*:: :any)*/);\n      blob.l += namelen + efsz + fcsz;\n      var L = blob.l;\n      blob.l = offset + 4;\n      /* ZIP64 lengths */\n      if (EF && EF[0x0001]) {\n        if ((EF[0x0001] || {}).usz) usz = EF[0x0001].usz;\n        if ((EF[0x0001] || {}).csz) csz = EF[0x0001].csz;\n      }\n      parse_local_file(blob, csz, usz, o, EF);\n      blob.l = L;\n    }\n    return o;\n  }\n\n  /* head starts just after local file header signature */\n  function parse_local_file(blob /*:CFBlob*/, csz /*:number*/, usz /*:number*/, o /*:CFBContainer*/, EF) {\n    /* [local file header] */\n    blob.l += 2;\n    var flags = blob.read_shift(2);\n    var meth = blob.read_shift(2);\n    var date = parse_dos_date(blob);\n    if (flags & 0x2041) throw new Error(\"Unsupported ZIP encryption\");\n    var crc32 = blob.read_shift(4);\n    var _csz = blob.read_shift(4);\n    var _usz = blob.read_shift(4);\n    var namelen = blob.read_shift(2);\n    var efsz = blob.read_shift(2);\n\n    // TODO: flags & (1<<11) // UTF8\n    var name = \"\";\n    for (var i = 0; i < namelen; ++i) name += String.fromCharCode(blob[blob.l++]);\n    if (efsz) {\n      var ef = parse_extra_field( /*::(*/blob.slice(blob.l, blob.l + efsz) /*:: :any)*/);\n      if ((ef[0x5455] || {}).mt) date = ef[0x5455].mt;\n      if ((ef[0x0001] || {}).usz) _usz = ef[0x0001].usz;\n      if ((ef[0x0001] || {}).csz) _csz = ef[0x0001].csz;\n      if (EF) {\n        if ((EF[0x5455] || {}).mt) date = EF[0x5455].mt;\n        if ((EF[0x0001] || {}).usz) _usz = ef[0x0001].usz;\n        if ((EF[0x0001] || {}).csz) _csz = ef[0x0001].csz;\n      }\n    }\n    blob.l += efsz;\n\n    /* [encryption header] */\n\n    /* [file data] */\n    var data = blob.slice(blob.l, blob.l + _csz);\n    switch (meth) {\n      case 8:\n        data = _inflateRawSync(blob, _usz);\n        break;\n      case 0:\n        break;\n      // TODO: scan for magic number\n      default:\n        throw new Error(\"Unsupported ZIP Compression method \" + meth);\n    }\n\n    /* [data descriptor] */\n    var wrn = false;\n    if (flags & 8) {\n      crc32 = blob.read_shift(4);\n      if (crc32 == 0x08074b50) {\n        crc32 = blob.read_shift(4);\n        wrn = true;\n      }\n      _csz = blob.read_shift(4);\n      _usz = blob.read_shift(4);\n    }\n    if (_csz != csz) warn_or_throw(wrn, \"Bad compressed size: \" + csz + \" != \" + _csz);\n    if (_usz != usz) warn_or_throw(wrn, \"Bad uncompressed size: \" + usz + \" != \" + _usz);\n    //var _crc32 = CRC32.buf(data, 0);\n    //if((crc32>>0) != (_crc32>>0)) warn_or_throw(wrn, \"Bad CRC32 checksum: \" + crc32 + \" != \" + _crc32);\n    cfb_add(o, name, data, {\n      unsafe: true,\n      mt: date\n    });\n  }\n  function write_zip(cfb /*:CFBContainer*/, options /*:CFBWriteOpts*/) /*:RawBytes*/{\n    var _opts = options || {};\n    var out = [],\n      cdirs = [];\n    var o /*:CFBlob*/ = new_buf(1);\n    var method = _opts.compression ? 8 : 0,\n      flags = 0;\n    var i = 0,\n      j = 0;\n    var start_cd = 0,\n      fcnt = 0;\n    var root = cfb.FullPaths[0],\n      fp = root,\n      fi = cfb.FileIndex[0];\n    var crcs = [];\n    var sz_cd = 0;\n    for (i = 1; i < cfb.FullPaths.length; ++i) {\n      fp = cfb.FullPaths[i].slice(root.length);\n      fi = cfb.FileIndex[i];\n      if (!fi.size || !fi.content || fp == \"\\u0001Sh33tJ5\") continue;\n      var start = start_cd;\n\n      /* TODO: CP437 filename */\n      var namebuf = new_buf(fp.length);\n      for (j = 0; j < fp.length; ++j) namebuf.write_shift(1, fp.charCodeAt(j) & 0x7F);\n      namebuf = namebuf.slice(0, namebuf.l);\n      crcs[fcnt] = typeof fi.content == \"string\" ? CRC32.bstr(fi.content, 0) : CRC32.buf( /*::((*/fi.content /*::||[]):any)*/, 0);\n      var outbuf = typeof fi.content == \"string\" ? s2a(fi.content) : fi.content /*::||[]*/;\n      if (method == 8) outbuf = _deflateRawSync(outbuf);\n\n      /* local file header */\n      o = new_buf(30);\n      o.write_shift(4, 0x04034b50);\n      o.write_shift(2, 20);\n      o.write_shift(2, flags);\n      o.write_shift(2, method);\n      /* TODO: last mod file time/date */\n      if (fi.mt) write_dos_date(o, fi.mt);else o.write_shift(4, 0);\n      o.write_shift(-4, crcs[fcnt]);\n      o.write_shift(4, outbuf.length);\n      o.write_shift(4, /*::(*/fi.content /*::||[])*/.length);\n      o.write_shift(2, namebuf.length);\n      o.write_shift(2, 0);\n      start_cd += o.length;\n      out.push(o);\n      start_cd += namebuf.length;\n      out.push(namebuf);\n\n      /* TODO: extra fields? */\n\n      /* TODO: encryption header ? */\n\n      start_cd += outbuf.length;\n      out.push(outbuf);\n\n      /* central directory */\n      o = new_buf(46);\n      o.write_shift(4, 0x02014b50);\n      o.write_shift(2, 0);\n      o.write_shift(2, 20);\n      o.write_shift(2, flags);\n      o.write_shift(2, method);\n      o.write_shift(4, 0); /* TODO: last mod file time/date */\n      o.write_shift(-4, crcs[fcnt]);\n      o.write_shift(4, outbuf.length);\n      o.write_shift(4, /*::(*/fi.content /*::||[])*/.length);\n      o.write_shift(2, namebuf.length);\n      o.write_shift(2, 0);\n      o.write_shift(2, 0);\n      o.write_shift(2, 0);\n      o.write_shift(2, 0);\n      o.write_shift(4, 0);\n      o.write_shift(4, start);\n      sz_cd += o.l;\n      cdirs.push(o);\n      sz_cd += namebuf.length;\n      cdirs.push(namebuf);\n      ++fcnt;\n    }\n\n    /* end of central directory */\n    o = new_buf(22);\n    o.write_shift(4, 0x06054b50);\n    o.write_shift(2, 0);\n    o.write_shift(2, 0);\n    o.write_shift(2, fcnt);\n    o.write_shift(2, fcnt);\n    o.write_shift(4, sz_cd);\n    o.write_shift(4, start_cd);\n    o.write_shift(2, 0);\n    return bconcat([bconcat(out /*:any*/), bconcat(cdirs), o] /*:any*/);\n  }\n\n  var ContentTypeMap = {\n    \"htm\": \"text/html\",\n    \"xml\": \"text/xml\",\n    \"gif\": \"image/gif\",\n    \"jpg\": \"image/jpeg\",\n    \"png\": \"image/png\",\n    \"mso\": \"application/x-mso\",\n    \"thmx\": \"application/vnd.ms-officetheme\",\n    \"sh33tj5\": \"application/octet-stream\"\n  } /*:any*/;\n\n  function get_content_type(fi /*:CFBEntry*/, fp /*:string*/) /*:string*/{\n    if (fi.ctype) return fi.ctype;\n    var ext = fi.name || \"\",\n      m = ext.match(/\\.([^\\.]+)$/);\n    if (m && ContentTypeMap[m[1]]) return ContentTypeMap[m[1]];\n    if (fp) {\n      m = (ext = fp).match(/[\\.\\\\]([^\\.\\\\])+$/);\n      if (m && ContentTypeMap[m[1]]) return ContentTypeMap[m[1]];\n    }\n    return \"application/octet-stream\";\n  }\n\n  /* 76 character chunks TODO: intertwine encoding */\n  function write_base64_76(bstr /*:string*/) /*:string*/{\n    var data = Base64_encode(bstr);\n    var o = [];\n    for (var i = 0; i < data.length; i += 76) o.push(data.slice(i, i + 76));\n    return o.join(\"\\r\\n\") + \"\\r\\n\";\n  }\n\n  /*\n  Rules for QP:\n  \t- escape =## applies for all non-display characters and literal \"=\"\n  \t- space or tab at end of line must be encoded\n  \t- \\r\\n newlines can be preserved, but bare \\r and \\n must be escaped\n  \t- lines must not exceed 76 characters, use soft breaks =\\r\\n\n  \n  TODO: Some files from word appear to write line extensions with bare equals:\n  \n  ```\n  <table class=3DMsoTableGrid border=3D1 cellspacing=3D0 cellpadding=3D0 width=\n  =\"70%\"\n  ```\n  */\n  function write_quoted_printable(text /*:string*/) /*:string*/{\n    var encoded = text.replace(/[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7E-\\xFF=]/g, function (c) {\n      var w = c.charCodeAt(0).toString(16).toUpperCase();\n      return \"=\" + (w.length == 1 ? \"0\" + w : w);\n    });\n    encoded = encoded.replace(/ $/mg, \"=20\").replace(/\\t$/mg, \"=09\");\n    if (encoded.charAt(0) == \"\\n\") encoded = \"=0D\" + encoded.slice(1);\n    encoded = encoded.replace(/\\r(?!\\n)/mg, \"=0D\").replace(/\\n\\n/mg, \"\\n=0A\").replace(/([^\\r\\n])\\n/mg, \"$1=0A\");\n    var o /*:Array<string>*/ = [],\n      split = encoded.split(\"\\r\\n\");\n    for (var si = 0; si < split.length; ++si) {\n      var str = split[si];\n      if (str.length == 0) {\n        o.push(\"\");\n        continue;\n      }\n      for (var i = 0; i < str.length;) {\n        var end = 76;\n        var tmp = str.slice(i, i + end);\n        if (tmp.charAt(end - 1) == \"=\") end--;else if (tmp.charAt(end - 2) == \"=\") end -= 2;else if (tmp.charAt(end - 3) == \"=\") end -= 3;\n        tmp = str.slice(i, i + end);\n        i += end;\n        if (i < str.length) tmp += \"=\";\n        o.push(tmp);\n      }\n    }\n    return o.join(\"\\r\\n\");\n  }\n  function parse_quoted_printable(data /*:Array<string>*/) /*:RawBytes*/{\n    var o = [];\n\n    /* unify long lines */\n    for (var di = 0; di < data.length; ++di) {\n      var line = data[di];\n      while (di <= data.length && line.charAt(line.length - 1) == \"=\") line = line.slice(0, line.length - 1) + data[++di];\n      o.push(line);\n    }\n\n    /* decode */\n    for (var oi = 0; oi < o.length; ++oi) o[oi] = o[oi].replace(/[=][0-9A-Fa-f]{2}/g, function ($$) {\n      return String.fromCharCode(parseInt($$.slice(1), 16));\n    });\n    return s2a(o.join(\"\\r\\n\"));\n  }\n  function parse_mime(cfb /*:CFBContainer*/, data /*:Array<string>*/, root /*:string*/) /*:void*/{\n    var fname = \"\",\n      cte = \"\",\n      ctype = \"\",\n      fdata;\n    var di = 0;\n    for (; di < 10; ++di) {\n      var line = data[di];\n      if (!line || line.match(/^\\s*$/)) break;\n      var m = line.match(/^(.*?):\\s*([^\\s].*)$/);\n      if (m) switch (m[1].toLowerCase()) {\n        case \"content-location\":\n          fname = m[2].trim();\n          break;\n        case \"content-type\":\n          ctype = m[2].trim();\n          break;\n        case \"content-transfer-encoding\":\n          cte = m[2].trim();\n          break;\n      }\n    }\n    ++di;\n    switch (cte.toLowerCase()) {\n      case 'base64':\n        fdata = s2a(Base64_decode(data.slice(di).join(\"\")));\n        break;\n      case 'quoted-printable':\n        fdata = parse_quoted_printable(data.slice(di));\n        break;\n      default:\n        throw new Error(\"Unsupported Content-Transfer-Encoding \" + cte);\n    }\n    var file = cfb_add(cfb, fname.slice(root.length), fdata, {\n      unsafe: true\n    });\n    if (ctype) file.ctype = ctype;\n  }\n  function parse_mad(file /*:RawBytes*/, options /*:CFBReadOpts*/) /*:CFBContainer*/{\n    if (a2s(file.slice(0, 13)).toLowerCase() != \"mime-version:\") throw new Error(\"Unsupported MAD header\");\n    var root = options && options.root || \"\";\n    // $FlowIgnore\n    var data = (has_buf && Buffer.isBuffer(file) ? file.toString(\"binary\") : a2s(file)).split(\"\\r\\n\");\n    var di = 0,\n      row = \"\";\n\n    /* if root is not specified, scan for the common prefix */\n    for (di = 0; di < data.length; ++di) {\n      row = data[di];\n      if (!/^Content-Location:/i.test(row)) continue;\n      row = row.slice(row.indexOf(\"file\"));\n      if (!root) root = row.slice(0, row.lastIndexOf(\"/\") + 1);\n      if (row.slice(0, root.length) == root) continue;\n      while (root.length > 0) {\n        root = root.slice(0, root.length - 1);\n        root = root.slice(0, root.lastIndexOf(\"/\") + 1);\n        if (row.slice(0, root.length) == root) break;\n      }\n    }\n    var mboundary = (data[1] || \"\").match(/boundary=\"(.*?)\"/);\n    if (!mboundary) throw new Error(\"MAD cannot find boundary\");\n    var boundary = \"--\" + (mboundary[1] || \"\");\n    var FileIndex /*:CFBFileIndex*/ = [],\n      FullPaths /*:Array<string>*/ = [];\n    var o = {\n      FileIndex: FileIndex,\n      FullPaths: FullPaths\n    };\n    init_cfb(o);\n    var start_di,\n      fcnt = 0;\n    for (di = 0; di < data.length; ++di) {\n      var line = data[di];\n      if (line !== boundary && line !== boundary + \"--\") continue;\n      if (fcnt++) parse_mime(o, data.slice(start_di, di), root);\n      start_di = di;\n    }\n    return o;\n  }\n  function write_mad(cfb /*:CFBContainer*/, options /*:CFBWriteOpts*/) /*:string*/{\n    var opts = options || {};\n    var boundary = opts.boundary || \"SheetJS\";\n    boundary = '------=' + boundary;\n    var out = ['MIME-Version: 1.0', 'Content-Type: multipart/related; boundary=\"' + boundary.slice(2) + '\"', '', '', ''];\n    var root = cfb.FullPaths[0],\n      fp = root,\n      fi = cfb.FileIndex[0];\n    for (var i = 1; i < cfb.FullPaths.length; ++i) {\n      fp = cfb.FullPaths[i].slice(root.length);\n      fi = cfb.FileIndex[i];\n      if (!fi.size || !fi.content || fp == \"\\u0001Sh33tJ5\") continue;\n\n      /* Normalize filename */\n      fp = fp.replace(/[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7E-\\xFF]/g, function (c) {\n        return \"_x\" + c.charCodeAt(0).toString(16) + \"_\";\n      }).replace(/[\\u0080-\\uFFFF]/g, function (u) {\n        return \"_u\" + u.charCodeAt(0).toString(16) + \"_\";\n      });\n\n      /* Extract content as binary string */\n      var ca = fi.content;\n      // $FlowIgnore\n      var cstr = has_buf && Buffer.isBuffer(ca) ? ca.toString(\"binary\") : a2s(ca);\n\n      /* 4/5 of first 1024 chars ascii -> quoted printable, else base64 */\n      var dispcnt = 0,\n        L = Math.min(1024, cstr.length),\n        cc = 0;\n      for (var csl = 0; csl <= L; ++csl) if ((cc = cstr.charCodeAt(csl)) >= 0x20 && cc < 0x80) ++dispcnt;\n      var qp = dispcnt >= L * 4 / 5;\n      out.push(boundary);\n      out.push('Content-Location: ' + (opts.root || 'file:///C:/SheetJS/') + fp);\n      out.push('Content-Transfer-Encoding: ' + (qp ? 'quoted-printable' : 'base64'));\n      out.push('Content-Type: ' + get_content_type(fi, fp));\n      out.push('');\n      out.push(qp ? write_quoted_printable(cstr) : write_base64_76(cstr));\n    }\n    out.push(boundary + '--\\r\\n');\n    return out.join(\"\\r\\n\");\n  }\n  function cfb_new(opts /*:?any*/) /*:CFBContainer*/{\n    var o /*:CFBContainer*/ = {} /*:any*/;\n    init_cfb(o, opts);\n    return o;\n  }\n  function cfb_add(cfb /*:CFBContainer*/, name /*:string*/, content /*:?RawBytes*/, opts /*:?any*/) /*:CFBEntry*/{\n    var unsafe = opts && opts.unsafe;\n    if (!unsafe) init_cfb(cfb);\n    var file = !unsafe && CFB.find(cfb, name);\n    if (!file) {\n      var fpath /*:string*/ = cfb.FullPaths[0];\n      if (name.slice(0, fpath.length) == fpath) fpath = name;else {\n        if (fpath.slice(-1) != \"/\") fpath += \"/\";\n        fpath = (fpath + name).replace(\"//\", \"/\");\n      }\n      file = {\n        name: filename(name),\n        type: 2\n      } /*:any*/;\n      cfb.FileIndex.push(file);\n      cfb.FullPaths.push(fpath);\n      if (!unsafe) CFB.utils.cfb_gc(cfb);\n    }\n    /*:: if(!file) throw new Error(\"unreachable\"); */\n    file.content = content /*:any*/;\n    file.size = content ? content.length : 0;\n    if (opts) {\n      if (opts.CLSID) file.clsid = opts.CLSID;\n      if (opts.mt) file.mt = opts.mt;\n      if (opts.ct) file.ct = opts.ct;\n    }\n    return file;\n  }\n  function cfb_del(cfb /*:CFBContainer*/, name /*:string*/) /*:boolean*/{\n    init_cfb(cfb);\n    var file = CFB.find(cfb, name);\n    if (file) for (var j = 0; j < cfb.FileIndex.length; ++j) if (cfb.FileIndex[j] == file) {\n      cfb.FileIndex.splice(j, 1);\n      cfb.FullPaths.splice(j, 1);\n      return true;\n    }\n    return false;\n  }\n  function cfb_mov(cfb /*:CFBContainer*/, old_name /*:string*/, new_name /*:string*/) /*:boolean*/{\n    init_cfb(cfb);\n    var file = CFB.find(cfb, old_name);\n    if (file) for (var j = 0; j < cfb.FileIndex.length; ++j) if (cfb.FileIndex[j] == file) {\n      cfb.FileIndex[j].name = filename(new_name);\n      cfb.FullPaths[j] = new_name;\n      return true;\n    }\n    return false;\n  }\n  function cfb_gc(cfb /*:CFBContainer*/) /*:void*/{\n    rebuild_cfb(cfb, true);\n  }\n  exports.find = find;\n  exports.read = read;\n  exports.parse = parse;\n  exports.write = write;\n  exports.writeFile = write_file;\n  exports.utils = {\n    cfb_new: cfb_new,\n    cfb_add: cfb_add,\n    cfb_del: cfb_del,\n    cfb_mov: cfb_mov,\n    cfb_gc: cfb_gc,\n    ReadShift: ReadShift,\n    CheckField: CheckField,\n    prep_blob: prep_blob,\n    bconcat: bconcat,\n    use_zlib: use_zlib,\n    _deflateRaw: _deflate,\n    _inflateRaw: _inflate,\n    consts: consts\n  };\n  return exports;\n}();\nvar _fs;\n\n/* normalize data for blob ctor */\nfunction blobify(data) {\n  if (typeof data === \"string\") return s2ab(data);\n  if (Array.isArray(data)) return a2u(data);\n  return data;\n}\n/* write or download file */\nfunction write_dl(fname /*:string*/, payload /*:any*/, enc /*:?string*/) {\n  if (typeof Deno !== 'undefined') {\n    /* in this spot, it's safe to assume typed arrays and TextEncoder/TextDecoder exist */\n    if (enc && typeof payload == \"string\") switch (enc) {\n      case \"utf8\":\n        payload = new TextEncoder(enc).encode(payload);\n        break;\n      case \"binary\":\n        payload = s2ab(payload);\n        break;\n      /* TODO: binary equivalent */\n      default:\n        throw new Error(\"Unsupported encoding \" + enc);\n    }\n    return Deno.writeFileSync(fname, payload);\n  }\n  var data = enc == \"utf8\" ? utf8write(payload) : payload;\n  /*:: declare var IE_SaveFile: any; */\n  if (typeof IE_SaveFile !== 'undefined') return IE_SaveFile(data, fname);\n  if (typeof Blob !== 'undefined') {\n    var blob = new Blob([blobify(data)], {\n      type: \"application/octet-stream\"\n    });\n    /*:: declare var navigator: any; */\n    if (typeof navigator !== 'undefined' && navigator.msSaveBlob) return navigator.msSaveBlob(blob, fname);\n    /*:: declare var saveAs: any; */\n    if (typeof saveAs !== 'undefined') return saveAs(blob, fname);\n    if (typeof URL !== 'undefined' && typeof document !== 'undefined' && document.createElement && URL.createObjectURL) {\n      var url = URL.createObjectURL(blob);\n      /*:: declare var chrome: any; */\n      if (typeof chrome === 'object' && typeof (chrome.downloads || {}).download == \"function\") {\n        if (URL.revokeObjectURL && typeof setTimeout !== 'undefined') setTimeout(function () {\n          URL.revokeObjectURL(url);\n        }, 60000);\n        return chrome.downloads.download({\n          url: url,\n          filename: fname,\n          saveAs: true\n        });\n      }\n      var a = document.createElement(\"a\");\n      if (a.download != null) {\n        /*:: if(document.body == null) throw new Error(\"unreachable\"); */\n        a.download = fname;\n        a.href = url;\n        document.body.appendChild(a);\n        a.click();\n        /*:: if(document.body == null) throw new Error(\"unreachable\"); */\n        document.body.removeChild(a);\n        if (URL.revokeObjectURL && typeof setTimeout !== 'undefined') setTimeout(function () {\n          URL.revokeObjectURL(url);\n        }, 60000);\n        return url;\n      }\n    } else if (typeof URL !== 'undefined' && !URL.createObjectURL && typeof chrome === 'object') {\n      /* manifest v3 extensions -- no URL.createObjectURL */\n      var b64 = \"data:application/octet-stream;base64,\" + Base64_encode_arr(new Uint8Array(blobify(data)));\n      return chrome.downloads.download({\n        url: b64,\n        filename: fname,\n        saveAs: true\n      });\n    }\n  }\n  // $FlowIgnore\n  if (typeof $ !== 'undefined' && typeof File !== 'undefined' && typeof Folder !== 'undefined') try {\n    // extendscript\n    // $FlowIgnore\n    var out = File(fname);\n    out.open(\"w\");\n    out.encoding = \"binary\";\n    if (Array.isArray(payload)) payload = a2s(payload);\n    out.write(payload);\n    out.close();\n    return payload;\n  } catch (e) {\n    if (!e.message || !e.message.match(/onstruct/)) throw e;\n  }\n  throw new Error(\"cannot save file \" + fname);\n}\n\n/* read binary data from file */\nfunction read_binary(path /*:string*/) {\n  if (typeof Deno !== 'undefined') return Deno.readFileSync(path);\n  // $FlowIgnore\n  if (typeof $ !== 'undefined' && typeof File !== 'undefined' && typeof Folder !== 'undefined') try {\n    // extendscript\n    // $FlowIgnore\n    var infile = File(path);\n    infile.open(\"r\");\n    infile.encoding = \"binary\";\n    var data = infile.read();\n    infile.close();\n    return data;\n  } catch (e) {\n    if (!e.message || !e.message.match(/onstruct/)) throw e;\n  }\n  throw new Error(\"Cannot access file \" + path);\n}\nfunction keys(o /*:any*/) /*:Array<any>*/{\n  var ks = Object.keys(o),\n    o2 = [];\n  for (var i = 0; i < ks.length; ++i) if (Object.prototype.hasOwnProperty.call(o, ks[i])) o2.push(ks[i]);\n  return o2;\n}\nfunction evert_key(obj /*:any*/, key /*:string*/) /*:EvertType*/{\n  var o = [] /*:any*/,\n    K = keys(obj);\n  for (var i = 0; i !== K.length; ++i) if (o[obj[K[i]][key]] == null) o[obj[K[i]][key]] = K[i];\n  return o;\n}\nfunction evert(obj /*:any*/) /*:EvertType*/{\n  var o = [] /*:any*/,\n    K = keys(obj);\n  for (var i = 0; i !== K.length; ++i) o[obj[K[i]]] = K[i];\n  return o;\n}\nfunction evert_num(obj /*:any*/) /*:EvertNumType*/{\n  var o = [] /*:any*/,\n    K = keys(obj);\n  for (var i = 0; i !== K.length; ++i) o[obj[K[i]]] = parseInt(K[i], 10);\n  return o;\n}\nfunction evert_arr(obj /*:any*/) /*:EvertArrType*/{\n  var o /*:EvertArrType*/ = [] /*:any*/,\n    K = keys(obj);\n  for (var i = 0; i !== K.length; ++i) {\n    if (o[obj[K[i]]] == null) o[obj[K[i]]] = [];\n    o[obj[K[i]]].push(K[i]);\n  }\n  return o;\n}\nvar dnthresh = /*#__PURE__*/Date.UTC(1899, 11, 30, 0, 0, 0); // -2209161600000\nvar dnthresh1 = /*#__PURE__*/Date.UTC(1899, 11, 31, 0, 0, 0); // -2209075200000\nvar dnthresh2 = /*#__PURE__*/Date.UTC(1904, 0, 1, 0, 0, 0); // -2209075200000\nfunction datenum(v /*:Date*/, date1904 /*:?boolean*/) /*:number*/{\n  var epoch = /*#__PURE__*/v.getTime();\n  var res = (epoch - dnthresh) / (24 * 60 * 60 * 1000);\n  if (date1904) {\n    res -= 1462;\n    return res < -1402 ? res - 1 : res;\n  }\n  return res < 60 ? res - 1 : res;\n}\nfunction numdate(v /*:number*/) /*:Date|number*/{\n  if (v >= 60 && v < 61) return v;\n  var out = new Date();\n  out.setTime((v > 60 ? v : v + 1) * 24 * 60 * 60 * 1000 + dnthresh);\n  return out;\n}\n\n/* ISO 8601 Duration */\nfunction parse_isodur(s) {\n  var sec = 0,\n    mt = 0,\n    time = false;\n  var m = s.match(/P([0-9\\.]+Y)?([0-9\\.]+M)?([0-9\\.]+D)?T([0-9\\.]+H)?([0-9\\.]+M)?([0-9\\.]+S)?/);\n  if (!m) throw new Error(\"|\" + s + \"| is not an ISO8601 Duration\");\n  for (var i = 1; i != m.length; ++i) {\n    if (!m[i]) continue;\n    mt = 1;\n    if (i > 3) time = true;\n    switch (m[i].slice(m[i].length - 1)) {\n      case 'Y':\n        throw new Error(\"Unsupported ISO Duration Field: \" + m[i].slice(m[i].length - 1));\n      case 'D':\n        mt *= 24;\n      /* falls through */\n      case 'H':\n        mt *= 60;\n      /* falls through */\n      case 'M':\n        if (!time) throw new Error(\"Unsupported ISO Duration Field: M\");else mt *= 60;\n    }\n    sec += mt * parseInt(m[i], 10);\n  }\n  return sec;\n}\n\n/* Blame https://bugs.chromium.org/p/v8/issues/detail?id=7863 for the regexide */\nvar pdre1 = /^(\\d+):(\\d+)(:\\d+)?(\\.\\d+)?$/; // HH:MM[:SS[.UUU]]\nvar pdre2 = /^(\\d+)-(\\d+)-(\\d+)$/; // YYYY-mm-dd\nvar pdre3 = /^(\\d+)-(\\d+)-(\\d+)[T ](\\d+):(\\d+)(:\\d+)?(\\.\\d+)?$/; // YYYY-mm-dd(T or space)HH:MM[:SS[.UUU]], sans \"Z\"\n/* parses a date string as a UTC date */\nfunction parseDate$1(str /*:string*/, date1904 /*:boolean*/) /*:Date*/{\n  if (str instanceof Date) return str;\n  var m = str.match(pdre1);\n  if (m) return new Date((date1904 ? dnthresh2 : dnthresh1) + ((parseInt(m[1], 10) * 60 + parseInt(m[2], 10)) * 60 + (m[3] ? parseInt(m[3].slice(1), 10) : 0)) * 1000 + (m[4] ? parseInt((m[4] + \"000\").slice(1, 4), 10) : 0));\n  m = str.match(pdre2);\n  if (m) return new Date(Date.UTC(+m[1], +m[2] - 1, +m[3], 0, 0, 0, 0));\n  /* TODO: 1900-02-29T00:00:00.000 should return a flag to treat as a date code (affects xlml) */\n  m = str.match(pdre3);\n  if (m) return new Date(Date.UTC(+m[1], +m[2] - 1, +m[3], +m[4], +m[5], m[6] && parseInt(m[6].slice(1), 10) || 0, m[7] && parseInt(m[7].slice(1), 10) || 0));\n  var d = new Date(str);\n  return d;\n}\nfunction cc2str(arr /*:Array<number>*/, debomit) /*:string*/{\n  if (has_buf && Buffer.isBuffer(arr)) {\n    if (debomit && buf_utf16le) {\n      // TODO: temporary patch\n      if (arr[0] == 0xFF && arr[1] == 0xFE) return utf8write(arr.slice(2).toString(\"utf16le\"));\n      if (arr[1] == 0xFE && arr[2] == 0xFF) return utf8write(utf16beread(arr.slice(2).toString(\"binary\")));\n    }\n    return arr.toString(\"binary\");\n  }\n  if (typeof TextDecoder !== \"undefined\") try {\n    if (debomit) {\n      if (arr[0] == 0xFF && arr[1] == 0xFE) return utf8write(new TextDecoder(\"utf-16le\").decode(arr.slice(2)));\n      if (arr[0] == 0xFE && arr[1] == 0xFF) return utf8write(new TextDecoder(\"utf-16be\").decode(arr.slice(2)));\n    }\n    var rev = {\n      \"\\u20ac\": \"\\x80\",\n      \"\\u201a\": \"\\x82\",\n      \"\\u0192\": \"\\x83\",\n      \"\\u201e\": \"\\x84\",\n      \"\\u2026\": \"\\x85\",\n      \"\\u2020\": \"\\x86\",\n      \"\\u2021\": \"\\x87\",\n      \"\\u02c6\": \"\\x88\",\n      \"\\u2030\": \"\\x89\",\n      \"\\u0160\": \"\\x8a\",\n      \"\\u2039\": \"\\x8b\",\n      \"\\u0152\": \"\\x8c\",\n      \"\\u017d\": \"\\x8e\",\n      \"\\u2018\": \"\\x91\",\n      \"\\u2019\": \"\\x92\",\n      \"\\u201c\": \"\\x93\",\n      \"\\u201d\": \"\\x94\",\n      \"\\u2022\": \"\\x95\",\n      \"\\u2013\": \"\\x96\",\n      \"\\u2014\": \"\\x97\",\n      \"\\u02dc\": \"\\x98\",\n      \"\\u2122\": \"\\x99\",\n      \"\\u0161\": \"\\x9a\",\n      \"\\u203a\": \"\\x9b\",\n      \"\\u0153\": \"\\x9c\",\n      \"\\u017e\": \"\\x9e\",\n      \"\\u0178\": \"\\x9f\"\n    };\n    if (Array.isArray(arr)) arr = new Uint8Array(arr);\n    return new TextDecoder(\"latin1\").decode(arr).replace(/[€‚ƒ„…†‡ˆ‰Š‹ŒŽ‘’“”•–—˜™š›œžŸ]/g, function (c) {\n      return rev[c] || c;\n    });\n  } catch (e) {}\n  var o = [],\n    i = 0;\n  // this cascade is for the browsers and runtimes of antiquity (and for modern runtimes that lack TextEncoder)\n  try {\n    for (i = 0; i < arr.length - 65536; i += 65536) o.push(String.fromCharCode.apply(0, arr.slice(i, i + 65536)));\n    o.push(String.fromCharCode.apply(0, arr.slice(i)));\n  } catch (e) {\n    try {\n      for (; i < arr.length - 16384; i += 16384) o.push(String.fromCharCode.apply(0, arr.slice(i, i + 16384)));\n      o.push(String.fromCharCode.apply(0, arr.slice(i)));\n    } catch (e) {\n      for (; i != arr.length; ++i) o.push(String.fromCharCode(arr[i]));\n    }\n  }\n  return o.join(\"\");\n}\nfunction dup(o /*:any*/) /*:any*/{\n  if (typeof JSON != 'undefined' && !Array.isArray(o)) return JSON.parse(JSON.stringify(o));\n  if (typeof o != 'object' || o == null) return o;\n  if (o instanceof Date) return new Date(o.getTime());\n  var out = {};\n  for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) out[k] = dup(o[k]);\n  return out;\n}\nfunction fill(c /*:string*/, l /*:number*/) /*:string*/{\n  var o = \"\";\n  while (o.length < l) o += c;\n  return o;\n}\n\n/* TODO: stress test */\nfunction fuzzynum(s /*:string*/) /*:number*/{\n  var v /*:number*/ = Number(s);\n  if (!isNaN(v)) return isFinite(v) ? v : NaN;\n  if (!/\\d/.test(s)) return v;\n  var wt = 1;\n  var ss = s.replace(/([\\d]),([\\d])/g, \"$1$2\").replace(/[$]/g, \"\").replace(/[%]/g, function () {\n    wt *= 100;\n    return \"\";\n  });\n  if (!isNaN(v = Number(ss))) return v / wt;\n  ss = ss.replace(/[(](.*)[)]/, function ($$, $1) {\n    wt = -wt;\n    return $1;\n  });\n  if (!isNaN(v = Number(ss))) return v / wt;\n  return v;\n}\n\n/* NOTE: Chrome rejects bare times like 1:23 PM */\nvar FDRE1 = /^(0?\\d|1[0-2])(?:|:([0-5]?\\d)(?:|(\\.\\d+)(?:|:([0-5]?\\d))|:([0-5]?\\d)(|\\.\\d+)))\\s+([ap])m?$/;\nvar FDRE2 = /^([01]?\\d|2[0-3])(?:|:([0-5]?\\d)(?:|(\\.\\d+)(?:|:([0-5]?\\d))|:([0-5]?\\d)(|\\.\\d+)))$/;\nvar FDISO = /^(\\d+)-(\\d+)-(\\d+)[T ](\\d+):(\\d+)(:\\d+)(\\.\\d+)?[Z]?$/; // YYYY-mm-dd(T or space)HH:MM:SS[.UUU][Z]\n\n/* TODO: 1904 adjustment */\nvar utc_append_works = new Date(\"6/9/69 00:00 UTC\").valueOf() == -17798400000;\nfunction fuzzytime1(M) /*:Date*/{\n  if (!M[2]) return new Date(Date.UTC(1899, 11, 31, +M[1] % 12 + (M[7] == \"p\" ? 12 : 0), 0, 0, 0));\n  if (M[3]) {\n    if (M[4]) return new Date(Date.UTC(1899, 11, 31, +M[1] % 12 + (M[7] == \"p\" ? 12 : 0), +M[2], +M[4], parseFloat(M[3]) * 1000));else return new Date(Date.UTC(1899, 11, 31, M[7] == \"p\" ? 12 : 0, +M[1], +M[2], parseFloat(M[3]) * 1000));\n  } else if (M[5]) return new Date(Date.UTC(1899, 11, 31, +M[1] % 12 + (M[7] == \"p\" ? 12 : 0), +M[2], +M[5], M[6] ? parseFloat(M[6]) * 1000 : 0));else return new Date(Date.UTC(1899, 11, 31, +M[1] % 12 + (M[7] == \"p\" ? 12 : 0), +M[2], 0, 0));\n}\nfunction fuzzytime2(M) /*:Date*/{\n  if (!M[2]) return new Date(Date.UTC(1899, 11, 31, +M[1], 0, 0, 0));\n  if (M[3]) {\n    if (M[4]) return new Date(Date.UTC(1899, 11, 31, +M[1], +M[2], +M[4], parseFloat(M[3]) * 1000));else return new Date(Date.UTC(1899, 11, 31, 0, +M[1], +M[2], parseFloat(M[3]) * 1000));\n  } else if (M[5]) return new Date(Date.UTC(1899, 11, 31, +M[1], +M[2], +M[5], M[6] ? parseFloat(M[6]) * 1000 : 0));else return new Date(Date.UTC(1899, 11, 31, +M[1], +M[2], 0, 0));\n}\nvar lower_months = ['january', 'february', 'march', 'april', 'may', 'june', 'july', 'august', 'september', 'october', 'november', 'december'];\nfunction fuzzydate(s /*:string*/) /*:Date*/{\n  // See issue 2863 -- this is technically not supported in Excel but is otherwise useful\n  if (FDISO.test(s)) return s.indexOf(\"Z\") == -1 ? local_to_utc(new Date(s)) : new Date(s);\n  var lower = s.toLowerCase();\n  var lnos = lower.replace(/\\s+/g, \" \").trim();\n  var M = lnos.match(FDRE1);\n  if (M) return fuzzytime1(M);\n  M = lnos.match(FDRE2);\n  if (M) return fuzzytime2(M);\n  M = lnos.match(pdre3);\n  if (M) return new Date(Date.UTC(+M[1], +M[2] - 1, +M[3], +M[4], +M[5], M[6] && parseInt(M[6].slice(1), 10) || 0, M[7] && parseInt(M[7].slice(1), 10) || 0));\n  var o = new Date(utc_append_works && s.indexOf(\"UTC\") == -1 ? s + \" UTC\" : s),\n    n = new Date(NaN);\n  var y = o.getYear();\n  o.getMonth();\n  var d = o.getDate();\n  if (isNaN(d)) return n;\n  if (lower.match(/jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec/)) {\n    lower = lower.replace(/[^a-z]/g, \"\").replace(/([^a-z]|^)[ap]m?([^a-z]|$)/, \"\");\n    if (lower.length > 3 && lower_months.indexOf(lower) == -1) return n;\n  } else if (lower.replace(/[ap]m?/, \"\").match(/[a-z]/)) return n;\n  if (y < 0 || y > 8099 || s.match(/[^-0-9:,\\/\\\\\\ ]/)) return n;\n  return o;\n}\nvar split_regex = /*#__PURE__*/function () {\n  var safe_split_regex = \"abacaba\".split(/(:?b)/i).length == 5;\n  return function split_regex(str /*:string*/, re, def /*:string*/) /*:Array<string>*/{\n    if (safe_split_regex || typeof re == \"string\") return str.split(re);\n    var p = str.split(re),\n      o = [p[0]];\n    for (var i = 1; i < p.length; ++i) {\n      o.push(def);\n      o.push(p[i]);\n    }\n    return o;\n  };\n}();\nfunction utc_to_local(utc) {\n  return new Date(utc.getUTCFullYear(), utc.getUTCMonth(), utc.getUTCDate(), utc.getUTCHours(), utc.getUTCMinutes(), utc.getUTCSeconds(), utc.getUTCMilliseconds());\n}\nfunction local_to_utc(local) {\n  return new Date(Date.UTC(local.getFullYear(), local.getMonth(), local.getDate(), local.getHours(), local.getMinutes(), local.getSeconds(), local.getMilliseconds()));\n}\nfunction getdatastr(data) /*:?string*/{\n  if (!data) return null;\n  if (data.content && data.type) return cc2str(data.content, true);\n  if (data.data) return debom(data.data);\n  if (data.asNodeBuffer && has_buf) return debom(data.asNodeBuffer().toString('binary'));\n  if (data.asBinary) return debom(data.asBinary());\n  if (data._data && data._data.getContent) return debom(cc2str(Array.prototype.slice.call(data._data.getContent(), 0)));\n  return null;\n}\nfunction getdatabin(data) {\n  if (!data) return null;\n  if (data.data) return char_codes(data.data);\n  if (data.asNodeBuffer && has_buf) return data.asNodeBuffer();\n  if (data._data && data._data.getContent) {\n    var o = data._data.getContent();\n    if (typeof o == \"string\") return char_codes(o);\n    return Array.prototype.slice.call(o);\n  }\n  if (data.content && data.type) return data.content;\n  return null;\n}\nfunction getdata(data) {\n  return data && data.name.slice(-4) === \".bin\" ? getdatabin(data) : getdatastr(data);\n}\n\n/* Part 2 Section 10.1.2 \"Mapping Content Types\" Names are case-insensitive */\n/* OASIS does not comment on filename case sensitivity */\nfunction safegetzipfile(zip, file /*:string*/) {\n  var k = zip.FullPaths || keys(zip.files);\n  var f = file.toLowerCase().replace(/[\\/]/g, '\\\\'),\n    g = f.replace(/\\\\/g, '\\/');\n  for (var i = 0; i < k.length; ++i) {\n    var n = k[i].replace(/^Root Entry[\\/]/, \"\").toLowerCase();\n    if (f == n || g == n) return zip.files ? zip.files[k[i]] : zip.FileIndex[i];\n  }\n  return null;\n}\nfunction getzipfile(zip, file /*:string*/) {\n  var o = safegetzipfile(zip, file);\n  if (o == null) throw new Error(\"Cannot find file \" + file + \" in zip\");\n  return o;\n}\nfunction getzipdata(zip, file /*:string*/, safe /*:?boolean*/) /*:any*/{\n  if (!safe) return getdata(getzipfile(zip, file));\n  if (!file) return null;\n  try {\n    return getzipdata(zip, file);\n  } catch (e) {\n    return null;\n  }\n}\nfunction getzipstr(zip, file /*:string*/, safe /*:?boolean*/) /*:?string*/{\n  if (!safe) return getdatastr(getzipfile(zip, file));\n  if (!file) return null;\n  try {\n    return getzipstr(zip, file);\n  } catch (e) {\n    return null;\n  }\n}\nfunction getzipbin(zip, file /*:string*/, safe /*:?boolean*/) /*:any*/{\n  if (!safe) return getdatabin(getzipfile(zip, file));\n  if (!file) return null;\n  try {\n    return getzipbin(zip, file);\n  } catch (e) {\n    return null;\n  }\n}\nfunction zipentries(zip) {\n  var k = zip.FullPaths || keys(zip.files),\n    o = [];\n  for (var i = 0; i < k.length; ++i) if (k[i].slice(-1) != '/') o.push(k[i].replace(/^Root Entry[\\/]/, \"\"));\n  return o.sort();\n}\nfunction zip_add_file(zip, path, content) {\n  if (zip.FullPaths) {\n    if (typeof content == \"string\") {\n      var res;\n      if (has_buf) res = Buffer_from(content);\n      /* TODO: investigate performance in Edge 13 */\n      //else if(typeof TextEncoder !== \"undefined\") res = new TextEncoder().encode(content);\n      else res = utf8decode(content);\n      return CFB.utils.cfb_add(zip, path, res);\n    }\n    CFB.utils.cfb_add(zip, path, content);\n  } else zip.file(path, content);\n}\nfunction zip_new() {\n  return CFB.utils.cfb_new();\n}\nfunction zip_read(d, o) {\n  switch (o.type) {\n    case \"base64\":\n      return CFB.read(d, {\n        type: \"base64\"\n      });\n    case \"binary\":\n      return CFB.read(d, {\n        type: \"binary\"\n      });\n    case \"buffer\":\n    case \"array\":\n      return CFB.read(d, {\n        type: \"buffer\"\n      });\n  }\n  throw new Error(\"Unrecognized type \" + o.type);\n}\nfunction resolve_path(path /*:string*/, base /*:string*/) /*:string*/{\n  if (path.charAt(0) == \"/\") return path.slice(1);\n  var result = base.split('/');\n  if (base.slice(-1) != \"/\") result.pop(); // folder path\n  var target = path.split('/');\n  while (target.length !== 0) {\n    var step = target.shift();\n    if (step === '..') result.pop();else if (step !== '.') result.push(step);\n  }\n  return result.join('/');\n}\nvar XML_HEADER = '<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\\r\\n';\nvar attregexg = /([^\"\\s?>\\/]+)\\s*=\\s*((?:\")([^\"]*)(?:\")|(?:')([^']*)(?:')|([^'\">\\s]+))/g;\nvar tagregex1 = /<[\\/\\?]?[a-zA-Z0-9:_-]+(?:\\s+[^\"\\s?>\\/]+\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^'\">\\s=]+))*\\s*[\\/\\?]?>/mg,\n  tagregex2 = /<[^>]*>/g;\nvar tagregex = /*#__PURE__*/XML_HEADER.match(tagregex1) ? tagregex1 : tagregex2;\nvar nsregex = /<\\w*:/,\n  nsregex2 = /<(\\/?)\\w+:/;\nfunction parsexmltag(tag /*:string*/, skip_root /*:?boolean*/, skip_LC /*:?boolean*/) /*:any*/{\n  var z = {} /*:any*/;\n  var eq = 0,\n    c = 0;\n  for (; eq !== tag.length; ++eq) if ((c = tag.charCodeAt(eq)) === 32 || c === 10 || c === 13) break;\n  if (!skip_root) z[0] = tag.slice(0, eq);\n  if (eq === tag.length) return z;\n  var m = tag.match(attregexg),\n    j = 0,\n    v = \"\",\n    i = 0,\n    q = \"\",\n    cc = \"\",\n    quot = 1;\n  if (m) for (i = 0; i != m.length; ++i) {\n    cc = m[i];\n    for (c = 0; c != cc.length; ++c) if (cc.charCodeAt(c) === 61) break;\n    q = cc.slice(0, c).trim();\n    while (cc.charCodeAt(c + 1) == 32) ++c;\n    quot = (eq = cc.charCodeAt(c + 1)) == 34 || eq == 39 ? 1 : 0;\n    v = cc.slice(c + 1 + quot, cc.length - quot);\n    for (j = 0; j != q.length; ++j) if (q.charCodeAt(j) === 58) break;\n    if (j === q.length) {\n      if (q.indexOf(\"_\") > 0) q = q.slice(0, q.indexOf(\"_\")); // from ods\n      z[q] = v;\n      if (!skip_LC) z[q.toLowerCase()] = v;\n    } else {\n      var k = (j === 5 && q.slice(0, 5) === \"xmlns\" ? \"xmlns\" : \"\") + q.slice(j + 1);\n      if (z[k] && q.slice(j - 3, j) == \"ext\") continue; // from ods\n      z[k] = v;\n      if (!skip_LC) z[k.toLowerCase()] = v;\n    }\n  }\n  return z;\n}\nfunction strip_ns(x /*:string*/) /*:string*/{\n  return x.replace(nsregex2, \"<$1\");\n}\nvar encodings = {\n  '&quot;': '\"',\n  '&apos;': \"'\",\n  '&gt;': '>',\n  '&lt;': '<',\n  '&amp;': '&'\n};\nvar rencoding = /*#__PURE__*/evert(encodings);\n//var rencstr = \"&<>'\\\"\".split(\"\");\n\n// TODO: CP remap (need to read file version to determine OS)\nvar unescapexml /*:StringConv*/ = /*#__PURE__*/function () {\n  /* 22.4.2.4 bstr (Basic String) */\n  var encregex = /&(?:quot|apos|gt|lt|amp|#x?([\\da-fA-F]+));/ig,\n    coderegex = /_x([\\da-fA-F]{4})_/ig;\n  function raw_unescapexml(text /*:string*/) /*:string*/{\n    var s = text + '',\n      i = s.indexOf(\"<![CDATA[\");\n    if (i == -1) return s.replace(encregex, function ($$, $1) {\n      return encodings[$$] || String.fromCharCode(parseInt($1, $$.indexOf(\"x\") > -1 ? 16 : 10)) || $$;\n    }).replace(coderegex, function (m, c) {\n      return String.fromCharCode(parseInt(c, 16));\n    });\n    var j = s.indexOf(\"]]>\");\n    return raw_unescapexml(s.slice(0, i)) + s.slice(i + 9, j) + raw_unescapexml(s.slice(j + 3));\n  }\n  return function unescapexml(text /*:string*/, xlsx /*:boolean*/) {\n    var out = raw_unescapexml(text);\n    return xlsx ? out.replace(/\\r\\n/g, \"\\n\") : out;\n  };\n}();\nvar decregex = /[&<>'\"]/g,\n  charegex = /[\\u0000-\\u0008\\u000b-\\u001f\\uFFFE-\\uFFFF]/g;\nfunction escapexml(text /*:string*/) /*:string*/{\n  var s = text + '';\n  return s.replace(decregex, function (y) {\n    return rencoding[y];\n  }).replace(charegex, function (s) {\n    return \"_x\" + (\"000\" + s.charCodeAt(0).toString(16)).slice(-4) + \"_\";\n  });\n}\nfunction escapexmltag(text /*:string*/) /*:string*/{\n  return escapexml(text).replace(/ /g, \"_x0020_\");\n}\nvar htmlcharegex = /[\\u0000-\\u001f]/g;\nfunction escapehtml(text /*:string*/) /*:string*/{\n  var s = text + '';\n  return s.replace(decregex, function (y) {\n    return rencoding[y];\n  }).replace(/\\n/g, \"<br/>\").replace(htmlcharegex, function (s) {\n    return \"&#x\" + (\"000\" + s.charCodeAt(0).toString(16)).slice(-4) + \";\";\n  });\n}\nfunction escapexlml(text /*:string*/) /*:string*/{\n  var s = text + '';\n  return s.replace(decregex, function (y) {\n    return rencoding[y];\n  }).replace(htmlcharegex, function (s) {\n    return \"&#x\" + s.charCodeAt(0).toString(16).toUpperCase() + \";\";\n  });\n}\n\n/* TODO: handle codepages */\nvar xlml_fixstr /*:StringConv*/ = /*#__PURE__*/function () {\n  var entregex = /&#(\\d+);/g;\n  function entrepl($$ /*:string*/, $1 /*:string*/) /*:string*/{\n    return String.fromCharCode(parseInt($1, 10));\n  }\n  return function xlml_fixstr(str /*:string*/) /*:string*/{\n    return str.replace(entregex, entrepl);\n  };\n}();\nfunction xlml_unfixstr(str /*:string*/) /*:string*/{\n  return str.replace(/(\\r\\n|[\\r\\n])/g, \"\\&#10;\");\n}\n\n/* note: xsd:boolean valid values: true / 1 / false / 0 */\nfunction parsexmlbool(value /*:any*/) /*:boolean*/{\n  switch (value) {\n    case 1:\n    case true:\n    case '1':\n    case 'true':\n      return true;\n    case 0:\n    case false:\n    case '0':\n    case 'false':\n      return false;\n    //default: throw new Error(\"Invalid xsd:boolean \" + value);\n  }\n\n  return false;\n}\nfunction utf8reada(orig /*:string*/) /*:string*/{\n  var out = \"\",\n    i = 0,\n    c = 0,\n    d = 0,\n    e = 0,\n    f = 0,\n    w = 0;\n  while (i < orig.length) {\n    c = orig.charCodeAt(i++);\n    if (c < 128) {\n      out += String.fromCharCode(c);\n      continue;\n    }\n    d = orig.charCodeAt(i++);\n    if (c > 191 && c < 224) {\n      f = (c & 31) << 6;\n      f |= d & 63;\n      out += String.fromCharCode(f);\n      continue;\n    }\n    e = orig.charCodeAt(i++);\n    if (c < 240) {\n      out += String.fromCharCode((c & 15) << 12 | (d & 63) << 6 | e & 63);\n      continue;\n    }\n    f = orig.charCodeAt(i++);\n    w = ((c & 7) << 18 | (d & 63) << 12 | (e & 63) << 6 | f & 63) - 65536;\n    out += String.fromCharCode(0xD800 + (w >>> 10 & 1023));\n    out += String.fromCharCode(0xDC00 + (w & 1023));\n  }\n  return out;\n}\nfunction utf8readb(data) {\n  var out = new_raw_buf(2 * data.length),\n    w,\n    i,\n    j = 1,\n    k = 0,\n    ww = 0,\n    c;\n  for (i = 0; i < data.length; i += j) {\n    j = 1;\n    if ((c = data.charCodeAt(i)) < 128) w = c;else if (c < 224) {\n      w = (c & 31) * 64 + (data.charCodeAt(i + 1) & 63);\n      j = 2;\n    } else if (c < 240) {\n      w = (c & 15) * 4096 + (data.charCodeAt(i + 1) & 63) * 64 + (data.charCodeAt(i + 2) & 63);\n      j = 3;\n    } else {\n      j = 4;\n      w = (c & 7) * 262144 + (data.charCodeAt(i + 1) & 63) * 4096 + (data.charCodeAt(i + 2) & 63) * 64 + (data.charCodeAt(i + 3) & 63);\n      w -= 65536;\n      ww = 0xD800 + (w >>> 10 & 1023);\n      w = 0xDC00 + (w & 1023);\n    }\n    if (ww !== 0) {\n      out[k++] = ww & 255;\n      out[k++] = ww >>> 8;\n      ww = 0;\n    }\n    out[k++] = w % 256;\n    out[k++] = w >>> 8;\n  }\n  return out.slice(0, k).toString('ucs2');\n}\nfunction utf8readc(data) {\n  return Buffer_from(data, 'binary').toString('utf8');\n}\nvar utf8corpus = \"foo bar baz\\u00e2\\u0098\\u0083\\u00f0\\u009f\\u008d\\u00a3\";\nvar utf8read = has_buf && ( /*#__PURE__*/utf8readc(utf8corpus) == /*#__PURE__*/utf8reada(utf8corpus) && utf8readc || /*#__PURE__*/utf8readb(utf8corpus) == /*#__PURE__*/utf8reada(utf8corpus) && utf8readb) || utf8reada;\nvar utf8write /*:StringConv*/ = has_buf ? function (data) {\n  return Buffer_from(data, 'utf8').toString(\"binary\");\n} : function (orig /*:string*/) /*:string*/{\n  var out /*:Array<string>*/ = [],\n    i = 0,\n    c = 0,\n    d = 0;\n  while (i < orig.length) {\n    c = orig.charCodeAt(i++);\n    switch (true) {\n      case c < 128:\n        out.push(String.fromCharCode(c));\n        break;\n      case c < 2048:\n        out.push(String.fromCharCode(192 + (c >> 6)));\n        out.push(String.fromCharCode(128 + (c & 63)));\n        break;\n      case c >= 55296 && c < 57344:\n        c -= 55296;\n        d = orig.charCodeAt(i++) - 56320 + (c << 10);\n        out.push(String.fromCharCode(240 + (d >> 18 & 7)));\n        out.push(String.fromCharCode(144 + (d >> 12 & 63)));\n        out.push(String.fromCharCode(128 + (d >> 6 & 63)));\n        out.push(String.fromCharCode(128 + (d & 63)));\n        break;\n      default:\n        out.push(String.fromCharCode(224 + (c >> 12)));\n        out.push(String.fromCharCode(128 + (c >> 6 & 63)));\n        out.push(String.fromCharCode(128 + (c & 63)));\n    }\n  }\n  return out.join(\"\");\n};\n\n// matches <foo>...</foo> extracts content\nvar matchtag = /*#__PURE__*/function () {\n  var mtcache /*:{[k:string]:RegExp}*/ = {} /*:any*/;\n  return function matchtag(f /*:string*/, g /*:?string*/) /*:RegExp*/{\n    var t = f + \"|\" + (g || \"\");\n    if (mtcache[t]) return mtcache[t];\n    return mtcache[t] = new RegExp('<(?:\\\\w+:)?' + f + '(?: xml:space=\"preserve\")?(?:[^>]*)>([\\\\s\\\\S]*?)</(?:\\\\w+:)?' + f + '>', g || \"\" /*:any*/);\n  };\n}();\n\nvar htmldecode /*:{(s:string):string}*/ = /*#__PURE__*/function () {\n  var entities /*:Array<[RegExp, string]>*/ = [['nbsp', ' '], ['middot', '·'], ['quot', '\"'], ['apos', \"'\"], ['gt', '>'], ['lt', '<'], ['amp', '&']].map(function (x /*:[string, string]*/) {\n    return [new RegExp('&' + x[0] + ';', \"ig\"), x[1]];\n  });\n  return function htmldecode(str /*:string*/) /*:string*/{\n    var o = str\n    // Remove new lines and spaces from start of content\n    .replace(/^[\\t\\n\\r ]+/, \"\")\n    // Remove new lines and spaces from end of content\n    .replace(/[\\t\\n\\r ]+$/, \"\")\n    // Added line which removes any white space characters after and before html tags\n    .replace(/>\\s+/g, \">\").replace(/\\s+</g, \"<\")\n    // Replace remaining new lines and spaces with space\n    .replace(/[\\t\\n\\r ]+/g, \" \")\n    // Replace <br> tags with new lines\n    .replace(/<\\s*[bB][rR]\\s*\\/?>/g, \"\\n\")\n    // Strip HTML elements\n    .replace(/<[^>]*>/g, \"\");\n    for (var i = 0; i < entities.length; ++i) o = o.replace(entities[i][0], entities[i][1]);\n    return o;\n  };\n}();\nvar vtregex = /*#__PURE__*/function () {\n  var vt_cache = {};\n  return function vt_regex(bt) {\n    if (vt_cache[bt] !== undefined) return vt_cache[bt];\n    return vt_cache[bt] = new RegExp(\"<(?:vt:)?\" + bt + \">([\\\\s\\\\S]*?)</(?:vt:)?\" + bt + \">\", 'g');\n  };\n}();\nvar vtvregex = /<\\/?(?:vt:)?variant>/g,\n  vtmregex = /<(?:vt:)([^>]*)>([\\s\\S]*)</;\nfunction parseVector(data /*:string*/, opts) /*:Array<{v:string,t:string}>*/{\n  var h = parsexmltag(data);\n  var matches /*:Array<string>*/ = data.match(vtregex(h.baseType)) || [];\n  var res /*:Array<any>*/ = [];\n  if (matches.length != h.size) {\n    if (opts.WTF) throw new Error(\"unexpected vector length \" + matches.length + \" != \" + h.size);\n    return res;\n  }\n  matches.forEach(function (x /*:string*/) {\n    var v = x.replace(vtvregex, \"\").match(vtmregex);\n    if (v) res.push({\n      v: utf8read(v[2]),\n      t: v[1]\n    });\n  });\n  return res;\n}\nvar wtregex = /(^\\s|\\s$|\\n)/;\nfunction writetag(f /*:string*/, g /*:string*/) /*:string*/{\n  return '<' + f + (g.match(wtregex) ? ' xml:space=\"preserve\"' : \"\") + '>' + g + '</' + f + '>';\n}\nfunction wxt_helper(h) /*:string*/{\n  return keys(h).map(function (k) {\n    return \" \" + k + '=\"' + h[k] + '\"';\n  }).join(\"\");\n}\nfunction writextag(f /*:string*/, g /*:?string*/, h) {\n  return '<' + f + (h != null ? wxt_helper(h) : \"\") + (g != null ? (g.match(wtregex) ? ' xml:space=\"preserve\"' : \"\") + '>' + g + '</' + f : \"/\") + '>';\n}\nfunction write_w3cdtf(d /*:Date*/, t /*:?boolean*/) /*:string*/{\n  try {\n    return d.toISOString().replace(/\\.\\d*/, \"\");\n  } catch (e) {\n    if (t) throw e;\n  }\n  return \"\";\n}\nfunction write_vt(s, xlsx /*:?boolean*/) /*:string*/{\n  switch (typeof s) {\n    case 'string':\n      var o = writextag('vt:lpwstr', escapexml(s));\n      if (xlsx) o = o.replace(/&quot;/g, \"_x0022_\");\n      return o;\n    case 'number':\n      return writextag((s | 0) == s ? 'vt:i4' : 'vt:r8', escapexml(String(s)));\n    case 'boolean':\n      return writextag('vt:bool', s ? 'true' : 'false');\n  }\n  if (s instanceof Date) return writextag('vt:filetime', write_w3cdtf(s));\n  throw new Error(\"Unable to serialize \" + s);\n}\nfunction xlml_normalize(d) /*:string*/{\n  if (has_buf && /*::typeof Buffer !== \"undefined\" && d != null && d instanceof Buffer &&*/Buffer.isBuffer(d)) return d.toString('utf8');\n  if (typeof d === 'string') return d;\n  /* duktape */\n  if (typeof Uint8Array !== 'undefined' && d instanceof Uint8Array) return utf8read(a2s(ab2a(d)));\n  throw new Error(\"Bad input format: expected Buffer or string\");\n}\n/* UOS uses CJK in tags */\nvar xlmlregex = /<(\\/?)([^\\s?><!\\/:]*:|)([^\\s?<>:\\/]+)(?:[\\s?:\\/](?:[^>=]|=\"[^\"]*?\")*)?>/mg;\n//var xlmlregex = /<(\\/?)([a-z0-9]*:|)(\\w+)[^>]*>/mg;\n\nvar XMLNS = {\n  CORE_PROPS: 'http://schemas.openxmlformats.org/package/2006/metadata/core-properties',\n  CUST_PROPS: \"http://schemas.openxmlformats.org/officeDocument/2006/custom-properties\",\n  EXT_PROPS: \"http://schemas.openxmlformats.org/officeDocument/2006/extended-properties\",\n  CT: 'http://schemas.openxmlformats.org/package/2006/content-types',\n  RELS: 'http://schemas.openxmlformats.org/package/2006/relationships',\n  TCMNT: 'http://schemas.microsoft.com/office/spreadsheetml/2018/threadedcomments',\n  'dc': 'http://purl.org/dc/elements/1.1/',\n  'dcterms': 'http://purl.org/dc/terms/',\n  'dcmitype': 'http://purl.org/dc/dcmitype/',\n  'mx': 'http://schemas.microsoft.com/office/mac/excel/2008/main',\n  'r': 'http://schemas.openxmlformats.org/officeDocument/2006/relationships',\n  'sjs': 'http://schemas.openxmlformats.org/package/2006/sheetjs/core-properties',\n  'vt': 'http://schemas.openxmlformats.org/officeDocument/2006/docPropsVTypes',\n  'xsi': 'http://www.w3.org/2001/XMLSchema-instance',\n  'xsd': 'http://www.w3.org/2001/XMLSchema'\n} /*:any*/;\n\nvar XMLNS_main = ['http://schemas.openxmlformats.org/spreadsheetml/2006/main', 'http://purl.oclc.org/ooxml/spreadsheetml/main', 'http://schemas.microsoft.com/office/excel/2006/main', 'http://schemas.microsoft.com/office/excel/2006/2'];\nvar XLMLNS = {\n  'o': 'urn:schemas-microsoft-com:office:office',\n  'x': 'urn:schemas-microsoft-com:office:excel',\n  'ss': 'urn:schemas-microsoft-com:office:spreadsheet',\n  'dt': 'uuid:C2F41010-65B3-11d1-A29F-00AA00C14882',\n  'mv': 'http://macVmlSchemaUri',\n  'v': 'urn:schemas-microsoft-com:vml',\n  'html': 'http://www.w3.org/TR/REC-html40'\n} /*:any*/;\nfunction read_double_le(b /*:RawBytes|CFBlob*/, idx /*:number*/) /*:number*/{\n  var s = 1 - 2 * (b[idx + 7] >>> 7);\n  var e = ((b[idx + 7] & 0x7f) << 4) + (b[idx + 6] >>> 4 & 0x0f);\n  var m = b[idx + 6] & 0x0f;\n  for (var i = 5; i >= 0; --i) m = m * 256 + b[idx + i];\n  if (e == 0x7ff) return m == 0 ? s * Infinity : NaN;\n  if (e == 0) e = -1022;else {\n    e -= 1023;\n    m += Math.pow(2, 52);\n  }\n  return s * Math.pow(2, e - 52) * m;\n}\nfunction write_double_le(b /*:RawBytes|CFBlob*/, v /*:number*/, idx /*:number*/) {\n  var bs = (v < 0 || 1 / v == -Infinity ? 1 : 0) << 7,\n    e = 0,\n    m = 0;\n  var av = bs ? -v : v;\n  if (!isFinite(av)) {\n    e = 0x7ff;\n    m = isNaN(v) ? 0x6969 : 0;\n  } else if (av == 0) e = m = 0;else {\n    e = Math.floor(Math.log(av) / Math.LN2);\n    m = av * Math.pow(2, 52 - e);\n    if (e <= -1023 && (!isFinite(m) || m < Math.pow(2, 52))) {\n      e = -1022;\n    } else {\n      m -= Math.pow(2, 52);\n      e += 1023;\n    }\n  }\n  for (var i = 0; i <= 5; ++i, m /= 256) b[idx + i] = m & 0xff;\n  b[idx + 6] = (e & 0x0f) << 4 | m & 0xf;\n  b[idx + 7] = e >> 4 | bs;\n}\nvar ___toBuffer = function (bufs /*:Array<Array<RawBytes> >*/) /*:RawBytes*/{\n  var x = [],\n    w = 10240;\n  for (var i = 0; i < bufs[0].length; ++i) if (bufs[0][i]) for (var j = 0, L = bufs[0][i].length; j < L; j += w) x.push.apply(x, bufs[0][i].slice(j, j + w));\n  return x;\n};\nvar __toBuffer = has_buf ? function (bufs) {\n  return bufs[0].length > 0 && Buffer.isBuffer(bufs[0][0]) ? Buffer.concat(bufs[0].map(function (x) {\n    return Buffer.isBuffer(x) ? x : Buffer_from(x);\n  })) : ___toBuffer(bufs);\n} : ___toBuffer;\nvar ___utf16le = function (b /*:RawBytes|CFBlob*/, s /*:number*/, e /*:number*/) /*:string*/{\n  var ss /*:Array<string>*/ = [];\n  for (var i = s; i < e; i += 2) ss.push(String.fromCharCode(__readUInt16LE(b, i)));\n  return ss.join(\"\").replace(chr0, '');\n};\nvar __utf16le = has_buf ? function (b /*:RawBytes|CFBlob*/, s /*:number*/, e /*:number*/) /*:string*/{\n  if (!Buffer.isBuffer(b) /*:: || !(b instanceof Buffer)*/ || !buf_utf16le) return ___utf16le(b, s, e);\n  return b.toString('utf16le', s, e).replace(chr0, '') /*.replace(chr1,'!')*/;\n} : ___utf16le;\nvar ___hexlify = function (b /*:RawBytes|CFBlob*/, s /*:number*/, l /*:number*/) /*:string*/{\n  var ss /*:Array<string>*/ = [];\n  for (var i = s; i < s + l; ++i) ss.push((\"0\" + b[i].toString(16)).slice(-2));\n  return ss.join(\"\");\n};\nvar __hexlify = has_buf ? function (b /*:RawBytes|CFBlob*/, s /*:number*/, l /*:number*/) /*:string*/{\n  return Buffer.isBuffer(b) /*:: && b instanceof Buffer*/ ? b.toString('hex', s, s + l) : ___hexlify(b, s, l);\n} : ___hexlify;\nvar ___utf8 = function (b /*:RawBytes|CFBlob*/, s /*:number*/, e /*:number*/) {\n  var ss = [];\n  for (var i = s; i < e; i++) ss.push(String.fromCharCode(__readUInt8(b, i)));\n  return ss.join(\"\");\n};\nvar __utf8 = has_buf ? function utf8_b(b /*:RawBytes|CFBlob*/, s /*:number*/, e /*:number*/) {\n  return Buffer.isBuffer(b) /*:: && (b instanceof Buffer)*/ ? b.toString('utf8', s, e) : ___utf8(b, s, e);\n} : ___utf8;\nvar ___lpstr = function (b /*:RawBytes|CFBlob*/, i /*:number*/) {\n  var len = __readUInt32LE(b, i);\n  return len > 0 ? __utf8(b, i + 4, i + 4 + len - 1) : \"\";\n};\nvar __lpstr = ___lpstr;\nvar ___cpstr = function (b /*:RawBytes|CFBlob*/, i /*:number*/) {\n  var len = __readUInt32LE(b, i);\n  return len > 0 ? __utf8(b, i + 4, i + 4 + len - 1) : \"\";\n};\nvar __cpstr = ___cpstr;\nvar ___lpwstr = function (b /*:RawBytes|CFBlob*/, i /*:number*/) {\n  var len = 2 * __readUInt32LE(b, i);\n  return len > 0 ? __utf8(b, i + 4, i + 4 + len - 1) : \"\";\n};\nvar __lpwstr = ___lpwstr;\nvar ___lpp4 = function lpp4_(b /*:RawBytes|CFBlob*/, i /*:number*/) {\n  var len = __readUInt32LE(b, i);\n  return len > 0 ? __utf16le(b, i + 4, i + 4 + len) : \"\";\n};\nvar __lpp4 = ___lpp4;\nvar ___8lpp4 = function (b /*:RawBytes|CFBlob*/, i /*:number*/) {\n  var len = __readUInt32LE(b, i);\n  return len > 0 ? __utf8(b, i + 4, i + 4 + len) : \"\";\n};\nvar __8lpp4 = ___8lpp4;\nvar ___double = function (b /*:RawBytes|CFBlob*/, idx /*:number*/) {\n  return read_double_le(b, idx);\n};\nvar __double = ___double;\nvar is_buf = function is_buf_a(a) {\n  return Array.isArray(a) || typeof Uint8Array !== \"undefined\" && a instanceof Uint8Array;\n};\nif (has_buf /*:: && typeof Buffer !== 'undefined'*/) {\n  __lpstr = function lpstr_b(b /*:RawBytes|CFBlob*/, i /*:number*/) {\n    if (!Buffer.isBuffer(b) /*:: || !(b instanceof Buffer)*/) return ___lpstr(b, i);\n    var len = b.readUInt32LE(i);\n    return len > 0 ? b.toString('utf8', i + 4, i + 4 + len - 1) : \"\";\n  };\n  __cpstr = function cpstr_b(b /*:RawBytes|CFBlob*/, i /*:number*/) {\n    if (!Buffer.isBuffer(b) /*:: || !(b instanceof Buffer)*/) return ___cpstr(b, i);\n    var len = b.readUInt32LE(i);\n    return len > 0 ? b.toString('utf8', i + 4, i + 4 + len - 1) : \"\";\n  };\n  __lpwstr = function lpwstr_b(b /*:RawBytes|CFBlob*/, i /*:number*/) {\n    if (!Buffer.isBuffer(b) /*:: || !(b instanceof Buffer)*/ || !buf_utf16le) return ___lpwstr(b, i);\n    var len = 2 * b.readUInt32LE(i);\n    return b.toString('utf16le', i + 4, i + 4 + len - 1);\n  };\n  __lpp4 = function lpp4_b(b /*:RawBytes|CFBlob*/, i /*:number*/) {\n    if (!Buffer.isBuffer(b) /*:: || !(b instanceof Buffer)*/ || !buf_utf16le) return ___lpp4(b, i);\n    var len = b.readUInt32LE(i);\n    return b.toString('utf16le', i + 4, i + 4 + len);\n  };\n  __8lpp4 = function lpp4_8b(b /*:RawBytes|CFBlob*/, i /*:number*/) {\n    if (!Buffer.isBuffer(b) /*:: || !(b instanceof Buffer)*/) return ___8lpp4(b, i);\n    var len = b.readUInt32LE(i);\n    return b.toString('utf8', i + 4, i + 4 + len);\n  };\n  __double = function double_(b /*:RawBytes|CFBlob*/, i /*:number*/) {\n    if (Buffer.isBuffer(b) /*::&& b instanceof Buffer*/) return b.readDoubleLE(i);\n    return ___double(b, i);\n  };\n  is_buf = function is_buf_b(a) {\n    return Buffer.isBuffer(a) || Array.isArray(a) || typeof Uint8Array !== \"undefined\" && a instanceof Uint8Array;\n  };\n}\nvar __readUInt8 = function (b /*:RawBytes|CFBlob*/, idx /*:number*/) /*:number*/{\n  return b[idx];\n};\nvar __readUInt16LE = function (b /*:RawBytes|CFBlob*/, idx /*:number*/) /*:number*/{\n  return b[idx + 1] * (1 << 8) + b[idx];\n};\nvar __readInt16LE = function (b /*:RawBytes|CFBlob*/, idx /*:number*/) /*:number*/{\n  var u = b[idx + 1] * (1 << 8) + b[idx];\n  return u < 0x8000 ? u : (0xffff - u + 1) * -1;\n};\nvar __readUInt32LE = function (b /*:RawBytes|CFBlob*/, idx /*:number*/) /*:number*/{\n  return b[idx + 3] * (1 << 24) + (b[idx + 2] << 16) + (b[idx + 1] << 8) + b[idx];\n};\nvar __readInt32LE = function (b /*:RawBytes|CFBlob*/, idx /*:number*/) /*:number*/{\n  return b[idx + 3] << 24 | b[idx + 2] << 16 | b[idx + 1] << 8 | b[idx];\n};\nvar __readInt32BE = function (b /*:RawBytes|CFBlob*/, idx /*:number*/) /*:number*/{\n  return b[idx] << 24 | b[idx + 1] << 16 | b[idx + 2] << 8 | b[idx + 3];\n};\nfunction ReadShift(size /*:number*/, t /*:?string*/) /*:number|string*/{\n  var o = \"\",\n    oI /*:: :number = 0*/,\n    oR,\n    oo = [],\n    w,\n    vv,\n    i,\n    loc;\n  switch (t) {\n    case 'dbcs':\n      loc = this.l;\n      if (has_buf && Buffer.isBuffer(this) && buf_utf16le) o = this.slice(this.l, this.l + 2 * size).toString(\"utf16le\");else for (i = 0; i < size; ++i) {\n        o += String.fromCharCode(__readUInt16LE(this, loc));\n        loc += 2;\n      }\n      size *= 2;\n      break;\n    case 'utf8':\n      o = __utf8(this, this.l, this.l + size);\n      break;\n    case 'utf16le':\n      size *= 2;\n      o = __utf16le(this, this.l, this.l + size);\n      break;\n    case 'wstr':\n      return ReadShift.call(this, size, 'dbcs');\n\n    /* [MS-OLEDS] 2.1.4 LengthPrefixedAnsiString */\n    case 'lpstr-ansi':\n      o = __lpstr(this, this.l);\n      size = 4 + __readUInt32LE(this, this.l);\n      break;\n    case 'lpstr-cp':\n      o = __cpstr(this, this.l);\n      size = 4 + __readUInt32LE(this, this.l);\n      break;\n    /* [MS-OLEDS] 2.1.5 LengthPrefixedUnicodeString */\n    case 'lpwstr':\n      o = __lpwstr(this, this.l);\n      size = 4 + 2 * __readUInt32LE(this, this.l);\n      break;\n    /* [MS-OFFCRYPTO] 2.1.2 Length-Prefixed Padded Unicode String (UNICODE-LP-P4) */\n    case 'lpp4':\n      size = 4 + __readUInt32LE(this, this.l);\n      o = __lpp4(this, this.l);\n      if (size & 0x02) size += 2;\n      break;\n    /* [MS-OFFCRYPTO] 2.1.3 Length-Prefixed UTF-8 String (UTF-8-LP-P4) */\n    case '8lpp4':\n      size = 4 + __readUInt32LE(this, this.l);\n      o = __8lpp4(this, this.l);\n      if (size & 0x03) size += 4 - (size & 0x03);\n      break;\n    case 'cstr':\n      size = 0;\n      o = \"\";\n      while ((w = __readUInt8(this, this.l + size++)) !== 0) oo.push(_getchar(w));\n      o = oo.join(\"\");\n      break;\n    case '_wstr':\n      size = 0;\n      o = \"\";\n      while ((w = __readUInt16LE(this, this.l + size)) !== 0) {\n        oo.push(_getchar(w));\n        size += 2;\n      }\n      size += 2;\n      o = oo.join(\"\");\n      break;\n\n    /* sbcs and dbcs support continue records in the SST way TODO codepages */\n    case 'dbcs-cont':\n      o = \"\";\n      loc = this.l;\n      for (i = 0; i < size; ++i) {\n        if (this.lens && this.lens.indexOf(loc) !== -1) {\n          w = __readUInt8(this, loc);\n          this.l = loc + 1;\n          vv = ReadShift.call(this, size - i, w ? 'dbcs-cont' : 'sbcs-cont');\n          return oo.join(\"\") + vv;\n        }\n        oo.push(_getchar(__readUInt16LE(this, loc)));\n        loc += 2;\n      }\n      o = oo.join(\"\");\n      size *= 2;\n      break;\n    case 'cpstr':\n    /* falls through */\n    case 'sbcs-cont':\n      o = \"\";\n      loc = this.l;\n      for (i = 0; i != size; ++i) {\n        if (this.lens && this.lens.indexOf(loc) !== -1) {\n          w = __readUInt8(this, loc);\n          this.l = loc + 1;\n          vv = ReadShift.call(this, size - i, w ? 'dbcs-cont' : 'sbcs-cont');\n          return oo.join(\"\") + vv;\n        }\n        oo.push(_getchar(__readUInt8(this, loc)));\n        loc += 1;\n      }\n      o = oo.join(\"\");\n      break;\n    default:\n      switch (size) {\n        case 1:\n          oI = __readUInt8(this, this.l);\n          this.l++;\n          return oI;\n        case 2:\n          oI = (t === 'i' ? __readInt16LE : __readUInt16LE)(this, this.l);\n          this.l += 2;\n          return oI;\n        case 4:\n        case -4:\n          if (t === 'i' || (this[this.l + 3] & 0x80) === 0) {\n            oI = (size > 0 ? __readInt32LE : __readInt32BE)(this, this.l);\n            this.l += 4;\n            return oI;\n          } else {\n            oR = __readUInt32LE(this, this.l);\n            this.l += 4;\n          }\n          return oR;\n        case 8:\n        case -8:\n          if (t === 'f') {\n            if (size == 8) oR = __double(this, this.l);else oR = __double([this[this.l + 7], this[this.l + 6], this[this.l + 5], this[this.l + 4], this[this.l + 3], this[this.l + 2], this[this.l + 1], this[this.l + 0]], 0);\n            this.l += 8;\n            return oR;\n          } else size = 8;\n        /* falls through */\n        case 16:\n          o = __hexlify(this, this.l, size);\n          break;\n      }\n  }\n  this.l += size;\n  return o;\n}\nvar __writeUInt32LE = function (b /*:RawBytes|CFBlob*/, val /*:number*/, idx /*:number*/) /*:void*/{\n  b[idx] = val & 0xFF;\n  b[idx + 1] = val >>> 8 & 0xFF;\n  b[idx + 2] = val >>> 16 & 0xFF;\n  b[idx + 3] = val >>> 24 & 0xFF;\n};\nvar __writeInt32LE = function (b /*:RawBytes|CFBlob*/, val /*:number*/, idx /*:number*/) /*:void*/{\n  b[idx] = val & 0xFF;\n  b[idx + 1] = val >> 8 & 0xFF;\n  b[idx + 2] = val >> 16 & 0xFF;\n  b[idx + 3] = val >> 24 & 0xFF;\n};\nvar __writeUInt16LE = function (b /*:RawBytes|CFBlob*/, val /*:number*/, idx /*:number*/) /*:void*/{\n  b[idx] = val & 0xFF;\n  b[idx + 1] = val >>> 8 & 0xFF;\n};\nfunction WriteShift(t /*:number*/, val /*:string|number*/, f /*:?string*/) /*:any*/{\n  var size = 0,\n    i = 0;\n  if (f === 'dbcs') {\n    /*:: if(typeof val !== 'string') throw new Error(\"unreachable\"); */\n    for (i = 0; i != val.length; ++i) __writeUInt16LE(this, val.charCodeAt(i), this.l + 2 * i);\n    size = 2 * val.length;\n  } else if (f === 'sbcs' || f == 'cpstr') {\n    {\n      /*:: if(typeof val !== 'string') throw new Error(\"unreachable\"); */\n      val = val.replace(/[^\\x00-\\x7F]/g, \"_\");\n      /*:: if(typeof val !== 'string') throw new Error(\"unreachable\"); */\n      for (i = 0; i != val.length; ++i) this[this.l + i] = val.charCodeAt(i) & 0xFF;\n      size = val.length;\n    }\n  } else if (f === 'hex') {\n    for (; i < t; ++i) {\n      /*:: if(typeof val !== \"string\") throw new Error(\"unreachable\"); */\n      this[this.l++] = parseInt(val.slice(2 * i, 2 * i + 2), 16) || 0;\n    }\n    return this;\n  } else if (f === 'utf16le') {\n    /*:: if(typeof val !== \"string\") throw new Error(\"unreachable\"); */\n    var end /*:number*/ = Math.min(this.l + t, this.length);\n    for (i = 0; i < Math.min(val.length, t); ++i) {\n      var cc = val.charCodeAt(i);\n      this[this.l++] = cc & 0xff;\n      this[this.l++] = cc >> 8;\n    }\n    while (this.l < end) this[this.l++] = 0;\n    return this;\n  } else /*:: if(typeof val === 'number') */switch (t) {\n      case 1:\n        size = 1;\n        this[this.l] = val & 0xFF;\n        break;\n      case 2:\n        size = 2;\n        this[this.l] = val & 0xFF;\n        val >>>= 8;\n        this[this.l + 1] = val & 0xFF;\n        break;\n      case 3:\n        size = 3;\n        this[this.l] = val & 0xFF;\n        val >>>= 8;\n        this[this.l + 1] = val & 0xFF;\n        val >>>= 8;\n        this[this.l + 2] = val & 0xFF;\n        break;\n      case 4:\n        size = 4;\n        __writeUInt32LE(this, val, this.l);\n        break;\n      case 8:\n        size = 8;\n        if (f === 'f') {\n          write_double_le(this, val, this.l);\n          break;\n        }\n      /* falls through */\n      case 16:\n        break;\n      case -4:\n        size = 4;\n        __writeInt32LE(this, val, this.l);\n        break;\n    }\n  this.l += size;\n  return this;\n}\nfunction CheckField(hexstr /*:string*/, fld /*:string*/) /*:void*/{\n  var m = __hexlify(this, this.l, hexstr.length >> 1);\n  if (m !== hexstr) throw new Error(fld + 'Expected ' + hexstr + ' saw ' + m);\n  this.l += hexstr.length >> 1;\n}\nfunction prep_blob(blob, pos /*:number*/) /*:void*/{\n  blob.l = pos;\n  blob.read_shift = /*::(*/ReadShift /*:: :any)*/;\n  blob.chk = CheckField;\n  blob.write_shift = WriteShift;\n}\nfunction parsenoop(blob, length /*:: :number, opts?:any */) {\n  blob.l += length;\n}\nfunction new_buf(sz /*:number*/) /*:Block*/{\n  var o = new_raw_buf(sz);\n  prep_blob(o, 0);\n  return o;\n}\n\n/* [MS-XLSB] 2.1.4 Record */\nfunction recordhopper(data, cb /*:RecordHopperCB*/, opts /*:?any*/) {\n  if (!data) return;\n  var tmpbyte, cntbyte, length;\n  prep_blob(data, data.l || 0);\n  var L = data.length,\n    RT = 0,\n    tgt = 0;\n  while (data.l < L) {\n    RT = data.read_shift(1);\n    if (RT & 0x80) RT = (RT & 0x7F) + ((data.read_shift(1) & 0x7F) << 7);\n    var R = XLSBRecordEnum[RT] || XLSBRecordEnum[0xFFFF];\n    tmpbyte = data.read_shift(1);\n    length = tmpbyte & 0x7F;\n    for (cntbyte = 1; cntbyte < 4 && tmpbyte & 0x80; ++cntbyte) length += ((tmpbyte = data.read_shift(1)) & 0x7F) << 7 * cntbyte;\n    tgt = data.l + length;\n    var d = R.f && R.f(data, length, opts);\n    data.l = tgt;\n    if (cb(d, R, RT)) return;\n  }\n}\n\n/* control buffer usage for fixed-length buffers */\nfunction buf_array() /*:BufArray*/{\n  var bufs /*:Array<Block>*/ = [],\n    blksz = has_buf ? 256 : 2048;\n  var newblk = function ba_newblk(sz /*:number*/) /*:Block*/{\n    var o /*:Block*/ = new_buf(sz) /*:any*/;\n    prep_blob(o, 0);\n    return o;\n  };\n  var curbuf /*:Block*/ = newblk(blksz);\n  var endbuf = function ba_endbuf() {\n    if (!curbuf) return;\n    // workaround for new Buffer(3).slice(0,0) bug in bun 0.1.3\n    if (curbuf.l) {\n      if (curbuf.length > curbuf.l) {\n        curbuf = curbuf.slice(0, curbuf.l);\n        curbuf.l = curbuf.length;\n      }\n      if (curbuf.length > 0) bufs.push(curbuf);\n    }\n    curbuf = null;\n  };\n  var next = function ba_next(sz /*:number*/) /*:Block*/{\n    if (curbuf && sz < curbuf.length - curbuf.l) return curbuf;\n    endbuf();\n    return curbuf = newblk(Math.max(sz + 1, blksz));\n  };\n  var end = function ba_end() {\n    endbuf();\n    return bconcat(bufs);\n  };\n  var push = function ba_push(buf) {\n    endbuf();\n    curbuf = buf;\n    if (curbuf.l == null) curbuf.l = curbuf.length;\n    next(blksz);\n  };\n  return {\n    next: next,\n    push: push,\n    end: end,\n    _bufs: bufs\n  } /*:any*/;\n}\n\nfunction write_record(ba /*:BufArray*/, type /*:number*/, payload, length /*:?number*/) {\n  var t /*:number*/ = +type,\n    l;\n  if (isNaN(t)) return; // TODO: throw something here?\n  if (!length) length = XLSBRecordEnum[t].p || (payload || []).length || 0;\n  l = 1 + (t >= 0x80 ? 1 : 0) + 1 /* + length*/;\n  if (length >= 0x80) ++l;\n  if (length >= 0x4000) ++l;\n  if (length >= 0x200000) ++l;\n  var o = ba.next(l);\n  if (t <= 0x7F) o.write_shift(1, t);else {\n    o.write_shift(1, (t & 0x7F) + 0x80);\n    o.write_shift(1, t >> 7);\n  }\n  for (var i = 0; i != 4; ++i) {\n    if (length >= 0x80) {\n      o.write_shift(1, (length & 0x7F) + 0x80);\n      length >>= 7;\n    } else {\n      o.write_shift(1, length);\n      break;\n    }\n  }\n  if ( /*:: length != null &&*/length > 0 && is_buf(payload)) ba.push(payload);\n}\n/* XLS ranges enforced */\nfunction shift_cell_xls(cell /*:CellAddress*/, tgt /*:any*/, opts /*:?any*/) /*:CellAddress*/{\n  var out = dup(cell);\n  if (tgt.s) {\n    if (out.cRel) out.c += tgt.s.c;\n    if (out.rRel) out.r += tgt.s.r;\n  } else {\n    if (out.cRel) out.c += tgt.c;\n    if (out.rRel) out.r += tgt.r;\n  }\n  if (!opts || opts.biff < 12) {\n    while (out.c >= 0x100) out.c -= 0x100;\n    while (out.r >= 0x10000) out.r -= 0x10000;\n  }\n  return out;\n}\nfunction shift_range_xls(cell, range, opts) {\n  var out = dup(cell);\n  out.s = shift_cell_xls(out.s, range.s, opts);\n  out.e = shift_cell_xls(out.e, range.s, opts);\n  return out;\n}\nfunction encode_cell_xls(c /*:CellAddress*/, biff /*:number*/) /*:string*/{\n  if (c.cRel && c.c < 0) {\n    c = dup(c);\n    while (c.c < 0) c.c += biff > 8 ? 0x4000 : 0x100;\n  }\n  if (c.rRel && c.r < 0) {\n    c = dup(c);\n    while (c.r < 0) c.r += biff > 8 ? 0x100000 : biff > 5 ? 0x10000 : 0x4000;\n  }\n  var s = encode_cell(c);\n  if (!c.cRel && c.cRel != null) s = fix_col(s);\n  if (!c.rRel && c.rRel != null) s = fix_row(s);\n  return s;\n}\nfunction encode_range_xls(r, opts) /*:string*/{\n  if (r.s.r == 0 && !r.s.rRel) {\n    if (r.e.r == (opts.biff >= 12 ? 0xFFFFF : opts.biff >= 8 ? 0x10000 : 0x4000) && !r.e.rRel) {\n      return (r.s.cRel ? \"\" : \"$\") + encode_col(r.s.c) + \":\" + (r.e.cRel ? \"\" : \"$\") + encode_col(r.e.c);\n    }\n  }\n  if (r.s.c == 0 && !r.s.cRel) {\n    if (r.e.c == (opts.biff >= 12 ? 0x3FFF : 0xFF) && !r.e.cRel) {\n      return (r.s.rRel ? \"\" : \"$\") + encode_row(r.s.r) + \":\" + (r.e.rRel ? \"\" : \"$\") + encode_row(r.e.r);\n    }\n  }\n  return encode_cell_xls(r.s, opts.biff) + \":\" + encode_cell_xls(r.e, opts.biff);\n}\nfunction decode_row(rowstr /*:string*/) /*:number*/{\n  return parseInt(unfix_row(rowstr), 10) - 1;\n}\nfunction encode_row(row /*:number*/) /*:string*/{\n  return \"\" + (row + 1);\n}\nfunction fix_row(cstr /*:string*/) /*:string*/{\n  return cstr.replace(/([A-Z]|^)(\\d+)$/, \"$1$$$2\");\n}\nfunction unfix_row(cstr /*:string*/) /*:string*/{\n  return cstr.replace(/\\$(\\d+)$/, \"$1\");\n}\nfunction decode_col(colstr /*:string*/) /*:number*/{\n  var c = unfix_col(colstr),\n    d = 0,\n    i = 0;\n  for (; i !== c.length; ++i) d = 26 * d + c.charCodeAt(i) - 64;\n  return d - 1;\n}\nfunction encode_col(col /*:number*/) /*:string*/{\n  if (col < 0) throw new Error(\"invalid column \" + col);\n  var s = \"\";\n  for (++col; col; col = Math.floor((col - 1) / 26)) s = String.fromCharCode((col - 1) % 26 + 65) + s;\n  return s;\n}\nfunction fix_col(cstr /*:string*/) /*:string*/{\n  return cstr.replace(/^([A-Z])/, \"$$$1\");\n}\nfunction unfix_col(cstr /*:string*/) /*:string*/{\n  return cstr.replace(/^\\$([A-Z])/, \"$1\");\n}\nfunction split_cell(cstr /*:string*/) /*:Array<string>*/{\n  return cstr.replace(/(\\$?[A-Z]*)(\\$?\\d*)/, \"$1,$2\").split(\",\");\n}\nfunction decode_cell(cstr /*:string*/) /*:CellAddress*/{\n  var R = 0,\n    C = 0;\n  for (var i = 0; i < cstr.length; ++i) {\n    var cc = cstr.charCodeAt(i);\n    if (cc >= 48 && cc <= 57) R = 10 * R + (cc - 48);else if (cc >= 65 && cc <= 90) C = 26 * C + (cc - 64);\n  }\n  return {\n    c: C - 1,\n    r: R - 1\n  };\n}\nfunction encode_cell(cell /*:CellAddress*/) /*:string*/{\n  var col = cell.c + 1;\n  var s = \"\";\n  for (; col; col = (col - 1) / 26 | 0) s = String.fromCharCode((col - 1) % 26 + 65) + s;\n  return s + (cell.r + 1);\n}\nfunction decode_range(range /*:string*/) /*:Range*/{\n  var idx = range.indexOf(\":\");\n  if (idx == -1) return {\n    s: decode_cell(range),\n    e: decode_cell(range)\n  };\n  return {\n    s: decode_cell(range.slice(0, idx)),\n    e: decode_cell(range.slice(idx + 1))\n  };\n}\n/*# if only one arg, it is assumed to be a Range.  If 2 args, both are cell addresses */\nfunction encode_range(cs /*:CellAddrSpec|Range*/, ce /*:?CellAddrSpec*/) /*:string*/{\n  if (typeof ce === 'undefined' || typeof ce === 'number') {\n    /*:: if(!(cs instanceof Range)) throw \"unreachable\"; */\n    return encode_range(cs.s, cs.e);\n  }\n  /*:: if((cs instanceof Range)) throw \"unreachable\"; */\n  if (typeof cs !== 'string') cs = encode_cell(cs /*:any*/);\n  if (typeof ce !== 'string') ce = encode_cell(ce /*:any*/);\n  /*:: if(typeof cs !== 'string') throw \"unreachable\"; */\n  /*:: if(typeof ce !== 'string') throw \"unreachable\"; */\n  return cs == ce ? cs : cs + \":\" + ce;\n}\nfunction fix_range(a1 /*:string*/) /*:string*/{\n  var s = decode_range(a1);\n  return \"$\" + encode_col(s.s.c) + \"$\" + encode_row(s.s.r) + \":$\" + encode_col(s.e.c) + \"$\" + encode_row(s.e.r);\n}\n\n// List of invalid characters needs to be tested further\nfunction formula_quote_sheet_name(sname /*:string*/, opts) /*:string*/{\n  if (!sname && !(opts && opts.biff <= 5 && opts.biff >= 2)) throw new Error(\"empty sheet name\");\n  if (/[^\\w\\u4E00-\\u9FFF\\u3040-\\u30FF]/.test(sname)) return \"'\" + sname.replace(/'/g, \"''\") + \"'\";\n  return sname;\n}\nfunction safe_decode_range(range /*:string*/) /*:Range*/{\n  var o = {\n    s: {\n      c: 0,\n      r: 0\n    },\n    e: {\n      c: 0,\n      r: 0\n    }\n  };\n  var idx = 0,\n    i = 0,\n    cc = 0;\n  var len = range.length;\n  for (idx = 0; i < len; ++i) {\n    if ((cc = range.charCodeAt(i) - 64) < 1 || cc > 26) break;\n    idx = 26 * idx + cc;\n  }\n  o.s.c = --idx;\n  for (idx = 0; i < len; ++i) {\n    if ((cc = range.charCodeAt(i) - 48) < 0 || cc > 9) break;\n    idx = 10 * idx + cc;\n  }\n  o.s.r = --idx;\n  if (i === len || cc != 10) {\n    o.e.c = o.s.c;\n    o.e.r = o.s.r;\n    return o;\n  }\n  ++i;\n  for (idx = 0; i != len; ++i) {\n    if ((cc = range.charCodeAt(i) - 64) < 1 || cc > 26) break;\n    idx = 26 * idx + cc;\n  }\n  o.e.c = --idx;\n  for (idx = 0; i != len; ++i) {\n    if ((cc = range.charCodeAt(i) - 48) < 0 || cc > 9) break;\n    idx = 10 * idx + cc;\n  }\n  o.e.r = --idx;\n  return o;\n}\nfunction safe_format_cell(cell /*:Cell*/, v /*:any*/) {\n  var q = cell.t == 'd' && v instanceof Date;\n  if (cell.z != null) try {\n    return cell.w = SSF_format(cell.z, q ? datenum(v) : v);\n  } catch (e) {}\n  try {\n    return cell.w = SSF_format((cell.XF || {}).numFmtId || (q ? 14 : 0), q ? datenum(v) : v);\n  } catch (e) {\n    return '' + v;\n  }\n}\nfunction format_cell(cell /*:Cell*/, v /*:any*/, o /*:any*/) {\n  if (cell == null || cell.t == null || cell.t == 'z') return \"\";\n  if (cell.w !== undefined) return cell.w;\n  if (cell.t == 'd' && !cell.z && o && o.dateNF) cell.z = o.dateNF;\n  if (cell.t == \"e\") return BErr[cell.v] || cell.v;\n  if (v == undefined) return safe_format_cell(cell, cell.v);\n  return safe_format_cell(cell, v);\n}\nfunction sheet_to_workbook(sheet /*:Worksheet*/, opts) /*:Workbook*/{\n  var n = opts && opts.sheet ? opts.sheet : \"Sheet1\";\n  var sheets = {};\n  sheets[n] = sheet;\n  return {\n    SheetNames: [n],\n    Sheets: sheets\n  };\n}\nfunction sheet_add_aoa(_ws /*:?Worksheet*/, data /*:AOA*/, opts /*:?any*/) /*:Worksheet*/{\n  var o = opts || {};\n  var dense = _ws ? _ws[\"!data\"] != null : o.dense;\n  var ws /*:Worksheet*/ = _ws || {} /*:any*/;\n  if (dense && !ws[\"!data\"]) ws[\"!data\"] = [];\n  var _R = 0,\n    _C = 0;\n  if (ws && o.origin != null) {\n    if (typeof o.origin == 'number') _R = o.origin;else {\n      var _origin /*:CellAddress*/ = typeof o.origin == \"string\" ? decode_cell(o.origin) : o.origin;\n      _R = _origin.r;\n      _C = _origin.c;\n    }\n    if (!ws[\"!ref\"]) ws[\"!ref\"] = \"A1:A1\";\n  }\n  var range /*:Range*/ = {\n    s: {\n      c: 10000000,\n      r: 10000000\n    },\n    e: {\n      c: 0,\n      r: 0\n    }\n  } /*:any*/;\n  if (ws['!ref']) {\n    var _range = safe_decode_range(ws['!ref']);\n    range.s.c = _range.s.c;\n    range.s.r = _range.s.r;\n    range.e.c = Math.max(range.e.c, _range.e.c);\n    range.e.r = Math.max(range.e.r, _range.e.r);\n    if (_R == -1) range.e.r = _R = _range.e.r + 1;\n  }\n  var row = [];\n  for (var R = 0; R != data.length; ++R) {\n    if (!data[R]) continue;\n    if (!Array.isArray(data[R])) throw new Error(\"aoa_to_sheet expects an array of arrays\");\n    var __R = _R + R,\n      __Rstr = \"\" + (__R + 1);\n    if (dense) {\n      if (!ws[\"!data\"][__R]) ws[\"!data\"][__R] = [];\n      row = ws[\"!data\"][__R];\n    }\n    for (var C = 0; C != data[R].length; ++C) {\n      if (typeof data[R][C] === 'undefined') continue;\n      var cell /*:Cell*/ = {\n        v: data[R][C]\n      } /*:any*/;\n      var __C = _C + C;\n      if (range.s.r > __R) range.s.r = __R;\n      if (range.s.c > __C) range.s.c = __C;\n      if (range.e.r < __R) range.e.r = __R;\n      if (range.e.c < __C) range.e.c = __C;\n      if (data[R][C] && typeof data[R][C] === 'object' && !Array.isArray(data[R][C]) && !(data[R][C] instanceof Date)) cell = data[R][C];else {\n        if (Array.isArray(cell.v)) {\n          cell.f = data[R][C][1];\n          cell.v = cell.v[0];\n        }\n        if (cell.v === null) {\n          if (cell.f) cell.t = 'n';else if (o.nullError) {\n            cell.t = 'e';\n            cell.v = 0;\n          } else if (!o.sheetStubs) continue;else cell.t = 'z';\n        } else if (typeof cell.v === 'number') cell.t = 'n';else if (typeof cell.v === 'boolean') cell.t = 'b';else if (cell.v instanceof Date) {\n          cell.z = o.dateNF || table_fmt[14];\n          if (!o.UTC) cell.v = local_to_utc(cell.v);\n          if (o.cellDates) {\n            cell.t = 'd';\n            cell.w = SSF_format(cell.z, datenum(cell.v, o.date1904));\n          } else {\n            cell.t = 'n';\n            cell.v = datenum(cell.v, o.date1904);\n            cell.w = SSF_format(cell.z, cell.v);\n          }\n        } else cell.t = 's';\n      }\n      if (dense) {\n        if (row[__C] && row[__C].z) cell.z = row[__C].z;\n        row[__C] = cell;\n      } else {\n        var cell_ref = encode_col(__C) + __Rstr /*:any*/;\n        if (ws[cell_ref] && ws[cell_ref].z) cell.z = ws[cell_ref].z;\n        ws[cell_ref] = cell;\n      }\n    }\n  }\n  if (range.s.c < 10000000) ws['!ref'] = encode_range(range);\n  return ws;\n}\nfunction aoa_to_sheet(data /*:AOA*/, opts /*:?any*/) /*:Worksheet*/{\n  return sheet_add_aoa(null, data, opts);\n}\nfunction parse_Int32LE(data) {\n  return data.read_shift(4, 'i');\n}\nfunction write_UInt32LE(x /*:number*/, o) {\n  if (!o) o = new_buf(4);\n  o.write_shift(4, x);\n  return o;\n}\n\n/* [MS-XLSB] 2.5.168 */\nfunction parse_XLWideString(data /*::, length*/) /*:string*/{\n  var cchCharacters = data.read_shift(4);\n  return cchCharacters === 0 ? \"\" : data.read_shift(cchCharacters, 'dbcs');\n}\nfunction write_XLWideString(data /*:string*/, o) {\n  var _null = false;\n  if (o == null) {\n    _null = true;\n    o = new_buf(4 + 2 * data.length);\n  }\n  o.write_shift(4, data.length);\n  if (data.length > 0) o.write_shift(0, data, 'dbcs');\n  return _null ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.5.91 */\n//function parse_LPWideString(data/*::, length*/)/*:string*/ {\n//\tvar cchCharacters = data.read_shift(2);\n//\treturn cchCharacters === 0 ? \"\" : data.read_shift(cchCharacters, \"utf16le\");\n//}\n\n/* [MS-XLSB] 2.5.143 */\nfunction parse_StrRun(data) {\n  return {\n    ich: data.read_shift(2),\n    ifnt: data.read_shift(2)\n  };\n}\nfunction write_StrRun(run, o) {\n  if (!o) o = new_buf(4);\n  o.write_shift(2, run.ich || 0);\n  o.write_shift(2, run.ifnt || 0);\n  return o;\n}\n\n/* [MS-XLSB] 2.5.121 */\nfunction parse_RichStr(data, length /*:number*/) /*:XLString*/{\n  var start = data.l;\n  var flags = data.read_shift(1);\n  var str = parse_XLWideString(data);\n  var rgsStrRun = [];\n  var z = {\n    t: str,\n    h: str\n  } /*:any*/;\n  if ((flags & 1) !== 0) {\n    /* fRichStr */\n    /* TODO: formatted string */\n    var dwSizeStrRun = data.read_shift(4);\n    for (var i = 0; i != dwSizeStrRun; ++i) rgsStrRun.push(parse_StrRun(data));\n    z.r = rgsStrRun;\n  } else z.r = [{\n    ich: 0,\n    ifnt: 0\n  }];\n  //if((flags & 2) !== 0) { /* fExtStr */\n  //\t/* TODO: phonetic string */\n  //}\n  data.l = start + length;\n  return z;\n}\nfunction write_RichStr(str /*:XLString*/, o /*:?Block*/) /*:Block*/{\n  /* TODO: formatted string */\n  var _null = false;\n  if (o == null) {\n    _null = true;\n    o = new_buf(15 + 4 * str.t.length);\n  }\n  o.write_shift(1, 0);\n  write_XLWideString(str.t, o);\n  return _null ? o.slice(0, o.l) : o;\n}\n/* [MS-XLSB] 2.4.328 BrtCommentText (RichStr w/1 run) */\nvar parse_BrtCommentText = parse_RichStr;\nfunction write_BrtCommentText(str /*:XLString*/, o /*:?Block*/) /*:Block*/{\n  /* TODO: formatted string */\n  var _null = false;\n  if (o == null) {\n    _null = true;\n    o = new_buf(23 + 4 * str.t.length);\n  }\n  o.write_shift(1, 1);\n  write_XLWideString(str.t, o);\n  o.write_shift(4, 1);\n  write_StrRun({\n    ich: 0,\n    ifnt: 0\n  }, o);\n  return _null ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.5.9 */\nfunction parse_XLSBCell(data) /*:any*/{\n  var col = data.read_shift(4);\n  var iStyleRef = data.read_shift(2);\n  iStyleRef += data.read_shift(1) << 16;\n  data.l++; //var fPhShow = data.read_shift(1);\n  return {\n    c: col,\n    iStyleRef: iStyleRef\n  };\n}\nfunction write_XLSBCell(cell /*:any*/, o /*:?Block*/) {\n  if (o == null) o = new_buf(8);\n  o.write_shift(-4, cell.c);\n  o.write_shift(3, cell.iStyleRef || cell.s);\n  o.write_shift(1, 0); /* fPhShow */\n  return o;\n}\n\n/* Short XLSB Cell does not include column */\nfunction parse_XLSBShortCell(data) /*:any*/{\n  var iStyleRef = data.read_shift(2);\n  iStyleRef += data.read_shift(1) << 16;\n  data.l++; //var fPhShow = data.read_shift(1);\n  return {\n    c: -1,\n    iStyleRef: iStyleRef\n  };\n}\nfunction write_XLSBShortCell(cell /*:any*/, o /*:?Block*/) {\n  if (o == null) o = new_buf(4);\n  o.write_shift(3, cell.iStyleRef || cell.s);\n  o.write_shift(1, 0); /* fPhShow */\n  return o;\n}\n\n/* [MS-XLSB] 2.5.21 */\nvar parse_XLSBCodeName = parse_XLWideString;\nvar write_XLSBCodeName = write_XLWideString;\n\n/* [MS-XLSB] 2.5.166 */\nfunction parse_XLNullableWideString(data /*::, length*/) /*:string*/{\n  var cchCharacters = data.read_shift(4);\n  return cchCharacters === 0 || cchCharacters === 0xFFFFFFFF ? \"\" : data.read_shift(cchCharacters, 'dbcs');\n}\nfunction write_XLNullableWideString(data /*:string*/, o) {\n  var _null = false;\n  if (o == null) {\n    _null = true;\n    o = new_buf(127);\n  }\n  o.write_shift(4, data.length > 0 ? data.length : 0xFFFFFFFF);\n  if (data.length > 0) o.write_shift(0, data, 'dbcs');\n  return _null ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.5.165 */\nvar parse_XLNameWideString = parse_XLWideString;\n//var write_XLNameWideString = write_XLWideString;\n\n/* [MS-XLSB] 2.5.114 */\nvar parse_RelID = parse_XLNullableWideString;\nvar write_RelID = write_XLNullableWideString;\n\n/* [MS-XLS] 2.5.217 ; [MS-XLSB] 2.5.122 */\nfunction parse_RkNumber(data) /*:number*/{\n  var b = data.slice(data.l, data.l + 4);\n  var fX100 = b[0] & 1,\n    fInt = b[0] & 2;\n  data.l += 4;\n  var RK = fInt === 0 ? __double([0, 0, 0, 0, b[0] & 0xFC, b[1], b[2], b[3]], 0) : __readInt32LE(b, 0) >> 2;\n  return fX100 ? RK / 100 : RK;\n}\nfunction write_RkNumber(data /*:number*/, o) {\n  if (o == null) o = new_buf(4);\n  var fX100 = 0,\n    fInt = 0,\n    d100 = data * 100;\n  if (data == (data | 0) && data >= -(1 << 29) && data < 1 << 29) {\n    fInt = 1;\n  } else if (d100 == (d100 | 0) && d100 >= -(1 << 29) && d100 < 1 << 29) {\n    fInt = 1;\n    fX100 = 1;\n  }\n  if (fInt) o.write_shift(-4, ((fX100 ? d100 : data) << 2) + (fX100 + 2));else throw new Error(\"unsupported RkNumber \" + data); // TODO\n}\n\n/* [MS-XLSB] 2.5.117 RfX */\nfunction parse_RfX(data /*::, length*/) /*:Range*/{\n  var cell /*:Range*/ = {\n    s: {},\n    e: {}\n  } /*:any*/;\n  cell.s.r = data.read_shift(4);\n  cell.e.r = data.read_shift(4);\n  cell.s.c = data.read_shift(4);\n  cell.e.c = data.read_shift(4);\n  return cell;\n}\nfunction write_RfX(r /*:Range*/, o) {\n  if (!o) o = new_buf(16);\n  o.write_shift(4, r.s.r);\n  o.write_shift(4, r.e.r);\n  o.write_shift(4, r.s.c);\n  o.write_shift(4, r.e.c);\n  return o;\n}\n\n/* [MS-XLSB] 2.5.153 UncheckedRfX */\nvar parse_UncheckedRfX = parse_RfX;\nvar write_UncheckedRfX = write_RfX;\n\n/* [MS-XLSB] 2.5.155 UncheckedSqRfX */\n//function parse_UncheckedSqRfX(data) {\n//\tvar cnt = data.read_shift(4);\n//\tvar out = [];\n//\tfor(var i = 0; i < cnt; ++i) {\n//\t\tvar rng = parse_UncheckedRfX(data);\n//\t\tout.push(encode_range(rng));\n//\t}\n//\treturn out.join(\",\");\n//}\n//function write_UncheckedSqRfX(sqrfx/*:string*/) {\n//\tvar parts = sqrfx.split(/\\s*,\\s*/);\n//\tvar o = new_buf(4); o.write_shift(4, parts.length);\n//\tvar out = [o];\n//\tparts.forEach(function(rng) {\n//\t\tout.push(write_UncheckedRfX(safe_decode_range(rng)));\n//\t});\n//\treturn bconcat(out);\n//}\n\n/* [MS-XLS] 2.5.342 ; [MS-XLSB] 2.5.171 */\n/* TODO: error checking, NaN and Infinity values are not valid Xnum */\nfunction parse_Xnum(data /*::, length*/) {\n  if (data.length - data.l < 8) throw \"XLS Xnum Buffer underflow\";\n  return data.read_shift(8, 'f');\n}\nfunction write_Xnum(data, o) {\n  return (o || new_buf(8)).write_shift(8, data, 'f');\n}\n\n/* [MS-XLSB] 2.4.324 BrtColor */\nfunction parse_BrtColor(data /*::, length*/) {\n  var out = {};\n  var d = data.read_shift(1);\n\n  //var fValidRGB = d & 1;\n  var xColorType = d >>> 1;\n  var index = data.read_shift(1);\n  var nTS = data.read_shift(2, 'i');\n  var bR = data.read_shift(1);\n  var bG = data.read_shift(1);\n  var bB = data.read_shift(1);\n  data.l++; //var bAlpha = data.read_shift(1);\n\n  switch (xColorType) {\n    case 0:\n      out.auto = 1;\n      break;\n    case 1:\n      out.index = index;\n      var icv = XLSIcv[index];\n      /* automatic pseudo index 81 */\n      if (icv) out.rgb = rgb2Hex(icv);\n      break;\n    case 2:\n      /* if(!fValidRGB) throw new Error(\"invalid\"); */\n      out.rgb = rgb2Hex([bR, bG, bB]);\n      break;\n    case 3:\n      out.theme = index;\n      break;\n  }\n  if (nTS != 0) out.tint = nTS > 0 ? nTS / 32767 : nTS / 32768;\n  return out;\n}\nfunction write_BrtColor(color, o) {\n  if (!o) o = new_buf(8);\n  if (!color || color.auto) {\n    o.write_shift(4, 0);\n    o.write_shift(4, 0);\n    return o;\n  }\n  if (color.index != null) {\n    o.write_shift(1, 0x02);\n    o.write_shift(1, color.index);\n  } else if (color.theme != null) {\n    o.write_shift(1, 0x06);\n    o.write_shift(1, color.theme);\n  } else {\n    o.write_shift(1, 0x05);\n    o.write_shift(1, 0);\n  }\n  var nTS = color.tint || 0;\n  if (nTS > 0) nTS *= 32767;else if (nTS < 0) nTS *= 32768;\n  o.write_shift(2, nTS);\n  if (!color.rgb || color.theme != null) {\n    o.write_shift(2, 0);\n    o.write_shift(1, 0);\n    o.write_shift(1, 0);\n  } else {\n    var rgb = color.rgb || 'FFFFFF';\n    if (typeof rgb == 'number') rgb = (\"000000\" + rgb.toString(16)).slice(-6);\n    o.write_shift(1, parseInt(rgb.slice(0, 2), 16));\n    o.write_shift(1, parseInt(rgb.slice(2, 4), 16));\n    o.write_shift(1, parseInt(rgb.slice(4, 6), 16));\n    o.write_shift(1, 0xFF);\n  }\n  return o;\n}\n\n/* [MS-XLSB] 2.5.52 */\nfunction parse_FontFlags(data /*::, length, opts*/) {\n  var d = data.read_shift(1);\n  data.l++;\n  var out = {\n    fBold: d & 0x01,\n    fItalic: d & 0x02,\n    fUnderline: d & 0x04,\n    fStrikeout: d & 0x08,\n    fOutline: d & 0x10,\n    fShadow: d & 0x20,\n    fCondense: d & 0x40,\n    fExtend: d & 0x80\n  };\n  return out;\n}\nfunction write_FontFlags(font, o) {\n  if (!o) o = new_buf(2);\n  var grbit = (font.italic ? 0x02 : 0) | (font.strike ? 0x08 : 0) | (font.outline ? 0x10 : 0) | (font.shadow ? 0x20 : 0) | (font.condense ? 0x40 : 0) | (font.extend ? 0x80 : 0);\n  o.write_shift(1, grbit);\n  o.write_shift(1, 0);\n  return o;\n}\n\n/* [MS-OLEDS] 2.3.1 and 2.3.2 */\nfunction parse_ClipboardFormatOrString(o, w /*:number*/) /*:string*/{\n  // $FlowIgnore\n  var ClipFmt = {\n    2: \"BITMAP\",\n    3: \"METAFILEPICT\",\n    8: \"DIB\",\n    14: \"ENHMETAFILE\"\n  };\n  var m /*:number*/ = o.read_shift(4);\n  switch (m) {\n    case 0x00000000:\n      return \"\";\n    case 0xffffffff:\n    case 0xfffffffe:\n      return ClipFmt[o.read_shift(4)] || \"\";\n  }\n  if (m > 0x190) throw new Error(\"Unsupported Clipboard: \" + m.toString(16));\n  o.l -= 4;\n  return o.read_shift(0, w == 1 ? \"lpstr\" : \"lpwstr\");\n}\nfunction parse_ClipboardFormatOrAnsiString(o) {\n  return parse_ClipboardFormatOrString(o, 1);\n}\nfunction parse_ClipboardFormatOrUnicodeString(o) {\n  return parse_ClipboardFormatOrString(o, 2);\n}\n\n/* [MS-OLEPS] 2.2 PropertyType */\n// Note: some tree shakers cannot handle VT_VECTOR | $CONST, hence extra vars\n//var VT_EMPTY    = 0x0000;\n//var VT_NULL     = 0x0001;\nvar VT_I2 = 0x0002;\nvar VT_I4 = 0x0003;\n//var VT_R4       = 0x0004;\n//var VT_R8       = 0x0005;\n//var VT_CY       = 0x0006;\n//var VT_DATE     = 0x0007;\n//var VT_BSTR     = 0x0008;\n//var VT_ERROR    = 0x000A;\nvar VT_BOOL = 0x000B;\nvar VT_VARIANT = 0x000C;\n//var VT_DECIMAL  = 0x000E;\n//var VT_I1       = 0x0010;\n//var VT_UI1      = 0x0011;\n//var VT_UI2      = 0x0012;\nvar VT_UI4 = 0x0013;\n//var VT_I8       = 0x0014;\n//var VT_UI8      = 0x0015;\n//var VT_INT      = 0x0016;\n//var VT_UINT     = 0x0017;\n//var VT_LPSTR    = 0x001E;\n//var VT_LPWSTR   = 0x001F;\nvar VT_FILETIME = 0x0040;\nvar VT_BLOB = 0x0041;\n//var VT_STREAM   = 0x0042;\n//var VT_STORAGE  = 0x0043;\n//var VT_STREAMED_Object  = 0x0044;\n//var VT_STORED_Object    = 0x0045;\n//var VT_BLOB_Object      = 0x0046;\nvar VT_CF = 0x0047;\n//var VT_CLSID    = 0x0048;\n//var VT_VERSIONED_STREAM = 0x0049;\n//var VT_VECTOR   = 0x1000;\nvar VT_VECTOR_VARIANT = 0x100C;\nvar VT_VECTOR_LPSTR = 0x101E;\n//var VT_ARRAY    = 0x2000;\n\nvar VT_STRING = 0x0050; // 2.3.3.1.11 VtString\nvar VT_USTR = 0x0051; // 2.3.3.1.12 VtUnalignedString\nvar VT_CUSTOM = [VT_STRING, VT_USTR];\n\n/* [MS-OSHARED] 2.3.3.2.2.1 Document Summary Information PIDDSI */\nvar DocSummaryPIDDSI = {\n  /*::[*/0x01 /*::]*/: {\n    n: 'CodePage',\n    t: VT_I2\n  },\n  /*::[*/0x02 /*::]*/: {\n    n: 'Category',\n    t: VT_STRING\n  },\n  /*::[*/0x03 /*::]*/: {\n    n: 'PresentationFormat',\n    t: VT_STRING\n  },\n  /*::[*/0x04 /*::]*/: {\n    n: 'ByteCount',\n    t: VT_I4\n  },\n  /*::[*/0x05 /*::]*/: {\n    n: 'LineCount',\n    t: VT_I4\n  },\n  /*::[*/0x06 /*::]*/: {\n    n: 'ParagraphCount',\n    t: VT_I4\n  },\n  /*::[*/0x07 /*::]*/: {\n    n: 'SlideCount',\n    t: VT_I4\n  },\n  /*::[*/0x08 /*::]*/: {\n    n: 'NoteCount',\n    t: VT_I4\n  },\n  /*::[*/0x09 /*::]*/: {\n    n: 'HiddenCount',\n    t: VT_I4\n  },\n  /*::[*/0x0a /*::]*/: {\n    n: 'MultimediaClipCount',\n    t: VT_I4\n  },\n  /*::[*/0x0b /*::]*/: {\n    n: 'ScaleCrop',\n    t: VT_BOOL\n  },\n  /*::[*/0x0c /*::]*/: {\n    n: 'HeadingPairs',\n    t: VT_VECTOR_VARIANT /* VT_VECTOR | VT_VARIANT */\n  },\n  /*::[*/0x0d /*::]*/: {\n    n: 'TitlesOfParts',\n    t: VT_VECTOR_LPSTR /* VT_VECTOR | VT_LPSTR */\n  },\n  /*::[*/0x0e /*::]*/: {\n    n: 'Manager',\n    t: VT_STRING\n  },\n  /*::[*/0x0f /*::]*/: {\n    n: 'Company',\n    t: VT_STRING\n  },\n  /*::[*/0x10 /*::]*/: {\n    n: 'LinksUpToDate',\n    t: VT_BOOL\n  },\n  /*::[*/0x11 /*::]*/: {\n    n: 'CharacterCount',\n    t: VT_I4\n  },\n  /*::[*/0x13 /*::]*/: {\n    n: 'SharedDoc',\n    t: VT_BOOL\n  },\n  /*::[*/0x16 /*::]*/: {\n    n: 'HyperlinksChanged',\n    t: VT_BOOL\n  },\n  /*::[*/0x17 /*::]*/: {\n    n: 'AppVersion',\n    t: VT_I4,\n    p: 'version'\n  },\n  /*::[*/0x18 /*::]*/: {\n    n: 'DigSig',\n    t: VT_BLOB\n  },\n  /*::[*/0x1A /*::]*/: {\n    n: 'ContentType',\n    t: VT_STRING\n  },\n  /*::[*/0x1B /*::]*/: {\n    n: 'ContentStatus',\n    t: VT_STRING\n  },\n  /*::[*/0x1C /*::]*/: {\n    n: 'Language',\n    t: VT_STRING\n  },\n  /*::[*/0x1D /*::]*/: {\n    n: 'Version',\n    t: VT_STRING\n  },\n  /*::[*/0xFF /*::]*/: {},\n  /* [MS-OLEPS] 2.18 */\n  /*::[*/0x80000000 /*::]*/: {\n    n: 'Locale',\n    t: VT_UI4\n  },\n  /*::[*/0x80000003 /*::]*/: {\n    n: 'Behavior',\n    t: VT_UI4\n  },\n  /*::[*/0x72627262 /*::]*/: {}\n};\n\n/* [MS-OSHARED] 2.3.3.2.1.1 Summary Information Property Set PIDSI */\nvar SummaryPIDSI = {\n  /*::[*/0x01 /*::]*/: {\n    n: 'CodePage',\n    t: VT_I2\n  },\n  /*::[*/0x02 /*::]*/: {\n    n: 'Title',\n    t: VT_STRING\n  },\n  /*::[*/0x03 /*::]*/: {\n    n: 'Subject',\n    t: VT_STRING\n  },\n  /*::[*/0x04 /*::]*/: {\n    n: 'Author',\n    t: VT_STRING\n  },\n  /*::[*/0x05 /*::]*/: {\n    n: 'Keywords',\n    t: VT_STRING\n  },\n  /*::[*/0x06 /*::]*/: {\n    n: 'Comments',\n    t: VT_STRING\n  },\n  /*::[*/0x07 /*::]*/: {\n    n: 'Template',\n    t: VT_STRING\n  },\n  /*::[*/0x08 /*::]*/: {\n    n: 'LastAuthor',\n    t: VT_STRING\n  },\n  /*::[*/0x09 /*::]*/: {\n    n: 'RevNumber',\n    t: VT_STRING\n  },\n  /*::[*/0x0A /*::]*/: {\n    n: 'EditTime',\n    t: VT_FILETIME\n  },\n  /*::[*/0x0B /*::]*/: {\n    n: 'LastPrinted',\n    t: VT_FILETIME\n  },\n  /*::[*/0x0C /*::]*/: {\n    n: 'CreatedDate',\n    t: VT_FILETIME\n  },\n  /*::[*/0x0D /*::]*/: {\n    n: 'ModifiedDate',\n    t: VT_FILETIME\n  },\n  /*::[*/0x0E /*::]*/: {\n    n: 'PageCount',\n    t: VT_I4\n  },\n  /*::[*/0x0F /*::]*/: {\n    n: 'WordCount',\n    t: VT_I4\n  },\n  /*::[*/0x10 /*::]*/: {\n    n: 'CharCount',\n    t: VT_I4\n  },\n  /*::[*/0x11 /*::]*/: {\n    n: 'Thumbnail',\n    t: VT_CF\n  },\n  /*::[*/0x12 /*::]*/: {\n    n: 'Application',\n    t: VT_STRING\n  },\n  /*::[*/0x13 /*::]*/: {\n    n: 'DocSecurity',\n    t: VT_I4\n  },\n  /*::[*/0xFF /*::]*/: {},\n  /* [MS-OLEPS] 2.18 */\n  /*::[*/0x80000000 /*::]*/: {\n    n: 'Locale',\n    t: VT_UI4\n  },\n  /*::[*/0x80000003 /*::]*/: {\n    n: 'Behavior',\n    t: VT_UI4\n  },\n  /*::[*/0x72627262 /*::]*/: {}\n};\n\n/* [MS-XLS] 2.4.63 Country/Region codes */\nvar CountryEnum = {\n  /*::[*/0x0001 /*::]*/: \"US\",\n  // United States\n  /*::[*/\n  0x0002 /*::]*/: \"CA\",\n  // Canada\n  /*::[*/\n  0x0003 /*::]*/: \"\",\n  // Latin America (except Brazil)\n  /*::[*/\n  0x0007 /*::]*/: \"RU\",\n  // Russia\n  /*::[*/\n  0x0014 /*::]*/: \"EG\",\n  // Egypt\n  /*::[*/\n  0x001E /*::]*/: \"GR\",\n  // Greece\n  /*::[*/\n  0x001F /*::]*/: \"NL\",\n  // Netherlands\n  /*::[*/\n  0x0020 /*::]*/: \"BE\",\n  // Belgium\n  /*::[*/\n  0x0021 /*::]*/: \"FR\",\n  // France\n  /*::[*/\n  0x0022 /*::]*/: \"ES\",\n  // Spain\n  /*::[*/\n  0x0024 /*::]*/: \"HU\",\n  // Hungary\n  /*::[*/\n  0x0027 /*::]*/: \"IT\",\n  // Italy\n  /*::[*/\n  0x0029 /*::]*/: \"CH\",\n  // Switzerland\n  /*::[*/\n  0x002B /*::]*/: \"AT\",\n  // Austria\n  /*::[*/\n  0x002C /*::]*/: \"GB\",\n  // United Kingdom\n  /*::[*/\n  0x002D /*::]*/: \"DK\",\n  // Denmark\n  /*::[*/\n  0x002E /*::]*/: \"SE\",\n  // Sweden\n  /*::[*/\n  0x002F /*::]*/: \"NO\",\n  // Norway\n  /*::[*/\n  0x0030 /*::]*/: \"PL\",\n  // Poland\n  /*::[*/\n  0x0031 /*::]*/: \"DE\",\n  // Germany\n  /*::[*/\n  0x0034 /*::]*/: \"MX\",\n  // Mexico\n  /*::[*/\n  0x0037 /*::]*/: \"BR\",\n  // Brazil\n  /*::[*/\n  0x003d /*::]*/: \"AU\",\n  // Australia\n  /*::[*/\n  0x0040 /*::]*/: \"NZ\",\n  // New Zealand\n  /*::[*/\n  0x0042 /*::]*/: \"TH\",\n  // Thailand\n  /*::[*/\n  0x0051 /*::]*/: \"JP\",\n  // Japan\n  /*::[*/\n  0x0052 /*::]*/: \"KR\",\n  // Korea\n  /*::[*/\n  0x0054 /*::]*/: \"VN\",\n  // Viet Nam\n  /*::[*/\n  0x0056 /*::]*/: \"CN\",\n  // China\n  /*::[*/\n  0x005A /*::]*/: \"TR\",\n  // Turkey\n  /*::[*/\n  0x0069 /*::]*/: \"JS\",\n  // Ramastan\n  /*::[*/\n  0x00D5 /*::]*/: \"DZ\",\n  // Algeria\n  /*::[*/\n  0x00D8 /*::]*/: \"MA\",\n  // Morocco\n  /*::[*/\n  0x00DA /*::]*/: \"LY\",\n  // Libya\n  /*::[*/\n  0x015F /*::]*/: \"PT\",\n  // Portugal\n  /*::[*/\n  0x0162 /*::]*/: \"IS\",\n  // Iceland\n  /*::[*/\n  0x0166 /*::]*/: \"FI\",\n  // Finland\n  /*::[*/\n  0x01A4 /*::]*/: \"CZ\",\n  // Czech Republic\n  /*::[*/\n  0x0376 /*::]*/: \"TW\",\n  // Taiwan\n  /*::[*/\n  0x03C1 /*::]*/: \"LB\",\n  // Lebanon\n  /*::[*/\n  0x03C2 /*::]*/: \"JO\",\n  // Jordan\n  /*::[*/\n  0x03C3 /*::]*/: \"SY\",\n  // Syria\n  /*::[*/\n  0x03C4 /*::]*/: \"IQ\",\n  // Iraq\n  /*::[*/\n  0x03C5 /*::]*/: \"KW\",\n  // Kuwait\n  /*::[*/\n  0x03C6 /*::]*/: \"SA\",\n  // Saudi Arabia\n  /*::[*/\n  0x03CB /*::]*/: \"AE\",\n  // United Arab Emirates\n  /*::[*/\n  0x03CC /*::]*/: \"IL\",\n  // Israel\n  /*::[*/\n  0x03CE /*::]*/: \"QA\",\n  // Qatar\n  /*::[*/\n  0x03D5 /*::]*/: \"IR\",\n  // Iran\n  /*::[*/\n  0xFFFF /*::]*/: \"US\" // United States\n};\n\n/* [MS-XLS] 2.5.127 */\nvar XLSFillPattern = [null, 'solid', 'mediumGray', 'darkGray', 'lightGray', 'darkHorizontal', 'darkVertical', 'darkDown', 'darkUp', 'darkGrid', 'darkTrellis', 'lightHorizontal', 'lightVertical', 'lightDown', 'lightUp', 'lightGrid', 'lightTrellis', 'gray125', 'gray0625'];\nfunction rgbify(arr /*:Array<number>*/) /*:Array<[number, number, number]>*/{\n  return arr.map(function (x) {\n    return [x >> 16 & 255, x >> 8 & 255, x & 255];\n  });\n}\n\n/* [MS-XLS] 2.5.161 */\n/* [MS-XLSB] 2.5.75 Icv */\nvar _XLSIcv = /*#__PURE__*/rgbify([/* Color Constants */\n0x000000, 0xFFFFFF, 0xFF0000, 0x00FF00, 0x0000FF, 0xFFFF00, 0xFF00FF, 0x00FFFF, /* Overridable Defaults */\n0x000000, 0xFFFFFF, 0xFF0000, 0x00FF00, 0x0000FF, 0xFFFF00, 0xFF00FF, 0x00FFFF, 0x800000, 0x008000, 0x000080, 0x808000, 0x800080, 0x008080, 0xC0C0C0, 0x808080, 0x9999FF, 0x993366, 0xFFFFCC, 0xCCFFFF, 0x660066, 0xFF8080, 0x0066CC, 0xCCCCFF, 0x000080, 0xFF00FF, 0xFFFF00, 0x00FFFF, 0x800080, 0x800000, 0x008080, 0x0000FF, 0x00CCFF, 0xCCFFFF, 0xCCFFCC, 0xFFFF99, 0x99CCFF, 0xFF99CC, 0xCC99FF, 0xFFCC99, 0x3366FF, 0x33CCCC, 0x99CC00, 0xFFCC00, 0xFF9900, 0xFF6600, 0x666699, 0x969696, 0x003366, 0x339966, 0x003300, 0x333300, 0x993300, 0x993366, 0x333399, 0x333333, /* Other entries to appease BIFF8/12 */\n0x000000, /* 0x40 icvForeground ?? */\n0xFFFFFF, /* 0x41 icvBackground ?? */\n0x000000, /* 0x42 icvFrame ?? */\n0x000000, /* 0x43 icv3D ?? */\n0x000000, /* 0x44 icv3DText ?? */\n0x000000, /* 0x45 icv3DHilite ?? */\n0x000000, /* 0x46 icv3DShadow ?? */\n0x000000, /* 0x47 icvHilite ?? */\n0x000000, /* 0x48 icvCtlText ?? */\n0x000000, /* 0x49 icvCtlScrl ?? */\n0x000000, /* 0x4A icvCtlInv ?? */\n0x000000, /* 0x4B icvCtlBody ?? */\n0x000000, /* 0x4C icvCtlFrame ?? */\n0x000000, /* 0x4D icvCtlFore ?? */\n0x000000, /* 0x4E icvCtlBack ?? */\n0x000000, /* 0x4F icvCtlNeutral */\n0x000000, /* 0x50 icvInfoBk ?? */\n0x000000 /* 0x51 icvInfoText ?? */]);\n\nvar XLSIcv = /*#__PURE__*/dup(_XLSIcv);\n\n/* [MS-XLSB] 2.5.97.2 */\nvar BErr = {\n  /*::[*/0x00 /*::]*/: \"#NULL!\",\n  /*::[*/0x07 /*::]*/: \"#DIV/0!\",\n  /*::[*/0x0F /*::]*/: \"#VALUE!\",\n  /*::[*/0x17 /*::]*/: \"#REF!\",\n  /*::[*/0x1D /*::]*/: \"#NAME?\",\n  /*::[*/0x24 /*::]*/: \"#NUM!\",\n  /*::[*/0x2A /*::]*/: \"#N/A\",\n  /*::[*/0x2B /*::]*/: \"#GETTING_DATA\",\n  /*::[*/0xFF /*::]*/: \"#WTF?\"\n};\n//var RBErr = evert_num(BErr);\nvar RBErr = {\n  \"#NULL!\": 0x00,\n  \"#DIV/0!\": 0x07,\n  \"#VALUE!\": 0x0F,\n  \"#REF!\": 0x17,\n  \"#NAME?\": 0x1D,\n  \"#NUM!\": 0x24,\n  \"#N/A\": 0x2A,\n  \"#GETTING_DATA\": 0x2B,\n  \"#WTF?\": 0xFF\n};\nvar XLSLblBuiltIn = [\"_xlnm.Consolidate_Area\", \"_xlnm.Auto_Open\", \"_xlnm.Auto_Close\", \"_xlnm.Extract\", \"_xlnm.Database\", \"_xlnm.Criteria\", \"_xlnm.Print_Area\", \"_xlnm.Print_Titles\", \"_xlnm.Recorder\", \"_xlnm.Data_Form\", \"_xlnm.Auto_Activate\", \"_xlnm.Auto_Deactivate\", \"_xlnm.Sheet_Title\", \"_xlnm._FilterDatabase\"];\n\n/* Parts enumerated in OPC spec, MS-XLSB and MS-XLSX */\n/* 12.3 Part Summary <SpreadsheetML> */\n/* 14.2 Part Summary <DrawingML> */\n/* [MS-XLSX] 2.1 Part Enumerations ; [MS-XLSB] 2.1.7 Part Enumeration */\nvar ct2type /*{[string]:string}*/ = {\n  /* Workbook */\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml\": \"workbooks\",\n  \"application/vnd.ms-excel.sheet.macroEnabled.main+xml\": \"workbooks\",\n  \"application/vnd.ms-excel.sheet.binary.macroEnabled.main\": \"workbooks\",\n  \"application/vnd.ms-excel.addin.macroEnabled.main+xml\": \"workbooks\",\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml\": \"workbooks\",\n  /* Worksheet */\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml\": \"sheets\",\n  \"application/vnd.ms-excel.worksheet\": \"sheets\",\n  \"application/vnd.ms-excel.binIndexWs\": \"TODO\",\n  /* Binary Index */\n\n  /* Chartsheet */\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml\": \"charts\",\n  \"application/vnd.ms-excel.chartsheet\": \"charts\",\n  /* Macrosheet */\n  \"application/vnd.ms-excel.macrosheet+xml\": \"macros\",\n  \"application/vnd.ms-excel.macrosheet\": \"macros\",\n  \"application/vnd.ms-excel.intlmacrosheet\": \"TODO\",\n  \"application/vnd.ms-excel.binIndexMs\": \"TODO\",\n  /* Binary Index */\n\n  /* Dialogsheet */\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml\": \"dialogs\",\n  \"application/vnd.ms-excel.dialogsheet\": \"dialogs\",\n  /* Shared Strings */\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.sharedStrings+xml\": \"strs\",\n  \"application/vnd.ms-excel.sharedStrings\": \"strs\",\n  /* Styles */\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml\": \"styles\",\n  \"application/vnd.ms-excel.styles\": \"styles\",\n  /* File Properties */\n  \"application/vnd.openxmlformats-package.core-properties+xml\": \"coreprops\",\n  \"application/vnd.openxmlformats-officedocument.custom-properties+xml\": \"custprops\",\n  \"application/vnd.openxmlformats-officedocument.extended-properties+xml\": \"extprops\",\n  /* Custom Data Properties */\n  \"application/vnd.openxmlformats-officedocument.customXmlProperties+xml\": \"TODO\",\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.customProperty\": \"TODO\",\n  /* Comments */\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml\": \"comments\",\n  \"application/vnd.ms-excel.comments\": \"comments\",\n  \"application/vnd.ms-excel.threadedcomments+xml\": \"threadedcomments\",\n  \"application/vnd.ms-excel.person+xml\": \"people\",\n  /* Metadata (Stock/Geography and Dynamic Array) */\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheetMetadata+xml\": \"metadata\",\n  \"application/vnd.ms-excel.sheetMetadata\": \"metadata\",\n  /* PivotTable */\n  \"application/vnd.ms-excel.pivotTable\": \"TODO\",\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotTable+xml\": \"TODO\",\n  /* Chart Objects */\n  \"application/vnd.openxmlformats-officedocument.drawingml.chart+xml\": \"TODO\",\n  /* Chart Colors */\n  \"application/vnd.ms-office.chartcolorstyle+xml\": \"TODO\",\n  /* Chart Style */\n  \"application/vnd.ms-office.chartstyle+xml\": \"TODO\",\n  /* Chart Advanced */\n  \"application/vnd.ms-office.chartex+xml\": \"TODO\",\n  /* Calculation Chain */\n  \"application/vnd.ms-excel.calcChain\": \"calcchains\",\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.calcChain+xml\": \"calcchains\",\n  /* Printer Settings */\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.printerSettings\": \"TODO\",\n  /* ActiveX */\n  \"application/vnd.ms-office.activeX\": \"TODO\",\n  \"application/vnd.ms-office.activeX+xml\": \"TODO\",\n  /* Custom Toolbars */\n  \"application/vnd.ms-excel.attachedToolbars\": \"TODO\",\n  /* External Data Connections */\n  \"application/vnd.ms-excel.connections\": \"TODO\",\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml\": \"TODO\",\n  /* External Links */\n  \"application/vnd.ms-excel.externalLink\": \"links\",\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.externalLink+xml\": \"links\",\n  /* PivotCache */\n  \"application/vnd.ms-excel.pivotCacheDefinition\": \"TODO\",\n  \"application/vnd.ms-excel.pivotCacheRecords\": \"TODO\",\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotCacheDefinition+xml\": \"TODO\",\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotCacheRecords+xml\": \"TODO\",\n  /* Query Table */\n  \"application/vnd.ms-excel.queryTable\": \"TODO\",\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.queryTable+xml\": \"TODO\",\n  /* Shared Workbook */\n  \"application/vnd.ms-excel.userNames\": \"TODO\",\n  \"application/vnd.ms-excel.revisionHeaders\": \"TODO\",\n  \"application/vnd.ms-excel.revisionLog\": \"TODO\",\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionHeaders+xml\": \"TODO\",\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionLog+xml\": \"TODO\",\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.userNames+xml\": \"TODO\",\n  /* Single Cell Table */\n  \"application/vnd.ms-excel.tableSingleCells\": \"TODO\",\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.tableSingleCells+xml\": \"TODO\",\n  /* Slicer */\n  \"application/vnd.ms-excel.slicer\": \"TODO\",\n  \"application/vnd.ms-excel.slicerCache\": \"TODO\",\n  \"application/vnd.ms-excel.slicer+xml\": \"TODO\",\n  \"application/vnd.ms-excel.slicerCache+xml\": \"TODO\",\n  /* Sort Map */\n  \"application/vnd.ms-excel.wsSortMap\": \"TODO\",\n  /* Table */\n  \"application/vnd.ms-excel.table\": \"TODO\",\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml\": \"TODO\",\n  /* Themes */\n  \"application/vnd.openxmlformats-officedocument.theme+xml\": \"themes\",\n  /* Theme Override */\n  \"application/vnd.openxmlformats-officedocument.themeOverride+xml\": \"TODO\",\n  /* Timeline */\n  \"application/vnd.ms-excel.Timeline+xml\": \"TODO\",\n  /* verify */\n  \"application/vnd.ms-excel.TimelineCache+xml\": \"TODO\",\n  /* verify */\n\n  /* VBA */\n  \"application/vnd.ms-office.vbaProject\": \"vba\",\n  \"application/vnd.ms-office.vbaProjectSignature\": \"TODO\",\n  /* Volatile Dependencies */\n  \"application/vnd.ms-office.volatileDependencies\": \"TODO\",\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.volatileDependencies+xml\": \"TODO\",\n  /* Control Properties */\n  \"application/vnd.ms-excel.controlproperties+xml\": \"TODO\",\n  /* Data Model */\n  \"application/vnd.openxmlformats-officedocument.model+data\": \"TODO\",\n  /* Survey */\n  \"application/vnd.ms-excel.Survey+xml\": \"TODO\",\n  /* Drawing */\n  \"application/vnd.openxmlformats-officedocument.drawing+xml\": \"drawings\",\n  \"application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml\": \"TODO\",\n  \"application/vnd.openxmlformats-officedocument.drawingml.diagramColors+xml\": \"TODO\",\n  \"application/vnd.openxmlformats-officedocument.drawingml.diagramData+xml\": \"TODO\",\n  \"application/vnd.openxmlformats-officedocument.drawingml.diagramLayout+xml\": \"TODO\",\n  \"application/vnd.openxmlformats-officedocument.drawingml.diagramStyle+xml\": \"TODO\",\n  /* VML */\n  \"application/vnd.openxmlformats-officedocument.vmlDrawing\": \"TODO\",\n  \"application/vnd.openxmlformats-package.relationships+xml\": \"rels\",\n  \"application/vnd.openxmlformats-officedocument.oleObject\": \"TODO\",\n  /* Image */\n  \"image/png\": \"TODO\",\n  \"sheet\": \"js\"\n} /*:any*/;\n\nvar CT_LIST = {\n  workbooks: {\n    xlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml\",\n    xlsm: \"application/vnd.ms-excel.sheet.macroEnabled.main+xml\",\n    xlsb: \"application/vnd.ms-excel.sheet.binary.macroEnabled.main\",\n    xlam: \"application/vnd.ms-excel.addin.macroEnabled.main+xml\",\n    xltx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml\"\n  },\n  strs: {\n    /* Shared Strings */\n    xlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sharedStrings+xml\",\n    xlsb: \"application/vnd.ms-excel.sharedStrings\"\n  },\n  comments: {\n    /* Comments */\n    xlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml\",\n    xlsb: \"application/vnd.ms-excel.comments\"\n  },\n  sheets: {\n    /* Worksheet */\n    xlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml\",\n    xlsb: \"application/vnd.ms-excel.worksheet\"\n  },\n  charts: {\n    /* Chartsheet */\n    xlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml\",\n    xlsb: \"application/vnd.ms-excel.chartsheet\"\n  },\n  dialogs: {\n    /* Dialogsheet */\n    xlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml\",\n    xlsb: \"application/vnd.ms-excel.dialogsheet\"\n  },\n  macros: {\n    /* Macrosheet (Excel 4.0 Macros) */\n    xlsx: \"application/vnd.ms-excel.macrosheet+xml\",\n    xlsb: \"application/vnd.ms-excel.macrosheet\"\n  },\n  metadata: {\n    /* Metadata (Stock/Geography and Dynamic Array) */\n    xlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheetMetadata+xml\",\n    xlsb: \"application/vnd.ms-excel.sheetMetadata\"\n  },\n  styles: {\n    /* Styles */\n    xlsx: \"application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml\",\n    xlsb: \"application/vnd.ms-excel.styles\"\n  }\n};\nfunction new_ct() /*:any*/{\n  return {\n    workbooks: [],\n    sheets: [],\n    charts: [],\n    dialogs: [],\n    macros: [],\n    rels: [],\n    strs: [],\n    comments: [],\n    threadedcomments: [],\n    links: [],\n    coreprops: [],\n    extprops: [],\n    custprops: [],\n    themes: [],\n    styles: [],\n    calcchains: [],\n    vba: [],\n    drawings: [],\n    metadata: [],\n    people: [],\n    TODO: [],\n    xmlns: \"\"\n  } /*:any*/;\n}\n\nfunction parse_ct(data /*:?string*/) {\n  var ct = new_ct();\n  if (!data || !data.match) return ct;\n  var ctext = {};\n  (data.match(tagregex) || []).forEach(function (x) {\n    var y = parsexmltag(x);\n    switch (y[0].replace(nsregex, \"<\")) {\n      case '<?xml':\n        break;\n      case '<Types':\n        ct.xmlns = y['xmlns' + (y[0].match(/<(\\w+):/) || [\"\", \"\"])[1]];\n        break;\n      case '<Default':\n        ctext[y.Extension.toLowerCase()] = y.ContentType;\n        break;\n      case '<Override':\n        if (ct[ct2type[y.ContentType]] !== undefined) ct[ct2type[y.ContentType]].push(y.PartName);\n        break;\n    }\n  });\n  if (ct.xmlns !== XMLNS.CT) throw new Error(\"Unknown Namespace: \" + ct.xmlns);\n  ct.calcchain = ct.calcchains.length > 0 ? ct.calcchains[0] : \"\";\n  ct.sst = ct.strs.length > 0 ? ct.strs[0] : \"\";\n  ct.style = ct.styles.length > 0 ? ct.styles[0] : \"\";\n  ct.defaults = ctext;\n  delete ct.calcchains;\n  return ct;\n}\nfunction write_ct(ct, opts, raw) /*:string*/{\n  var type2ct /*{[string]:Array<string>}*/ = evert_arr(ct2type);\n  var o /*:Array<string>*/ = [],\n    v;\n  if (!raw) {\n    o[o.length] = XML_HEADER;\n    o[o.length] = writextag('Types', null, {\n      'xmlns': XMLNS.CT,\n      'xmlns:xsd': XMLNS.xsd,\n      'xmlns:xsi': XMLNS.xsi\n    });\n    o = o.concat([['xml', 'application/xml'], ['bin', 'application/vnd.ms-excel.sheet.binary.macroEnabled.main'], ['vml', 'application/vnd.openxmlformats-officedocument.vmlDrawing'], ['data', 'application/vnd.openxmlformats-officedocument.model+data'], /* from test files */\n    ['bmp', 'image/bmp'], ['png', 'image/png'], ['gif', 'image/gif'], ['emf', 'image/x-emf'], ['wmf', 'image/x-wmf'], ['jpg', 'image/jpeg'], ['jpeg', 'image/jpeg'], ['tif', 'image/tiff'], ['tiff', 'image/tiff'], ['pdf', 'application/pdf'], ['rels', 'application/vnd.openxmlformats-package.relationships+xml']].map(function (x) {\n      return writextag('Default', null, {\n        'Extension': x[0],\n        'ContentType': x[1]\n      });\n    }));\n  }\n\n  /* only write first instance */\n  var f1 = function (w) {\n    if (ct[w] && ct[w].length > 0) {\n      v = ct[w][0];\n      o[o.length] = writextag('Override', null, {\n        'PartName': (v[0] == '/' ? \"\" : \"/\") + v,\n        'ContentType': CT_LIST[w][opts.bookType] || CT_LIST[w]['xlsx']\n      });\n    }\n  };\n\n  /* book type-specific */\n  var f2 = function (w) {\n    (ct[w] || []).forEach(function (v) {\n      o[o.length] = writextag('Override', null, {\n        'PartName': (v[0] == '/' ? \"\" : \"/\") + v,\n        'ContentType': CT_LIST[w][opts.bookType] || CT_LIST[w]['xlsx']\n      });\n    });\n  };\n\n  /* standard type */\n  var f3 = function (t) {\n    (ct[t] || []).forEach(function (v) {\n      o[o.length] = writextag('Override', null, {\n        'PartName': (v[0] == '/' ? \"\" : \"/\") + v,\n        'ContentType': type2ct[t][0]\n      });\n    });\n  };\n  f1('workbooks');\n  f2('sheets');\n  f2('charts');\n  f3('themes');\n  ['strs', 'styles'].forEach(f1);\n  ['coreprops', 'extprops', 'custprops'].forEach(f3);\n  f3('vba');\n  f3('comments');\n  f3('threadedcomments');\n  f3('drawings');\n  f2('metadata');\n  f3('people');\n  if (!raw && o.length > 2) {\n    o[o.length] = '</Types>';\n    o[1] = o[1].replace(\"/>\", \">\");\n  }\n  return o.join(\"\");\n}\n/* 9.3 Relationships */\nvar RELS = {\n  WB: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument\",\n  SHEET: \"http://sheetjs.openxmlformats.org/officeDocument/2006/relationships/officeDocument\",\n  HLINK: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/hyperlink\",\n  VML: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/vmlDrawing\",\n  XPATH: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/externalLinkPath\",\n  XMISS: \"http://schemas.microsoft.com/office/2006/relationships/xlExternalLinkPath/xlPathMissing\",\n  XLINK: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/externalLink\",\n  CXML: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/customXml\",\n  CXMLP: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/customXmlProps\",\n  CMNT: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/comments\",\n  CORE_PROPS: \"http://schemas.openxmlformats.org/package/2006/relationships/metadata/core-properties\",\n  EXT_PROPS: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/extended-properties',\n  CUST_PROPS: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/custom-properties',\n  SST: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/sharedStrings\",\n  STY: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles\",\n  THEME: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/theme\",\n  CHART: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/chart\",\n  CHARTEX: \"http://schemas.microsoft.com/office/2014/relationships/chartEx\",\n  CS: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/chartsheet\",\n  WS: [\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet\", \"http://purl.oclc.org/ooxml/officeDocument/relationships/worksheet\"],\n  DS: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/dialogsheet\",\n  MS: \"http://schemas.microsoft.com/office/2006/relationships/xlMacrosheet\",\n  IMG: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/image\",\n  DRAW: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/drawing\",\n  XLMETA: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/sheetMetadata\",\n  TCMNT: \"http://schemas.microsoft.com/office/2017/10/relationships/threadedComment\",\n  PEOPLE: \"http://schemas.microsoft.com/office/2017/10/relationships/person\",\n  CONN: \"http://schemas.openxmlformats.org/officeDocument/2006/relationships/connections\",\n  VBA: \"http://schemas.microsoft.com/office/2006/relationships/vbaProject\"\n} /*:any*/;\n\n/* 9.3.3 Representing Relationships */\nfunction get_rels_path(file /*:string*/) /*:string*/{\n  var n = file.lastIndexOf(\"/\");\n  return file.slice(0, n + 1) + '_rels/' + file.slice(n + 1) + \".rels\";\n}\nfunction parse_rels(data /*:?string*/, currentFilePath /*:string*/) {\n  var rels = {\n    \"!id\": {}\n  };\n  if (!data) return rels;\n  if (currentFilePath.charAt(0) !== '/') {\n    currentFilePath = '/' + currentFilePath;\n  }\n  var hash = {};\n  (data.match(tagregex) || []).forEach(function (x) {\n    var y = parsexmltag(x);\n    /* 9.3.2.2 OPC_Relationships */\n    if (y[0] === '<Relationship') {\n      var rel = {};\n      rel.Type = y.Type;\n      rel.Target = unescapexml(y.Target);\n      rel.Id = y.Id;\n      if (y.TargetMode) rel.TargetMode = y.TargetMode;\n      var canonictarget = y.TargetMode === 'External' ? y.Target : resolve_path(y.Target, currentFilePath);\n      rels[canonictarget] = rel;\n      hash[y.Id] = rel;\n    }\n  });\n  rels[\"!id\"] = hash;\n  return rels;\n}\n\n/* TODO */\nfunction write_rels(rels) /*:string*/{\n  var o = [XML_HEADER, writextag('Relationships', null, {\n    //'xmlns:ns0': XMLNS.RELS,\n    'xmlns': XMLNS.RELS\n  })];\n  keys(rels['!id']).forEach(function (rid) {\n    o[o.length] = writextag('Relationship', null, rels['!id'][rid]);\n  });\n  if (o.length > 2) {\n    o[o.length] = '</Relationships>';\n    o[1] = o[1].replace(\"/>\", \">\");\n  }\n  return o.join(\"\");\n}\nfunction add_rels(rels, rId /*:number*/, f, type, relobj, targetmode /*:?string*/) /*:number*/{\n  if (!relobj) relobj = {};\n  if (!rels['!id']) rels['!id'] = {};\n  if (!rels['!idx']) rels['!idx'] = 1;\n  if (rId < 0) for (rId = rels['!idx']; rels['!id']['rId' + rId]; ++rId) {/* empty */}\n  rels['!idx'] = rId + 1;\n  relobj.Id = 'rId' + rId;\n  relobj.Type = type;\n  relobj.Target = f;\n  if (targetmode) relobj.TargetMode = targetmode;else if ([RELS.HLINK, RELS.XPATH, RELS.XMISS].indexOf(relobj.Type) > -1) relobj.TargetMode = \"External\";\n  if (rels['!id'][relobj.Id]) throw new Error(\"Cannot rewrite rId \" + rId);\n  rels['!id'][relobj.Id] = relobj;\n  rels[('/' + relobj.Target).replace(\"//\", \"/\")] = relobj;\n  return rId;\n}\nvar CT_ODS = \"application/vnd.oasis.opendocument.spreadsheet\";\nfunction parse_manifest(d, opts) {\n  var str = xlml_normalize(d);\n  var Rn;\n  var FEtag;\n  while (Rn = xlmlregex.exec(str)) switch (Rn[3]) {\n    case \"manifest\":\n      break;\n    case \"file-entry\":\n      FEtag = parsexmltag(Rn[0], false);\n      if (FEtag.path == \"/\" && FEtag.type !== CT_ODS) throw new Error(\"This OpenDocument is not a spreadsheet\");\n      break;\n    case \"encryption-data\":\n    case \"algorithm\":\n    case \"start-key-generation\":\n    case \"key-derivation\":\n      throw new Error(\"Unsupported ODS Encryption\");\n    default:\n      if (opts && opts.WTF) throw Rn;\n  }\n}\nfunction write_manifest(manifest) {\n  var o = [XML_HEADER];\n  o.push('<manifest:manifest xmlns:manifest=\"urn:oasis:names:tc:opendocument:xmlns:manifest:1.0\" manifest:version=\"1.2\">\\n');\n  o.push('  <manifest:file-entry manifest:full-path=\"/\" manifest:version=\"1.2\" manifest:media-type=\"application/vnd.oasis.opendocument.spreadsheet\"/>\\n');\n  for (var i = 0; i < manifest.length; ++i) o.push('  <manifest:file-entry manifest:full-path=\"' + manifest[i][0] + '\" manifest:media-type=\"' + manifest[i][1] + '\"/>\\n');\n  o.push(\"</manifest:manifest>\");\n  return o.join(\"\");\n}\nfunction write_rdf_type(file, res, tag) {\n  return ['  <rdf:Description rdf:about=\"' + file + '\">\\n', '    <rdf:type rdf:resource=\"http://docs.oasis-open.org/ns/office/1.2/meta/' + (tag || \"odf\") + \"#\" + res + '\"/>\\n', \"  </rdf:Description>\\n\"].join(\"\");\n}\nfunction write_rdf_has(base, file) {\n  return ['  <rdf:Description rdf:about=\"' + base + '\">\\n', '    <ns0:hasPart xmlns:ns0=\"http://docs.oasis-open.org/ns/office/1.2/meta/pkg#\" rdf:resource=\"' + file + '\"/>\\n', \"  </rdf:Description>\\n\"].join(\"\");\n}\nfunction write_rdf(rdf) {\n  var o = [XML_HEADER];\n  o.push('<rdf:RDF xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\">\\n');\n  for (var i = 0; i != rdf.length; ++i) {\n    o.push(write_rdf_type(rdf[i][0], rdf[i][1]));\n    o.push(write_rdf_has(\"\", rdf[i][0]));\n  }\n  o.push(write_rdf_type(\"\", \"Document\", \"pkg\"));\n  o.push(\"</rdf:RDF>\");\n  return o.join(\"\");\n}\nfunction write_meta_ods(wb, opts) {\n  return '<office:document-meta xmlns:office=\"urn:oasis:names:tc:opendocument:xmlns:office:1.0\" xmlns:meta=\"urn:oasis:names:tc:opendocument:xmlns:meta:1.0\" xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" office:version=\"1.2\"><office:meta><meta:generator>SheetJS ' + XLSX.version + \"</meta:generator></office:meta></office:document-meta>\";\n}\n/* ECMA-376 Part II 11.1 Core Properties Part */\n/* [MS-OSHARED] 2.3.3.2.[1-2].1 (PIDSI/PIDDSI) */\nvar CORE_PROPS /*:Array<Array<string> >*/ = [[\"cp:category\", \"Category\"], [\"cp:contentStatus\", \"ContentStatus\"], [\"cp:keywords\", \"Keywords\"], [\"cp:lastModifiedBy\", \"LastAuthor\"], [\"cp:lastPrinted\", \"LastPrinted\"], [\"cp:revision\", \"RevNumber\"], [\"cp:version\", \"Version\"], [\"dc:creator\", \"Author\"], [\"dc:description\", \"Comments\"], [\"dc:identifier\", \"Identifier\"], [\"dc:language\", \"Language\"], [\"dc:subject\", \"Subject\"], [\"dc:title\", \"Title\"], [\"dcterms:created\", \"CreatedDate\", 'date'], [\"dcterms:modified\", \"ModifiedDate\", 'date']];\nvar CORE_PROPS_REGEX /*:Array<RegExp>*/ = /*#__PURE__*/function () {\n  var r = new Array(CORE_PROPS.length);\n  for (var i = 0; i < CORE_PROPS.length; ++i) {\n    var f = CORE_PROPS[i];\n    var g = \"(?:\" + f[0].slice(0, f[0].indexOf(\":\")) + \":)\" + f[0].slice(f[0].indexOf(\":\") + 1);\n    r[i] = new RegExp(\"<\" + g + \"[^>]*>([\\\\s\\\\S]*?)<\\/\" + g + \">\");\n  }\n  return r;\n}();\nfunction parse_core_props(data) {\n  var p = {};\n  data = utf8read(data);\n  for (var i = 0; i < CORE_PROPS.length; ++i) {\n    var f = CORE_PROPS[i],\n      cur = data.match(CORE_PROPS_REGEX[i]);\n    if (cur != null && cur.length > 0) p[f[1]] = unescapexml(cur[1]);\n    if (f[2] === 'date' && p[f[1]]) p[f[1]] = parseDate$1(p[f[1]]);\n  }\n  return p;\n}\nfunction cp_doit(f, g, h, o, p) {\n  if (p[f] != null || g == null || g === \"\") return;\n  p[f] = g;\n  g = escapexml(g);\n  o[o.length] = h ? writextag(f, g, h) : writetag(f, g);\n}\nfunction write_core_props(cp, _opts) {\n  var opts = _opts || {};\n  var o = [XML_HEADER, writextag('cp:coreProperties', null, {\n      //'xmlns': XMLNS.CORE_PROPS,\n      'xmlns:cp': XMLNS.CORE_PROPS,\n      'xmlns:dc': XMLNS.dc,\n      'xmlns:dcterms': XMLNS.dcterms,\n      'xmlns:dcmitype': XMLNS.dcmitype,\n      'xmlns:xsi': XMLNS.xsi\n    })],\n    p = {};\n  if (!cp && !opts.Props) return o.join(\"\");\n  if (cp) {\n    if (cp.CreatedDate != null) cp_doit(\"dcterms:created\", typeof cp.CreatedDate === \"string\" ? cp.CreatedDate : write_w3cdtf(cp.CreatedDate, opts.WTF), {\n      \"xsi:type\": \"dcterms:W3CDTF\"\n    }, o, p);\n    if (cp.ModifiedDate != null) cp_doit(\"dcterms:modified\", typeof cp.ModifiedDate === \"string\" ? cp.ModifiedDate : write_w3cdtf(cp.ModifiedDate, opts.WTF), {\n      \"xsi:type\": \"dcterms:W3CDTF\"\n    }, o, p);\n  }\n  for (var i = 0; i != CORE_PROPS.length; ++i) {\n    var f = CORE_PROPS[i];\n    var v = opts.Props && opts.Props[f[1]] != null ? opts.Props[f[1]] : cp ? cp[f[1]] : null;\n    if (v === true) v = \"1\";else if (v === false) v = \"0\";else if (typeof v == \"number\") v = String(v);\n    if (v != null) cp_doit(f[0], v, null, o, p);\n  }\n  if (o.length > 2) {\n    o[o.length] = '</cp:coreProperties>';\n    o[1] = o[1].replace(\"/>\", \">\");\n  }\n  return o.join(\"\");\n}\n/* 15.2.12.3 Extended File Properties Part */\n/* [MS-OSHARED] 2.3.3.2.[1-2].1 (PIDSI/PIDDSI) */\nvar EXT_PROPS /*:Array<Array<string> >*/ = [[\"Application\", \"Application\", \"string\"], [\"AppVersion\", \"AppVersion\", \"string\"], [\"Company\", \"Company\", \"string\"], [\"DocSecurity\", \"DocSecurity\", \"string\"], [\"Manager\", \"Manager\", \"string\"], [\"HyperlinksChanged\", \"HyperlinksChanged\", \"bool\"], [\"SharedDoc\", \"SharedDoc\", \"bool\"], [\"LinksUpToDate\", \"LinksUpToDate\", \"bool\"], [\"ScaleCrop\", \"ScaleCrop\", \"bool\"], [\"HeadingPairs\", \"HeadingPairs\", \"raw\"], [\"TitlesOfParts\", \"TitlesOfParts\", \"raw\"]];\nvar PseudoPropsPairs = [\"Worksheets\", \"SheetNames\", \"NamedRanges\", \"DefinedNames\", \"Chartsheets\", \"ChartNames\"];\nfunction load_props_pairs(HP /*:string|Array<Array<any>>*/, TOP, props, opts) {\n  var v = [];\n  if (typeof HP == \"string\") v = parseVector(HP, opts);else for (var j = 0; j < HP.length; ++j) v = v.concat(HP[j].map(function (hp) {\n    return {\n      v: hp\n    };\n  }));\n  var parts = typeof TOP == \"string\" ? parseVector(TOP, opts).map(function (x) {\n    return x.v;\n  }) : TOP;\n  var idx = 0,\n    len = 0;\n  if (parts.length > 0) for (var i = 0; i !== v.length; i += 2) {\n    len = +v[i + 1].v;\n    switch (v[i].v) {\n      case \"Worksheets\":\n      case \"工作表\":\n      case \"Листы\":\n      case \"أوراق العمل\":\n      case \"ワークシート\":\n      case \"גליונות עבודה\":\n      case \"Arbeitsblätter\":\n      case \"Çalışma Sayfaları\":\n      case \"Feuilles de calcul\":\n      case \"Fogli di lavoro\":\n      case \"Folhas de cálculo\":\n      case \"Planilhas\":\n      case \"Regneark\":\n      case \"Hojas de cálculo\":\n      case \"Werkbladen\":\n        props.Worksheets = len;\n        props.SheetNames = parts.slice(idx, idx + len);\n        break;\n      case \"Named Ranges\":\n      case \"Rangos con nombre\":\n      case \"名前付き一覧\":\n      case \"Benannte Bereiche\":\n      case \"Navngivne områder\":\n        props.NamedRanges = len;\n        props.DefinedNames = parts.slice(idx, idx + len);\n        break;\n      case \"Charts\":\n      case \"Diagramme\":\n        props.Chartsheets = len;\n        props.ChartNames = parts.slice(idx, idx + len);\n        break;\n    }\n    idx += len;\n  }\n}\nfunction parse_ext_props(data, p, opts) {\n  var q = {};\n  if (!p) p = {};\n  data = utf8read(data);\n  EXT_PROPS.forEach(function (f) {\n    var xml = (data.match(matchtag(f[0])) || [])[1];\n    switch (f[2]) {\n      case \"string\":\n        if (xml) p[f[1]] = unescapexml(xml);\n        break;\n      case \"bool\":\n        p[f[1]] = xml === \"true\";\n        break;\n      case \"raw\":\n        var cur = data.match(new RegExp(\"<\" + f[0] + \"[^>]*>([\\\\s\\\\S]*?)<\\/\" + f[0] + \">\"));\n        if (cur && cur.length > 0) q[f[1]] = cur[1];\n        break;\n    }\n  });\n  if (q.HeadingPairs && q.TitlesOfParts) load_props_pairs(q.HeadingPairs, q.TitlesOfParts, p, opts);\n  return p;\n}\nfunction write_ext_props(cp /*::, opts*/) /*:string*/{\n  var o /*:Array<string>*/ = [],\n    W = writextag;\n  if (!cp) cp = {};\n  cp.Application = \"SheetJS\";\n  o[o.length] = XML_HEADER;\n  o[o.length] = writextag('Properties', null, {\n    'xmlns': XMLNS.EXT_PROPS,\n    'xmlns:vt': XMLNS.vt\n  });\n  EXT_PROPS.forEach(function (f) {\n    if (cp[f[1]] === undefined) return;\n    var v;\n    switch (f[2]) {\n      case 'string':\n        v = escapexml(String(cp[f[1]]));\n        break;\n      case 'bool':\n        v = cp[f[1]] ? 'true' : 'false';\n        break;\n    }\n    if (v !== undefined) o[o.length] = W(f[0], v);\n  });\n\n  /* TODO: HeadingPairs, TitlesOfParts */\n  o[o.length] = W('HeadingPairs', W('vt:vector', W('vt:variant', '<vt:lpstr>Worksheets</vt:lpstr>') + W('vt:variant', W('vt:i4', String(cp.Worksheets))), {\n    size: 2,\n    baseType: \"variant\"\n  }));\n  o[o.length] = W('TitlesOfParts', W('vt:vector', cp.SheetNames.map(function (s) {\n    return \"<vt:lpstr>\" + escapexml(s) + \"</vt:lpstr>\";\n  }).join(\"\"), {\n    size: cp.Worksheets,\n    baseType: \"lpstr\"\n  }));\n  if (o.length > 2) {\n    o[o.length] = '</Properties>';\n    o[1] = o[1].replace(\"/>\", \">\");\n  }\n  return o.join(\"\");\n}\n/* 15.2.12.2 Custom File Properties Part */\nvar custregex = /<[^>]+>[^<]*/g;\nfunction parse_cust_props(data /*:string*/, opts) {\n  var p = {},\n    name = \"\";\n  var m = data.match(custregex);\n  if (m) for (var i = 0; i != m.length; ++i) {\n    var x = m[i],\n      y = parsexmltag(x);\n    switch (strip_ns(y[0])) {\n      case '<?xml':\n        break;\n      case '<Properties':\n        break;\n      case '<property':\n        name = unescapexml(y.name);\n        break;\n      case '</property>':\n        name = null;\n        break;\n      default:\n        if (x.indexOf('<vt:') === 0) {\n          var toks = x.split('>');\n          var type = toks[0].slice(4),\n            text = toks[1];\n          /* 22.4.2.32 (CT_Variant). Omit the binary types from 22.4 (Variant Types) */\n          switch (type) {\n            case 'lpstr':\n            case 'bstr':\n            case 'lpwstr':\n              p[name] = unescapexml(text);\n              break;\n            case 'bool':\n              p[name] = parsexmlbool(text);\n              break;\n            case 'i1':\n            case 'i2':\n            case 'i4':\n            case 'i8':\n            case 'int':\n            case 'uint':\n              p[name] = parseInt(text, 10);\n              break;\n            case 'r4':\n            case 'r8':\n            case 'decimal':\n              p[name] = parseFloat(text);\n              break;\n            case 'filetime':\n            case 'date':\n              p[name] = parseDate$1(text);\n              break;\n            case 'cy':\n            case 'error':\n              p[name] = unescapexml(text);\n              break;\n            default:\n              if (type.slice(-1) == '/') break;\n              if (opts.WTF && typeof console !== 'undefined') console.warn('Unexpected', x, type, toks);\n          }\n        } else if (x.slice(0, 2) === \"</\") ;else if (opts.WTF) throw new Error(x);\n    }\n  }\n  return p;\n}\nfunction write_cust_props(cp /*::, opts*/) /*:string*/{\n  var o = [XML_HEADER, writextag('Properties', null, {\n    'xmlns': XMLNS.CUST_PROPS,\n    'xmlns:vt': XMLNS.vt\n  })];\n  if (!cp) return o.join(\"\");\n  var pid = 1;\n  keys(cp).forEach(function custprop(k) {\n    ++pid;\n    o[o.length] = writextag('property', write_vt(cp[k], true), {\n      'fmtid': '{D5CDD505-2E9C-101B-9397-08002B2CF9AE}',\n      'pid': pid,\n      'name': escapexml(k)\n    });\n  });\n  if (o.length > 2) {\n    o[o.length] = '</Properties>';\n    o[1] = o[1].replace(\"/>\", \">\");\n  }\n  return o.join(\"\");\n}\n/* Common Name -> XLML Name */\nvar XLMLDocPropsMap = {\n  Title: 'Title',\n  Subject: 'Subject',\n  Author: 'Author',\n  Keywords: 'Keywords',\n  Comments: 'Description',\n  LastAuthor: 'LastAuthor',\n  RevNumber: 'Revision',\n  Application: 'AppName',\n  /* TotalTime: 'TotalTime', */\n  LastPrinted: 'LastPrinted',\n  CreatedDate: 'Created',\n  ModifiedDate: 'LastSaved',\n  /* Pages */\n  /* Words */\n  /* Characters */\n  Category: 'Category',\n  /* PresentationFormat */\n  Manager: 'Manager',\n  Company: 'Company',\n  /* Guid */\n  /* HyperlinkBase */\n  /* Bytes */\n  /* Lines */\n  /* Paragraphs */\n  /* CharactersWithSpaces */\n  AppVersion: 'Version',\n  ContentStatus: 'ContentStatus',\n  /* NOTE: missing from schema */\n  Identifier: 'Identifier',\n  /* NOTE: missing from schema */\n  Language: 'Language' /* NOTE: missing from schema */\n};\n\nvar evert_XLMLDPM;\nfunction xlml_set_prop(Props, tag /*:string*/, val) {\n  if (!evert_XLMLDPM) evert_XLMLDPM = evert(XLMLDocPropsMap);\n  tag = evert_XLMLDPM[tag] || tag;\n  Props[tag] = val;\n}\nfunction xlml_write_docprops(Props, opts) {\n  var o /*:Array<string>*/ = [];\n  keys(XLMLDocPropsMap).map(function (m) {\n    for (var i = 0; i < CORE_PROPS.length; ++i) if (CORE_PROPS[i][1] == m) return CORE_PROPS[i];\n    for (i = 0; i < EXT_PROPS.length; ++i) if (EXT_PROPS[i][1] == m) return EXT_PROPS[i];\n    throw m;\n  }).forEach(function (p) {\n    if (Props[p[1]] == null) return;\n    var m = opts && opts.Props && opts.Props[p[1]] != null ? opts.Props[p[1]] : Props[p[1]];\n    switch (p[2]) {\n      case 'date':\n        m = new Date(m).toISOString().replace(/\\.\\d*Z/, \"Z\");\n        break;\n    }\n    if (typeof m == 'number') m = String(m);else if (m === true || m === false) {\n      m = m ? \"1\" : \"0\";\n    } else if (m instanceof Date) m = new Date(m).toISOString().replace(/\\.\\d*Z/, \"\");\n    o.push(writetag(XLMLDocPropsMap[p[1]] || p[1], m));\n  });\n  return writextag('DocumentProperties', o.join(\"\"), {\n    xmlns: XLMLNS.o\n  });\n}\nfunction xlml_write_custprops(Props, Custprops /*::, opts*/) {\n  var BLACKLIST = [\"Worksheets\", \"SheetNames\"];\n  var T = 'CustomDocumentProperties';\n  var o /*:Array<string>*/ = [];\n  if (Props) keys(Props).forEach(function (k) {\n    /*:: if(!Props) return; */\n    if (!Object.prototype.hasOwnProperty.call(Props, k)) return;\n    for (var i = 0; i < CORE_PROPS.length; ++i) if (k == CORE_PROPS[i][1]) return;\n    for (i = 0; i < EXT_PROPS.length; ++i) if (k == EXT_PROPS[i][1]) return;\n    for (i = 0; i < BLACKLIST.length; ++i) if (k == BLACKLIST[i]) return;\n    var m = Props[k];\n    var t = \"string\";\n    if (typeof m == 'number') {\n      t = \"float\";\n      m = String(m);\n    } else if (m === true || m === false) {\n      t = \"boolean\";\n      m = m ? \"1\" : \"0\";\n    } else m = String(m);\n    o.push(writextag(escapexmltag(k), m, {\n      \"dt:dt\": t\n    }));\n  });\n  if (Custprops) keys(Custprops).forEach(function (k) {\n    /*:: if(!Custprops) return; */\n    if (!Object.prototype.hasOwnProperty.call(Custprops, k)) return;\n    if (Props && Object.prototype.hasOwnProperty.call(Props, k)) return;\n    var m = Custprops[k];\n    var t = \"string\";\n    if (typeof m == 'number') {\n      t = \"float\";\n      m = String(m);\n    } else if (m === true || m === false) {\n      t = \"boolean\";\n      m = m ? \"1\" : \"0\";\n    } else if (m instanceof Date) {\n      t = \"dateTime.tz\";\n      m = m.toISOString();\n    } else m = String(m);\n    o.push(writextag(escapexmltag(k), m, {\n      \"dt:dt\": t\n    }));\n  });\n  return '<' + T + ' xmlns=\"' + XLMLNS.o + '\">' + o.join(\"\") + '</' + T + '>';\n}\n/* [MS-DTYP] 2.3.3 FILETIME */\n/* [MS-OLEDS] 2.1.3 FILETIME (Packet Version) */\n/* [MS-OLEPS] 2.8 FILETIME (Packet Version) */\nfunction parse_FILETIME(blob) {\n  var dwLowDateTime = blob.read_shift(4),\n    dwHighDateTime = blob.read_shift(4);\n  return new Date((dwHighDateTime / 1e7 * Math.pow(2, 32) + dwLowDateTime / 1e7 - 11644473600) * 1000).toISOString().replace(/\\.000/, \"\");\n}\nfunction write_FILETIME(time /*:string|Date*/) {\n  var date = typeof time == \"string\" ? new Date(Date.parse(time)) : time;\n  var t = date.getTime() / 1000 + 11644473600;\n  var l = t % Math.pow(2, 32),\n    h = (t - l) / Math.pow(2, 32);\n  l *= 1e7;\n  h *= 1e7;\n  var w = l / Math.pow(2, 32) | 0;\n  if (w > 0) {\n    l = l % Math.pow(2, 32);\n    h += w;\n  }\n  var o = new_buf(8);\n  o.write_shift(4, l);\n  o.write_shift(4, h);\n  return o;\n}\n\n/* [MS-OSHARED] 2.3.3.1.4 Lpstr */\nfunction parse_lpstr(blob, type, pad /*:?number*/) {\n  var start = blob.l;\n  var str = blob.read_shift(0, 'lpstr-cp');\n  if (pad) while (blob.l - start & 3) ++blob.l;\n  return str;\n}\n\n/* [MS-OSHARED] 2.3.3.1.6 Lpwstr */\nfunction parse_lpwstr(blob, type, pad) {\n  var str = blob.read_shift(0, 'lpwstr');\n  if (pad) blob.l += 4 - (str.length + 1 & 3) & 3;\n  return str;\n}\n\n/* [MS-OSHARED] 2.3.3.1.11 VtString */\n/* [MS-OSHARED] 2.3.3.1.12 VtUnalignedString */\nfunction parse_VtStringBase(blob, stringType, pad) {\n  if (stringType === 0x1F /*VT_LPWSTR*/) return parse_lpwstr(blob);\n  return parse_lpstr(blob, stringType, pad);\n}\nfunction parse_VtString(blob, t /*:number*/, pad /*:?boolean*/) {\n  return parse_VtStringBase(blob, t, pad === false ? 0 : 4);\n}\nfunction parse_VtUnalignedString(blob, t /*:number*/) {\n  if (!t) throw new Error(\"VtUnalignedString must have positive length\");\n  return parse_VtStringBase(blob, t, 0);\n}\n\n/* [MS-OSHARED] 2.3.3.1.7 VtVecLpwstrValue */\nfunction parse_VtVecLpwstrValue(blob) /*:Array<string>*/{\n  var length = blob.read_shift(4);\n  var ret /*:Array<string>*/ = [];\n  for (var i = 0; i != length; ++i) {\n    var start = blob.l;\n    ret[i] = blob.read_shift(0, 'lpwstr').replace(chr0, '');\n    if (blob.l - start & 0x02) blob.l += 2;\n  }\n  return ret;\n}\n\n/* [MS-OSHARED] 2.3.3.1.9 VtVecUnalignedLpstrValue */\nfunction parse_VtVecUnalignedLpstrValue(blob) /*:Array<string>*/{\n  var length = blob.read_shift(4);\n  var ret /*:Array<string>*/ = [];\n  for (var i = 0; i != length; ++i) ret[i] = blob.read_shift(0, 'lpstr-cp').replace(chr0, '');\n  return ret;\n}\n\n/* [MS-OSHARED] 2.3.3.1.13 VtHeadingPair */\nfunction parse_VtHeadingPair(blob) {\n  var start = blob.l;\n  var headingString = parse_TypedPropertyValue(blob, VT_USTR);\n  if (blob[blob.l] == 0x00 && blob[blob.l + 1] == 0x00 && blob.l - start & 0x02) blob.l += 2;\n  var headerParts = parse_TypedPropertyValue(blob, VT_I4);\n  return [headingString, headerParts];\n}\n\n/* [MS-OSHARED] 2.3.3.1.14 VtVecHeadingPairValue */\nfunction parse_VtVecHeadingPairValue(blob) {\n  var cElements = blob.read_shift(4);\n  var out = [];\n  for (var i = 0; i < cElements / 2; ++i) out.push(parse_VtHeadingPair(blob));\n  return out;\n}\n\n/* [MS-OLEPS] 2.18.1 Dictionary (uses 2.17, 2.16) */\nfunction parse_dictionary(blob, CodePage) {\n  var cnt = blob.read_shift(4);\n  var dict /*:{[number]:string}*/ = {} /*:any*/;\n  for (var j = 0; j != cnt; ++j) {\n    var pid = blob.read_shift(4);\n    var len = blob.read_shift(4);\n    dict[pid] = blob.read_shift(len, CodePage === 0x4B0 ? 'utf16le' : 'utf8').replace(chr0, '').replace(chr1, '!');\n    if (CodePage === 0x4B0 && len % 2) blob.l += 2;\n  }\n  if (blob.l & 3) blob.l = blob.l >> 2 + 1 << 2;\n  return dict;\n}\n\n/* [MS-OLEPS] 2.9 BLOB */\nfunction parse_BLOB(blob) {\n  var size = blob.read_shift(4);\n  var bytes = blob.slice(blob.l, blob.l + size);\n  blob.l += size;\n  if ((size & 3) > 0) blob.l += 4 - (size & 3) & 3;\n  return bytes;\n}\n\n/* [MS-OLEPS] 2.11 ClipboardData */\nfunction parse_ClipboardData(blob) {\n  // TODO\n  var o = {};\n  o.Size = blob.read_shift(4);\n  //o.Format = blob.read_shift(4);\n  blob.l += o.Size + 3 - (o.Size - 1) % 4;\n  return o;\n}\n\n/* [MS-OLEPS] 2.15 TypedPropertyValue */\nfunction parse_TypedPropertyValue(blob, type /*:number*/, _opts) /*:any*/{\n  var t = blob.read_shift(2),\n    ret,\n    opts = _opts || {};\n  blob.l += 2;\n  if (type !== VT_VARIANT) if (t !== type && VT_CUSTOM.indexOf(type) === -1 && !((type & 0xFFFE) == 0x101E && (t & 0xFFFE) == 0x101E)) throw new Error('Expected type ' + type + ' saw ' + t);\n  switch (type === VT_VARIANT ? t : type) {\n    case 0x02 /*VT_I2*/:\n      ret = blob.read_shift(2, 'i');\n      if (!opts.raw) blob.l += 2;\n      return ret;\n    case 0x03 /*VT_I4*/:\n      ret = blob.read_shift(4, 'i');\n      return ret;\n    case 0x0B /*VT_BOOL*/:\n      return blob.read_shift(4) !== 0x0;\n    case 0x13 /*VT_UI4*/:\n      ret = blob.read_shift(4);\n      return ret;\n    case 0x1E /*VT_LPSTR*/:\n      return parse_lpstr(blob, t, 4).replace(chr0, '');\n    case 0x1F /*VT_LPWSTR*/:\n      return parse_lpwstr(blob);\n    case 0x40 /*VT_FILETIME*/:\n      return parse_FILETIME(blob);\n    case 0x41 /*VT_BLOB*/:\n      return parse_BLOB(blob);\n    case 0x47 /*VT_CF*/:\n      return parse_ClipboardData(blob);\n    case 0x50 /*VT_STRING*/:\n      return parse_VtString(blob, t, !opts.raw).replace(chr0, '');\n    case 0x51 /*VT_USTR*/:\n      return parse_VtUnalignedString(blob, t /*, 4*/).replace(chr0, '');\n    case 0x100C /*VT_VECTOR|VT_VARIANT*/:\n      return parse_VtVecHeadingPairValue(blob);\n    case 0x101E /*VT_VECTOR|VT_LPSTR*/:\n    case 0x101F /*VT_VECTOR|VT_LPWSTR*/:\n      return t == 0x101F ? parse_VtVecLpwstrValue(blob) : parse_VtVecUnalignedLpstrValue(blob);\n    default:\n      throw new Error(\"TypedPropertyValue unrecognized type \" + type + \" \" + t);\n  }\n}\nfunction write_TypedPropertyValue(type /*:number*/, value) {\n  var o = new_buf(4),\n    p = new_buf(4);\n  o.write_shift(4, type == 0x50 ? 0x1F : type);\n  switch (type) {\n    case 0x03 /*VT_I4*/:\n      p.write_shift(-4, value);\n      break;\n    case 0x05 /*VT_I4*/:\n      p = new_buf(8);\n      p.write_shift(8, value, 'f');\n      break;\n    case 0x0B /*VT_BOOL*/:\n      p.write_shift(4, value ? 0x01 : 0x00);\n      break;\n    case 0x40 /*VT_FILETIME*/:\n      /*:: if(typeof value !== \"string\" && !(value instanceof Date)) throw \"unreachable\"; */p = write_FILETIME(value);\n      break;\n    case 0x1F /*VT_LPWSTR*/:\n    case 0x50 /*VT_STRING*/:\n      /*:: if(typeof value !== \"string\") throw \"unreachable\"; */\n      p = new_buf(4 + 2 * (value.length + 1) + (value.length % 2 ? 0 : 2));\n      p.write_shift(4, value.length + 1);\n      p.write_shift(0, value, \"dbcs\");\n      while (p.l != p.length) p.write_shift(1, 0);\n      break;\n    default:\n      throw new Error(\"TypedPropertyValue unrecognized type \" + type + \" \" + value);\n  }\n  return bconcat([o, p]);\n}\n\n/* [MS-OLEPS] 2.20 PropertySet */\nfunction parse_PropertySet(blob, PIDSI) {\n  var start_addr = blob.l;\n  var size = blob.read_shift(4);\n  var NumProps = blob.read_shift(4);\n  var Props = [],\n    i = 0;\n  var CodePage = 0;\n  var Dictionary = -1,\n    DictObj /*:{[number]:string}*/ = {} /*:any*/;\n  for (i = 0; i != NumProps; ++i) {\n    var PropID = blob.read_shift(4);\n    var Offset = blob.read_shift(4);\n    Props[i] = [PropID, Offset + start_addr];\n  }\n  Props.sort(function (x, y) {\n    return x[1] - y[1];\n  });\n  var PropH = {};\n  for (i = 0; i != NumProps; ++i) {\n    if (blob.l !== Props[i][1]) {\n      var fail = true;\n      if (i > 0 && PIDSI) switch (PIDSI[Props[i - 1][0]].t) {\n        case 0x02 /*VT_I2*/:\n          if (blob.l + 2 === Props[i][1]) {\n            blob.l += 2;\n            fail = false;\n          }\n          break;\n        case 0x50 /*VT_STRING*/:\n          if (blob.l <= Props[i][1]) {\n            blob.l = Props[i][1];\n            fail = false;\n          }\n          break;\n        case 0x100C /*VT_VECTOR|VT_VARIANT*/:\n          if (blob.l <= Props[i][1]) {\n            blob.l = Props[i][1];\n            fail = false;\n          }\n          break;\n      }\n      if ((!PIDSI || i == 0) && blob.l <= Props[i][1]) {\n        fail = false;\n        blob.l = Props[i][1];\n      }\n      if (fail) throw new Error(\"Read Error: Expected address \" + Props[i][1] + ' at ' + blob.l + ' :' + i);\n    }\n    if (PIDSI) {\n      if (Props[i][0] == 0 && Props.length > i + 1 && Props[i][1] == Props[i + 1][1]) continue; // R9\n      var piddsi = PIDSI[Props[i][0]];\n      PropH[piddsi.n] = parse_TypedPropertyValue(blob, piddsi.t, {\n        raw: true\n      });\n      if (piddsi.p === 'version') PropH[piddsi.n] = String(PropH[piddsi.n] >> 16) + \".\" + (\"0000\" + String(PropH[piddsi.n] & 0xFFFF)).slice(-4);\n      if (piddsi.n == \"CodePage\") switch (PropH[piddsi.n]) {\n        case 0:\n          PropH[piddsi.n] = 1252;\n        /* falls through */\n        case 874:\n        case 932:\n        case 936:\n        case 949:\n        case 950:\n        case 1250:\n        case 1251:\n        case 1253:\n        case 1254:\n        case 1255:\n        case 1256:\n        case 1257:\n        case 1258:\n        case 10000:\n        case 1200:\n        case 1201:\n        case 1252:\n        case 65000:\n        case -536:\n        case 65001:\n        case -535:\n          set_cp(CodePage = PropH[piddsi.n] >>> 0 & 0xFFFF);\n          break;\n        default:\n          throw new Error(\"Unsupported CodePage: \" + PropH[piddsi.n]);\n      }\n    } else {\n      if (Props[i][0] === 0x1) {\n        CodePage = PropH.CodePage = parse_TypedPropertyValue(blob, VT_I2) /*:number*/;\n        set_cp(CodePage);\n        if (Dictionary !== -1) {\n          var oldpos = blob.l;\n          blob.l = Props[Dictionary][1];\n          DictObj = parse_dictionary(blob, CodePage);\n          blob.l = oldpos;\n        }\n      } else if (Props[i][0] === 0) {\n        if (CodePage === 0) {\n          Dictionary = i;\n          blob.l = Props[i + 1][1];\n          continue;\n        }\n        DictObj = parse_dictionary(blob, CodePage);\n      } else {\n        var name = DictObj[Props[i][0]];\n        var val;\n        /* [MS-OSHARED] 2.3.3.2.3.1.2 + PROPVARIANT */\n        switch (blob[blob.l]) {\n          case 0x41 /*VT_BLOB*/:\n            blob.l += 4;\n            val = parse_BLOB(blob);\n            break;\n          case 0x1E /*VT_LPSTR*/:\n            blob.l += 4;\n            val = parse_VtString(blob, blob[blob.l - 4]).replace(/\\u0000+$/, \"\");\n            break;\n          case 0x1F /*VT_LPWSTR*/:\n            blob.l += 4;\n            val = parse_VtString(blob, blob[blob.l - 4]).replace(/\\u0000+$/, \"\");\n            break;\n          case 0x03 /*VT_I4*/:\n            blob.l += 4;\n            val = blob.read_shift(4, 'i');\n            break;\n          case 0x13 /*VT_UI4*/:\n            blob.l += 4;\n            val = blob.read_shift(4);\n            break;\n          case 0x05 /*VT_R8*/:\n            blob.l += 4;\n            val = blob.read_shift(8, 'f');\n            break;\n          case 0x0B /*VT_BOOL*/:\n            blob.l += 4;\n            val = parsebool(blob, 4);\n            break;\n          case 0x40 /*VT_FILETIME*/:\n            blob.l += 4;\n            val = parseDate$1(parse_FILETIME(blob));\n            break;\n          default:\n            throw new Error(\"unparsed value: \" + blob[blob.l]);\n        }\n        PropH[name] = val;\n      }\n    }\n  }\n  blob.l = start_addr + size; /* step ahead to skip padding */\n  return PropH;\n}\nvar XLSPSSkip = [\"CodePage\", \"Thumbnail\", \"_PID_LINKBASE\", \"_PID_HLINKS\", \"SystemIdentifier\", \"FMTID\"];\nfunction guess_property_type(val /*:any*/) /*:number*/{\n  switch (typeof val) {\n    case \"boolean\":\n      return 0x0B;\n    case \"number\":\n      return (val | 0) == val ? 0x03 : 0x05;\n    case \"string\":\n      return 0x1F;\n    case \"object\":\n      if (val instanceof Date) return 0x40;\n      break;\n  }\n  return -1;\n}\nfunction write_PropertySet(entries, RE, PIDSI) {\n  var hdr = new_buf(8),\n    piao = [],\n    prop = [];\n  var sz = 8,\n    i = 0;\n  var pr = new_buf(8),\n    pio = new_buf(8);\n  pr.write_shift(4, 0x0002);\n  pr.write_shift(4, 0x04B0);\n  pio.write_shift(4, 0x0001);\n  prop.push(pr);\n  piao.push(pio);\n  sz += 8 + pr.length;\n  if (!RE) {\n    pio = new_buf(8);\n    pio.write_shift(4, 0);\n    piao.unshift(pio);\n    var bufs = [new_buf(4)];\n    bufs[0].write_shift(4, entries.length);\n    for (i = 0; i < entries.length; ++i) {\n      var value = entries[i][0];\n      pr = new_buf(4 + 4 + 2 * (value.length + 1) + (value.length % 2 ? 0 : 2));\n      pr.write_shift(4, i + 2);\n      pr.write_shift(4, value.length + 1);\n      pr.write_shift(0, value, \"dbcs\");\n      while (pr.l != pr.length) pr.write_shift(1, 0);\n      bufs.push(pr);\n    }\n    pr = bconcat(bufs);\n    prop.unshift(pr);\n    sz += 8 + pr.length;\n  }\n  for (i = 0; i < entries.length; ++i) {\n    if (RE && !RE[entries[i][0]]) continue;\n    if (XLSPSSkip.indexOf(entries[i][0]) > -1 || PseudoPropsPairs.indexOf(entries[i][0]) > -1) continue;\n    if (entries[i][1] == null) continue;\n    var val = entries[i][1],\n      idx = 0;\n    if (RE) {\n      idx = +RE[entries[i][0]];\n      var pinfo = PIDSI /*:: || {}*/[idx] /*:: || {} */;\n      if (pinfo.p == \"version\" && typeof val == \"string\") {\n        /*:: if(typeof val !== \"string\") throw \"unreachable\"; */\n        var arr = val.split(\".\");\n        val = (+arr[0] << 16) + (+arr[1] || 0);\n      }\n      pr = write_TypedPropertyValue(pinfo.t, val);\n    } else {\n      var T = guess_property_type(val);\n      if (T == -1) {\n        T = 0x1F;\n        val = String(val);\n      }\n      pr = write_TypedPropertyValue(T, val);\n    }\n    prop.push(pr);\n    pio = new_buf(8);\n    pio.write_shift(4, !RE ? 2 + i : idx);\n    piao.push(pio);\n    sz += 8 + pr.length;\n  }\n  var w = 8 * (prop.length + 1);\n  for (i = 0; i < prop.length; ++i) {\n    piao[i].write_shift(4, w);\n    w += prop[i].length;\n  }\n  hdr.write_shift(4, sz);\n  hdr.write_shift(4, prop.length);\n  return bconcat([hdr].concat(piao).concat(prop));\n}\n\n/* [MS-OLEPS] 2.21 PropertySetStream */\nfunction parse_PropertySetStream(file, PIDSI, clsid) {\n  var blob = file.content;\n  if (!blob) return {} /*:any*/;\n  prep_blob(blob, 0);\n  var NumSets,\n    FMTID0,\n    FMTID1,\n    Offset0,\n    Offset1 = 0;\n  blob.chk('feff', 'Byte Order: ');\n\n  /*var vers = */\n  blob.read_shift(2); // TODO: check version\n  var SystemIdentifier = blob.read_shift(4);\n  var CLSID = blob.read_shift(16);\n  if (CLSID !== CFB.utils.consts.HEADER_CLSID && CLSID !== clsid) throw new Error(\"Bad PropertySet CLSID \" + CLSID);\n  NumSets = blob.read_shift(4);\n  if (NumSets !== 1 && NumSets !== 2) throw new Error(\"Unrecognized #Sets: \" + NumSets);\n  FMTID0 = blob.read_shift(16);\n  Offset0 = blob.read_shift(4);\n  if (NumSets === 1 && Offset0 !== blob.l) throw new Error(\"Length mismatch: \" + Offset0 + \" !== \" + blob.l);else if (NumSets === 2) {\n    FMTID1 = blob.read_shift(16);\n    Offset1 = blob.read_shift(4);\n  }\n  var PSet0 = parse_PropertySet(blob, PIDSI);\n  var rval = {\n    SystemIdentifier: SystemIdentifier\n  } /*:any*/;\n  for (var y in PSet0) rval[y] = PSet0[y];\n  //rval.blob = blob;\n  rval.FMTID = FMTID0;\n  //rval.PSet0 = PSet0;\n  if (NumSets === 1) return rval;\n  if (Offset1 - blob.l == 2) blob.l += 2;\n  if (blob.l !== Offset1) throw new Error(\"Length mismatch 2: \" + blob.l + \" !== \" + Offset1);\n  var PSet1;\n  try {\n    PSet1 = parse_PropertySet(blob, null);\n  } catch (e) {/* empty */}\n  for (y in PSet1) rval[y] = PSet1[y];\n  rval.FMTID = [FMTID0, FMTID1]; // TODO: verify FMTID0/1\n  return rval;\n}\nfunction write_PropertySetStream(entries, clsid, RE, PIDSI /*:{[key:string|number]:any}*/, entries2 /*:?any*/, clsid2 /*:?any*/) {\n  var hdr = new_buf(entries2 ? 68 : 48);\n  var bufs = [hdr];\n  hdr.write_shift(2, 0xFFFE);\n  hdr.write_shift(2, 0x0000); /* TODO: type 1 props */\n  hdr.write_shift(4, 0x32363237);\n  hdr.write_shift(16, CFB.utils.consts.HEADER_CLSID, \"hex\");\n  hdr.write_shift(4, entries2 ? 2 : 1);\n  hdr.write_shift(16, clsid, \"hex\");\n  hdr.write_shift(4, entries2 ? 68 : 48);\n  var ps0 = write_PropertySet(entries, RE, PIDSI);\n  bufs.push(ps0);\n  if (entries2) {\n    var ps1 = write_PropertySet(entries2, null, null);\n    hdr.write_shift(16, clsid2, \"hex\");\n    hdr.write_shift(4, 68 + ps0.length);\n    bufs.push(ps1);\n  }\n  return bconcat(bufs);\n}\nfunction parsenoop2(blob, length) {\n  blob.read_shift(length);\n  return null;\n}\nfunction writezeroes(n, o) {\n  if (!o) o = new_buf(n);\n  for (var j = 0; j < n; ++j) o.write_shift(1, 0);\n  return o;\n}\nfunction parslurp(blob, length, cb) {\n  var arr = [],\n    target = blob.l + length;\n  while (blob.l < target) arr.push(cb(blob, target - blob.l));\n  if (target !== blob.l) throw new Error(\"Slurp error\");\n  return arr;\n}\nfunction parsebool(blob, length /*:number*/) {\n  return blob.read_shift(length) === 0x1;\n}\nfunction writebool(v /*:any*/, o) {\n  if (!o) o = new_buf(2);\n  o.write_shift(2, +!!v);\n  return o;\n}\nfunction parseuint16(blob /*::, length:?number, opts:?any*/) {\n  return blob.read_shift(2, 'u');\n}\nfunction writeuint16(v /*:number*/, o) {\n  if (!o) o = new_buf(2);\n  o.write_shift(2, v);\n  return o;\n}\nfunction parseuint16a(blob, length /*:: :?number, opts:?any*/) {\n  return parslurp(blob, length, parseuint16);\n}\n\n/* --- 2.5 Structures --- */\n\n/* [MS-XLS] 2.5.10 Bes (boolean or error) */\nfunction parse_Bes(blob /*::, length*/) {\n  var v = blob.read_shift(1),\n    t = blob.read_shift(1);\n  return t === 0x01 ? v : v === 0x01;\n}\nfunction write_Bes(v, t /*:string*/, o) {\n  if (!o) o = new_buf(2);\n  o.write_shift(1, t == 'e' ? +v : +!!v);\n  o.write_shift(1, t == 'e' ? 1 : 0);\n  return o;\n}\n\n/* [MS-XLS] 2.5.240 ShortXLUnicodeString */\nfunction parse_ShortXLUnicodeString(blob, length, opts) {\n  var cch = blob.read_shift(opts && opts.biff >= 12 ? 2 : 1);\n  var encoding = 'sbcs-cont';\n  var cp = current_codepage;\n  if (opts && opts.biff >= 8) current_codepage = 1200;\n  if (!opts || opts.biff == 8) {\n    var fHighByte = blob.read_shift(1);\n    if (fHighByte) {\n      encoding = 'dbcs-cont';\n    }\n  } else if (opts.biff == 12) {\n    encoding = 'wstr';\n  }\n  if (opts.biff >= 2 && opts.biff <= 5) encoding = 'cpstr';\n  var o = cch ? blob.read_shift(cch, encoding) : \"\";\n  current_codepage = cp;\n  return o;\n}\n\n/* 2.5.293 XLUnicodeRichExtendedString */\nfunction parse_XLUnicodeRichExtendedString(blob) {\n  var cp = current_codepage;\n  current_codepage = 1200;\n  var cch = blob.read_shift(2),\n    flags = blob.read_shift(1);\n  var /*fHighByte = flags & 0x1,*/fExtSt = flags & 0x4,\n    fRichSt = flags & 0x8;\n  var width = 1 + (flags & 0x1); // 0x0 -> utf8, 0x1 -> dbcs\n  var cRun = 0,\n    cbExtRst;\n  var z = {};\n  if (fRichSt) cRun = blob.read_shift(2);\n  if (fExtSt) cbExtRst = blob.read_shift(4);\n  var encoding = width == 2 ? 'dbcs-cont' : 'sbcs-cont';\n  var msg = cch === 0 ? \"\" : blob.read_shift(cch, encoding);\n  if (fRichSt) blob.l += 4 * cRun; //TODO: parse this\n  if (fExtSt) blob.l += cbExtRst; //TODO: parse this\n  z.t = msg;\n  if (!fRichSt) {\n    z.raw = \"<t>\" + z.t + \"</t>\";\n    z.r = z.t;\n  }\n  current_codepage = cp;\n  return z;\n}\nfunction write_XLUnicodeRichExtendedString(xlstr /*:: :XLString, opts*/) {\n  var str = xlstr.t || \"\";\n  var hdr = new_buf(3 + 0);\n  hdr.write_shift(2, str.length);\n  hdr.write_shift(1, 0x00 | 0x01);\n  var otext = new_buf(2 * str.length);\n  otext.write_shift(2 * str.length, str, 'utf16le');\n  var out = [hdr, otext];\n  return bconcat(out);\n}\n\n/* 2.5.296 XLUnicodeStringNoCch */\nfunction parse_XLUnicodeStringNoCch(blob, cch, opts) {\n  var retval;\n  if (opts) {\n    if (opts.biff >= 2 && opts.biff <= 5) return blob.read_shift(cch, 'cpstr');\n    if (opts.biff >= 12) return blob.read_shift(cch, 'dbcs-cont');\n  }\n  var fHighByte = blob.read_shift(1);\n  if (fHighByte === 0) {\n    retval = blob.read_shift(cch, 'sbcs-cont');\n  } else {\n    retval = blob.read_shift(cch, 'dbcs-cont');\n  }\n  return retval;\n}\n\n/* 2.5.294 XLUnicodeString */\nfunction parse_XLUnicodeString(blob, length, opts) {\n  var cch = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);\n  if (cch === 0) {\n    blob.l++;\n    return \"\";\n  }\n  return parse_XLUnicodeStringNoCch(blob, cch, opts);\n}\n/* BIFF5 override */\nfunction parse_XLUnicodeString2(blob, length, opts) {\n  if (opts.biff > 5) return parse_XLUnicodeString(blob, length, opts);\n  var cch = blob.read_shift(1);\n  if (cch === 0) {\n    blob.l++;\n    return \"\";\n  }\n  return blob.read_shift(cch, opts.biff <= 4 || !blob.lens ? 'cpstr' : 'sbcs-cont');\n}\n/* TODO: BIFF5 and lower, codepage awareness */\nfunction write_XLUnicodeString(str, opts, o) {\n  if (!o) o = new_buf(3 + 2 * str.length);\n  o.write_shift(2, str.length);\n  o.write_shift(1, 1);\n  o.write_shift(31, str, 'utf16le');\n  return o;\n}\n\n/* [MS-XLS] 2.5.61 ControlInfo */\nfunction parse_ControlInfo(blob /*::, length, opts*/) {\n  var flags = blob.read_shift(1);\n  blob.l++;\n  var accel = blob.read_shift(2);\n  blob.l += 2;\n  return [flags, accel];\n}\n\n/* [MS-OSHARED] 2.3.7.6 URLMoniker TODO: flags */\nfunction parse_URLMoniker(blob /*::, length, opts*/) {\n  var len = blob.read_shift(4),\n    start = blob.l;\n  var extra = false;\n  if (len > 24) {\n    /* look ahead */\n    blob.l += len - 24;\n    if (blob.read_shift(16) === \"795881f43b1d7f48af2c825dc4852763\") extra = true;\n    blob.l = start;\n  }\n  var url = blob.read_shift((extra ? len - 24 : len) >> 1, 'utf16le').replace(chr0, \"\");\n  if (extra) blob.l += 24;\n  return url;\n}\n\n/* [MS-OSHARED] 2.3.7.8 FileMoniker TODO: all fields */\nfunction parse_FileMoniker(blob /*::, length*/) {\n  var cAnti = blob.read_shift(2);\n  var preamble = \"\";\n  while (cAnti-- > 0) preamble += \"../\";\n  var ansiPath = blob.read_shift(0, 'lpstr-ansi');\n  blob.l += 2; //var endServer = blob.read_shift(2);\n  if (blob.read_shift(2) != 0xDEAD) throw new Error(\"Bad FileMoniker\");\n  var sz = blob.read_shift(4);\n  if (sz === 0) return preamble + ansiPath.replace(/\\\\/g, \"/\");\n  var bytes = blob.read_shift(4);\n  if (blob.read_shift(2) != 3) throw new Error(\"Bad FileMoniker\");\n  var unicodePath = blob.read_shift(bytes >> 1, 'utf16le').replace(chr0, \"\");\n  return preamble + unicodePath;\n}\n\n/* [MS-OSHARED] 2.3.7.2 HyperlinkMoniker TODO: all the monikers */\nfunction parse_HyperlinkMoniker(blob, length) {\n  var clsid = blob.read_shift(16);\n  switch (clsid) {\n    case \"e0c9ea79f9bace118c8200aa004ba90b\":\n      return parse_URLMoniker(blob);\n    case \"0303000000000000c000000000000046\":\n      return parse_FileMoniker(blob);\n    default:\n      throw new Error(\"Unsupported Moniker \" + clsid);\n  }\n}\n\n/* [MS-OSHARED] 2.3.7.9 HyperlinkString */\nfunction parse_HyperlinkString(blob /*::, length*/) {\n  var len = blob.read_shift(4);\n  var o = len > 0 ? blob.read_shift(len, 'utf16le').replace(chr0, \"\") : \"\";\n  return o;\n}\nfunction write_HyperlinkString(str /*:string*/, o) {\n  if (!o) o = new_buf(6 + str.length * 2);\n  o.write_shift(4, 1 + str.length);\n  for (var i = 0; i < str.length; ++i) o.write_shift(2, str.charCodeAt(i));\n  o.write_shift(2, 0);\n  return o;\n}\n\n/* [MS-OSHARED] 2.3.7.1 Hyperlink Object */\nfunction parse_Hyperlink(blob, length) /*:Hyperlink*/{\n  var end = blob.l + length;\n  var sVer = blob.read_shift(4);\n  if (sVer !== 2) throw new Error(\"Unrecognized streamVersion: \" + sVer);\n  var flags = blob.read_shift(2);\n  blob.l += 2;\n  var displayName,\n    targetFrameName,\n    moniker,\n    oleMoniker,\n    Loc = \"\",\n    guid,\n    fileTime;\n  if (flags & 0x0010) displayName = parse_HyperlinkString(blob, end - blob.l);\n  if (flags & 0x0080) targetFrameName = parse_HyperlinkString(blob, end - blob.l);\n  if ((flags & 0x0101) === 0x0101) moniker = parse_HyperlinkString(blob, end - blob.l);\n  if ((flags & 0x0101) === 0x0001) oleMoniker = parse_HyperlinkMoniker(blob, end - blob.l);\n  if (flags & 0x0008) Loc = parse_HyperlinkString(blob, end - blob.l);\n  if (flags & 0x0020) guid = blob.read_shift(16);\n  if (flags & 0x0040) fileTime = parse_FILETIME(blob /*, 8*/);\n  blob.l = end;\n  var target = targetFrameName || moniker || oleMoniker || \"\";\n  if (target && Loc) target += \"#\" + Loc;\n  if (!target) target = \"#\" + Loc;\n  if (flags & 0x0002 && target.charAt(0) == \"/\" && target.charAt(1) != \"/\") target = \"file://\" + target;\n  var out = {\n    Target: target\n  } /*:any*/;\n  if (guid) out.guid = guid;\n  if (fileTime) out.time = fileTime;\n  if (displayName) out.Tooltip = displayName;\n  return out;\n}\nfunction write_Hyperlink(hl) {\n  var out = new_buf(512),\n    i = 0;\n  var Target = hl.Target;\n  if (Target.slice(0, 7) == \"file://\") Target = Target.slice(7);\n  var hashidx = Target.indexOf(\"#\");\n  var F = hashidx > -1 ? 0x1f : 0x17;\n  switch (Target.charAt(0)) {\n    case \"#\":\n      F = 0x1c;\n      break;\n    case \".\":\n      F &= ~2;\n      break;\n  }\n  out.write_shift(4, 2);\n  out.write_shift(4, F);\n  var data = [8, 6815827, 6619237, 4849780, 83];\n  for (i = 0; i < data.length; ++i) out.write_shift(4, data[i]);\n  if (F == 0x1C) {\n    Target = Target.slice(1);\n    write_HyperlinkString(Target, out);\n  } else if (F & 0x02) {\n    data = \"e0 c9 ea 79 f9 ba ce 11 8c 82 00 aa 00 4b a9 0b\".split(\" \");\n    for (i = 0; i < data.length; ++i) out.write_shift(1, parseInt(data[i], 16));\n    var Pretarget = hashidx > -1 ? Target.slice(0, hashidx) : Target;\n    out.write_shift(4, 2 * (Pretarget.length + 1));\n    for (i = 0; i < Pretarget.length; ++i) out.write_shift(2, Pretarget.charCodeAt(i));\n    out.write_shift(2, 0);\n    if (F & 0x08) write_HyperlinkString(hashidx > -1 ? Target.slice(hashidx + 1) : \"\", out);\n  } else {\n    data = \"03 03 00 00 00 00 00 00 c0 00 00 00 00 00 00 46\".split(\" \");\n    for (i = 0; i < data.length; ++i) out.write_shift(1, parseInt(data[i], 16));\n    var P = 0;\n    while (Target.slice(P * 3, P * 3 + 3) == \"../\" || Target.slice(P * 3, P * 3 + 3) == \"..\\\\\") ++P;\n    out.write_shift(2, P);\n    out.write_shift(4, Target.length - 3 * P + 1);\n    for (i = 0; i < Target.length - 3 * P; ++i) out.write_shift(1, Target.charCodeAt(i + 3 * P) & 0xFF);\n    out.write_shift(1, 0);\n    out.write_shift(2, 0xFFFF);\n    out.write_shift(2, 0xDEAD);\n    for (i = 0; i < 6; ++i) out.write_shift(4, 0);\n  }\n  return out.slice(0, out.l);\n}\n\n/* 2.5.178 LongRGBA */\nfunction parse_LongRGBA(blob /*::, length*/) {\n  var r = blob.read_shift(1),\n    g = blob.read_shift(1),\n    b = blob.read_shift(1),\n    a = blob.read_shift(1);\n  return [r, g, b, a];\n}\n\n/* 2.5.177 LongRGB */\nfunction parse_LongRGB(blob, length) {\n  var x = parse_LongRGBA(blob);\n  x[3] = 0;\n  return x;\n}\n\n/* [MS-XLS] 2.5.19 */\nfunction parse_XLSCell(blob, length, opts) /*:Cell*/{\n  var rw = blob.read_shift(2); // 0-indexed\n  var col = blob.read_shift(2);\n  var ret = {\n    r: rw,\n    c: col,\n    ixfe: 0\n  } /*:any*/;\n  if (opts && opts.biff == 2 || length == 7) {\n    /* TODO: pass back flags */\n    var flags = blob.read_shift(1);\n    ret.ixfe = flags & 0x3F;\n    blob.l += 2;\n    /*\n    var ifntifmt = blob.read_shift(1);\n    var ifmt = ifntifmt & 0x3f, ifnt = ifntifmt >> 6;\n    var flags3 = blob.read_shift(1);\n    */\n  } else ret.ixfe = blob.read_shift(2);\n  return ret;\n}\nfunction write_XLSCell(R /*:number*/, C /*:number*/, ixfe /*:?number*/, o) {\n  if (!o) o = new_buf(6);\n  o.write_shift(2, R);\n  o.write_shift(2, C);\n  o.write_shift(2, ixfe || 0);\n  return o;\n}\n\n/* [MS-XLS] 2.5.134 */\nfunction parse_frtHeader(blob) {\n  var rt = blob.read_shift(2);\n  var flags = blob.read_shift(2); // TODO: parse these flags\n  blob.l += 8;\n  return {\n    type: rt,\n    flags: flags\n  };\n}\nfunction parse_OptXLUnicodeString(blob, length, opts) {\n  return length === 0 ? \"\" : parse_XLUnicodeString2(blob, length, opts);\n}\n\n/* [MS-XLS] 2.5.344 */\nfunction parse_XTI(blob, length, opts) {\n  var w = opts.biff > 8 ? 4 : 2;\n  var iSupBook = blob.read_shift(w),\n    itabFirst = blob.read_shift(w, 'i'),\n    itabLast = blob.read_shift(w, 'i');\n  return [iSupBook, itabFirst, itabLast];\n}\n\n/* [MS-XLS] 2.5.218 */\nfunction parse_RkRec(blob) {\n  var ixfe = blob.read_shift(2);\n  var RK = parse_RkNumber(blob);\n  return [ixfe, RK];\n}\n\n/* [MS-XLS] 2.5.1 */\nfunction parse_AddinUdf(blob, length, opts) {\n  blob.l += 4;\n  length -= 4;\n  var l = blob.l + length;\n  var udfName = parse_ShortXLUnicodeString(blob, length, opts);\n  var cb = blob.read_shift(2);\n  l -= blob.l;\n  if (cb !== l) throw new Error(\"Malformed AddinUdf: padding = \" + l + \" != \" + cb);\n  blob.l += cb;\n  return udfName;\n}\n\n/* [MS-XLS] 2.5.209 TODO: Check sizes */\nfunction parse_Ref8U(blob /*::, length*/) {\n  var rwFirst = blob.read_shift(2);\n  var rwLast = blob.read_shift(2);\n  var colFirst = blob.read_shift(2);\n  var colLast = blob.read_shift(2);\n  return {\n    s: {\n      c: colFirst,\n      r: rwFirst\n    },\n    e: {\n      c: colLast,\n      r: rwLast\n    }\n  };\n}\nfunction write_Ref8U(r /*:Range*/, o) {\n  if (!o) o = new_buf(8);\n  o.write_shift(2, r.s.r);\n  o.write_shift(2, r.e.r);\n  o.write_shift(2, r.s.c);\n  o.write_shift(2, r.e.c);\n  return o;\n}\n\n/* [MS-XLS] 2.5.211 */\nfunction parse_RefU(blob /*::, length*/) {\n  var rwFirst = blob.read_shift(2);\n  var rwLast = blob.read_shift(2);\n  var colFirst = blob.read_shift(1);\n  var colLast = blob.read_shift(1);\n  return {\n    s: {\n      c: colFirst,\n      r: rwFirst\n    },\n    e: {\n      c: colLast,\n      r: rwLast\n    }\n  };\n}\n\n/* [MS-XLS] 2.5.207 */\nvar parse_Ref = parse_RefU;\n\n/* [MS-XLS] 2.5.143 */\nfunction parse_FtCmo(blob /*::, length*/) {\n  blob.l += 4;\n  var ot = blob.read_shift(2);\n  var id = blob.read_shift(2);\n  var flags = blob.read_shift(2);\n  blob.l += 12;\n  return [id, ot, flags];\n}\n\n/* [MS-XLS] 2.5.149 */\nfunction parse_FtNts(blob) {\n  var out = {};\n  blob.l += 4;\n  blob.l += 16; // GUID TODO\n  out.fSharedNote = blob.read_shift(2);\n  blob.l += 4;\n  return out;\n}\n\n/* [MS-XLS] 2.5.142 */\nfunction parse_FtCf(blob) {\n  var out = {};\n  blob.l += 4;\n  blob.cf = blob.read_shift(2);\n  return out;\n}\n\n/* [MS-XLS] 2.5.140 - 2.5.154 and friends */\nfunction parse_FtSkip(blob) {\n  blob.l += 2;\n  blob.l += blob.read_shift(2);\n}\nvar FtTab = {\n  /*::[*/0x00 /*::]*/: parse_FtSkip,\n  /* FtEnd */\n  /*::[*/0x04 /*::]*/: parse_FtSkip,\n  /* FtMacro */\n  /*::[*/0x05 /*::]*/: parse_FtSkip,\n  /* FtButton */\n  /*::[*/0x06 /*::]*/: parse_FtSkip,\n  /* FtGmo */\n  /*::[*/0x07 /*::]*/: parse_FtCf,\n  /* FtCf */\n  /*::[*/0x08 /*::]*/: parse_FtSkip,\n  /* FtPioGrbit */\n  /*::[*/0x09 /*::]*/: parse_FtSkip,\n  /* FtPictFmla */\n  /*::[*/0x0A /*::]*/: parse_FtSkip,\n  /* FtCbls */\n  /*::[*/0x0B /*::]*/: parse_FtSkip,\n  /* FtRbo */\n  /*::[*/0x0C /*::]*/: parse_FtSkip,\n  /* FtSbs */\n  /*::[*/0x0D /*::]*/: parse_FtNts,\n  /* FtNts */\n  /*::[*/0x0E /*::]*/: parse_FtSkip,\n  /* FtSbsFmla */\n  /*::[*/0x0F /*::]*/: parse_FtSkip,\n  /* FtGboData */\n  /*::[*/0x10 /*::]*/: parse_FtSkip,\n  /* FtEdoData */\n  /*::[*/0x11 /*::]*/: parse_FtSkip,\n  /* FtRboData */\n  /*::[*/0x12 /*::]*/: parse_FtSkip,\n  /* FtCblsData */\n  /*::[*/0x13 /*::]*/: parse_FtSkip,\n  /* FtLbsData */\n  /*::[*/0x14 /*::]*/: parse_FtSkip,\n  /* FtCblsFmla */\n  /*::[*/0x15 /*::]*/: parse_FtCmo\n};\nfunction parse_FtArray(blob, length /*::, ot*/) {\n  var tgt = blob.l + length;\n  var fts = [];\n  while (blob.l < tgt) {\n    var ft = blob.read_shift(2);\n    blob.l -= 2;\n    try {\n      fts[ft] = FtTab[ft](blob, tgt - blob.l);\n    } catch (e) {\n      blob.l = tgt;\n      return fts;\n    }\n  }\n  if (blob.l != tgt) blob.l = tgt; //throw new Error(\"bad Object Ft-sequence\");\n  return fts;\n}\n\n/* --- 2.4 Records --- */\n\n/* [MS-XLS] 2.4.21 */\nfunction parse_BOF(blob, length) {\n  var o = {\n    BIFFVer: 0,\n    dt: 0\n  };\n  o.BIFFVer = blob.read_shift(2);\n  length -= 2;\n  if (length >= 2) {\n    o.dt = blob.read_shift(2);\n    blob.l -= 2;\n  }\n  switch (o.BIFFVer) {\n    case 0x0600: /* BIFF8 */\n    case 0x0500: /* BIFF5 */\n    case 0x0400: /* BIFF4 */\n    case 0x0300: /* BIFF3 */\n    case 0x0200: /* BIFF2 */\n    case 0x0002:\n    case 0x0007:\n      /* BIFF2 */\n      break;\n    default:\n      if (length > 6) throw new Error(\"Unexpected BIFF Ver \" + o.BIFFVer);\n  }\n  blob.read_shift(length);\n  return o;\n}\nfunction write_BOF(wb /*:Workbook*/, t /*:number*/, o) {\n  var h = 0x0600,\n    w = 16;\n  switch (o.bookType) {\n    case 'biff8':\n      break;\n    case 'biff5':\n      h = 0x0500;\n      w = 8;\n      break;\n    case 'biff4':\n      h = 0x0004;\n      w = 6;\n      break;\n    case 'biff3':\n      h = 0x0003;\n      w = 6;\n      break;\n    case 'biff2':\n      h = 0x0002;\n      w = 4;\n      break;\n    case 'xla':\n      break;\n    default:\n      throw new Error(\"unsupported BIFF version\");\n  }\n  var out = new_buf(w);\n  out.write_shift(2, h);\n  out.write_shift(2, t);\n  if (w > 4) out.write_shift(2, 0x7262);\n  if (w > 6) out.write_shift(2, 0x07CD);\n  if (w > 8) {\n    out.write_shift(2, 0xC009);\n    out.write_shift(2, 0x0001);\n    out.write_shift(2, 0x0706);\n    out.write_shift(2, 0x0000);\n  }\n  return out;\n}\n\n/* [MS-XLS] 2.4.146 */\nfunction parse_InterfaceHdr(blob, length) {\n  if (length === 0) return 0x04b0;\n  if (blob.read_shift(2) !== 0x04b0) ;\n  return 0x04b0;\n}\n\n/* [MS-XLS] 2.4.349 */\nfunction parse_WriteAccess(blob, length, opts) {\n  if (opts.enc) {\n    blob.l += length;\n    return \"\";\n  }\n  var l = blob.l;\n  // TODO: make sure XLUnicodeString doesnt overrun\n  var UserName = parse_XLUnicodeString2(blob, 0, opts);\n  blob.read_shift(length + l - blob.l);\n  return UserName;\n}\nfunction write_WriteAccess(s /*:string*/, opts) {\n  var b8 = !opts || opts.biff == 8;\n  var o = new_buf(b8 ? 112 : 54);\n  o.write_shift(opts.biff == 8 ? 2 : 1, 7);\n  if (b8) o.write_shift(1, 0);\n  o.write_shift(4, 0x33336853);\n  o.write_shift(4, 0x00534A74 | (b8 ? 0 : 0x20000000));\n  while (o.l < o.length) o.write_shift(1, b8 ? 0 : 32);\n  return o;\n}\n\n/* [MS-XLS] 2.4.351 */\nfunction parse_WsBool(blob, length, opts) {\n  var flags = opts && opts.biff == 8 || length == 2 ? blob.read_shift(2) : (blob.l += length, 0);\n  return {\n    fDialog: flags & 0x10,\n    fBelow: flags & 0x40,\n    fRight: flags & 0x80\n  };\n}\n\n/* [MS-XLS] 2.4.28 */\nfunction parse_BoundSheet8(blob, length, opts) {\n  var name = \"\";\n  if (opts.biff == 4) {\n    name = parse_ShortXLUnicodeString(blob, 0, opts);\n    if (name.length === 0) name = \"Sheet1\";\n    return {\n      name: name\n    };\n  }\n  var pos = blob.read_shift(4);\n  var hidden = blob.read_shift(1) & 0x03;\n  var dt = blob.read_shift(1);\n  switch (dt) {\n    case 0:\n      dt = 'Worksheet';\n      break;\n    case 1:\n      dt = 'Macrosheet';\n      break;\n    case 2:\n      dt = 'Chartsheet';\n      break;\n    case 6:\n      dt = 'VBAModule';\n      break;\n  }\n  name = parse_ShortXLUnicodeString(blob, 0, opts);\n  if (name.length === 0) name = \"Sheet1\";\n  return {\n    pos: pos,\n    hs: hidden,\n    dt: dt,\n    name: name\n  };\n}\nfunction write_BoundSheet8(data, opts) {\n  var w = !opts || opts.biff >= 8 ? 2 : 1;\n  var o = new_buf(8 + w * data.name.length);\n  o.write_shift(4, data.pos);\n  o.write_shift(1, data.hs || 0);\n  o.write_shift(1, data.dt);\n  o.write_shift(1, data.name.length);\n  if (opts.biff >= 8) o.write_shift(1, 1);\n  o.write_shift(w * data.name.length, data.name, opts.biff < 8 ? 'sbcs' : 'utf16le');\n  var out = o.slice(0, o.l);\n  out.l = o.l;\n  return out;\n}\n\n/* [MS-XLS] 2.4.265 TODO */\nfunction parse_SST(blob, length) /*:SST*/{\n  var end = blob.l + length;\n  var cnt = blob.read_shift(4);\n  var ucnt = blob.read_shift(4);\n  var strs /*:SST*/ = [] /*:any*/;\n  for (var i = 0; i != ucnt && blob.l < end; ++i) {\n    strs.push(parse_XLUnicodeRichExtendedString(blob));\n  }\n  strs.Count = cnt;\n  strs.Unique = ucnt;\n  return strs;\n}\nfunction write_SST(sst, opts) {\n  var header = new_buf(8);\n  header.write_shift(4, sst.Count);\n  header.write_shift(4, sst.Unique);\n  var strs = [];\n  for (var j = 0; j < sst.length; ++j) strs[j] = write_XLUnicodeRichExtendedString(sst[j]);\n  var o = bconcat([header].concat(strs));\n  /*::(*/\n  o /*:: :any)*/.parts = [header.length].concat(strs.map(function (str) {\n    return str.length;\n  }));\n  return o;\n}\n\n/* [MS-XLS] 2.4.107 */\nfunction parse_ExtSST(blob, length) {\n  var extsst = {};\n  extsst.dsst = blob.read_shift(2);\n  blob.l += length - 2;\n  return extsst;\n}\n\n/* [MS-XLS] 2.4.221 TODO: check BIFF2-4 */\nfunction parse_Row(blob) {\n  var z = {} /*:any*/;\n  z.r = blob.read_shift(2);\n  z.c = blob.read_shift(2);\n  z.cnt = blob.read_shift(2) - z.c;\n  var miyRw = blob.read_shift(2);\n  blob.l += 4; // reserved(2), unused(2)\n  var flags = blob.read_shift(1); // various flags\n  blob.l += 3; // reserved(8), ixfe(12), flags(4)\n  if (flags & 0x07) z.level = flags & 0x07;\n  // collapsed: flags & 0x10\n  if (flags & 0x20) z.hidden = true;\n  if (flags & 0x40) z.hpt = miyRw / 20;\n  return z;\n}\n\n/* [MS-XLS] 2.4.125 */\nfunction parse_ForceFullCalculation(blob) {\n  var header = parse_frtHeader(blob);\n  if (header.type != 0x08A3) throw new Error(\"Invalid Future Record \" + header.type);\n  var fullcalc = blob.read_shift(4);\n  return fullcalc !== 0x0;\n}\n\n/* [MS-XLS] 2.4.215 rt */\nfunction parse_RecalcId(blob) {\n  blob.read_shift(2);\n  return blob.read_shift(4);\n}\n\n/* [MS-XLS] 2.4.87 */\nfunction parse_DefaultRowHeight(blob, length, opts) {\n  var f = 0;\n  if (!(opts && opts.biff == 2)) {\n    f = blob.read_shift(2);\n  }\n  var miyRw = blob.read_shift(2);\n  if (opts && opts.biff == 2) {\n    f = 1 - (miyRw >> 15);\n    miyRw &= 0x7fff;\n  }\n  var fl = {\n    Unsynced: f & 1,\n    DyZero: (f & 2) >> 1,\n    ExAsc: (f & 4) >> 2,\n    ExDsc: (f & 8) >> 3\n  };\n  return [fl, miyRw];\n}\n\n/* [MS-XLS] 2.4.345 TODO */\nfunction parse_Window1(blob) {\n  var xWn = blob.read_shift(2),\n    yWn = blob.read_shift(2),\n    dxWn = blob.read_shift(2),\n    dyWn = blob.read_shift(2);\n  var flags = blob.read_shift(2),\n    iTabCur = blob.read_shift(2),\n    iTabFirst = blob.read_shift(2);\n  var ctabSel = blob.read_shift(2),\n    wTabRatio = blob.read_shift(2);\n  return {\n    Pos: [xWn, yWn],\n    Dim: [dxWn, dyWn],\n    Flags: flags,\n    CurTab: iTabCur,\n    FirstTab: iTabFirst,\n    Selected: ctabSel,\n    TabRatio: wTabRatio\n  };\n}\nfunction write_Window1( /*::opts*/\n) {\n  var o = new_buf(18);\n  o.write_shift(2, 0);\n  o.write_shift(2, 0);\n  o.write_shift(2, 0x7260);\n  o.write_shift(2, 0x44c0);\n  o.write_shift(2, 0x38);\n  o.write_shift(2, 0);\n  o.write_shift(2, 0);\n  o.write_shift(2, 1);\n  o.write_shift(2, 0x01f4);\n  return o;\n}\n/* [MS-XLS] 2.4.346 TODO */\nfunction parse_Window2(blob, length, opts) {\n  if (opts && opts.biff >= 2 && opts.biff < 5) return {};\n  var f = blob.read_shift(2);\n  return {\n    RTL: f & 0x40\n  };\n}\nfunction write_Window2(view) {\n  var o = new_buf(18),\n    f = 0x6b6;\n  if (view && view.RTL) f |= 0x40;\n  o.write_shift(2, f);\n  o.write_shift(4, 0);\n  o.write_shift(4, 64);\n  o.write_shift(4, 0);\n  o.write_shift(4, 0);\n  return o;\n}\n\n/* [MS-XLS] 2.4.189 TODO */\nfunction parse_Pane( /*blob, length, opts*/\n) {}\n\n/* [MS-XLS] 2.4.122 TODO */\nfunction parse_Font(blob, length, opts) {\n  var o /*:any*/ = {\n    dyHeight: blob.read_shift(2),\n    fl: blob.read_shift(2)\n  };\n  switch (opts && opts.biff || 8) {\n    case 2:\n      break;\n    case 3:\n    case 4:\n      blob.l += 2;\n      break;\n    default:\n      blob.l += 10;\n      break;\n  }\n  o.name = parse_ShortXLUnicodeString(blob, 0, opts);\n  return o;\n}\nfunction write_Font(data, opts) {\n  var name = data.name || \"Arial\";\n  var b5 = opts && opts.biff == 5,\n    w = b5 ? 15 + name.length : 16 + 2 * name.length;\n  var o = new_buf(w);\n  o.write_shift(2, (data.sz || 12) * 20);\n  o.write_shift(4, 0);\n  o.write_shift(2, 400);\n  o.write_shift(4, 0);\n  o.write_shift(2, 0);\n  o.write_shift(1, name.length);\n  if (!b5) o.write_shift(1, 1);\n  o.write_shift((b5 ? 1 : 2) * name.length, name, b5 ? \"sbcs\" : \"utf16le\");\n  return o;\n}\n\n/* [MS-XLS] 2.4.149 */\nfunction parse_LabelSst(blob, length, opts) {\n  var cell = parse_XLSCell(blob, length, opts);\n  cell.isst = blob.read_shift(4);\n  return cell;\n}\nfunction write_LabelSst(R /*:number*/, C /*:number*/, v /*:number*/, os /*:number*/ /*::, opts*/) {\n  var o = new_buf(10);\n  write_XLSCell(R, C, os, o);\n  o.write_shift(4, v);\n  return o;\n}\n\n/* [MS-XLS] 2.4.148 */\nfunction parse_Label(blob, length, opts) {\n  if (opts.biffguess && opts.biff == 2) opts.biff = 5;\n  var target = blob.l + length;\n  var cell = parse_XLSCell(blob, length, opts);\n  var str = parse_XLUnicodeString(blob, target - blob.l, opts);\n  cell.val = str;\n  return cell;\n}\nfunction write_Label(R /*:number*/, C /*:number*/, v /*:string*/, os /*:number*/, opts) {\n  var b8 = !opts || opts.biff == 8;\n  var o = new_buf(6 + 2 + +b8 + (1 + b8) * v.length);\n  write_XLSCell(R, C, os, o);\n  o.write_shift(2, v.length);\n  if (b8) o.write_shift(1, 1);\n  o.write_shift((1 + b8) * v.length, v, b8 ? 'utf16le' : 'sbcs');\n  return o;\n}\n\n/* [MS-XLS] 2.4.126 Number Formats */\nfunction parse_Format(blob, length, opts) {\n  var numFmtId = blob.read_shift(2);\n  var fmtstr = parse_XLUnicodeString2(blob, 0, opts);\n  return [numFmtId, fmtstr];\n}\nfunction write_Format(i /*:number*/, f /*:string*/, opts, o) {\n  var b5 = opts && opts.biff == 5;\n  if (!o) o = new_buf(b5 ? 3 + f.length : 5 + 2 * f.length);\n  o.write_shift(2, i);\n  o.write_shift(b5 ? 1 : 2, f.length);\n  if (!b5) o.write_shift(1, 1);\n  o.write_shift((b5 ? 1 : 2) * f.length, f, b5 ? 'sbcs' : 'utf16le');\n  var out = o.length > o.l ? o.slice(0, o.l) : o;\n  if (out.l == null) out.l = out.length;\n  return out;\n}\nvar parse_BIFF2Format = parse_XLUnicodeString2;\nfunction write_BIFF2Format(f /*:string*/) {\n  var o = new_buf(1 + f.length);\n  o.write_shift(1, f.length);\n  o.write_shift(f.length, f, \"sbcs\");\n  return o;\n}\nfunction write_BIFF4Format(f /*:string*/) {\n  var o = new_buf(3 + f.length);\n  o.l += 2;\n  o.write_shift(1, f.length);\n  o.write_shift(f.length, f, \"sbcs\");\n  return o;\n}\n\n/* [MS-XLS] 2.4.90 */\nfunction parse_Dimensions(blob, length, opts) {\n  var end = blob.l + length;\n  var w = opts.biff == 8 || !opts.biff ? 4 : 2;\n  var r = blob.read_shift(w),\n    R = blob.read_shift(w);\n  var c = blob.read_shift(2),\n    C = blob.read_shift(2);\n  blob.l = end;\n  return {\n    s: {\n      r: r,\n      c: c\n    },\n    e: {\n      r: R,\n      c: C\n    }\n  };\n}\nfunction write_Dimensions(range, opts) {\n  var w = opts.biff == 8 || !opts.biff ? 4 : 2;\n  var o = new_buf(2 * w + 6);\n  o.write_shift(w, range.s.r);\n  o.write_shift(w, range.e.r + 1);\n  o.write_shift(2, range.s.c);\n  o.write_shift(2, range.e.c + 1);\n  o.write_shift(2, 0);\n  return o;\n}\n\n/* [MS-XLS] 2.4.220 */\nfunction parse_RK(blob) {\n  var rw = blob.read_shift(2),\n    col = blob.read_shift(2);\n  var rkrec = parse_RkRec(blob);\n  return {\n    r: rw,\n    c: col,\n    ixfe: rkrec[0],\n    rknum: rkrec[1]\n  };\n}\n\n/* [MS-XLS] 2.4.175 */\nfunction parse_MulRk(blob, length) {\n  var target = blob.l + length - 2;\n  var rw = blob.read_shift(2),\n    col = blob.read_shift(2);\n  var rkrecs = [];\n  while (blob.l < target) rkrecs.push(parse_RkRec(blob));\n  if (blob.l !== target) throw new Error(\"MulRK read error\");\n  var lastcol = blob.read_shift(2);\n  if (rkrecs.length != lastcol - col + 1) throw new Error(\"MulRK length mismatch\");\n  return {\n    r: rw,\n    c: col,\n    C: lastcol,\n    rkrec: rkrecs\n  };\n}\n/* [MS-XLS] 2.4.174 */\nfunction parse_MulBlank(blob, length) {\n  var target = blob.l + length - 2;\n  var rw = blob.read_shift(2),\n    col = blob.read_shift(2);\n  var ixfes = [];\n  while (blob.l < target) ixfes.push(blob.read_shift(2));\n  if (blob.l !== target) throw new Error(\"MulBlank read error\");\n  var lastcol = blob.read_shift(2);\n  if (ixfes.length != lastcol - col + 1) throw new Error(\"MulBlank length mismatch\");\n  return {\n    r: rw,\n    c: col,\n    C: lastcol,\n    ixfe: ixfes\n  };\n}\n\n/* [MS-XLS] 2.5.20 2.5.249 TODO: interpret values here */\nfunction parse_CellStyleXF(blob, length, style, opts) {\n  var o = {};\n  var a = blob.read_shift(4),\n    b = blob.read_shift(4);\n  var c = blob.read_shift(4),\n    d = blob.read_shift(2);\n  o.patternType = XLSFillPattern[c >> 26];\n  if (!opts.cellStyles) return o;\n  o.alc = a & 0x07;\n  o.fWrap = a >> 3 & 0x01;\n  o.alcV = a >> 4 & 0x07;\n  o.fJustLast = a >> 7 & 0x01;\n  o.trot = a >> 8 & 0xFF;\n  o.cIndent = a >> 16 & 0x0F;\n  o.fShrinkToFit = a >> 20 & 0x01;\n  o.iReadOrder = a >> 22 & 0x02;\n  o.fAtrNum = a >> 26 & 0x01;\n  o.fAtrFnt = a >> 27 & 0x01;\n  o.fAtrAlc = a >> 28 & 0x01;\n  o.fAtrBdr = a >> 29 & 0x01;\n  o.fAtrPat = a >> 30 & 0x01;\n  o.fAtrProt = a >> 31 & 0x01;\n  o.dgLeft = b & 0x0F;\n  o.dgRight = b >> 4 & 0x0F;\n  o.dgTop = b >> 8 & 0x0F;\n  o.dgBottom = b >> 12 & 0x0F;\n  o.icvLeft = b >> 16 & 0x7F;\n  o.icvRight = b >> 23 & 0x7F;\n  o.grbitDiag = b >> 30 & 0x03;\n  o.icvTop = c & 0x7F;\n  o.icvBottom = c >> 7 & 0x7F;\n  o.icvDiag = c >> 14 & 0x7F;\n  o.dgDiag = c >> 21 & 0x0F;\n  o.icvFore = d & 0x7F;\n  o.icvBack = d >> 7 & 0x7F;\n  o.fsxButton = d >> 14 & 0x01;\n  return o;\n}\n//function parse_CellXF(blob, length, opts) {return parse_CellStyleXF(blob,length,0, opts);}\n//function parse_StyleXF(blob, length, opts) {return parse_CellStyleXF(blob,length,1, opts);}\n\n/* [MS-XLS] 2.4.353 TODO: actually do this right */\nfunction parse_XF(blob, length, opts) {\n  var o = {};\n  o.ifnt = blob.read_shift(2);\n  o.numFmtId = blob.read_shift(2);\n  o.flags = blob.read_shift(2);\n  o.fStyle = o.flags >> 2 & 0x01;\n  length -= 6;\n  o.data = parse_CellStyleXF(blob, length, o.fStyle, opts);\n  return o;\n}\nfunction write_XF(data, ixfeP, opts, o) {\n  var b5 = opts && opts.biff == 5;\n  if (!o) o = new_buf(b5 ? 16 : 20);\n  o.write_shift(2, 0);\n  if (data.style) {\n    o.write_shift(2, data.numFmtId || 0);\n    o.write_shift(2, 0xFFF4);\n  } else {\n    o.write_shift(2, data.numFmtId || 0);\n    o.write_shift(2, ixfeP << 4);\n  }\n  var f = 0;\n  if (data.numFmtId > 0 && b5) f |= 0x0400;\n  o.write_shift(4, f);\n  o.write_shift(4, 0);\n  if (!b5) o.write_shift(4, 0);\n  o.write_shift(2, 0);\n  return o;\n}\nfunction parse_BIFF2XF(blob /*::, length, opts*/) {\n  var o = {};\n  o.ifnt = blob.read_shift(1);\n  blob.l++;\n  o.flags = blob.read_shift(1);\n  o.numFmtId = o.flags & 0x3F;\n  o.flags >>= 6;\n  o.fStyle = 0;\n  o.data = {}; // TODO\n  return o;\n}\nfunction write_BIFF2XF(xf) {\n  var o = new_buf(4);\n  o.l += 2;\n  o.write_shift(1, xf.numFmtId);\n  o.l++;\n  return o;\n}\nfunction write_BIFF3XF(xf) {\n  var o = new_buf(12);\n  o.l++;\n  o.write_shift(1, xf.numFmtId);\n  o.l += 10;\n  return o;\n}\n/* TODO: check other fields */\nvar write_BIFF4XF = write_BIFF3XF;\nfunction parse_BIFF3XF(blob /*::, length, opts*/) {\n  var o = {};\n  o.ifnt = blob.read_shift(1);\n  o.numFmtId = blob.read_shift(1);\n  o.flags = blob.read_shift(2);\n  o.fStyle = o.flags >> 2 & 0x01;\n  o.data = {}; // TODO\n  return o;\n}\nfunction parse_BIFF4XF(blob /*::, length, opts*/) {\n  var o = {};\n  o.ifnt = blob.read_shift(1);\n  o.numFmtId = blob.read_shift(1);\n  o.flags = blob.read_shift(2);\n  o.fStyle = o.flags >> 2 & 0x01;\n  o.data = {}; // TODO\n  return o;\n}\n\n/* [MS-XLS] 2.4.134 */\nfunction parse_Guts(blob) {\n  blob.l += 4;\n  var out = [blob.read_shift(2), blob.read_shift(2)];\n  if (out[0] !== 0) out[0]--;\n  if (out[1] !== 0) out[1]--;\n  if (out[0] > 7 || out[1] > 7) throw new Error(\"Bad Gutters: \" + out.join(\"|\"));\n  return out;\n}\nfunction write_Guts(guts /*:Array<number>*/) {\n  var o = new_buf(8);\n  o.write_shift(4, 0);\n  o.write_shift(2, guts[0] ? guts[0] + 1 : 0);\n  o.write_shift(2, guts[1] ? guts[1] + 1 : 0);\n  return o;\n}\n\n/* [MS-XLS] 2.4.24 */\nfunction parse_BoolErr(blob, length, opts) {\n  var cell = parse_XLSCell(blob, 6, opts);\n  var val = parse_Bes(blob);\n  cell.val = val;\n  cell.t = val === true || val === false ? 'b' : 'e';\n  return cell;\n}\nfunction write_BoolErr(R /*:number*/, C /*:number*/, v, os /*:number*/, opts, t /*:string*/) {\n  var o = new_buf(8);\n  write_XLSCell(R, C, os, o);\n  write_Bes(v, t, o);\n  return o;\n}\n\n/* [MS-XLS] 2.4.180 Number */\nfunction parse_Number(blob, length, opts) {\n  if (opts.biffguess && opts.biff == 2) opts.biff = 5;\n  var cell = parse_XLSCell(blob, 6, opts);\n  var xnum = parse_Xnum(blob);\n  cell.val = xnum;\n  return cell;\n}\nfunction write_Number(R /*:number*/, C /*:number*/, v, os /*:: :number, opts*/) {\n  var o = new_buf(14);\n  write_XLSCell(R, C, os, o);\n  write_Xnum(v, o);\n  return o;\n}\nvar parse_XLHeaderFooter = parse_OptXLUnicodeString; // TODO: parse 2.4.136\n\n/* [MS-XLS] 2.4.271 */\nfunction parse_SupBook(blob, length, opts) {\n  var end = blob.l + length;\n  var ctab = blob.read_shift(2);\n  var cch = blob.read_shift(2);\n  opts.sbcch = cch;\n  if (cch == 0x0401 || cch == 0x3A01) return [cch, ctab];\n  if (cch < 0x01 || cch > 0xff) throw new Error(\"Unexpected SupBook type: \" + cch);\n  var virtPath = parse_XLUnicodeStringNoCch(blob, cch);\n  /* TODO: 2.5.277 Virtual Path */\n  var rgst = [];\n  while (end > blob.l) rgst.push(parse_XLUnicodeString(blob));\n  return [cch, ctab, virtPath, rgst];\n}\n\n/* [MS-XLS] 2.4.105 TODO */\nfunction parse_ExternName(blob, length, opts) {\n  var flags = blob.read_shift(2);\n  var body;\n  var o = {\n    fBuiltIn: flags & 0x01,\n    fWantAdvise: flags >>> 1 & 0x01,\n    fWantPict: flags >>> 2 & 0x01,\n    fOle: flags >>> 3 & 0x01,\n    fOleLink: flags >>> 4 & 0x01,\n    cf: flags >>> 5 & 0x3FF,\n    fIcon: flags >>> 15 & 0x01\n  } /*:any*/;\n  if (opts.sbcch === 0x3A01) body = parse_AddinUdf(blob, length - 2, opts);\n  //else throw new Error(\"unsupported SupBook cch: \" + opts.sbcch);\n  o.body = body || blob.read_shift(length - 2);\n  if (typeof body === \"string\") o.Name = body;\n  return o;\n}\n\n/* [MS-XLS] 2.4.150 TODO */\nfunction parse_Lbl(blob, length, opts) {\n  var target = blob.l + length;\n  var flags = blob.read_shift(2);\n  var chKey = blob.read_shift(1);\n  var cch = blob.read_shift(1);\n  var cce = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);\n  var itab = 0;\n  if (!opts || opts.biff >= 5) {\n    if (opts.biff != 5) blob.l += 2;\n    itab = blob.read_shift(2);\n    if (opts.biff == 5) blob.l += 2;\n    blob.l += 4;\n  }\n  var name = parse_XLUnicodeStringNoCch(blob, cch, opts);\n  if (flags & 0x20) name = XLSLblBuiltIn[name.charCodeAt(0)];\n  var npflen = target - blob.l;\n  if (opts && opts.biff == 2) --npflen;\n  /*jshint -W018 */\n  var rgce = target == blob.l || cce === 0 || !(npflen > 0) ? [] : parse_NameParsedFormula(blob, npflen, opts, cce);\n  /*jshint +W018 */\n  return {\n    chKey: chKey,\n    Name: name,\n    itab: itab,\n    rgce: rgce\n  };\n}\n\n/* [MS-XLS] 2.4.106 TODO: legacy record filename encoding */\nfunction parse_ExternSheet(blob, length, opts) {\n  if (opts.biff < 8) return parse_BIFF5ExternSheet(blob, length, opts);\n  /* see issue 2907 */\n  if (!(opts.biff > 8) && length == blob[blob.l] + (blob[blob.l + 1] == 0x03 ? 1 : 0) + 1) return parse_BIFF5ExternSheet(blob, length, opts);\n  var o = [],\n    target = blob.l + length,\n    len = blob.read_shift(opts.biff > 8 ? 4 : 2);\n  while (len-- !== 0) o.push(parse_XTI(blob, opts.biff > 8 ? 12 : 6, opts));\n  // [iSupBook, itabFirst, itabLast];\n  if (blob.l != target) throw new Error(\"Bad ExternSheet: \" + blob.l + \" != \" + target);\n  return o;\n}\nfunction parse_BIFF5ExternSheet(blob, length, opts) {\n  if (blob[blob.l + 1] == 0x03) blob[blob.l]++;\n  var o = parse_ShortXLUnicodeString(blob, length, opts);\n  return o.charCodeAt(0) == 0x03 ? o.slice(1) : o;\n}\n\n/* [MS-XLS] 2.4.176 TODO: check older biff */\nfunction parse_NameCmt(blob, length, opts) {\n  if (opts.biff < 8) {\n    blob.l += length;\n    return;\n  }\n  var cchName = blob.read_shift(2);\n  var cchComment = blob.read_shift(2);\n  var name = parse_XLUnicodeStringNoCch(blob, cchName, opts);\n  var comment = parse_XLUnicodeStringNoCch(blob, cchComment, opts);\n  return [name, comment];\n}\n\n/* [MS-XLS] 2.4.260 */\nfunction parse_ShrFmla(blob, length, opts) {\n  var ref = parse_RefU(blob);\n  blob.l++;\n  var cUse = blob.read_shift(1);\n  length -= 8;\n  return [parse_SharedParsedFormula(blob, length, opts), cUse, ref];\n}\n\n/* [MS-XLS] 2.4.4 TODO */\nfunction parse_Array(blob, length, opts) {\n  var ref = parse_Ref(blob);\n  /* TODO: fAlwaysCalc */\n  switch (opts.biff) {\n    case 2:\n      blob.l++;\n      length -= 7;\n      break;\n    case 3:\n    case 4:\n      blob.l += 2;\n      length -= 8;\n      break;\n    default:\n      blob.l += 6;\n      length -= 12;\n  }\n  return [ref, parse_ArrayParsedFormula(blob, length, opts)];\n}\n\n/* [MS-XLS] 2.4.173 */\nfunction parse_MTRSettings(blob) {\n  var fMTREnabled = blob.read_shift(4) !== 0x00;\n  var fUserSetThreadCount = blob.read_shift(4) !== 0x00;\n  var cUserThreadCount = blob.read_shift(4);\n  return [fMTREnabled, fUserSetThreadCount, cUserThreadCount];\n}\n\n/* [MS-XLS] 2.5.186 */\nfunction parse_NoteSh(blob, length, opts) {\n  var row = blob.read_shift(2),\n    col = blob.read_shift(2);\n  var flags = blob.read_shift(2),\n    idObj = blob.read_shift(2);\n  var stAuthor = parse_XLUnicodeString2(blob, 0, opts);\n  return [{\n    r: row,\n    c: col\n  }, stAuthor, idObj, flags];\n}\n\n/* [MS-XLS] 2.4.179 */\nfunction parse_Note(blob, length, opts) {\n  if (opts && opts.biff < 8) {\n    var row = blob.read_shift(2),\n      col = blob.read_shift(2);\n    if (row == 0xFFFF || row == -1) return; // TODO: test continuation\n    var cch = blob.read_shift(2);\n    var cmnt = blob.read_shift(Math.min(cch, 2048), 'cpstr');\n    return [{\n      r: row,\n      c: col\n    }, cmnt];\n  }\n  /* TODO: Support revisions */\n  return parse_NoteSh(blob, length, opts);\n}\nfunction write_NOTE_BIFF2(text /*:string*/, R /*:number*/, C /*:number*/, len /*?:number*/) {\n  var o = new_buf(6 + (len || text.length));\n  o.write_shift(2, R);\n  o.write_shift(2, C);\n  o.write_shift(2, len || text.length);\n  o.write_shift(text.length, text, \"sbcs\");\n  return o;\n}\n\n/* [MS-XLS] 2.4.168 */\nfunction parse_MergeCells(blob, length) /*:Array<Range>*/{\n  var merges /*:Array<Range>*/ = [];\n  var cmcs = blob.read_shift(2);\n  while (cmcs--) merges.push(parse_Ref8U(blob));\n  return merges;\n}\nfunction write_MergeCells(merges /*:Array<Range>*/) {\n  var o = new_buf(2 + merges.length * 8);\n  o.write_shift(2, merges.length);\n  for (var i = 0; i < merges.length; ++i) write_Ref8U(merges[i], o);\n  return o;\n}\n\n/* [MS-XLS] 2.4.181 TODO: parse all the things! */\nfunction parse_Obj(blob, length, opts) {\n  if (opts && opts.biff < 8) return parse_BIFF5Obj(blob, length, opts);\n  var cmo = parse_FtCmo(blob); // id, ot, flags\n  var fts = parse_FtArray(blob, length - 22, cmo[1]);\n  return {\n    cmo: cmo,\n    ft: fts\n  };\n}\n/* from older spec */\nvar parse_BIFF5OT = {\n  0x08: function (blob, length) {\n    var tgt = blob.l + length;\n    blob.l += 10; // todo\n    var cf = blob.read_shift(2);\n    blob.l += 4;\n    blob.l += 2; //var cbPictFmla = blob.read_shift(2);\n    blob.l += 2;\n    blob.l += 2; //var grbit = blob.read_shift(2);\n    blob.l += 4;\n    var cchName = blob.read_shift(1);\n    blob.l += cchName; // TODO: stName\n    blob.l = tgt; // TODO: fmla\n    return {\n      fmt: cf\n    };\n  }\n};\nfunction parse_BIFF5Obj(blob, length, opts) {\n  blob.l += 4; //var cnt = blob.read_shift(4);\n  var ot = blob.read_shift(2);\n  var id = blob.read_shift(2);\n  var grbit = blob.read_shift(2);\n  blob.l += 2; //var colL = blob.read_shift(2);\n  blob.l += 2; //var dxL = blob.read_shift(2);\n  blob.l += 2; //var rwT = blob.read_shift(2);\n  blob.l += 2; //var dyT = blob.read_shift(2);\n  blob.l += 2; //var colR = blob.read_shift(2);\n  blob.l += 2; //var dxR = blob.read_shift(2);\n  blob.l += 2; //var rwB = blob.read_shift(2);\n  blob.l += 2; //var dyB = blob.read_shift(2);\n  blob.l += 2; //var cbMacro = blob.read_shift(2);\n  blob.l += 6;\n  length -= 36;\n  var fts = [];\n  fts.push((parse_BIFF5OT[ot] || parsenoop)(blob, length, opts));\n  return {\n    cmo: [id, ot, grbit],\n    ft: fts\n  };\n}\n\n/* [MS-XLS] 2.4.329 TODO: parse properly */\nfunction parse_TxO(blob, length, opts) {\n  var s = blob.l;\n  var texts = \"\";\n  try {\n    blob.l += 4;\n    var ot = (opts.lastobj || {\n      cmo: [0, 0]\n    }).cmo[1];\n    var controlInfo; // eslint-disable-line no-unused-vars\n    if ([0, 5, 7, 11, 12, 14].indexOf(ot) == -1) blob.l += 6;else controlInfo = parse_ControlInfo(blob, 6, opts); // eslint-disable-line no-unused-vars\n    var cchText = blob.read_shift(2);\n    /*var cbRuns = */\n    blob.read_shift(2);\n    /*var ifntEmpty = */\n    parseuint16(blob, 2);\n    var len = blob.read_shift(2);\n    blob.l += len;\n    //var fmla = parse_ObjFmla(blob, s + length - blob.l);\n\n    for (var i = 1; i < blob.lens.length - 1; ++i) {\n      if (blob.l - s != blob.lens[i]) throw new Error(\"TxO: bad continue record\");\n      var hdr = blob[blob.l];\n      var t = parse_XLUnicodeStringNoCch(blob, blob.lens[i + 1] - blob.lens[i] - 1);\n      texts += t;\n      if (texts.length >= (hdr ? cchText : 2 * cchText)) break;\n    }\n    if (texts.length !== cchText && texts.length !== cchText * 2) {\n      throw new Error(\"cchText: \" + cchText + \" != \" + texts.length);\n    }\n    blob.l = s + length;\n    /* [MS-XLS] 2.5.272 TxORuns */\n    //\tvar rgTxoRuns = [];\n    //\tfor(var j = 0; j != cbRuns/8-1; ++j) blob.l += 8;\n    //\tvar cchText2 = blob.read_shift(2);\n    //\tif(cchText2 !== cchText) throw new Error(\"TxOLastRun mismatch: \" + cchText2 + \" \" + cchText);\n    //\tblob.l += 6;\n    //\tif(s + length != blob.l) throw new Error(\"TxO \" + (s + length) + \", at \" + blob.l);\n    return {\n      t: texts\n    };\n  } catch (e) {\n    blob.l = s + length;\n    return {\n      t: texts\n    };\n  }\n}\n\n/* [MS-XLS] 2.4.140 */\nfunction parse_HLink(blob, length) {\n  var ref = parse_Ref8U(blob);\n  blob.l += 16; /* CLSID */\n  var hlink = parse_Hyperlink(blob, length - 24);\n  return [ref, hlink];\n}\nfunction write_HLink(hl) {\n  var O = new_buf(24);\n  var ref = decode_cell(hl[0]);\n  O.write_shift(2, ref.r);\n  O.write_shift(2, ref.r);\n  O.write_shift(2, ref.c);\n  O.write_shift(2, ref.c);\n  var clsid = \"d0 c9 ea 79 f9 ba ce 11 8c 82 00 aa 00 4b a9 0b\".split(\" \");\n  for (var i = 0; i < 16; ++i) O.write_shift(1, parseInt(clsid[i], 16));\n  return bconcat([O, write_Hyperlink(hl[1])]);\n}\n\n/* [MS-XLS] 2.4.141 */\nfunction parse_HLinkTooltip(blob, length) {\n  blob.read_shift(2);\n  var ref = parse_Ref8U(blob);\n  var wzTooltip = blob.read_shift((length - 10) / 2, 'dbcs-cont');\n  wzTooltip = wzTooltip.replace(chr0, \"\");\n  return [ref, wzTooltip];\n}\nfunction write_HLinkTooltip(hl) {\n  var TT = hl[1].Tooltip;\n  var O = new_buf(10 + 2 * (TT.length + 1));\n  O.write_shift(2, 0x0800);\n  var ref = decode_cell(hl[0]);\n  O.write_shift(2, ref.r);\n  O.write_shift(2, ref.r);\n  O.write_shift(2, ref.c);\n  O.write_shift(2, ref.c);\n  for (var i = 0; i < TT.length; ++i) O.write_shift(2, TT.charCodeAt(i));\n  O.write_shift(2, 0);\n  return O;\n}\n\n/* [MS-XLS] 2.4.63 */\nfunction parse_Country(blob) /*:[string|number, string|number]*/{\n  var o = [0, 0],\n    d;\n  d = blob.read_shift(2);\n  o[0] = CountryEnum[d] || d;\n  d = blob.read_shift(2);\n  o[1] = CountryEnum[d] || d;\n  return o;\n}\nfunction write_Country(o) {\n  if (!o) o = new_buf(4);\n  o.write_shift(2, 0x01);\n  o.write_shift(2, 0x01);\n  return o;\n}\n\n/* [MS-XLS] 2.4.50 ClrtClient */\nfunction parse_ClrtClient(blob) {\n  var ccv = blob.read_shift(2);\n  var o = [];\n  while (ccv-- > 0) o.push(parse_LongRGB(blob));\n  return o;\n}\n\n/* [MS-XLS] 2.4.188 */\nfunction parse_Palette(blob) {\n  var ccv = blob.read_shift(2);\n  var o = [];\n  while (ccv-- > 0) o.push(parse_LongRGB(blob));\n  return o;\n}\n\n/* [MS-XLS] 2.4.354 */\nfunction parse_XFCRC(blob) {\n  blob.l += 2;\n  var o = {\n    cxfs: 0,\n    crc: 0\n  };\n  o.cxfs = blob.read_shift(2);\n  o.crc = blob.read_shift(4);\n  return o;\n}\n\n/* [MS-XLS] 2.4.53 TODO: parse flags */\n/* [MS-XLSB] 2.4.323 TODO: parse flags */\nfunction parse_ColInfo(blob, length, opts) {\n  if (!opts.cellStyles) return parsenoop(blob, length);\n  var w = opts && opts.biff >= 12 ? 4 : 2;\n  var colFirst = blob.read_shift(w);\n  var colLast = blob.read_shift(w);\n  var coldx = blob.read_shift(w);\n  var ixfe = blob.read_shift(w);\n  var flags = blob.read_shift(2);\n  if (w == 2) blob.l += 2;\n  var o = {\n    s: colFirst,\n    e: colLast,\n    w: coldx,\n    ixfe: ixfe,\n    flags: flags\n  } /*:any*/;\n  if (opts.biff >= 5 || !opts.biff) o.level = flags >> 8 & 0x7;\n  return o;\n}\nfunction write_ColInfo(col, idx) {\n  var o = new_buf(12);\n  o.write_shift(2, idx);\n  o.write_shift(2, idx);\n  o.write_shift(2, col.width * 256);\n  o.write_shift(2, 0);\n  var f = 0;\n  if (col.hidden) f |= 1;\n  o.write_shift(1, f);\n  f = col.level || 0;\n  o.write_shift(1, f);\n  o.write_shift(2, 0);\n  return o;\n}\n\n/* [MS-XLS] 2.4.257 */\nfunction parse_Setup(blob, length) {\n  var o = {};\n  if (length < 32) return o;\n  blob.l += 16;\n  o.header = parse_Xnum(blob);\n  o.footer = parse_Xnum(blob);\n  blob.l += 2;\n  return o;\n}\n\n/* [MS-XLS] 2.4.261 */\nfunction parse_ShtProps(blob, length, opts) {\n  var def = {\n    area: false\n  };\n  if (opts.biff != 5) {\n    blob.l += length;\n    return def;\n  }\n  var d = blob.read_shift(1);\n  blob.l += 3;\n  if (d & 0x10) def.area = true;\n  return def;\n}\n\n/* [MS-XLS] 2.4.241 */\nfunction write_RRTabId(n /*:number*/) {\n  var out = new_buf(2 * n);\n  for (var i = 0; i < n; ++i) out.write_shift(2, i + 1);\n  return out;\n}\nvar parse_Blank = parse_XLSCell; /* [MS-XLS] 2.4.20 Just the cell */\nvar parse_Scl = parseuint16a; /* [MS-XLS] 2.4.247 num, den */\nvar parse_String = parse_XLUnicodeString; /* [MS-XLS] 2.4.268 */\n\n/* --- Specific to versions before BIFF8 --- */\nfunction parse_ImData(blob) {\n  var cf = blob.read_shift(2);\n  var env = blob.read_shift(2);\n  var lcb = blob.read_shift(4);\n  var o = {\n    fmt: cf,\n    env: env,\n    len: lcb,\n    data: blob.slice(blob.l, blob.l + lcb)\n  };\n  blob.l += lcb;\n  return o;\n}\nfunction write_BIFF2Cell(out, r /*:number*/, c /*:number*/, ixfe /*:number*/, ifmt /*:number*/) {\n  if (!out) out = new_buf(7);\n  out.write_shift(2, r);\n  out.write_shift(2, c);\n  out.write_shift(1, ixfe || 0 /* & 0x3F */);\n  out.write_shift(1, ifmt || 0 /* & 0x3F */);\n  out.write_shift(1, 0);\n  return out;\n}\n\n/* BIFF2_??? where ??? is the name from [XLS] */\nfunction parse_BIFF2STR(blob, length, opts) {\n  if (opts.biffguess && opts.biff == 5) opts.biff = 2;\n  var cell = parse_XLSCell(blob, 7, opts);\n  var str = parse_XLUnicodeString2(blob, length - 7, opts);\n  cell.t = 'str';\n  cell.val = str;\n  return cell;\n}\nfunction parse_BIFF2NUM(blob, length, opts) {\n  var cell = parse_XLSCell(blob, 7, opts);\n  var num = parse_Xnum(blob);\n  cell.t = 'n';\n  cell.val = num;\n  return cell;\n}\nfunction write_BIFF2NUM(r /*:number*/, c /*:number*/, val /*:number*/, ixfe, ifmt) {\n  var out = new_buf(15);\n  write_BIFF2Cell(out, r, c, ixfe || 0, ifmt || 0);\n  out.write_shift(8, val, 'f');\n  return out;\n}\nfunction parse_BIFF2INT(blob, length, opts) {\n  var cell = parse_XLSCell(blob, 7, opts);\n  var num = blob.read_shift(2);\n  cell.t = 'n';\n  cell.val = num;\n  return cell;\n}\nfunction write_BIFF2INT(r /*:number*/, c /*:number*/, val /*:number*/, ixfe /*:number*/, ifmt /*:number*/) {\n  var out = new_buf(9);\n  write_BIFF2Cell(out, r, c, ixfe || 0, ifmt || 0);\n  out.write_shift(2, val);\n  return out;\n}\nfunction parse_BIFF2STRING(blob) {\n  var cch = blob.read_shift(1);\n  if (cch === 0) {\n    blob.l++;\n    return \"\";\n  }\n  return blob.read_shift(cch, 'sbcs-cont');\n}\nfunction parse_BIFF2BOOLERR(blob, length, opts) {\n  var bestart = blob.l + 7;\n  var cell = parse_XLSCell(blob, 6, opts);\n  blob.l = bestart;\n  var val = parse_Bes(blob);\n  cell.val = val;\n  cell.t = val === true || val === false ? 'b' : 'e';\n  return cell;\n}\n\n/* TODO: convert to BIFF8 font struct */\nfunction parse_BIFF2FONTXTRA(blob, length) {\n  blob.l += 6; // unknown\n  blob.l += 2; // font weight \"bls\"\n  blob.l += 1; // charset\n  blob.l += 3; // unknown\n  blob.l += 1; // font family\n  blob.l += length - 13;\n}\n\n/* TODO: parse rich text runs */\nfunction parse_RString(blob, length, opts) {\n  var end = blob.l + length;\n  var cell = parse_XLSCell(blob, 6, opts);\n  var cch = blob.read_shift(2);\n  var str = parse_XLUnicodeStringNoCch(blob, cch, opts);\n  blob.l = end;\n  cell.t = 'str';\n  cell.val = str;\n  return cell;\n}\nfunction parse_BIFF4SheetInfo(blob /*::, length, opts*/) {\n  var flags = blob.read_shift(4);\n  var cch = blob.read_shift(1),\n    name = blob.read_shift(cch, \"sbcs\");\n  if (name.length === 0) name = \"Sheet1\";\n  return {\n    flags: flags,\n    name: name\n  };\n}\nvar DBF_SUPPORTED_VERSIONS = [0x02, 0x03, 0x30, 0x31, 0x83, 0x8B, 0x8C, 0xF5];\nvar DBF = /*#__PURE__*/function () {\n  var dbf_codepage_map = {\n    /* Code Pages Supported by Visual FoxPro */\n    /*::[*/0x01 /*::]*/: 437,\n    /*::[*/0x02 /*::]*/: 850,\n    /*::[*/0x03 /*::]*/: 1252,\n    /*::[*/0x04 /*::]*/: 10000,\n    /*::[*/0x64 /*::]*/: 852,\n    /*::[*/0x65 /*::]*/: 866,\n    /*::[*/0x66 /*::]*/: 865,\n    /*::[*/0x67 /*::]*/: 861,\n    /*::[*/0x68 /*::]*/: 895,\n    /*::[*/0x69 /*::]*/: 620,\n    /*::[*/0x6A /*::]*/: 737,\n    /*::[*/0x6B /*::]*/: 857,\n    /*::[*/0x78 /*::]*/: 950,\n    /*::[*/0x79 /*::]*/: 949,\n    /*::[*/0x7A /*::]*/: 936,\n    /*::[*/0x7B /*::]*/: 932,\n    /*::[*/0x7C /*::]*/: 874,\n    /*::[*/0x7D /*::]*/: 1255,\n    /*::[*/0x7E /*::]*/: 1256,\n    /*::[*/0x96 /*::]*/: 10007,\n    /*::[*/0x97 /*::]*/: 10029,\n    /*::[*/0x98 /*::]*/: 10006,\n    /*::[*/0xC8 /*::]*/: 1250,\n    /*::[*/0xC9 /*::]*/: 1251,\n    /*::[*/0xCA /*::]*/: 1254,\n    /*::[*/0xCB /*::]*/: 1253,\n    /* shapefile DBF extension */\n    /*::[*/0x00 /*::]*/: 20127,\n    /*::[*/0x08 /*::]*/: 865,\n    /*::[*/0x09 /*::]*/: 437,\n    /*::[*/0x0A /*::]*/: 850,\n    /*::[*/0x0B /*::]*/: 437,\n    /*::[*/0x0D /*::]*/: 437,\n    /*::[*/0x0E /*::]*/: 850,\n    /*::[*/0x0F /*::]*/: 437,\n    /*::[*/0x10 /*::]*/: 850,\n    /*::[*/0x11 /*::]*/: 437,\n    /*::[*/0x12 /*::]*/: 850,\n    /*::[*/0x13 /*::]*/: 932,\n    /*::[*/0x14 /*::]*/: 850,\n    /*::[*/0x15 /*::]*/: 437,\n    /*::[*/0x16 /*::]*/: 850,\n    /*::[*/0x17 /*::]*/: 865,\n    /*::[*/0x18 /*::]*/: 437,\n    /*::[*/0x19 /*::]*/: 437,\n    /*::[*/0x1A /*::]*/: 850,\n    /*::[*/0x1B /*::]*/: 437,\n    /*::[*/0x1C /*::]*/: 863,\n    /*::[*/0x1D /*::]*/: 850,\n    /*::[*/0x1F /*::]*/: 852,\n    /*::[*/0x22 /*::]*/: 852,\n    /*::[*/0x23 /*::]*/: 852,\n    /*::[*/0x24 /*::]*/: 860,\n    /*::[*/0x25 /*::]*/: 850,\n    /*::[*/0x26 /*::]*/: 866,\n    /*::[*/0x37 /*::]*/: 850,\n    /*::[*/0x40 /*::]*/: 852,\n    /*::[*/0x4D /*::]*/: 936,\n    /*::[*/0x4E /*::]*/: 949,\n    /*::[*/0x4F /*::]*/: 950,\n    /*::[*/0x50 /*::]*/: 874,\n    /*::[*/0x57 /*::]*/: 1252,\n    /*::[*/0x58 /*::]*/: 1252,\n    /*::[*/0x59 /*::]*/: 1252,\n    /*::[*/0x6C /*::]*/: 863,\n    /*::[*/0x86 /*::]*/: 737,\n    /*::[*/0x87 /*::]*/: 852,\n    /*::[*/0x88 /*::]*/: 857,\n    /*::[*/0xCC /*::]*/: 1257,\n    /*::[*/0xFF /*::]*/: 16969\n  };\n  var dbf_reverse_map = evert({\n    /*::[*/0x01 /*::]*/: 437,\n    /*::[*/0x02 /*::]*/: 850,\n    /*::[*/0x03 /*::]*/: 1252,\n    /*::[*/0x04 /*::]*/: 10000,\n    /*::[*/0x64 /*::]*/: 852,\n    /*::[*/0x65 /*::]*/: 866,\n    /*::[*/0x66 /*::]*/: 865,\n    /*::[*/0x67 /*::]*/: 861,\n    /*::[*/0x68 /*::]*/: 895,\n    /*::[*/0x69 /*::]*/: 620,\n    /*::[*/0x6A /*::]*/: 737,\n    /*::[*/0x6B /*::]*/: 857,\n    /*::[*/0x78 /*::]*/: 950,\n    /*::[*/0x79 /*::]*/: 949,\n    /*::[*/0x7A /*::]*/: 936,\n    /*::[*/0x7B /*::]*/: 932,\n    /*::[*/0x7C /*::]*/: 874,\n    /*::[*/0x7D /*::]*/: 1255,\n    /*::[*/0x7E /*::]*/: 1256,\n    /*::[*/0x96 /*::]*/: 10007,\n    /*::[*/0x97 /*::]*/: 10029,\n    /*::[*/0x98 /*::]*/: 10006,\n    /*::[*/0xC8 /*::]*/: 1250,\n    /*::[*/0xC9 /*::]*/: 1251,\n    /*::[*/0xCA /*::]*/: 1254,\n    /*::[*/0xCB /*::]*/: 1253,\n    /*::[*/0x00 /*::]*/: 20127\n  });\n  /* TODO: find an actual specification */\n  function dbf_to_aoa(buf, opts) /*:AOA*/{\n    var out /*:AOA*/ = [];\n    var d /*:Block*/ = new_raw_buf(1) /*:any*/;\n    switch (opts.type) {\n      case 'base64':\n        d = s2a(Base64_decode(buf));\n        break;\n      case 'binary':\n        d = s2a(buf);\n        break;\n      case 'buffer':\n      case 'array':\n        d = buf;\n        break;\n    }\n    prep_blob(d, 0);\n\n    /* header */\n    var ft = d.read_shift(1);\n    var memo = !!(ft & 0x88);\n    var vfp = false,\n      l7 = false;\n    switch (ft) {\n      case 0x02:\n        break;\n      // dBASE II\n      case 0x03:\n        break;\n      // dBASE III\n      case 0x30:\n        vfp = true;\n        memo = true;\n        break;\n      // VFP\n      case 0x31:\n        vfp = true;\n        memo = true;\n        break;\n      // VFP with autoincrement\n      // 0x43 dBASE IV SQL table files\n      // 0x63 dBASE IV SQL system files\n      case 0x83:\n        break;\n      // dBASE III with memo\n      case 0x8B:\n        break;\n      // dBASE IV with memo\n      case 0x8C:\n        l7 = true;\n        break;\n      // dBASE Level 7 with memo\n      // case 0xCB dBASE IV SQL table files with memo\n      case 0xF5:\n        break;\n      // FoxPro 2.x with memo\n      // case 0xFB FoxBASE\n      default:\n        throw new Error(\"DBF Unsupported Version: \" + ft.toString(16));\n    }\n    var nrow = 0,\n      fpos = 0x0209;\n    if (ft == 0x02) nrow = d.read_shift(2);\n    d.l += 3; // dBASE II stores DDMMYY date, others use YYMMDD\n    if (ft != 0x02) nrow = d.read_shift(4);\n    if (nrow > 1048576) nrow = 1e6;\n    if (ft != 0x02) fpos = d.read_shift(2); // header length\n    var rlen = d.read_shift(2); // record length\n\n    /*flags = 0,*/\n    opts.codepage || 1252;\n    if (ft != 0x02) {\n      // 20 reserved bytes\n      d.l += 16;\n      /*flags = */\n      d.read_shift(1);\n      //if(memo && ((flags & 0x02) === 0)) throw new Error(\"DBF Flags \" + flags.toString(16) + \" ft \" + ft.toString(16));\n\n      /* codepage present in FoxPro and dBASE Level 7 */\n      if (d[d.l] !== 0) dbf_codepage_map[d[d.l]];\n      d.l += 1;\n      d.l += 2;\n    }\n    if (l7) d.l += 36; // Level 7: 32 byte \"Language driver name\", 4 byte reserved\n\n    /*:: type DBFField = { name:string; len:number; type:string; } */\n    var fields /*:Array<DBFField>*/ = [],\n      field /*:DBFField*/ = {} /*:any*/;\n    var hend = Math.min(d.length, ft == 0x02 ? 0x209 : fpos - 10 - (vfp ? 264 : 0));\n    var ww = l7 ? 32 : 11;\n    while (d.l < hend && d[d.l] != 0x0d) {\n      field = {} /*:any*/;\n      field.name = a2s(d.slice(d.l, d.l + ww)).replace(/[\\u0000\\r\\n].*$/g, \"\");\n      d.l += ww;\n      field.type = String.fromCharCode(d.read_shift(1));\n      if (ft != 0x02 && !l7) field.offset = d.read_shift(4);\n      field.len = d.read_shift(1);\n      if (ft == 0x02) field.offset = d.read_shift(2);\n      field.dec = d.read_shift(1);\n      if (field.name.length) fields.push(field);\n      if (ft != 0x02) d.l += l7 ? 13 : 14;\n      switch (field.type) {\n        case 'B':\n          // Double (VFP) / Binary (dBASE L7)\n          if ((!vfp || field.len != 8) && opts.WTF) console.log('Skipping ' + field.name + ':' + field.type);\n          break;\n        case 'G': // General (FoxPro and dBASE L7)\n        case 'P':\n          // Picture (FoxPro and dBASE L7)\n          if (opts.WTF) console.log('Skipping ' + field.name + ':' + field.type);\n          break;\n        case '+': // Autoincrement (dBASE L7 only)\n        case '0': // _NullFlags (VFP only)\n        case '@': // Timestamp (dBASE L7 only)\n        case 'C': // Character (dBASE II)\n        case 'D': // Date (dBASE III)\n        case 'F': // Float (dBASE IV)\n        case 'I': // Long (VFP and dBASE L7)\n        case 'L': // Logical (dBASE II)\n        case 'M': // Memo (dBASE III)\n        case 'N': // Number (dBASE II)\n        case 'O': // Double (dBASE L7 only)\n        case 'T': // Datetime (VFP only)\n        case 'Y':\n          // Currency (VFP only)\n          break;\n        default:\n          throw new Error('Unknown Field Type: ' + field.type);\n      }\n    }\n    if (d[d.l] !== 0x0D) d.l = fpos - 1;\n    if (d.read_shift(1) !== 0x0D) throw new Error(\"DBF Terminator not found \" + d.l + \" \" + d[d.l]);\n    d.l = fpos;\n\n    /* data */\n    var R = 0,\n      C = 0;\n    out[0] = [];\n    for (C = 0; C != fields.length; ++C) out[0][C] = fields[C].name;\n    while (nrow-- > 0) {\n      if (d[d.l] === 0x2A) {\n        // TODO: record marked as deleted -- create a hidden row?\n        d.l += rlen;\n        continue;\n      }\n      ++d.l;\n      out[++R] = [];\n      C = 0;\n      for (C = 0; C != fields.length; ++C) {\n        var dd = d.slice(d.l, d.l + fields[C].len);\n        d.l += fields[C].len;\n        prep_blob(dd, 0);\n        var s = a2s(dd);\n        switch (fields[C].type) {\n          case 'C':\n            // NOTE: it is conventional to write '  /  /  ' for empty dates\n            if (s.trim().length) out[R][C] = s.replace(/\\s+$/, \"\");\n            break;\n          case 'D':\n            if (s.length === 8) {\n              out[R][C] = new Date(Date.UTC(+s.slice(0, 4), +s.slice(4, 6) - 1, +s.slice(6, 8), 0, 0, 0, 0));\n              if (!(opts && opts.UTC)) {\n                out[R][C] = utc_to_local(out[R][C]);\n              }\n            } else out[R][C] = s;\n            break;\n          case 'F':\n            out[R][C] = parseFloat(s.trim());\n            break;\n          case '+':\n          case 'I':\n            out[R][C] = l7 ? dd.read_shift(-4, 'i') ^ 0x80000000 : dd.read_shift(4, 'i');\n            break;\n          case 'L':\n            switch (s.trim().toUpperCase()) {\n              case 'Y':\n              case 'T':\n                out[R][C] = true;\n                break;\n              case 'N':\n              case 'F':\n                out[R][C] = false;\n                break;\n              case '':\n              case '?':\n                break;\n              default:\n                throw new Error(\"DBF Unrecognized L:|\" + s + \"|\");\n            }\n            break;\n          case 'M':\n            /* TODO: handle memo files */\n            if (!memo) throw new Error(\"DBF Unexpected MEMO for type \" + ft.toString(16));\n            out[R][C] = \"##MEMO##\" + (l7 ? parseInt(s.trim(), 10) : dd.read_shift(4));\n            break;\n          case 'N':\n            s = s.replace(/\\u0000/g, \"\").trim();\n            // NOTE: dBASE II interprets \"  .  \" as 0\n            if (s && s != \".\") out[R][C] = +s || 0;\n            break;\n          case '@':\n            // NOTE: dBASE specs appear to be incorrect\n            out[R][C] = new Date(dd.read_shift(-8, 'f') - 0x388317533400);\n            break;\n          case 'T':\n            {\n              var hi = dd.read_shift(4),\n                lo = dd.read_shift(4);\n              if (hi == 0 && lo == 0) break;\n              out[R][C] = new Date((hi - 0x253D8C) * 0x5265C00 + lo);\n              if (!(opts && opts.UTC)) out[R][C] = utc_to_local(out[R][C]);\n            }\n            break;\n          case 'Y':\n            out[R][C] = dd.read_shift(4, 'i') / 1e4 + dd.read_shift(4, 'i') / 1e4 * Math.pow(2, 32);\n            break;\n          case 'O':\n            out[R][C] = -dd.read_shift(-8, 'f');\n            break;\n          case 'B':\n            if (vfp && fields[C].len == 8) {\n              out[R][C] = dd.read_shift(8, 'f');\n              break;\n            }\n          /* falls through */\n          case 'G':\n          case 'P':\n            dd.l += fields[C].len;\n            break;\n          case '0':\n            if (fields[C].name === '_NullFlags') break;\n          /* falls through */\n          default:\n            throw new Error(\"DBF Unsupported data type \" + fields[C].type);\n        }\n      }\n    }\n    if (ft != 0x02) if (d.l < d.length && d[d.l++] != 0x1A) throw new Error(\"DBF EOF Marker missing \" + (d.l - 1) + \" of \" + d.length + \" \" + d[d.l - 1].toString(16));\n    if (opts && opts.sheetRows) out = out.slice(0, opts.sheetRows);\n    opts.DBF = fields;\n    return out;\n  }\n  function dbf_to_sheet(buf, opts) /*:Worksheet*/{\n    var o = opts || {};\n    if (!o.dateNF) o.dateNF = \"yyyymmdd\";\n    var ws = aoa_to_sheet(dbf_to_aoa(buf, o), o);\n    ws[\"!cols\"] = o.DBF.map(function (field) {\n      return {\n        wch: field.len,\n        DBF: field\n      };\n    });\n    delete o.DBF;\n    return ws;\n  }\n  function dbf_to_workbook(buf, opts) /*:Workbook*/{\n    try {\n      var o = sheet_to_workbook(dbf_to_sheet(buf, opts), opts);\n      o.bookType = \"dbf\";\n      return o;\n    } catch (e) {\n      if (opts && opts.WTF) throw e;\n    }\n    return {\n      SheetNames: [],\n      Sheets: {}\n    };\n  }\n  var _RLEN = {\n    'B': 8,\n    'C': 250,\n    'L': 1,\n    'D': 8,\n    '?': 0,\n    '': 0\n  };\n  function sheet_to_dbf(ws /*:Worksheet*/, opts /*:WriteOpts*/) {\n    var o = opts || {};\n    var old_cp = current_codepage;\n    if (+o.codepage >= 0) set_cp(+o.codepage);\n    if (o.type == \"string\") throw new Error(\"Cannot write DBF to JS string\");\n    var ba = buf_array();\n    var aoa /*:AOA*/ = sheet_to_json(ws, {\n      header: 1,\n      raw: true,\n      cellDates: true\n    });\n    var headers = aoa[0],\n      data = aoa.slice(1),\n      cols = ws[\"!cols\"] || [];\n    var i = 0,\n      j = 0,\n      hcnt = 0,\n      rlen = 1;\n    for (i = 0; i < headers.length; ++i) {\n      if (((cols[i] || {}).DBF || {}).name) {\n        headers[i] = cols[i].DBF.name;\n        ++hcnt;\n        continue;\n      }\n      if (headers[i] == null) continue;\n      ++hcnt;\n      if (typeof headers[i] === 'number') headers[i] = headers[i].toString(10);\n      if (typeof headers[i] !== 'string') throw new Error(\"DBF Invalid column name \" + headers[i] + \" |\" + typeof headers[i] + \"|\");\n      if (headers.indexOf(headers[i]) !== i) for (j = 0; j < 1024; ++j) if (headers.indexOf(headers[i] + \"_\" + j) == -1) {\n        headers[i] += \"_\" + j;\n        break;\n      }\n    }\n    var range = safe_decode_range(ws['!ref']);\n    var coltypes /*:Array<string>*/ = [];\n    var colwidths /*:Array<number>*/ = [];\n    var coldecimals /*:Array<number>*/ = [];\n    for (i = 0; i <= range.e.c - range.s.c; ++i) {\n      var guess = '',\n        _guess = '',\n        maxlen = 0;\n      var col /*:Array<any>*/ = [];\n      for (j = 0; j < data.length; ++j) {\n        if (data[j][i] != null) col.push(data[j][i]);\n      }\n      if (col.length == 0 || headers[i] == null) {\n        coltypes[i] = '?';\n        continue;\n      }\n      for (j = 0; j < col.length; ++j) {\n        switch (typeof col[j]) {\n          /* TODO: check if L2 compat is desired */\n          case 'number':\n            _guess = 'B';\n            break;\n          case 'string':\n            _guess = 'C';\n            break;\n          case 'boolean':\n            _guess = 'L';\n            break;\n          case 'object':\n            _guess = col[j] instanceof Date ? 'D' : 'C';\n            break;\n          default:\n            _guess = 'C';\n        }\n        /* TODO: cache the values instead of encoding twice */\n        maxlen = Math.max(maxlen, String(col[j]).length);\n        guess = guess && guess != _guess ? 'C' : _guess;\n        //if(guess == 'C') break;\n      }\n\n      if (maxlen > 250) maxlen = 250;\n      _guess = ((cols[i] || {}).DBF || {}).type;\n      /* TODO: more fine grained control over DBF type resolution */\n      if (_guess == 'C') {\n        if (cols[i].DBF.len > maxlen) maxlen = cols[i].DBF.len;\n      }\n      if (guess == 'B' && _guess == 'N') {\n        guess = 'N';\n        coldecimals[i] = cols[i].DBF.dec;\n        maxlen = cols[i].DBF.len;\n      }\n      colwidths[i] = guess == 'C' || _guess == 'N' ? maxlen : _RLEN[guess] || 0;\n      rlen += colwidths[i];\n      coltypes[i] = guess;\n    }\n    var h = ba.next(32);\n    h.write_shift(4, 0x13021130);\n    h.write_shift(4, data.length);\n    h.write_shift(2, 296 + 32 * hcnt);\n    h.write_shift(2, rlen);\n    for (i = 0; i < 4; ++i) h.write_shift(4, 0);\n    var cp = +dbf_reverse_map[/*::String(*/current_codepage /*::)*/] || 0x03;\n    h.write_shift(4, 0x00000000 | cp << 8);\n    if (dbf_codepage_map[cp] != +o.codepage) {\n      if (o.codepage) console.error(\"DBF Unsupported codepage \" + current_codepage + \", using 1252\");\n      current_codepage = 1252;\n    }\n    for (i = 0, j = 0; i < headers.length; ++i) {\n      if (headers[i] == null) continue;\n      var hf = ba.next(32);\n      /* TODO: test how applications handle non-ASCII field names */\n      var _f = (headers[i].slice(-10) + \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\").slice(0, 11);\n      hf.write_shift(1, _f, \"sbcs\");\n      hf.write_shift(1, coltypes[i] == '?' ? 'C' : coltypes[i], \"sbcs\");\n      hf.write_shift(4, j);\n      hf.write_shift(1, colwidths[i] || _RLEN[coltypes[i]] || 0);\n      hf.write_shift(1, coldecimals[i] || 0);\n      hf.write_shift(1, 0x02);\n      hf.write_shift(4, 0);\n      hf.write_shift(1, 0);\n      hf.write_shift(4, 0);\n      hf.write_shift(4, 0);\n      j += colwidths[i] || _RLEN[coltypes[i]] || 0;\n    }\n    var hb = ba.next(264);\n    hb.write_shift(4, 0x0000000D);\n    for (i = 0; i < 65; ++i) hb.write_shift(4, 0x00000000);\n    for (i = 0; i < data.length; ++i) {\n      var rout = ba.next(rlen);\n      rout.write_shift(1, 0);\n      for (j = 0; j < headers.length; ++j) {\n        if (headers[j] == null) continue;\n        switch (coltypes[j]) {\n          case 'L':\n            rout.write_shift(1, data[i][j] == null ? 0x3F : data[i][j] ? 0x54 : 0x46);\n            break;\n          case 'B':\n            rout.write_shift(8, data[i][j] || 0, 'f');\n            break;\n          case 'N':\n            var _n = \"0\";\n            if (typeof data[i][j] == \"number\") _n = data[i][j].toFixed(coldecimals[j] || 0);\n            if (_n.length > colwidths[j]) _n = _n.slice(0, colwidths[j]); // addresses decimal > width\n            for (hcnt = 0; hcnt < colwidths[j] - _n.length; ++hcnt) rout.write_shift(1, 0x20);\n            rout.write_shift(1, _n, \"sbcs\");\n            break;\n          case 'D':\n            if (!data[i][j]) rout.write_shift(8, \"00000000\", \"sbcs\");else {\n              rout.write_shift(4, (\"0000\" + data[i][j].getFullYear()).slice(-4), \"sbcs\");\n              rout.write_shift(2, (\"00\" + (data[i][j].getMonth() + 1)).slice(-2), \"sbcs\");\n              rout.write_shift(2, (\"00\" + data[i][j].getDate()).slice(-2), \"sbcs\");\n            }\n            break;\n          case 'C':\n            var _l = rout.l;\n            var _s = String(data[i][j] != null ? data[i][j] : \"\").slice(0, colwidths[j]);\n            rout.write_shift(1, _s, \"cpstr\");\n            _l += colwidths[j] - rout.l;\n            for (hcnt = 0; hcnt < _l; ++hcnt) rout.write_shift(1, 0x20);\n            break;\n        }\n      }\n      // data\n    }\n\n    current_codepage = old_cp;\n    ba.next(1).write_shift(1, 0x1A);\n    return ba.end();\n  }\n  return {\n    to_workbook: dbf_to_workbook,\n    to_sheet: dbf_to_sheet,\n    from_sheet: sheet_to_dbf\n  };\n}();\nvar SYLK = /*#__PURE__*/function () {\n  /* TODO: stress test sequences */\n  var sylk_escapes = {\n    AA: 'À',\n    BA: 'Á',\n    CA: 'Â',\n    DA: 195,\n    HA: 'Ä',\n    JA: 197,\n    AE: 'È',\n    BE: 'É',\n    CE: 'Ê',\n    HE: 'Ë',\n    AI: 'Ì',\n    BI: 'Í',\n    CI: 'Î',\n    HI: 'Ï',\n    AO: 'Ò',\n    BO: 'Ó',\n    CO: 'Ô',\n    DO: 213,\n    HO: 'Ö',\n    AU: 'Ù',\n    BU: 'Ú',\n    CU: 'Û',\n    HU: 'Ü',\n    Aa: 'à',\n    Ba: 'á',\n    Ca: 'â',\n    Da: 227,\n    Ha: 'ä',\n    Ja: 229,\n    Ae: 'è',\n    Be: 'é',\n    Ce: 'ê',\n    He: 'ë',\n    Ai: 'ì',\n    Bi: 'í',\n    Ci: 'î',\n    Hi: 'ï',\n    Ao: 'ò',\n    Bo: 'ó',\n    Co: 'ô',\n    Do: 245,\n    Ho: 'ö',\n    Au: 'ù',\n    Bu: 'ú',\n    Cu: 'û',\n    Hu: 'ü',\n    KC: 'Ç',\n    Kc: 'ç',\n    q: 'æ',\n    z: 'œ',\n    a: 'Æ',\n    j: 'Œ',\n    DN: 209,\n    Dn: 241,\n    Hy: 255,\n    S: 169,\n    c: 170,\n    R: 174,\n    \"B \": 180,\n    /*::[*/0 /*::]*/: 176,\n    /*::[*/1 /*::]*/: 177,\n    /*::[*/2 /*::]*/: 178,\n    /*::[*/3 /*::]*/: 179,\n    /*::[*/5 /*::]*/: 181,\n    /*::[*/6 /*::]*/: 182,\n    /*::[*/7 /*::]*/: 183,\n    Q: 185,\n    k: 186,\n    b: 208,\n    i: 216,\n    l: 222,\n    s: 240,\n    y: 248,\n    \"!\": 161,\n    '\"': 162,\n    \"#\": 163,\n    \"(\": 164,\n    \"%\": 165,\n    \"'\": 167,\n    \"H \": 168,\n    \"+\": 171,\n    \";\": 187,\n    \"<\": 188,\n    \"=\": 189,\n    \">\": 190,\n    \"?\": 191,\n    \"{\": 223\n  } /*:any*/;\n  var sylk_char_regex = new RegExp(\"\\u001BN(\" + keys(sylk_escapes).join(\"|\").replace(/\\|\\|\\|/, \"|\\\\||\").replace(/([?()+])/g, \"\\\\$1\") + \"|\\\\|)\", \"gm\");\n  var sylk_char_fn = function (_, $1) {\n    var o = sylk_escapes[$1];\n    return typeof o == \"number\" ? _getansi(o) : o;\n  };\n  var decode_sylk_char = function ($$, $1, $2) {\n    var newcc = $1.charCodeAt(0) - 0x20 << 4 | $2.charCodeAt(0) - 0x30;\n    return newcc == 59 ? $$ : _getansi(newcc);\n  };\n  sylk_escapes[\"|\"] = 254;\n  /* TODO: evert the escape map */\n  var encode_sylk_str = function ($$) {\n    return $$.replace(/\\n/g, \"\\x1b :\").replace(/\\r/g, \"\\x1b =\");\n  };\n  /* https://oss.sheetjs.com/notes/sylk/ for more details */\n  function sylk_to_aoa(d /*:RawData*/, opts) /*:[AOA, Worksheet]*/{\n    switch (opts.type) {\n      case 'base64':\n        return sylk_to_aoa_str(Base64_decode(d), opts);\n      case 'binary':\n        return sylk_to_aoa_str(d, opts);\n      case 'buffer':\n        return sylk_to_aoa_str(has_buf && Buffer.isBuffer(d) ? d.toString('binary') : a2s(d), opts);\n      case 'array':\n        return sylk_to_aoa_str(cc2str(d), opts);\n    }\n    throw new Error(\"Unrecognized type \" + opts.type);\n  }\n  function sylk_to_aoa_str(str /*:string*/, opts) /*:[AOA, Worksheet]*/{\n    var records = str.split(/[\\n\\r]+/),\n      R = -1,\n      C = -1,\n      ri = 0,\n      rj = 0,\n      arr /*:AOA*/ = [];\n    var formats /*:Array<string>*/ = [];\n    var next_cell_format /*:string|null*/ = null;\n    var sht = {},\n      rowinfo /*:Array<RowInfo>*/ = [],\n      colinfo /*:Array<ColInfo>*/ = [],\n      cw /*:Array<string>*/ = [];\n    var Mval = 0,\n      j;\n    var wb = {\n      Workbook: {\n        WBProps: {},\n        Names: []\n      }\n    };\n    if (+opts.codepage >= 0) set_cp(+opts.codepage);\n    for (; ri !== records.length; ++ri) {\n      Mval = 0;\n      var rstr = records[ri].trim().replace(/\\x1B([\\x20-\\x2F])([\\x30-\\x3F])/g, decode_sylk_char).replace(sylk_char_regex, sylk_char_fn);\n      var record = rstr.replace(/;;/g, \"\\u0000\").split(\";\").map(function (x) {\n        return x.replace(/\\u0000/g, \";\");\n      });\n      var RT = record[0],\n        val;\n      if (rstr.length > 0) switch (RT) {\n        case 'ID':\n          break;\n        /* header */\n        case 'E':\n          break;\n        /* EOF */\n        case 'B':\n          break;\n        /* dimensions */\n        case 'O':\n          /* workbook options */\n          for (rj = 1; rj < record.length; ++rj) switch (record[rj].charAt(0)) {\n            case 'V':\n              {\n                var d1904 = parseInt(record[rj].slice(1), 10);\n                // NOTE: it is technically an error if d1904 >= 5 or < 0\n                if (d1904 >= 1 && d1904 <= 4) wb.Workbook.WBProps.date1904 = true;\n              }\n              break;\n          }\n          break;\n        case 'W':\n          break;\n        /* window */\n        case 'P':\n          switch (record[1].charAt(0)) {\n            case 'P':\n              formats.push(rstr.slice(3).replace(/;;/g, \";\"));\n              break;\n          }\n          break;\n        case 'NN':\n          {\n            /* defined name */\n            var nn = {\n              Sheet: 0\n            };\n            for (rj = 1; rj < record.length; ++rj) switch (record[rj].charAt(0)) {\n              case 'N':\n                nn.Name = record[rj].slice(1);\n                break;\n              case 'E':\n                nn.Ref = (opts && opts.sheet || \"Sheet1\") + \"!\" + rc_to_a1(record[rj].slice(1));\n                break;\n            }\n            wb.Workbook.Names.push(nn);\n          }\n          break;\n        // case 'NE': // ??\n        // case 'NU': // ??\n        case 'C':\n          /* cell */\n          var C_seen_K = false,\n            C_seen_X = false,\n            C_seen_S = false,\n            C_seen_E = false,\n            _R = -1,\n            _C = -1,\n            formula = \"\",\n            cell_t = \"z\";\n          var cmnt = \"\";\n          for (rj = 1; rj < record.length; ++rj) switch (record[rj].charAt(0)) {\n            case 'A':\n              cmnt = record[rj].slice(1);\n              break;\n            // TODO: comment\n            case 'X':\n              C = parseInt(record[rj].slice(1), 10) - 1;\n              C_seen_X = true;\n              break;\n            case 'Y':\n              R = parseInt(record[rj].slice(1), 10) - 1;\n              if (!C_seen_X) C = 0;\n              for (j = arr.length; j <= R; ++j) arr[j] = [];\n              break;\n            case 'K':\n              val = record[rj].slice(1);\n              if (val.charAt(0) === '\"') {\n                val = val.slice(1, val.length - 1);\n                cell_t = \"s\";\n              } else if (val === 'TRUE' || val === 'FALSE') {\n                val = val === 'TRUE';\n                cell_t = \"b\";\n              } else if (!isNaN(fuzzynum(val))) {\n                val = fuzzynum(val);\n                cell_t = \"n\";\n                if (next_cell_format !== null && fmt_is_date(next_cell_format) && opts.cellDates) {\n                  val = numdate(wb.Workbook.WBProps.date1904 ? val + 1462 : val);\n                  cell_t = typeof val == \"number\" ? \"n\" : \"d\";\n                }\n              }\n              C_seen_K = true;\n              break;\n            case 'E':\n              C_seen_E = true;\n              formula = rc_to_a1(record[rj].slice(1), {\n                r: R,\n                c: C\n              });\n              break;\n            case 'S':\n              C_seen_S = true;\n              break;\n            case 'G':\n              break;\n            // unknown\n            case 'R':\n              _R = parseInt(record[rj].slice(1), 10) - 1;\n              break;\n            case 'C':\n              _C = parseInt(record[rj].slice(1), 10) - 1;\n              break;\n            // case 'P': // ??\n            // case 'D': // ??\n            default:\n              if (opts && opts.WTF) throw new Error(\"SYLK bad record \" + rstr);\n          }\n          if (C_seen_K) {\n            if (!arr[R][C]) arr[R][C] = {\n              t: cell_t,\n              v: val\n            };else {\n              arr[R][C].t = cell_t;\n              arr[R][C].v = val;\n            }\n            if (next_cell_format) arr[R][C].z = next_cell_format;\n            if (opts.cellText !== false && next_cell_format) arr[R][C].w = SSF_format(arr[R][C].z, arr[R][C].v, {\n              date1904: wb.Workbook.WBProps.date1904\n            });\n            next_cell_format = null;\n          }\n          if (C_seen_S) {\n            if (C_seen_E) throw new Error(\"SYLK shared formula cannot have own formula\");\n            var shrbase = _R > -1 && arr[_R][_C];\n            if (!shrbase || !shrbase[1]) throw new Error(\"SYLK shared formula cannot find base\");\n            formula = shift_formula_str(shrbase[1], {\n              r: R - _R,\n              c: C - _C\n            });\n          }\n          if (formula) {\n            if (!arr[R][C]) arr[R][C] = {\n              t: 'n',\n              f: formula\n            };else arr[R][C].f = formula;\n          }\n          if (cmnt) {\n            if (!arr[R][C]) arr[R][C] = {\n              t: 'z'\n            };\n            arr[R][C].c = [{\n              a: \"SheetJSYLK\",\n              t: cmnt\n            }];\n          }\n          break;\n        case 'F':\n          /* Format */\n          var F_seen = 0;\n          for (rj = 1; rj < record.length; ++rj) switch (record[rj].charAt(0)) {\n            case 'X':\n              C = parseInt(record[rj].slice(1), 10) - 1;\n              ++F_seen;\n              break;\n            case 'Y':\n              R = parseInt(record[rj].slice(1), 10) - 1; /*C = 0;*/\n              for (j = arr.length; j <= R; ++j) arr[j] = [];\n              break;\n            case 'M':\n              Mval = parseInt(record[rj].slice(1), 10) / 20;\n              break;\n            case 'F':\n              break;\n            /* ??? */\n            case 'G':\n              break;\n            /* hide grid */\n            case 'P':\n              next_cell_format = formats[parseInt(record[rj].slice(1), 10)];\n              break;\n            case 'S':\n              break;\n            /* cell style */\n            case 'D':\n              break;\n            /* column */\n            case 'N':\n              break;\n            /* font */\n            case 'W':\n              cw = record[rj].slice(1).split(\" \");\n              for (j = parseInt(cw[0], 10); j <= parseInt(cw[1], 10); ++j) {\n                Mval = parseInt(cw[2], 10);\n                colinfo[j - 1] = Mval === 0 ? {\n                  hidden: true\n                } : {\n                  wch: Mval\n                };\n              }\n              break;\n            case 'C':\n              /* default column format */\n              C = parseInt(record[rj].slice(1), 10) - 1;\n              if (!colinfo[C]) colinfo[C] = {};\n              break;\n            case 'R':\n              /* row properties */\n              R = parseInt(record[rj].slice(1), 10) - 1;\n              if (!rowinfo[R]) rowinfo[R] = {};\n              if (Mval > 0) {\n                rowinfo[R].hpt = Mval;\n                rowinfo[R].hpx = pt2px(Mval);\n              } else if (Mval === 0) rowinfo[R].hidden = true;\n              break;\n            // case 'K': // ??\n            // case 'E': // ??\n            default:\n              if (opts && opts.WTF) throw new Error(\"SYLK bad record \" + rstr);\n          }\n          if (F_seen < 1) next_cell_format = null;\n          break;\n        default:\n          if (opts && opts.WTF) throw new Error(\"SYLK bad record \" + rstr);\n      }\n    }\n    if (rowinfo.length > 0) sht['!rows'] = rowinfo;\n    if (colinfo.length > 0) sht['!cols'] = colinfo;\n    colinfo.forEach(function (col) {\n      process_col(col);\n    });\n    if (opts && opts.sheetRows) arr = arr.slice(0, opts.sheetRows);\n    return [arr, sht, wb];\n  }\n  function sylk_to_workbook(d /*:RawData*/, opts) /*:Workbook*/{\n    var aoasht = sylk_to_aoa(d, opts);\n    var aoa = aoasht[0],\n      ws = aoasht[1],\n      wb = aoasht[2];\n    var _opts = dup(opts);\n    _opts.date1904 = (((wb || {}).Workbook || {}).WBProps || {}).date1904;\n    var o = aoa_to_sheet(aoa, _opts);\n    keys(ws).forEach(function (k) {\n      o[k] = ws[k];\n    });\n    var outwb = sheet_to_workbook(o, opts);\n    keys(wb).forEach(function (k) {\n      outwb[k] = wb[k];\n    });\n    outwb.bookType = \"sylk\";\n    return outwb;\n  }\n  function write_ws_cell_sylk(cell /*:Cell*/, ws /*:Worksheet*/, R /*:number*/, C /*:number*/, opts, date1904 /*:boolean*/) /*:string*/{\n    var o = \"C;Y\" + (R + 1) + \";X\" + (C + 1) + \";K\";\n    switch (cell.t) {\n      case 'n':\n        o += cell.v || 0;\n        if (cell.f && !cell.F) o += \";E\" + a1_to_rc(cell.f, {\n          r: R,\n          c: C\n        });\n        break;\n      case 'b':\n        o += cell.v ? \"TRUE\" : \"FALSE\";\n        break;\n      case 'e':\n        o += cell.w || cell.v;\n        break;\n      case 'd':\n        o += datenum(parseDate$1(cell.v, date1904), date1904);\n        break;\n      case 's':\n        o += '\"' + (cell.v == null ? \"\" : String(cell.v)).replace(/\"/g, \"\").replace(/;/g, \";;\") + '\"';\n        break;\n    }\n    return o;\n  }\n  function write_ws_cmnt_sylk(cmnt /*:Comment*/, R /*:number*/, C /*:number*/) /*:string*/{\n    var o = \"C;Y\" + (R + 1) + \";X\" + (C + 1) + \";A\";\n    /* TODO: max length? */\n    o += encode_sylk_str(cmnt.map(function (c) {\n      return c.t;\n    }).join(\"\"));\n    return o;\n  }\n  function write_ws_cols_sylk(out, cols) {\n    cols.forEach(function (col, i) {\n      var rec = \"F;W\" + (i + 1) + \" \" + (i + 1) + \" \";\n      if (col.hidden) rec += \"0\";else {\n        if (typeof col.width == 'number' && !col.wpx) col.wpx = width2px(col.width);\n        if (typeof col.wpx == 'number' && !col.wch) col.wch = px2char(col.wpx);\n        if (typeof col.wch == 'number') rec += Math.round(col.wch);\n      }\n      if (rec.charAt(rec.length - 1) != \" \") out.push(rec);\n    });\n  }\n  function write_ws_rows_sylk(out /*:Array<string>*/, rows /*:Array<RowInfo>*/) {\n    rows.forEach(function (row, i) {\n      var rec = \"F;\";\n      if (row.hidden) rec += \"M0;\";else if (row.hpt) rec += \"M\" + 20 * row.hpt + \";\";else if (row.hpx) rec += \"M\" + 20 * px2pt(row.hpx) + \";\";\n      if (rec.length > 2) out.push(rec + \"R\" + (i + 1));\n    });\n  }\n  function sheet_to_sylk(ws /*:Worksheet*/, opts /*:?any*/, wb /*:?WorkBook*/) /*:string*/{\n    if (!opts) opts = {};\n    opts._formats = [\"General\"];\n    /* TODO: codepage */\n    var preamble /*:Array<string>*/ = [\"ID;PSheetJS;N;E\"],\n      o /*:Array<string>*/ = [];\n    var r = safe_decode_range(ws['!ref']),\n      cell /*:Cell*/;\n    var dense = ws[\"!data\"] != null;\n    var RS = \"\\r\\n\";\n    var d1904 = (((wb || {}).Workbook || {}).WBProps || {}).date1904;\n    var _lastfmt = \"General\";\n    preamble.push(\"P;PGeneral\");\n    /* Excel has been inconsistent in comment placement */\n    var R = r.s.r,\n      C = r.s.c,\n      p = [];\n    for (R = r.s.r; R <= r.e.r; ++R) {\n      if (dense && !ws[\"!data\"][R]) continue;\n      p = [];\n      for (C = r.s.c; C <= r.e.c; ++C) {\n        cell = dense ? ws[\"!data\"][R][C] : ws[encode_col(C) + encode_row(R)];\n        if (!cell || !cell.c) continue;\n        p.push(write_ws_cmnt_sylk(cell.c, R, C));\n      }\n      if (p.length) o.push(p.join(RS));\n    }\n    for (R = r.s.r; R <= r.e.r; ++R) {\n      if (dense && !ws[\"!data\"][R]) continue;\n      p = [];\n      for (C = r.s.c; C <= r.e.c; ++C) {\n        cell = dense ? ws[\"!data\"][R][C] : ws[encode_col(C) + encode_row(R)];\n        if (!cell || cell.v == null && (!cell.f || cell.F)) continue;\n        if ((cell.z || (cell.t == \"d\" ? table_fmt[14] : \"General\")) != _lastfmt) {\n          var ifmt = opts._formats.indexOf(cell.z);\n          if (ifmt == -1) {\n            opts._formats.push(cell.z);\n            ifmt = opts._formats.length - 1;\n            preamble.push(\"P;P\" + cell.z.replace(/;/g, \";;\"));\n          }\n          p.push(\"F;P\" + ifmt + \";Y\" + (R + 1) + \";X\" + (C + 1));\n        }\n        p.push(write_ws_cell_sylk(cell, ws, R, C, opts, d1904));\n      }\n      o.push(p.join(RS));\n    }\n    preamble.push(\"F;P0;DG0G8;M255\");\n    if (ws['!cols']) write_ws_cols_sylk(preamble, ws['!cols']);\n    if (ws['!rows']) write_ws_rows_sylk(preamble, ws['!rows']);\n    preamble.push(\"B;Y\" + (r.e.r - r.s.r + 1) + \";X\" + (r.e.c - r.s.c + 1) + \";D\" + [r.s.c, r.s.r, r.e.c, r.e.r].join(\" \"));\n    preamble.push(\"O;L;D;B\" + (d1904 ? \";V4\" : \"\") + \";K47;G100 0.001\");\n    delete opts._formats;\n    return preamble.join(RS) + RS + o.join(RS) + RS + \"E\" + RS;\n  }\n  return {\n    to_workbook: sylk_to_workbook,\n    from_sheet: sheet_to_sylk\n  };\n}();\nvar DIF = /*#__PURE__*/function () {\n  function dif_to_aoa(d /*:RawData*/, opts) /*:AOA*/{\n    switch (opts.type) {\n      case 'base64':\n        return dif_to_aoa_str(Base64_decode(d), opts);\n      case 'binary':\n        return dif_to_aoa_str(d, opts);\n      case 'buffer':\n        return dif_to_aoa_str(has_buf && Buffer.isBuffer(d) ? d.toString('binary') : a2s(d), opts);\n      case 'array':\n        return dif_to_aoa_str(cc2str(d), opts);\n    }\n    throw new Error(\"Unrecognized type \" + opts.type);\n  }\n  function dif_to_aoa_str(str /*:string*/, opts) /*:AOA*/{\n    var records = str.split('\\n'),\n      R = -1,\n      C = -1,\n      ri = 0,\n      arr /*:AOA*/ = [];\n    for (; ri !== records.length; ++ri) {\n      if (records[ri].trim() === 'BOT') {\n        arr[++R] = [];\n        C = 0;\n        continue;\n      }\n      if (R < 0) continue;\n      var metadata = records[ri].trim().split(\",\");\n      var type = metadata[0],\n        value = metadata[1];\n      ++ri;\n      var data = records[ri] || \"\";\n      while ((data.match(/[\"]/g) || []).length & 1 && ri < records.length - 1) data += \"\\n\" + records[++ri];\n      data = data.trim();\n      switch (+type) {\n        case -1:\n          if (data === 'BOT') {\n            arr[++R] = [];\n            C = 0;\n            continue;\n          } else if (data !== 'EOD') throw new Error(\"Unrecognized DIF special command \" + data);\n          break;\n        case 0:\n          if (data === 'TRUE') arr[R][C] = true;else if (data === 'FALSE') arr[R][C] = false;else if (!isNaN(fuzzynum(value))) arr[R][C] = fuzzynum(value);else if (!isNaN(fuzzydate(value).getDate())) {\n            arr[R][C] = parseDate$1(value);\n            if (!(opts && opts.UTC)) {\n              arr[R][C] = utc_to_local(arr[R][C]);\n            }\n          } else arr[R][C] = value;\n          ++C;\n          break;\n        case 1:\n          data = data.slice(1, data.length - 1);\n          data = data.replace(/\"\"/g, '\"');\n          if (data && data.match(/^=\".*\"$/)) data = data.slice(2, -1);\n          arr[R][C++] = data !== '' ? data : null;\n          break;\n      }\n      if (data === 'EOD') break;\n    }\n    if (opts && opts.sheetRows) arr = arr.slice(0, opts.sheetRows);\n    return arr;\n  }\n  function dif_to_sheet(str /*:string*/, opts) /*:Worksheet*/{\n    return aoa_to_sheet(dif_to_aoa(str, opts), opts);\n  }\n  function dif_to_workbook(str /*:string*/, opts) /*:Workbook*/{\n    var o = sheet_to_workbook(dif_to_sheet(str, opts), opts);\n    o.bookType = \"dif\";\n    return o;\n  }\n  function make_value(v /*:number*/, s /*:string*/) /*:string*/{\n    return \"0,\" + String(v) + \"\\r\\n\" + s;\n  }\n  function make_value_str(s /*:string*/) /*:string*/{\n    return \"1,0\\r\\n\\\"\" + s.replace(/\"/g, '\"\"') + '\"';\n  }\n  function sheet_to_dif(ws /*:Worksheet*/ /*::, opts:?any*/) /*:string*/{\n    var r = safe_decode_range(ws['!ref']);\n    var dense = ws[\"!data\"] != null;\n    var o /*:Array<string>*/ = [\"TABLE\\r\\n0,1\\r\\n\\\"sheetjs\\\"\\r\\n\", \"VECTORS\\r\\n0,\" + (r.e.r - r.s.r + 1) + \"\\r\\n\\\"\\\"\\r\\n\", \"TUPLES\\r\\n0,\" + (r.e.c - r.s.c + 1) + \"\\r\\n\\\"\\\"\\r\\n\", \"DATA\\r\\n0,0\\r\\n\\\"\\\"\\r\\n\"];\n    for (var R = r.s.r; R <= r.e.r; ++R) {\n      var row = dense ? ws[\"!data\"][R] : [];\n      var p = \"-1,0\\r\\nBOT\\r\\n\";\n      for (var C = r.s.c; C <= r.e.c; ++C) {\n        var cell /*:Cell*/ = dense ? row && row[C] : ws[encode_cell({\n          r: R,\n          c: C\n        })];\n        if (cell == null) {\n          p += \"1,0\\r\\n\\\"\\\"\\r\\n\";\n          continue;\n        }\n        switch (cell.t) {\n          case 'n':\n            {\n              if (cell.w != null) p += \"0,\" + cell.w + \"\\r\\nV\";else if (cell.v != null) p += make_value(cell.v, \"V\"); // TODO: should this call SSF_format?\n              else if (cell.f != null && !cell.F) p += make_value_str(\"=\" + cell.f);else p += \"1,0\\r\\n\\\"\\\"\";\n            }\n            break;\n          case 'b':\n            p += cell.v ? make_value(1, \"TRUE\") : make_value(0, \"FALSE\");\n            break;\n          case 's':\n            p += make_value_str(isNaN(+cell.v) ? cell.v : '=\"' + cell.v + '\"');\n            break;\n          case 'd':\n            if (!cell.w) cell.w = SSF_format(cell.z || table_fmt[14], datenum(parseDate$1(cell.v)));\n            p += make_value(cell.w, \"V\");\n            break;\n          default:\n            p += \"1,0\\r\\n\\\"\\\"\";\n        }\n        p += \"\\r\\n\";\n      }\n      o.push(p);\n    }\n    return o.join(\"\") + \"-1,0\\r\\nEOD\";\n  }\n  return {\n    to_workbook: dif_to_workbook,\n    to_sheet: dif_to_sheet,\n    from_sheet: sheet_to_dif\n  };\n}();\nvar ETH = /*#__PURE__*/function () {\n  function decode(s /*:string*/) /*:string*/{\n    return s.replace(/\\\\b/g, \"\\\\\").replace(/\\\\c/g, \":\").replace(/\\\\n/g, \"\\n\");\n  }\n  function encode(s /*:string*/) /*:string*/{\n    return s.replace(/\\\\/g, \"\\\\b\").replace(/:/g, \"\\\\c\").replace(/\\n/g, \"\\\\n\");\n  }\n  function eth_to_aoa(str /*:string*/, opts) /*:AOA*/{\n    var records = str.split('\\n'),\n      R = -1,\n      C = -1,\n      ri = 0,\n      arr /*:AOA*/ = [];\n    for (; ri !== records.length; ++ri) {\n      var record = records[ri].trim().split(\":\");\n      if (record[0] !== 'cell') continue;\n      var addr = decode_cell(record[1]);\n      if (arr.length <= addr.r) for (R = arr.length; R <= addr.r; ++R) if (!arr[R]) arr[R] = [];\n      R = addr.r;\n      C = addr.c;\n      switch (record[2]) {\n        case 't':\n          arr[R][C] = decode(record[3]);\n          break;\n        case 'v':\n          arr[R][C] = +record[3];\n          break;\n        case 'vtf':\n          var _f = record[record.length - 1];\n        /* falls through */\n        case 'vtc':\n          switch (record[3]) {\n            case 'nl':\n              arr[R][C] = +record[4] ? true : false;\n              break;\n            default:\n              arr[R][C] = +record[4];\n              break;\n          }\n          if (record[2] == 'vtf') arr[R][C] = [arr[R][C], _f];\n      }\n    }\n    if (opts && opts.sheetRows) arr = arr.slice(0, opts.sheetRows);\n    return arr;\n  }\n  function eth_to_sheet(d /*:string*/, opts) /*:Worksheet*/{\n    return aoa_to_sheet(eth_to_aoa(d, opts), opts);\n  }\n  function eth_to_workbook(d /*:string*/, opts) /*:Workbook*/{\n    return sheet_to_workbook(eth_to_sheet(d, opts), opts);\n  }\n  var header = [\"socialcalc:version:1.5\", \"MIME-Version: 1.0\", \"Content-Type: multipart/mixed; boundary=SocialCalcSpreadsheetControlSave\"].join(\"\\n\");\n  var sep = [\"--SocialCalcSpreadsheetControlSave\", \"Content-type: text/plain; charset=UTF-8\"].join(\"\\n\") + \"\\n\";\n\n  /* TODO: the other parts */\n  var meta = [\"# SocialCalc Spreadsheet Control Save\", \"part:sheet\"].join(\"\\n\");\n  var end = \"--SocialCalcSpreadsheetControlSave--\";\n  function sheet_to_eth_data(ws /*:Worksheet*/) /*:string*/{\n    if (!ws || !ws['!ref']) return \"\";\n    var o /*:Array<string>*/ = [],\n      oo /*:Array<string>*/ = [],\n      cell,\n      coord = \"\";\n    var r = decode_range(ws['!ref']);\n    var dense = ws[\"!data\"] != null;\n    for (var R = r.s.r; R <= r.e.r; ++R) {\n      for (var C = r.s.c; C <= r.e.c; ++C) {\n        coord = encode_cell({\n          r: R,\n          c: C\n        });\n        cell = dense ? (ws[\"!data\"][R] || [])[C] : ws[coord];\n        if (!cell || cell.v == null || cell.t === 'z') continue;\n        oo = [\"cell\", coord, 't'];\n        switch (cell.t) {\n          case 's':\n          case 'str':\n            oo.push(encode(cell.v));\n            break;\n          case 'n':\n            if (!cell.f) {\n              oo[2] = 'v';\n              oo[3] = cell.v;\n            } else {\n              oo[2] = 'vtf';\n              oo[3] = 'n';\n              oo[4] = cell.v;\n              oo[5] = encode(cell.f);\n            }\n            break;\n          case 'b':\n            oo[2] = 'vt' + (cell.f ? 'f' : 'c');\n            oo[3] = 'nl';\n            oo[4] = cell.v ? \"1\" : \"0\";\n            oo[5] = encode(cell.f || (cell.v ? 'TRUE' : 'FALSE'));\n            break;\n          case 'd':\n            var t = datenum(parseDate$1(cell.v));\n            oo[2] = 'vtc';\n            oo[3] = 'nd';\n            oo[4] = \"\" + t;\n            oo[5] = cell.w || SSF_format(cell.z || table_fmt[14], t);\n            break;\n          case 'e':\n            continue;\n        }\n        o.push(oo.join(\":\"));\n      }\n    }\n    o.push(\"sheet:c:\" + (r.e.c - r.s.c + 1) + \":r:\" + (r.e.r - r.s.r + 1) + \":tvf:1\");\n    o.push(\"valueformat:1:text-wiki\");\n    //o.push(\"copiedfrom:\" + ws['!ref']); // clipboard only\n    return o.join(\"\\n\");\n  }\n  function sheet_to_eth(ws /*:Worksheet*/ /*::, opts:?any*/) /*:string*/{\n    return [header, sep, meta, sep, sheet_to_eth_data(ws), end].join(\"\\n\");\n    // return [\"version:1.5\", sheet_to_eth_data(ws)].join(\"\\n\"); // clipboard form\n  }\n\n  return {\n    to_workbook: eth_to_workbook,\n    to_sheet: eth_to_sheet,\n    from_sheet: sheet_to_eth\n  };\n}();\nvar PRN = /*#__PURE__*/function () {\n  function set_text_arr(data /*:string*/, arr /*:AOA*/, R /*:number*/, C /*:number*/, o /*:any*/) {\n    if (o.raw) arr[R][C] = data;else if (data === \"\") ;else if (data === 'TRUE') arr[R][C] = true;else if (data === 'FALSE') arr[R][C] = false;else if (!isNaN(fuzzynum(data))) arr[R][C] = fuzzynum(data);else if (!isNaN(fuzzydate(data).getDate())) arr[R][C] = parseDate$1(data);else arr[R][C] = data;\n  }\n  function prn_to_aoa_str(f /*:string*/, opts) /*:AOA*/{\n    var o = opts || {};\n    var arr /*:AOA*/ = [] /*:any*/;\n    if (!f || f.length === 0) return arr;\n    var lines = f.split(/[\\r\\n]/);\n    var L = lines.length - 1;\n    while (L >= 0 && lines[L].length === 0) --L;\n    var start = 10,\n      idx = 0;\n    var R = 0;\n    for (; R <= L; ++R) {\n      idx = lines[R].indexOf(\" \");\n      if (idx == -1) idx = lines[R].length;else idx++;\n      start = Math.max(start, idx);\n    }\n    for (R = 0; R <= L; ++R) {\n      arr[R] = [];\n      /* TODO: confirm that widths are always 10 */\n      var C = 0;\n      set_text_arr(lines[R].slice(0, start).trim(), arr, R, C, o);\n      for (C = 1; C <= (lines[R].length - start) / 10 + 1; ++C) set_text_arr(lines[R].slice(start + (C - 1) * 10, start + C * 10).trim(), arr, R, C, o);\n    }\n    if (o.sheetRows) arr = arr.slice(0, o.sheetRows);\n    return arr;\n  }\n\n  // List of accepted CSV separators\n  var guess_seps = {\n    /*::[*/0x2C /*::]*/: ',',\n    /*::[*/0x09 /*::]*/: \"\\t\",\n    /*::[*/0x3B /*::]*/: ';',\n    /*::[*/0x7C /*::]*/: '|'\n  };\n\n  // CSV separator weights to be used in case of equal numbers\n  var guess_sep_weights = {\n    /*::[*/0x2C /*::]*/: 3,\n    /*::[*/0x09 /*::]*/: 2,\n    /*::[*/0x3B /*::]*/: 1,\n    /*::[*/0x7C /*::]*/: 0\n  };\n  function guess_sep(str) {\n    var cnt = {},\n      instr = false,\n      end = 0,\n      cc = 0;\n    for (; end < str.length; ++end) {\n      if ((cc = str.charCodeAt(end)) == 0x22) instr = !instr;else if (!instr && cc in guess_seps) cnt[cc] = (cnt[cc] || 0) + 1;\n    }\n    cc = [];\n    for (end in cnt) if (Object.prototype.hasOwnProperty.call(cnt, end)) {\n      cc.push([cnt[end], end]);\n    }\n    if (!cc.length) {\n      cnt = guess_sep_weights;\n      for (end in cnt) if (Object.prototype.hasOwnProperty.call(cnt, end)) {\n        cc.push([cnt[end], end]);\n      }\n    }\n    cc.sort(function (a, b) {\n      return a[0] - b[0] || guess_sep_weights[a[1]] - guess_sep_weights[b[1]];\n    });\n    return guess_seps[cc.pop()[1]] || 0x2C;\n  }\n  function dsv_to_sheet_str(str /*:string*/, opts) /*:Worksheet*/{\n    var o = opts || {};\n    var sep = \"\";\n    var ws /*:Worksheet*/ = {} /*:any*/;\n    if (o.dense) ws[\"!data\"] = [];\n    var range /*:Range*/ = {\n      s: {\n        c: 0,\n        r: 0\n      },\n      e: {\n        c: 0,\n        r: 0\n      }\n    } /*:any*/;\n\n    if (str.slice(0, 4) == \"sep=\") {\n      // If the line ends in \\r\\n\n      if (str.charCodeAt(5) == 13 && str.charCodeAt(6) == 10) {\n        sep = str.charAt(4);\n        str = str.slice(7);\n      }\n      // If line ends in \\r OR \\n\n      else if (str.charCodeAt(5) == 13 || str.charCodeAt(5) == 10) {\n        sep = str.charAt(4);\n        str = str.slice(6);\n      } else sep = guess_sep(str.slice(0, 1024));\n    } else if (o && o.FS) sep = o.FS;else sep = guess_sep(str.slice(0, 1024));\n    var R = 0,\n      C = 0,\n      v = 0;\n    var start = 0,\n      end = 0,\n      sepcc = sep.charCodeAt(0),\n      instr = false,\n      cc = 0,\n      startcc = str.charCodeAt(0);\n    var _re /*:?RegExp*/ = o.dateNF != null ? dateNF_regex(o.dateNF) : null;\n    function finish_cell() {\n      /* TODO: fuzzy parsers should pass back assumed number format */\n      var s = str.slice(start, end);\n      if (s.slice(-1) == \"\\r\") s = s.slice(0, -1);\n      var cell = {} /*:any*/;\n      if (s.charAt(0) == '\"' && s.charAt(s.length - 1) == '\"') s = s.slice(1, -1).replace(/\"\"/g, '\"');\n      if (o.cellText !== false) cell.w = s;\n      if (s.length === 0) cell.t = 'z';else if (o.raw) {\n        cell.t = 's';\n        cell.v = s;\n      } else if (s.trim().length === 0) {\n        cell.t = 's';\n        cell.v = s;\n      } else if (s.charCodeAt(0) == 0x3D) {\n        if (s.charCodeAt(1) == 0x22 && s.charCodeAt(s.length - 1) == 0x22) {\n          cell.t = 's';\n          cell.v = s.slice(2, -1).replace(/\"\"/g, '\"');\n        } else if (fuzzyfmla(s)) {\n          cell.t = 'n';\n          cell.f = s.slice(1);\n        } else {\n          cell.t = 's';\n          cell.v = s;\n        }\n      } else if (s == \"TRUE\") {\n        cell.t = 'b';\n        cell.v = true;\n      } else if (s == \"FALSE\") {\n        cell.t = 'b';\n        cell.v = false;\n      } else if (!isNaN(v = fuzzynum(s))) {\n        cell.t = 'n';\n        cell.v = v;\n      } else if (!isNaN((v = fuzzydate(s)).getDate()) || _re && s.match(_re)) {\n        cell.z = o.dateNF || table_fmt[14];\n        if (_re && s.match(_re)) {\n          var news = dateNF_fix(s, o.dateNF, s.match(_re) || []);\n          v = parseDate$1(news);\n          if (o && o.UTC === false) v = utc_to_local(v);\n        } else if (o && o.UTC === false) v = utc_to_local(v);else if (o.cellText !== false && o.dateNF) cell.w = SSF_format(cell.z, v);\n        if (o.cellDates) {\n          cell.t = 'd';\n          cell.v = v;\n        } else {\n          cell.t = 'n';\n          cell.v = datenum(v);\n        }\n        if (!o.cellNF) delete cell.z;\n      } else {\n        cell.t = 's';\n        cell.v = s;\n      }\n      if (cell.t == 'z') ;else if (o.dense) {\n        if (!ws[\"!data\"][R]) ws[\"!data\"][R] = [];\n        ws[\"!data\"][R][C] = cell;\n      } else ws[encode_cell({\n        c: C,\n        r: R\n      })] = cell;\n      start = end + 1;\n      startcc = str.charCodeAt(start);\n      if (range.e.c < C) range.e.c = C;\n      if (range.e.r < R) range.e.r = R;\n      if (cc == sepcc) ++C;else {\n        C = 0;\n        ++R;\n        if (o.sheetRows && o.sheetRows <= R) return true;\n      }\n    }\n    outer: for (; end < str.length; ++end) switch (cc = str.charCodeAt(end)) {\n      case 0x22:\n        if (startcc === 0x22) instr = !instr;\n        break;\n      case 0x0d:\n        if (instr) break;\n        if (str.charCodeAt(end + 1) == 0x0a) ++end;\n      /* falls through */\n      case sepcc:\n      case 0x0a:\n        if (!instr && finish_cell()) break outer;\n        break;\n    }\n    if (end - start > 0) finish_cell();\n    ws['!ref'] = encode_range(range);\n    return ws;\n  }\n  function prn_to_sheet_str(str /*:string*/, opts) /*:Worksheet*/{\n    if (!(opts && opts.PRN)) return dsv_to_sheet_str(str, opts);\n    if (opts.FS) return dsv_to_sheet_str(str, opts);\n    if (str.slice(0, 4) == \"sep=\") return dsv_to_sheet_str(str, opts);\n    if (str.indexOf(\"\\t\") >= 0 || str.indexOf(\",\") >= 0 || str.indexOf(\";\") >= 0) return dsv_to_sheet_str(str, opts);\n    return aoa_to_sheet(prn_to_aoa_str(str, opts), opts);\n  }\n  function prn_to_sheet(d /*:RawData*/, opts) /*:Worksheet*/{\n    var str = \"\",\n      bytes = opts.type == 'string' ? [0, 0, 0, 0] : firstbyte(d, opts);\n    switch (opts.type) {\n      case 'base64':\n        str = Base64_decode(d);\n        break;\n      case 'binary':\n        str = d;\n        break;\n      case 'buffer':\n        if (opts.codepage == 65001) str = d.toString('utf8'); // TODO: test if buf\n        else if (opts.codepage && typeof $cptable !== 'undefined') str = $cptable.utils.decode(opts.codepage, d);else str = has_buf && Buffer.isBuffer(d) ? d.toString('binary') : a2s(d);\n        break;\n      case 'array':\n        str = cc2str(d);\n        break;\n      case 'string':\n        str = d;\n        break;\n      default:\n        throw new Error(\"Unrecognized type \" + opts.type);\n    }\n    if (bytes[0] == 0xEF && bytes[1] == 0xBB && bytes[2] == 0xBF) str = utf8read(str.slice(3));else if (opts.type != 'string' && opts.type != 'buffer' && opts.codepage == 65001) str = utf8read(str);else if (opts.type == 'binary' && typeof $cptable !== 'undefined' && opts.codepage) str = $cptable.utils.decode(opts.codepage, $cptable.utils.encode(28591, str));\n    if (str.slice(0, 19) == \"socialcalc:version:\") return ETH.to_sheet(opts.type == 'string' ? str : utf8read(str), opts);\n    return prn_to_sheet_str(str, opts);\n  }\n  function prn_to_workbook(d /*:RawData*/, opts) /*:Workbook*/{\n    return sheet_to_workbook(prn_to_sheet(d, opts), opts);\n  }\n  function sheet_to_prn(ws /*:Worksheet*/ /*::, opts:?any*/) /*:string*/{\n    var o /*:Array<string>*/ = [];\n    var r = safe_decode_range(ws['!ref']),\n      cell /*:Cell*/;\n    var dense = ws[\"!data\"] != null;\n    for (var R = r.s.r; R <= r.e.r; ++R) {\n      var oo /*:Array<string>*/ = [];\n      for (var C = r.s.c; C <= r.e.c; ++C) {\n        var coord = encode_cell({\n          r: R,\n          c: C\n        });\n        cell = dense ? (ws[\"!data\"][R] || [])[C] : ws[coord];\n        if (!cell || cell.v == null) {\n          oo.push(\"          \");\n          continue;\n        }\n        var w = (cell.w || (format_cell(cell), cell.w) || \"\").slice(0, 10);\n        while (w.length < 10) w += \" \";\n        oo.push(w + (C === 0 ? \" \" : \"\"));\n      }\n      o.push(oo.join(\"\"));\n    }\n    return o.join(\"\\n\");\n  }\n  return {\n    to_workbook: prn_to_workbook,\n    to_sheet: prn_to_sheet,\n    from_sheet: sheet_to_prn\n  };\n}();\n\n/* Excel defaults to SYLK but warns if data is not valid */\nfunction read_wb_ID(d, opts) {\n  var o = opts || {},\n    OLD_WTF = !!o.WTF;\n  o.WTF = true;\n  try {\n    var out = SYLK.to_workbook(d, o);\n    o.WTF = OLD_WTF;\n    return out;\n  } catch (e) {\n    o.WTF = OLD_WTF;\n    if (!e.message.match(/SYLK bad record ID/) && OLD_WTF) throw e;\n    return PRN.to_workbook(d, opts);\n  }\n}\nvar WK_ = /*#__PURE__*/function () {\n  function lotushopper(data, cb /*:RecordHopperCB*/, opts /*:any*/) {\n    if (!data) return;\n    prep_blob(data, data.l || 0);\n    var Enum = opts.Enum || WK1Enum;\n    while (data.l < data.length) {\n      var RT = data.read_shift(2);\n      var R = Enum[RT] || Enum[0xFFFF];\n      var length = data.read_shift(2);\n      var tgt = data.l + length;\n      var d = R.f && R.f(data, length, opts);\n      data.l = tgt;\n      if (cb(d, R, RT)) return;\n    }\n  }\n  function lotus_to_workbook(d /*:RawData*/, opts) {\n    switch (opts.type) {\n      case 'base64':\n        return lotus_to_workbook_buf(s2a(Base64_decode(d)), opts);\n      case 'binary':\n        return lotus_to_workbook_buf(s2a(d), opts);\n      case 'buffer':\n      case 'array':\n        return lotus_to_workbook_buf(d, opts);\n    }\n    throw \"Unsupported type \" + opts.type;\n  }\n\n  /* NOTE: this list intentionally starts at 1 */\n  var LOTUS_DATE_FMTS = [\"mmmm\", \"dd-mmm-yyyy\", \"dd-mmm\", \"mmm-yyyy\", \"@\",\n  // \"text\"?\n  \"mm/dd\", \"hh:mm:ss AM/PM\",\n  // 7\n  \"hh:mm AM/PM\", \"mm/dd/yyyy\", \"mm/dd\", \"hh:mm:ss\", \"hh:mm\" // 12\n  ];\n\n  function lotus_to_workbook_buf(d, opts) /*:Workbook*/{\n    if (!d) return d;\n    var o = opts || {};\n    var s /*:Worksheet*/ = {} /*:any*/,\n      n = \"Sheet1\",\n      next_n = \"\",\n      sidx = 0;\n    var sheets = {},\n      snames = [],\n      realnames = [],\n      sdata = [];\n    if (o.dense) sdata = s[\"!data\"] = [];\n    var refguess = {\n      s: {\n        r: 0,\n        c: 0\n      },\n      e: {\n        r: 0,\n        c: 0\n      }\n    };\n    var sheetRows = o.sheetRows || 0;\n    var lastcell = {};\n    if (d[4] == 0x51 && d[5] == 0x50 && d[6] == 0x57) return qpw_to_workbook_buf(d, opts);\n    if (d[2] == 0x00) {\n      if (d[3] == 0x08 || d[3] == 0x09) {\n        if (d.length >= 16 && d[14] == 0x05 && d[15] === 0x6c) throw new Error(\"Unsupported Works 3 for Mac file\");\n      }\n    }\n    if (d[2] == 0x02) {\n      o.Enum = WK1Enum;\n      lotushopper(d, function (val, R, RT) {\n        switch (RT) {\n          case 0x00:\n            /* BOF */\n            o.vers = val;\n            if (val >= 0x1000) o.qpro = true;\n            break;\n          case 0xFF:\n            /* BOF (works 3+) */\n            o.vers = val;\n            o.works = true;\n            break;\n          case 0x06:\n            refguess = val;\n            break;\n          /* RANGE */\n          case 0xCC:\n            if (val) next_n = val;\n            break;\n          /* SHEETNAMECS */\n          case 0xDE:\n            next_n = val;\n            break;\n          /* SHEETNAMELP */\n          case 0x0F: /* LABEL */\n          case 0x33:\n            /* STRING */\n            if ((!o.qpro && !o.works || RT == 0x33) && val[1].v.charCodeAt(0) < 0x30) val[1].v = val[1].v.slice(1);\n            if (o.works || o.works2) val[1].v = val[1].v.replace(/\\r\\n/g, \"\\n\");\n          /* falls through */\n          case 0x0D: /* INTEGER */\n          case 0x0E: /* NUMBER */\n          case 0x10:\n            /* FORMULA */\n            /* TODO: actual translation of the format code */\n            if ((val[2] & 0x70) == 0x70 && (val[2] & 0x0F) > 1 && (val[2] & 0x0F) < 15) {\n              val[1].z = o.dateNF || LOTUS_DATE_FMTS[(val[2] & 0x0F) - 1] || table_fmt[14];\n              if (o.cellDates) {\n                val[1].v = numdate(val[1].v);\n                val[1].t = typeof val[1].v == \"number\" ? 'n' : 'd';\n              }\n            }\n            if (o.qpro) {\n              if (val[3] > sidx) {\n                s[\"!ref\"] = encode_range(refguess);\n                sheets[n] = s;\n                snames.push(n);\n                s = {} /*:any*/;\n                if (o.dense) sdata = s[\"!data\"] = [];\n                refguess = {\n                  s: {\n                    r: 0,\n                    c: 0\n                  },\n                  e: {\n                    r: 0,\n                    c: 0\n                  }\n                };\n                sidx = val[3];\n                n = next_n || \"Sheet\" + (sidx + 1);\n                next_n = \"\";\n              }\n            }\n            var tmpcell = o.dense ? (sdata[val[0].r] || [])[val[0].c] : s[encode_cell(val[0])];\n            if (tmpcell) {\n              tmpcell.t = val[1].t;\n              tmpcell.v = val[1].v;\n              if (val[1].z != null) tmpcell.z = val[1].z;\n              if (val[1].f != null) tmpcell.f = val[1].f;\n              lastcell = tmpcell;\n              break;\n            }\n            if (o.dense) {\n              if (!sdata[val[0].r]) sdata[val[0].r] = [];\n              sdata[val[0].r][val[0].c] = val[1];\n            } else s[encode_cell(val[0])] = val[1];\n            lastcell = val[1];\n            break;\n          case 0x5405:\n            o.works2 = true;\n            break;\n          case 0x5402:\n            {\n              /* TODO: enumerate all extended number formats */\n              if (val == 0x14a1) {\n                lastcell.z = \"hh:mm:ss\";\n                if (o.cellDates && lastcell.t == \"n\") {\n                  lastcell.v = numdate(lastcell.v);\n                  lastcell.t = typeof lastcell.v == \"number\" ? 'n' : 'd';\n                }\n              }\n            }\n            break;\n        }\n      }, o);\n    } else if (d[2] == 0x1A || d[2] == 0x0E) {\n      o.Enum = WK3Enum;\n      if (d[2] == 0x0E) {\n        o.qpro = true;\n        d.l = 0;\n      }\n      lotushopper(d, function (val, R, RT) {\n        switch (RT) {\n          case 0xCC:\n            n = val;\n            break;\n          /* SHEETNAMECS */\n          case 0x16:\n            /* LABEL16 */\n            if (val[1].v.charCodeAt(0) < 0x30) val[1].v = val[1].v.slice(1);\n            // TODO: R9 appears to encode control codes this way -- verify against other versions\n            val[1].v = val[1].v.replace(/\\x0F./g, function ($$) {\n              return String.fromCharCode($$.charCodeAt(1) - 0x20);\n            }).replace(/\\r\\n/g, \"\\n\");\n          /* falls through */\n          case 0x17: /* NUMBER17 */\n          case 0x18: /* NUMBER18 */\n          case 0x19: /* FORMULA19 */\n          case 0x25: /* NUMBER25 */\n          case 0x27: /* NUMBER27 */\n          case 0x28:\n            /* FORMULA28 */\n            if (val[3] > sidx) {\n              s[\"!ref\"] = encode_range(refguess);\n              sheets[n] = s;\n              snames.push(n);\n              s = {} /*:any*/;\n              if (o.dense) sdata = s[\"!data\"] = [];\n              refguess = {\n                s: {\n                  r: 0,\n                  c: 0\n                },\n                e: {\n                  r: 0,\n                  c: 0\n                }\n              };\n              sidx = val[3];\n              n = \"Sheet\" + (sidx + 1);\n            }\n            if (sheetRows > 0 && val[0].r >= sheetRows) break;\n            if (o.dense) {\n              if (!sdata[val[0].r]) sdata[val[0].r] = [];\n              sdata[val[0].r][val[0].c] = val[1];\n            } else s[encode_cell(val[0])] = val[1];\n            if (refguess.e.c < val[0].c) refguess.e.c = val[0].c;\n            if (refguess.e.r < val[0].r) refguess.e.r = val[0].r;\n            break;\n          case 0x1B:\n            /* XFORMAT */\n            if (val[0x36b0]) realnames[val[0x36b0][0]] = val[0x36b0][1];\n            break;\n          case 0x0601:\n            /* SHEETINFOQP */\n            realnames[val[0]] = val[1];\n            if (val[0] == sidx) n = val[1];\n            break;\n        }\n      }, o);\n    } else throw new Error(\"Unrecognized LOTUS BOF \" + d[2]);\n    s[\"!ref\"] = encode_range(refguess);\n    sheets[next_n || n] = s;\n    snames.push(next_n || n);\n    if (!realnames.length) return {\n      SheetNames: snames,\n      Sheets: sheets\n    };\n    var osheets = {},\n      rnames = [];\n    /* TODO: verify no collisions */\n    for (var i = 0; i < realnames.length; ++i) if (sheets[snames[i]]) {\n      rnames.push(realnames[i] || snames[i]);\n      osheets[realnames[i]] = sheets[realnames[i]] || sheets[snames[i]];\n    } else {\n      rnames.push(realnames[i]);\n      osheets[realnames[i]] = {\n        \"!ref\": \"A1\"\n      };\n    }\n    return {\n      SheetNames: rnames,\n      Sheets: osheets\n    };\n  }\n  function sheet_to_wk1(ws /*:Worksheet*/, opts /*:WriteOpts*/) {\n    var o = opts || {};\n    if (+o.codepage >= 0) set_cp(+o.codepage);\n    if (o.type == \"string\") throw new Error(\"Cannot write WK1 to JS string\");\n    var ba = buf_array();\n    var range = safe_decode_range(ws[\"!ref\"]);\n    var dense = ws[\"!data\"] != null;\n    var cols = [];\n    write_biff_rec(ba, 0x00, write_BOF_WK1(0x0406));\n    write_biff_rec(ba, 0x06, write_RANGE(range));\n    var max_R = Math.min(range.e.r, 8191);\n    for (var C = range.s.c; C <= range.e.c; ++C) cols[C] = encode_col(C);\n    for (var R = range.s.r; R <= max_R; ++R) {\n      var rr = encode_row(R);\n      for (C = range.s.c; C <= range.e.c; ++C) {\n        var cell = dense ? (ws[\"!data\"][R] || [])[C] : ws[cols[C] + rr];\n        if (!cell || cell.t == \"z\") continue;\n        /* TODO: formula records */\n        switch (cell.t) {\n          case \"n\":\n            if ((cell.v | 0) == cell.v && cell.v >= -32768 && cell.v <= 32767) write_biff_rec(ba, 0x0d, write_INTEGER(R, C, cell));else write_biff_rec(ba, 0x0e, write_NUMBER(R, C, cell));\n            break;\n          case \"d\":\n            var dc = datenum(cell.v);\n            if ((dc | 0) == dc && dc >= -32768 && dc <= 32767) write_biff_rec(ba, 0x0d, write_INTEGER(R, C, {\n              t: \"n\",\n              v: dc,\n              z: cell.z || table_fmt[14]\n            }));else write_biff_rec(ba, 0x0e, write_NUMBER(R, C, {\n              t: \"n\",\n              v: dc,\n              z: cell.z || table_fmt[14]\n            }));\n            break;\n          default:\n            var str = format_cell(cell);\n            write_biff_rec(ba, 0x0F, write_LABEL(R, C, str.slice(0, 239)));\n        }\n      }\n    }\n    write_biff_rec(ba, 0x01);\n    return ba.end();\n  }\n  function book_to_wk3(wb /*:Workbook*/, opts /*:WriteOpts*/) {\n    var o = opts || {};\n    if (+o.codepage >= 0) set_cp(+o.codepage);\n    if (o.type == \"string\") throw new Error(\"Cannot write WK3 to JS string\");\n    var ba = buf_array();\n    write_biff_rec(ba, 0x00, write_BOF_WK3(wb));\n    for (var i = 0, cnt = 0; i < wb.SheetNames.length; ++i) if ((wb.Sheets[wb.SheetNames[i]] || {})[\"!ref\"]) write_biff_rec(ba, 0x1b, write_XFORMAT_SHEETNAME(wb.SheetNames[i], cnt++));\n    var wsidx = 0;\n    for (i = 0; i < wb.SheetNames.length; ++i) {\n      var ws = wb.Sheets[wb.SheetNames[i]];\n      if (!ws || !ws[\"!ref\"]) continue;\n      var range = safe_decode_range(ws[\"!ref\"]);\n      var dense = ws[\"!data\"] != null;\n      var cols = [];\n      var max_R = Math.min(range.e.r, 8191);\n      for (var R = range.s.r; R <= max_R; ++R) {\n        var rr = encode_row(R);\n        for (var C = range.s.c; C <= range.e.c; ++C) {\n          if (R === range.s.r) cols[C] = encode_col(C);\n          var ref = cols[C] + rr;\n          var cell = dense ? (ws[\"!data\"][R] || [])[C] : ws[ref];\n          if (!cell || cell.t == \"z\") continue;\n          /* TODO: FORMULA19 NUMBER18 records */\n          if (cell.t == \"n\") {\n            write_biff_rec(ba, 0x17, write_NUMBER_17(R, C, wsidx, cell.v));\n          } else {\n            var str = format_cell(cell);\n            /* TODO: max len? */\n            write_biff_rec(ba, 0x16, write_LABEL_16(R, C, wsidx, str.slice(0, 239)));\n          }\n        }\n      }\n      ++wsidx;\n    }\n    write_biff_rec(ba, 0x01);\n    return ba.end();\n  }\n  function write_BOF_WK1(v /*:number*/) {\n    var out = new_buf(2);\n    out.write_shift(2, v);\n    return out;\n  }\n  function write_BOF_WK3(wb /*:Workbook*/) {\n    var out = new_buf(26);\n    out.write_shift(2, 0x1000);\n    out.write_shift(2, 0x0004);\n    out.write_shift(4, 0x0000);\n    var rows = 0,\n      cols = 0,\n      wscnt = 0;\n    for (var i = 0; i < wb.SheetNames.length; ++i) {\n      var name = wb.SheetNames[i];\n      var ws = wb.Sheets[name];\n      if (!ws || !ws[\"!ref\"]) continue;\n      ++wscnt;\n      var range = decode_range(ws[\"!ref\"]);\n      if (rows < range.e.r) rows = range.e.r;\n      if (cols < range.e.c) cols = range.e.c;\n    }\n    if (rows > 8191) rows = 8191;\n    out.write_shift(2, rows);\n    out.write_shift(1, wscnt);\n    out.write_shift(1, cols);\n    out.write_shift(2, 0x00);\n    out.write_shift(2, 0x00);\n    out.write_shift(1, 0x01);\n    out.write_shift(1, 0x02);\n    out.write_shift(4, 0);\n    out.write_shift(4, 0);\n    return out;\n  }\n  function parse_RANGE(blob, length, opts) {\n    var o = {\n      s: {\n        c: 0,\n        r: 0\n      },\n      e: {\n        c: 0,\n        r: 0\n      }\n    };\n    if (length == 8 && opts.qpro) {\n      o.s.c = blob.read_shift(1);\n      blob.l++;\n      o.s.r = blob.read_shift(2);\n      o.e.c = blob.read_shift(1);\n      blob.l++;\n      o.e.r = blob.read_shift(2);\n      return o;\n    }\n    o.s.c = blob.read_shift(2);\n    o.s.r = blob.read_shift(2);\n    if (length == 12 && opts.qpro) blob.l += 2;\n    o.e.c = blob.read_shift(2);\n    o.e.r = blob.read_shift(2);\n    if (length == 12 && opts.qpro) blob.l += 2;\n    if (o.s.c == 0xFFFF) o.s.c = o.e.c = o.s.r = o.e.r = 0;\n    return o;\n  }\n  function write_RANGE(range) {\n    var out = new_buf(8);\n    out.write_shift(2, range.s.c);\n    out.write_shift(2, range.s.r);\n    out.write_shift(2, range.e.c);\n    out.write_shift(2, range.e.r);\n    return out;\n  }\n  function parse_cell(blob, length, opts) {\n    var o = [{\n      c: 0,\n      r: 0\n    }, {\n      t: 'n',\n      v: 0\n    }, 0, 0];\n    if (opts.qpro && opts.vers != 0x5120) {\n      o[0].c = blob.read_shift(1);\n      o[3] = blob.read_shift(1);\n      o[0].r = blob.read_shift(2);\n      blob.l += 2;\n    } else if (opts.works) {\n      // TODO: verify with more complex works3-4 examples\n      o[0].c = blob.read_shift(2);\n      o[0].r = blob.read_shift(2);\n      o[2] = blob.read_shift(2);\n    } else {\n      o[2] = blob.read_shift(1);\n      o[0].c = blob.read_shift(2);\n      o[0].r = blob.read_shift(2);\n    }\n    return o;\n  }\n  function get_wk1_fmt(cell) /*:number*/{\n    /* TODO: some fuzzy matching on the number format */\n    if (cell.z && fmt_is_date(cell.z)) {\n      return 0xf0 | (LOTUS_DATE_FMTS.indexOf(cell.z) + 1 || 2);\n    }\n    return 0xFF;\n  }\n  function parse_LABEL(blob, length, opts) {\n    var tgt = blob.l + length;\n    var o = parse_cell(blob, length, opts);\n    o[1].t = 's';\n    if ((opts.vers & 0xFFFE) == 0x5120) {\n      // WQ1 / WQ2\n      blob.l++;\n      var len = blob.read_shift(1);\n      o[1].v = blob.read_shift(len, 'utf8');\n      return o;\n    }\n    if (opts.qpro) blob.l++;\n    o[1].v = blob.read_shift(tgt - blob.l, 'cstr');\n    return o;\n  }\n  function write_LABEL(R, C, s) {\n    /* TODO: encoding */\n    var o = new_buf(7 + s.length);\n    o.write_shift(1, 0xFF);\n    o.write_shift(2, C);\n    o.write_shift(2, R);\n    o.write_shift(1, 0x27); // ??\n    for (var i = 0; i < o.length; ++i) {\n      var cc = s.charCodeAt(i);\n      o.write_shift(1, cc >= 0x80 ? 0x5F : cc);\n    }\n    o.write_shift(1, 0);\n    return o;\n  }\n  function parse_STRING(blob, length, opts) {\n    var tgt = blob.l + length;\n    var o = parse_cell(blob, length, opts);\n    o[1].t = 's';\n    if (opts.vers == 0x5120) {\n      var len = blob.read_shift(1);\n      o[1].v = blob.read_shift(len, 'utf8');\n      return o;\n    }\n    o[1].v = blob.read_shift(tgt - blob.l, 'cstr');\n    return o;\n  }\n  function parse_INTEGER(blob, length, opts) {\n    var o = parse_cell(blob, length, opts);\n    o[1].v = blob.read_shift(2, 'i');\n    return o;\n  }\n  function write_INTEGER(R, C, cell) {\n    var o = new_buf(7);\n    o.write_shift(1, get_wk1_fmt(cell));\n    o.write_shift(2, C);\n    o.write_shift(2, R);\n    o.write_shift(2, cell.v, 'i');\n    return o;\n  }\n  function parse_NUMBER(blob, length, opts) {\n    var o = parse_cell(blob, length, opts);\n    o[1].v = blob.read_shift(8, 'f');\n    return o;\n  }\n  function write_NUMBER(R, C, cell) {\n    var o = new_buf(13);\n    o.write_shift(1, get_wk1_fmt(cell));\n    o.write_shift(2, C);\n    o.write_shift(2, R);\n    o.write_shift(8, cell.v, 'f');\n    return o;\n  }\n  function parse_FORMULA(blob, length, opts) {\n    var tgt = blob.l + length;\n    var o = parse_cell(blob, length, opts);\n    /* TODO: formula */\n    o[1].v = blob.read_shift(8, 'f');\n    if (opts.qpro) blob.l = tgt;else {\n      var flen = blob.read_shift(2);\n      wk1_fmla_to_csf(blob.slice(blob.l, blob.l + flen), o);\n      blob.l += flen;\n    }\n    return o;\n  }\n  function wk1_parse_rc(B, V, col) {\n    var rel = V & 0x8000;\n    V &= ~0x8000;\n    V = (rel ? B : 0) + (V >= 0x2000 ? V - 0x4000 : V);\n    return (rel ? \"\" : \"$\") + (col ? encode_col(V) : encode_row(V));\n  }\n  /* var oprec = [\n  \t8, 8, 8, 8, 8, 8, 8, 8, 6, 4, 4, 5, 5, 7, 3, 3,\n  \t3, 3, 3, 3, 1, 1, 2, 6, 8, 8, 8, 8, 8, 8, 8, 8\n  ]; */\n  /* TODO: flesh out */\n  var FuncTab = {\n    0x1F: [\"NA\", 0],\n    // 0x20: [\"ERR\", 0],\n    0x21: [\"ABS\", 1],\n    0x22: [\"TRUNC\", 1],\n    0x23: [\"SQRT\", 1],\n    0x24: [\"LOG\", 1],\n    0x25: [\"LN\", 1],\n    0x26: [\"PI\", 0],\n    0x27: [\"SIN\", 1],\n    0x28: [\"COS\", 1],\n    0x29: [\"TAN\", 1],\n    0x2A: [\"ATAN2\", 2],\n    0x2B: [\"ATAN\", 1],\n    0x2C: [\"ASIN\", 1],\n    0x2D: [\"ACOS\", 1],\n    0x2E: [\"EXP\", 1],\n    0x2F: [\"MOD\", 2],\n    // 0x30\n    0x31: [\"ISNA\", 1],\n    0x32: [\"ISERR\", 1],\n    0x33: [\"FALSE\", 0],\n    0x34: [\"TRUE\", 0],\n    0x35: [\"RAND\", 0],\n    0x36: [\"DATE\", 3],\n    // 0x37 NOW\n    // 0x38 PMT\n    // 0x39 PV\n    // 0x3A FV\n    // 0x3B IF\n    // 0x3C DAY\n    // 0x3D MONTH\n    // 0x3E YEAR\n    0x3F: [\"ROUND\", 2],\n    0x40: [\"TIME\", 3],\n    // 0x41 HOUR\n    // 0x42 MINUTE\n    // 0x43 SECOND\n    0x44: [\"ISNUMBER\", 1],\n    0x45: [\"ISTEXT\", 1],\n    0x46: [\"LEN\", 1],\n    0x47: [\"VALUE\", 1],\n    // 0x48: [\"FIXED\", ?? 1],\n    0x49: [\"MID\", 3],\n    0x4A: [\"CHAR\", 1],\n    // 0x4B\n    // 0x4C FIND\n    // 0x4D DATEVALUE\n    // 0x4E TIMEVALUE\n    // 0x4F CELL\n    0x50: [\"SUM\", 69],\n    0x51: [\"AVERAGEA\", 69],\n    0x52: [\"COUNTA\", 69],\n    0x53: [\"MINA\", 69],\n    0x54: [\"MAXA\", 69],\n    // 0x55 VLOOKUP\n    // 0x56 NPV\n    // 0x57 VAR\n    // 0x58 STD\n    // 0x59 IRR\n    // 0x5A HLOOKUP\n    // 0x5B DSUM\n    // 0x5C DAVERAGE\n    // 0x5D DCOUNTA\n    // 0x5E DMIN\n    // 0x5F DMAX\n    // 0x60 DVARP\n    // 0x61 DSTDEVP\n    // 0x62 INDEX\n    // 0x63 COLS\n    // 0x64 ROWS\n    // 0x65 REPEAT\n    0x66: [\"UPPER\", 1],\n    0x67: [\"LOWER\", 1],\n    // 0x68 LEFT\n    // 0x69 RIGHT\n    // 0x6A REPLACE\n    0x6B: [\"PROPER\", 1],\n    // 0x6C CELL\n    0x6D: [\"TRIM\", 1],\n    // 0x6E CLEAN\n    0x6F: [\"T\", 1]\n    // 0x70 V\n  };\n\n  var BinOpTab = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\",\n  // eslint-disable-line no-mixed-spaces-and-tabs\n  \"\", \"+\", \"-\", \"*\", \"/\", \"^\", \"=\", \"<>\",\n  // eslint-disable-line no-mixed-spaces-and-tabs\n  \"<=\", \">=\", \"<\", \">\", \"\", \"\", \"\", \"\",\n  // eslint-disable-line no-mixed-spaces-and-tabs\n  \"&\", \"\", \"\", \"\", \"\", \"\", \"\", \"\" // eslint-disable-line no-mixed-spaces-and-tabs\n  ];\n\n  function wk1_fmla_to_csf(blob, o) {\n    prep_blob(blob, 0);\n    var out = [],\n      argc = 0,\n      R = \"\",\n      C = \"\",\n      argL = \"\",\n      argR = \"\";\n    while (blob.l < blob.length) {\n      var cc = blob[blob.l++];\n      switch (cc) {\n        case 0x00:\n          out.push(blob.read_shift(8, 'f'));\n          break;\n        case 0x01:\n          {\n            C = wk1_parse_rc(o[0].c, blob.read_shift(2), true);\n            R = wk1_parse_rc(o[0].r, blob.read_shift(2), false);\n            out.push(C + R);\n          }\n          break;\n        case 0x02:\n          {\n            var c = wk1_parse_rc(o[0].c, blob.read_shift(2), true);\n            var r = wk1_parse_rc(o[0].r, blob.read_shift(2), false);\n            C = wk1_parse_rc(o[0].c, blob.read_shift(2), true);\n            R = wk1_parse_rc(o[0].r, blob.read_shift(2), false);\n            out.push(c + r + \":\" + C + R);\n          }\n          break;\n        case 0x03:\n          if (blob.l < blob.length) {\n            console.error(\"WK1 premature formula end\");\n            return;\n          }\n          break;\n        case 0x04:\n          out.push(\"(\" + out.pop() + \")\");\n          break;\n        case 0x05:\n          out.push(blob.read_shift(2));\n          break;\n        case 0x06:\n          {\n            /* TODO: text encoding */\n            var Z = \"\";\n            while (cc = blob[blob.l++]) Z += String.fromCharCode(cc);\n            out.push('\"' + Z.replace(/\"/g, '\"\"') + '\"');\n          }\n          break;\n        case 0x08:\n          out.push(\"-\" + out.pop());\n          break;\n        case 0x17:\n          out.push(\"+\" + out.pop());\n          break;\n        case 0x16:\n          out.push(\"NOT(\" + out.pop() + \")\");\n          break;\n        case 0x14:\n        case 0x15:\n          {\n            argR = out.pop();\n            argL = out.pop();\n            out.push([\"AND\", \"OR\"][cc - 0x14] + \"(\" + argL + \",\" + argR + \")\");\n          }\n          break;\n        default:\n          if (cc < 0x20 && BinOpTab[cc]) {\n            argR = out.pop();\n            argL = out.pop();\n            out.push(argL + BinOpTab[cc] + argR);\n          } else if (FuncTab[cc]) {\n            argc = FuncTab[cc][1];\n            if (argc == 69) argc = blob[blob.l++];\n            if (argc > out.length) {\n              console.error(\"WK1 bad formula parse 0x\" + cc.toString(16) + \":|\" + out.join(\"|\") + \"|\");\n              return;\n            }\n            var args = out.slice(-argc);\n            out.length -= argc;\n            out.push(FuncTab[cc][0] + \"(\" + args.join(\",\") + \")\");\n          } else if (cc <= 0x07) return console.error(\"WK1 invalid opcode \" + cc.toString(16));else if (cc <= 0x18) return console.error(\"WK1 unsupported op \" + cc.toString(16));else if (cc <= 0x1E) return console.error(\"WK1 invalid opcode \" + cc.toString(16));else if (cc <= 0x73) return console.error(\"WK1 unsupported function opcode \" + cc.toString(16));\n          // possible future functions ??\n          else return console.error(\"WK1 unrecognized opcode \" + cc.toString(16));\n      }\n    }\n    if (out.length == 1) o[1].f = \"\" + out[0];else console.error(\"WK1 bad formula parse |\" + out.join(\"|\") + \"|\");\n  }\n  function parse_cell_3(blob /*::, length*/) {\n    var o = [{\n      c: 0,\n      r: 0\n    }, {\n      t: 'n',\n      v: 0\n    }, 0];\n    o[0].r = blob.read_shift(2);\n    o[3] = blob[blob.l++];\n    o[0].c = blob[blob.l++];\n    return o;\n  }\n  function parse_LABEL_16(blob, length) {\n    var o = parse_cell_3(blob);\n    o[1].t = 's';\n    o[1].v = blob.read_shift(length - 4, 'cstr');\n    return o;\n  }\n  function write_LABEL_16(R, C, wsidx, s) {\n    /* TODO: encoding */\n    var o = new_buf(6 + s.length);\n    o.write_shift(2, R);\n    o.write_shift(1, wsidx);\n    o.write_shift(1, C);\n    o.write_shift(1, 0x27);\n    for (var i = 0; i < s.length; ++i) {\n      var cc = s.charCodeAt(i);\n      o.write_shift(1, cc >= 0x80 ? 0x5F : cc);\n    }\n    o.write_shift(1, 0);\n    return o;\n  }\n  function parse_NUMBER_18(blob, length) {\n    var o = parse_cell_3(blob);\n    o[1].v = blob.read_shift(2);\n    var v = o[1].v >> 1;\n    if (o[1].v & 0x1) {\n      switch (v & 0x07) {\n        case 0:\n          v = (v >> 3) * 5000;\n          break;\n        case 1:\n          v = (v >> 3) * 500;\n          break;\n        case 2:\n          v = (v >> 3) / 20;\n          break;\n        case 3:\n          v = (v >> 3) / 200;\n          break;\n        case 4:\n          v = (v >> 3) / 2000;\n          break;\n        case 5:\n          v = (v >> 3) / 20000;\n          break;\n        case 6:\n          v = (v >> 3) / 16;\n          break;\n        case 7:\n          v = (v >> 3) / 64;\n          break;\n      }\n    }\n    o[1].v = v;\n    return o;\n  }\n  function parse_NUMBER_17(blob, length) {\n    var o = parse_cell_3(blob);\n    var v1 = blob.read_shift(4);\n    var v2 = blob.read_shift(4);\n    var e = blob.read_shift(2);\n    if (e == 0xFFFF) {\n      if (v1 === 0 && v2 === 0xC0000000) {\n        o[1].t = \"e\";\n        o[1].v = 0x0F;\n      } // ERR -> #VALUE!\n      else if (v1 === 0 && v2 === 0xD0000000) {\n        o[1].t = \"e\";\n        o[1].v = 0x2A;\n      } // NA -> #N/A\n      else o[1].v = 0;\n      return o;\n    }\n    var s = e & 0x8000;\n    e = (e & 0x7FFF) - 16446;\n    o[1].v = (1 - s * 2) * (v2 * Math.pow(2, e + 32) + v1 * Math.pow(2, e));\n    return o;\n  }\n  function write_NUMBER_17(R, C, wsidx, v) {\n    var o = new_buf(14);\n    o.write_shift(2, R);\n    o.write_shift(1, wsidx);\n    o.write_shift(1, C);\n    if (v == 0) {\n      o.write_shift(4, 0);\n      o.write_shift(4, 0);\n      o.write_shift(2, 0xFFFF);\n      return o;\n    }\n    var s = 0,\n      e = 0,\n      v1 = 0,\n      v2 = 0;\n    if (v < 0) {\n      s = 1;\n      v = -v;\n    }\n    e = Math.log2(v) | 0;\n    v /= Math.pow(2, e - 31);\n    v2 = v >>> 0;\n    if ((v2 & 0x80000000) == 0) {\n      v /= 2;\n      ++e;\n      v2 = v >>> 0;\n    }\n    v -= v2;\n    v2 |= 0x80000000;\n    v2 >>>= 0;\n    v *= Math.pow(2, 32);\n    v1 = v >>> 0;\n    o.write_shift(4, v1);\n    o.write_shift(4, v2);\n    e += 0x3FFF + (s ? 0x8000 : 0);\n    o.write_shift(2, e);\n    return o;\n  }\n  function parse_FORMULA_19(blob, length) {\n    var o = parse_NUMBER_17(blob);\n    blob.l += length - 14; /* TODO: WK3 formula */\n    return o;\n  }\n  function parse_NUMBER_25(blob, length) {\n    var o = parse_cell_3(blob);\n    var v1 = blob.read_shift(4);\n    o[1].v = v1 >> 6;\n    return o;\n  }\n  function parse_NUMBER_27(blob, length) {\n    var o = parse_cell_3(blob);\n    var v1 = blob.read_shift(8, 'f');\n    o[1].v = v1;\n    return o;\n  }\n  function parse_FORMULA_28(blob, length) {\n    var o = parse_NUMBER_27(blob);\n    blob.l += length - 12; /* TODO: formula */\n    return o;\n  }\n  function parse_SHEETNAMECS(blob, length) {\n    return blob[blob.l + length - 1] == 0 ? blob.read_shift(length, 'cstr') : \"\";\n  }\n  function parse_SHEETNAMELP(blob, length) {\n    var len = blob[blob.l++];\n    if (len > length - 1) len = length - 1;\n    var o = \"\";\n    while (o.length < len) o += String.fromCharCode(blob[blob.l++]);\n    return o;\n  }\n  function parse_SHEETINFOQP(blob, length, opts) {\n    if (!opts.qpro || length < 21) return;\n    var id = blob.read_shift(1);\n    blob.l += 17;\n    blob.l += 1; //var len = blob.read_shift(1);\n    blob.l += 2;\n    var nm = blob.read_shift(length - 21, 'cstr');\n    return [id, nm];\n  }\n  function parse_XFORMAT(blob, length) {\n    var o = {},\n      tgt = blob.l + length;\n    while (blob.l < tgt) {\n      var dt = blob.read_shift(2);\n      if (dt == 0x36b0) {\n        o[dt] = [0, \"\"];\n        o[dt][0] = blob.read_shift(2);\n        while (blob[blob.l]) {\n          o[dt][1] += String.fromCharCode(blob[blob.l]);\n          blob.l++;\n        }\n        blob.l++;\n      }\n      // TODO: 0x3a99 ??\n    }\n\n    return o;\n  }\n  function write_XFORMAT_SHEETNAME(name, wsidx) {\n    var out = new_buf(5 + name.length);\n    out.write_shift(2, 0x36b0);\n    out.write_shift(2, wsidx);\n    for (var i = 0; i < name.length; ++i) {\n      var cc = name.charCodeAt(i);\n      out[out.l++] = cc > 0x7F ? 0x5F : cc;\n    }\n    out[out.l++] = 0;\n    return out;\n  }\n  var WK1Enum = {\n    /*::[*/0x0000 /*::]*/: {\n      n: \"BOF\",\n      f: parseuint16\n    },\n    /*::[*/0x0001 /*::]*/: {\n      n: \"EOF\"\n    },\n    /*::[*/0x0002 /*::]*/: {\n      n: \"CALCMODE\"\n    },\n    /*::[*/0x0003 /*::]*/: {\n      n: \"CALCORDER\"\n    },\n    /*::[*/0x0004 /*::]*/: {\n      n: \"SPLIT\"\n    },\n    /*::[*/0x0005 /*::]*/: {\n      n: \"SYNC\"\n    },\n    /*::[*/0x0006 /*::]*/: {\n      n: \"RANGE\",\n      f: parse_RANGE\n    },\n    /*::[*/0x0007 /*::]*/: {\n      n: \"WINDOW1\"\n    },\n    /*::[*/0x0008 /*::]*/: {\n      n: \"COLW1\"\n    },\n    /*::[*/0x0009 /*::]*/: {\n      n: \"WINTWO\"\n    },\n    /*::[*/0x000A /*::]*/: {\n      n: \"COLW2\"\n    },\n    /*::[*/0x000B /*::]*/: {\n      n: \"NAME\"\n    },\n    /*::[*/0x000C /*::]*/: {\n      n: \"BLANK\"\n    },\n    /*::[*/0x000D /*::]*/: {\n      n: \"INTEGER\",\n      f: parse_INTEGER\n    },\n    /*::[*/0x000E /*::]*/: {\n      n: \"NUMBER\",\n      f: parse_NUMBER\n    },\n    /*::[*/0x000F /*::]*/: {\n      n: \"LABEL\",\n      f: parse_LABEL\n    },\n    /*::[*/0x0010 /*::]*/: {\n      n: \"FORMULA\",\n      f: parse_FORMULA\n    },\n    /*::[*/0x0018 /*::]*/: {\n      n: \"TABLE\"\n    },\n    /*::[*/0x0019 /*::]*/: {\n      n: \"ORANGE\"\n    },\n    /*::[*/0x001A /*::]*/: {\n      n: \"PRANGE\"\n    },\n    /*::[*/0x001B /*::]*/: {\n      n: \"SRANGE\"\n    },\n    /*::[*/0x001C /*::]*/: {\n      n: \"FRANGE\"\n    },\n    /*::[*/0x001D /*::]*/: {\n      n: \"KRANGE1\"\n    },\n    /*::[*/0x0020 /*::]*/: {\n      n: \"HRANGE\"\n    },\n    /*::[*/0x0023 /*::]*/: {\n      n: \"KRANGE2\"\n    },\n    /*::[*/0x0024 /*::]*/: {\n      n: \"PROTEC\"\n    },\n    /*::[*/0x0025 /*::]*/: {\n      n: \"FOOTER\"\n    },\n    /*::[*/0x0026 /*::]*/: {\n      n: \"HEADER\"\n    },\n    /*::[*/0x0027 /*::]*/: {\n      n: \"SETUP\"\n    },\n    /*::[*/0x0028 /*::]*/: {\n      n: \"MARGINS\"\n    },\n    /*::[*/0x0029 /*::]*/: {\n      n: \"LABELFMT\"\n    },\n    /*::[*/0x002A /*::]*/: {\n      n: \"TITLES\"\n    },\n    /*::[*/0x002B /*::]*/: {\n      n: \"SHEETJS\"\n    },\n    /*::[*/0x002D /*::]*/: {\n      n: \"GRAPH\"\n    },\n    /*::[*/0x002E /*::]*/: {\n      n: \"NGRAPH\"\n    },\n    /*::[*/0x002F /*::]*/: {\n      n: \"CALCCOUNT\"\n    },\n    /*::[*/0x0030 /*::]*/: {\n      n: \"UNFORMATTED\"\n    },\n    /*::[*/0x0031 /*::]*/: {\n      n: \"CURSORW12\"\n    },\n    /*::[*/0x0032 /*::]*/: {\n      n: \"WINDOW\"\n    },\n    /*::[*/0x0033 /*::]*/: {\n      n: \"STRING\",\n      f: parse_STRING\n    },\n    /*::[*/0x0037 /*::]*/: {\n      n: \"PASSWORD\"\n    },\n    /*::[*/0x0038 /*::]*/: {\n      n: \"LOCKED\"\n    },\n    /*::[*/0x003C /*::]*/: {\n      n: \"QUERY\"\n    },\n    /*::[*/0x003D /*::]*/: {\n      n: \"QUERYNAME\"\n    },\n    /*::[*/0x003E /*::]*/: {\n      n: \"PRINT\"\n    },\n    /*::[*/0x003F /*::]*/: {\n      n: \"PRINTNAME\"\n    },\n    /*::[*/0x0040 /*::]*/: {\n      n: \"GRAPH2\"\n    },\n    /*::[*/0x0041 /*::]*/: {\n      n: \"GRAPHNAME\"\n    },\n    /*::[*/0x0042 /*::]*/: {\n      n: \"ZOOM\"\n    },\n    /*::[*/0x0043 /*::]*/: {\n      n: \"SYMSPLIT\"\n    },\n    /*::[*/0x0044 /*::]*/: {\n      n: \"NSROWS\"\n    },\n    /*::[*/0x0045 /*::]*/: {\n      n: \"NSCOLS\"\n    },\n    /*::[*/0x0046 /*::]*/: {\n      n: \"RULER\"\n    },\n    /*::[*/0x0047 /*::]*/: {\n      n: \"NNAME\"\n    },\n    /*::[*/0x0048 /*::]*/: {\n      n: \"ACOMM\"\n    },\n    /*::[*/0x0049 /*::]*/: {\n      n: \"AMACRO\"\n    },\n    /*::[*/0x004A /*::]*/: {\n      n: \"PARSE\"\n    },\n    // 0x0064\n    /*::[*/\n    0x0066 /*::]*/: {\n      n: \"PRANGES??\"\n    },\n    /*::[*/0x0067 /*::]*/: {\n      n: \"RRANGES??\"\n    },\n    /*::[*/0x0068 /*::]*/: {\n      n: \"FNAME??\"\n    },\n    /*::[*/0x0069 /*::]*/: {\n      n: \"MRANGES??\"\n    },\n    // 0x0096\n    // 0x0099\n    // 0x009A\n    // 0x009B\n    // 0x009C\n    // 0x00C0\n    // 0x00C7\n    // 0x00C9\n    /*::[*/\n    0x00CC /*::]*/: {\n      n: \"SHEETNAMECS\",\n      f: parse_SHEETNAMECS\n    },\n    // 0x00CD\n    /*::[*/\n    0x00DE /*::]*/: {\n      n: \"SHEETNAMELP\",\n      f: parse_SHEETNAMELP\n    },\n    /*::[*/0x00FF /*::]*/: {\n      n: \"BOF\",\n      f: parseuint16\n    },\n    /*::[*/0x5402 /*::]*/: {\n      n: \"WKSNF\",\n      f: parseuint16\n    },\n    /*::[*/0xFFFF /*::]*/: {\n      n: \"\"\n    }\n  };\n  var WK3Enum = {\n    /*::[*/0x0000 /*::]*/: {\n      n: \"BOF\"\n    },\n    /*::[*/0x0001 /*::]*/: {\n      n: \"EOF\"\n    },\n    /*::[*/0x0002 /*::]*/: {\n      n: \"PASSWORD\"\n    },\n    /*::[*/0x0003 /*::]*/: {\n      n: \"CALCSET\"\n    },\n    /*::[*/0x0004 /*::]*/: {\n      n: \"WINDOWSET\"\n    },\n    /*::[*/0x0005 /*::]*/: {\n      n: \"SHEETCELLPTR\"\n    },\n    /*::[*/0x0006 /*::]*/: {\n      n: \"SHEETLAYOUT\"\n    },\n    /*::[*/0x0007 /*::]*/: {\n      n: \"COLUMNWIDTH\"\n    },\n    /*::[*/0x0008 /*::]*/: {\n      n: \"HIDDENCOLUMN\"\n    },\n    /*::[*/0x0009 /*::]*/: {\n      n: \"USERRANGE\"\n    },\n    /*::[*/0x000A /*::]*/: {\n      n: \"SYSTEMRANGE\"\n    },\n    /*::[*/0x000B /*::]*/: {\n      n: \"ZEROFORCE\"\n    },\n    /*::[*/0x000C /*::]*/: {\n      n: \"SORTKEYDIR\"\n    },\n    /*::[*/0x000D /*::]*/: {\n      n: \"FILESEAL\"\n    },\n    /*::[*/0x000E /*::]*/: {\n      n: \"DATAFILLNUMS\"\n    },\n    /*::[*/0x000F /*::]*/: {\n      n: \"PRINTMAIN\"\n    },\n    /*::[*/0x0010 /*::]*/: {\n      n: \"PRINTSTRING\"\n    },\n    /*::[*/0x0011 /*::]*/: {\n      n: \"GRAPHMAIN\"\n    },\n    /*::[*/0x0012 /*::]*/: {\n      n: \"GRAPHSTRING\"\n    },\n    /*::[*/0x0013 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0014 /*::]*/: {\n      n: \"ERRCELL\"\n    },\n    /*::[*/0x0015 /*::]*/: {\n      n: \"NACELL\"\n    },\n    /*::[*/0x0016 /*::]*/: {\n      n: \"LABEL16\",\n      f: parse_LABEL_16\n    },\n    /*::[*/0x0017 /*::]*/: {\n      n: \"NUMBER17\",\n      f: parse_NUMBER_17\n    },\n    /*::[*/0x0018 /*::]*/: {\n      n: \"NUMBER18\",\n      f: parse_NUMBER_18\n    },\n    /*::[*/0x0019 /*::]*/: {\n      n: \"FORMULA19\",\n      f: parse_FORMULA_19\n    },\n    /*::[*/0x001A /*::]*/: {\n      n: \"FORMULA1A\"\n    },\n    /*::[*/0x001B /*::]*/: {\n      n: \"XFORMAT\",\n      f: parse_XFORMAT\n    },\n    /*::[*/0x001C /*::]*/: {\n      n: \"DTLABELMISC\"\n    },\n    /*::[*/0x001D /*::]*/: {\n      n: \"DTLABELCELL\"\n    },\n    /*::[*/0x001E /*::]*/: {\n      n: \"GRAPHWINDOW\"\n    },\n    /*::[*/0x001F /*::]*/: {\n      n: \"CPA\"\n    },\n    /*::[*/0x0020 /*::]*/: {\n      n: \"LPLAUTO\"\n    },\n    /*::[*/0x0021 /*::]*/: {\n      n: \"QUERY\"\n    },\n    /*::[*/0x0022 /*::]*/: {\n      n: \"HIDDENSHEET\"\n    },\n    /*::[*/0x0023 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0025 /*::]*/: {\n      n: \"NUMBER25\",\n      f: parse_NUMBER_25\n    },\n    /*::[*/0x0026 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0027 /*::]*/: {\n      n: \"NUMBER27\",\n      f: parse_NUMBER_27\n    },\n    /*::[*/0x0028 /*::]*/: {\n      n: \"FORMULA28\",\n      f: parse_FORMULA_28\n    },\n    /*::[*/0x008E /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0093 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0096 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0097 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0098 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0099 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x009A /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x009B /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x009C /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x00A3 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x00AE /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x00AF /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x00B0 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x00B1 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x00B8 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x00B9 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x00BA /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x00BB /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x00BC /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x00C3 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x00C9 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x00CC /*::]*/: {\n      n: \"SHEETNAMECS\",\n      f: parse_SHEETNAMECS\n    },\n    /*::[*/0x00CD /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x00CE /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x00CF /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x00D0 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0100 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0103 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0104 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0105 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0106 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0107 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0109 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x010A /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x010B /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x010C /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x010E /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x010F /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0180 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0185 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0186 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0189 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x018C /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0200 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0202 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0201 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0204 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0205 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0280 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0281 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0282 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0283 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0284 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0285 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0286 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0287 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0288 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0292 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0293 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0294 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0295 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0296 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0299 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x029A /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0300 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0304 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0601 /*::]*/: {\n      n: \"SHEETINFOQP\",\n      f: parse_SHEETINFOQP\n    },\n    /*::[*/0x0640 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0642 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0701 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0702 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0703 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0704 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0780 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0800 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0801 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0804 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x0A80 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x2AF6 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x3231 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x6E49 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0x6F44 /*::]*/: {\n      n: \"??\"\n    },\n    /*::[*/0xFFFF /*::]*/: {\n      n: \"\"\n    }\n  };\n\n  /* TODO: fill out and verify this table across QP versions */\n  var QPWNFTable = {\n    /*::[*/0x05 /*::*/: \"dd-mmm-yy\",\n    /*::[*/0x06 /*::*/: \"dd-mmm\",\n    /*::[*/0x07 /*::*/: \"mmm-yy\",\n    /*::[*/0x08 /*::*/: \"mm/dd/yy\",\n    // Long Date Intl\n    /*::[*/\n    0x0A /*::*/: \"hh:mm:ss AM/PM\",\n    /*::[*/0x0B /*::*/: \"hh:mm AM/PM\",\n    /*::[*/0x0E /*::*/: \"dd-mmm-yyyy\",\n    /*::[*/0x0F /*::*/: \"mmm-yyyy\",\n    /*::[*/0x22 /*::*/: \"0.00\",\n    /*::[*/0x32 /*::*/: \"0.00;[Red]0.00\",\n    /*::[*/0x42 /*::*/: \"0.00;\\(0.00\\)\",\n    /*::[*/0x52 /*::*/: \"0.00;[Red]\\(0.00\\)\",\n    /*::[*/162 /*::*/: '\"$\"#,##0;\\\\(\"$\"#,##0\\\\)' // slightly different from SSF 5\n  };\n  /* QPW uses a different set of record types */\n  function qpw_to_workbook_buf(d, opts) /*:Workbook*/{\n    prep_blob(d, 0);\n    var o = opts || {};\n    var s /*:Worksheet*/ = {} /*:any*/;\n    if (o.dense) s[\"!data\"] = [];\n    var SST = [],\n      sname = \"\";\n    var range = {\n      s: {\n        r: -1,\n        c: -1\n      },\n      e: {\n        r: -1,\n        c: -1\n      }\n    };\n    var cnt = 0,\n      type = 0,\n      C = 0,\n      R = 0;\n    var wb = {\n      SheetNames: [],\n      Sheets: {}\n    };\n    var FMTS = [];\n    outer: while (d.l < d.length) {\n      var RT = d.read_shift(2),\n        length = d.read_shift(2);\n      var p = d.slice(d.l, d.l + length);\n      prep_blob(p, 0);\n      switch (RT) {\n        case 0x01:\n          /* BOF */\n          if (p.read_shift(4) != 0x39575051) throw \"Bad QPW9 BOF!\";\n          break;\n        case 0x02:\n          /* EOF */break outer;\n        case 0x08:\n          /* NF */break;\n        // TODO: this is tied to custom number formats\n\n        case 0x0A:\n          /* FORMATS */{\n            var fcnt = p.read_shift(4);\n            var step = (p.length - p.l) / fcnt | 0;\n            for (var ifmt = 0; ifmt < fcnt; ++ifmt) {\n              var end = p.l + step;\n              var fmt = {};\n              p.l += 2;\n              fmt.numFmtId = p.read_shift(2);\n              if (QPWNFTable[fmt.numFmtId]) fmt.z = QPWNFTable[fmt.numFmtId];\n              p.l = end;\n              FMTS.push(fmt);\n            }\n          }\n          break;\n\n        /* TODO: The behavior here should be consistent with Numbers: QP Notebook ~ .TN.SheetArchive, QP Sheet ~ .TST.TableModelArchive */\n        case 0x0401:\n          /* BON */break;\n        case 0x0402:\n          /* EON */ /* TODO: backfill missing sheets based on BON cnt */break;\n        case 0x0407:\n          {\n            /* SST */\n            p.l += 12;\n            while (p.l < p.length) {\n              cnt = p.read_shift(2);\n              type = p.read_shift(1);\n              SST.push(p.read_shift(cnt, 'cstr'));\n            }\n          }\n          break;\n        case 0x0408:\n          break;\n        case 0x0601:\n          {\n            /* BOS */\n            var sidx = p.read_shift(2);\n            s = {} /*:any*/;\n            if (o.dense) s[\"!data\"] = [];\n            range.s.c = p.read_shift(2);\n            range.e.c = p.read_shift(2);\n            range.s.r = p.read_shift(4);\n            range.e.r = p.read_shift(4);\n            p.l += 4;\n            if (p.l + 2 < p.length) {\n              cnt = p.read_shift(2);\n              type = p.read_shift(1);\n              sname = cnt == 0 ? \"\" : p.read_shift(cnt, 'cstr');\n            }\n            if (!sname) sname = encode_col(sidx);\n            /* TODO: backfill empty sheets */\n          }\n          break;\n        case 0x0602:\n          {\n            /* EOS */\n            /* NOTE: QP valid range A1:IV1000000 */\n            if (range.s.c > 0xFF || range.s.r > 999999) break;\n            if (range.e.c < range.s.c) range.e.c = range.s.c;\n            if (range.e.r < range.s.r) range.e.r = range.s.r;\n            s[\"!ref\"] = encode_range(range);\n            book_append_sheet(wb, s, sname); // TODO: a barrel roll\n          }\n          break;\n        case 0x0A01:\n          {\n            /* COL (like XLS Row, modulo the layout transposition) */\n            C = p.read_shift(2);\n            if (range.e.c < C) range.e.c = C;\n            if (range.s.c > C) range.s.c = C;\n            R = p.read_shift(4);\n            if (range.s.r > R) range.s.r = R;\n            R = p.read_shift(4);\n            if (range.e.r < R) range.e.r = R;\n          }\n          break;\n        case 0x0C01:\n          {\n            /* MulCells (like XLS MulRK, but takes advantage of common column data patterns) */\n            R = p.read_shift(4), cnt = p.read_shift(4);\n            if (range.s.r > R) range.s.r = R;\n            if (range.e.r < R + cnt - 1) range.e.r = R + cnt - 1;\n            var CC = encode_col(C);\n            while (p.l < p.length) {\n              var cell = {\n                t: \"z\"\n              };\n              var flags = p.read_shift(1),\n                fmtidx = -1;\n              if (flags & 0x80) fmtidx = p.read_shift(2);\n              var mul = flags & 0x40 ? p.read_shift(2) - 1 : 0;\n              switch (flags & 0x1F) {\n                case 0:\n                  break;\n                case 1:\n                  break;\n                case 2:\n                  cell = {\n                    t: \"n\",\n                    v: p.read_shift(2)\n                  };\n                  break;\n                case 3:\n                  cell = {\n                    t: \"n\",\n                    v: p.read_shift(2, 'i')\n                  };\n                  break;\n                case 4:\n                  cell = {\n                    t: \"n\",\n                    v: parse_RkNumber(p)\n                  };\n                  break;\n                case 5:\n                  cell = {\n                    t: \"n\",\n                    v: p.read_shift(8, 'f')\n                  };\n                  break;\n                case 7:\n                  cell = {\n                    t: \"s\",\n                    v: SST[type = p.read_shift(4) - 1]\n                  };\n                  break;\n                case 8:\n                  cell = {\n                    t: \"n\",\n                    v: p.read_shift(8, 'f')\n                  };\n                  p.l += 2; /* cell.f = formulae[p.read_shift(4)]; */\n                  p.l += 4;\n                  break;\n                default:\n                  throw \"Unrecognized QPW cell type \" + (flags & 0x1F);\n              }\n              if (fmtidx != -1 && (FMTS[fmtidx - 1] || {}).z) cell.z = FMTS[fmtidx - 1].z;\n              var delta = 0;\n              if (flags & 0x20) switch (flags & 0x1F) {\n                case 2:\n                  delta = p.read_shift(2);\n                  break;\n                case 3:\n                  delta = p.read_shift(2, 'i');\n                  break;\n                case 7:\n                  delta = p.read_shift(2);\n                  break;\n                default:\n                  throw \"Unsupported delta for QPW cell type \" + (flags & 0x1F);\n              }\n              if (!(!o.sheetStubs && cell.t == \"z\")) {\n                var newcell = dup(cell);\n                if (cell.t == \"n\" && cell.z && fmt_is_date(cell.z) && o.cellDates) {\n                  newcell.v = numdate(cell.v);\n                  newcell.t = typeof newcell.v == \"number\" ? 'n' : 'd';\n                }\n                if (s[\"!data\"] != null) {\n                  if (!s[\"!data\"][R]) s[\"!data\"][R] = [];\n                  s[\"!data\"][R][C] = newcell;\n                } else s[CC + encode_row(R)] = newcell;\n              }\n              ++R;\n              --cnt;\n              while (mul-- > 0 && cnt >= 0) {\n                if (flags & 0x20) switch (flags & 0x1F) {\n                  case 2:\n                    cell = {\n                      t: \"n\",\n                      v: cell.v + delta & 0xFFFF\n                    };\n                    break;\n                  case 3:\n                    cell = {\n                      t: \"n\",\n                      v: cell.v + delta & 0xFFFF\n                    };\n                    if (cell.v > 0x7FFF) cell.v -= 0x10000;\n                    break;\n                  case 7:\n                    cell = {\n                      t: \"s\",\n                      v: SST[type = type + delta >>> 0]\n                    };\n                    break;\n                  default:\n                    throw \"Cannot apply delta for QPW cell type \" + (flags & 0x1F);\n                } else switch (flags & 0x1F) {\n                  case 1:\n                    cell = {\n                      t: \"z\"\n                    };\n                    break;\n                  case 2:\n                    cell = {\n                      t: \"n\",\n                      v: p.read_shift(2)\n                    };\n                    break;\n                  case 7:\n                    cell = {\n                      t: \"s\",\n                      v: SST[type = p.read_shift(4) - 1]\n                    };\n                    break;\n                  default:\n                    throw \"Cannot apply repeat for QPW cell type \" + (flags & 0x1F);\n                }\n                if (!(!o.sheetStubs && cell.t == \"z\")) {\n                  if (s[\"!data\"] != null) {\n                    if (!s[\"!data\"][R]) s[\"!data\"][R] = [];\n                    s[\"!data\"][R][C] = cell;\n                  } else s[CC + encode_row(R)] = cell;\n                }\n                ++R;\n                --cnt;\n              }\n            }\n          }\n          break;\n      }\n      d.l += length;\n    }\n    return wb;\n  }\n  return {\n    sheet_to_wk1: sheet_to_wk1,\n    book_to_wk3: book_to_wk3,\n    to_workbook: lotus_to_workbook\n  };\n}();\n/* 18.4.7 rPr CT_RPrElt */\nfunction parse_rpr(rpr) {\n  var font = {},\n    m = rpr.match(tagregex),\n    i = 0;\n  var pass = false;\n  if (m) for (; i != m.length; ++i) {\n    var y = parsexmltag(m[i]);\n    switch (y[0].replace(/\\w*:/g, \"\")) {\n      /* 18.8.12 condense CT_BooleanProperty */\n      /* ** not required . */\n      case '<condense':\n        break;\n      /* 18.8.17 extend CT_BooleanProperty */\n      /* ** not required . */\n      case '<extend':\n        break;\n      /* 18.8.36 shadow CT_BooleanProperty */\n      /* ** not required . */\n      case '<shadow':\n        if (!y.val) break;\n      /* falls through */\n      case '<shadow>':\n      case '<shadow/>':\n        font.shadow = 1;\n        break;\n      case '</shadow>':\n        break;\n\n      /* 18.4.1 charset CT_IntProperty TODO */\n      case '<charset':\n        if (y.val == '1') break;\n        font.cp = CS2CP[parseInt(y.val, 10)];\n        break;\n\n      /* 18.4.2 outline CT_BooleanProperty TODO */\n      case '<outline':\n        if (!y.val) break;\n      /* falls through */\n      case '<outline>':\n      case '<outline/>':\n        font.outline = 1;\n        break;\n      case '</outline>':\n        break;\n\n      /* 18.4.5 rFont CT_FontName */\n      case '<rFont':\n        font.name = y.val;\n        break;\n\n      /* 18.4.11 sz CT_FontSize */\n      case '<sz':\n        font.sz = y.val;\n        break;\n\n      /* 18.4.10 strike CT_BooleanProperty */\n      case '<strike':\n        if (!y.val) break;\n      /* falls through */\n      case '<strike>':\n      case '<strike/>':\n        font.strike = 1;\n        break;\n      case '</strike>':\n        break;\n\n      /* 18.4.13 u CT_UnderlineProperty */\n      case '<u':\n        if (!y.val) break;\n        switch (y.val) {\n          case 'double':\n            font.uval = \"double\";\n            break;\n          case 'singleAccounting':\n            font.uval = \"single-accounting\";\n            break;\n          case 'doubleAccounting':\n            font.uval = \"double-accounting\";\n            break;\n        }\n      /* falls through */\n      case '<u>':\n      case '<u/>':\n        font.u = 1;\n        break;\n      case '</u>':\n        break;\n\n      /* 18.8.2 b */\n      case '<b':\n        if (y.val == '0') break;\n      /* falls through */\n      case '<b>':\n      case '<b/>':\n        font.b = 1;\n        break;\n      case '</b>':\n        break;\n\n      /* 18.8.26 i */\n      case '<i':\n        if (y.val == '0') break;\n      /* falls through */\n      case '<i>':\n      case '<i/>':\n        font.i = 1;\n        break;\n      case '</i>':\n        break;\n\n      /* 18.3.1.15 color CT_Color TODO: tint, theme, auto, indexed */\n      case '<color':\n        if (y.rgb) font.color = y.rgb.slice(2, 8);\n        break;\n      case '<color>':\n      case '<color/>':\n      case '</color>':\n        break;\n\n      /* 18.8.18 family ST_FontFamily */\n      case '<family':\n        font.family = y.val;\n        break;\n      case '<family>':\n      case '<family/>':\n      case '</family>':\n        break;\n\n      /* 18.4.14 vertAlign CT_VerticalAlignFontProperty TODO */\n      case '<vertAlign':\n        font.valign = y.val;\n        break;\n      case '<vertAlign>':\n      case '<vertAlign/>':\n      case '</vertAlign>':\n        break;\n\n      /* 18.8.35 scheme CT_FontScheme TODO */\n      case '<scheme':\n        break;\n      case '<scheme>':\n      case '<scheme/>':\n      case '</scheme>':\n        break;\n\n      /* 18.2.10 extLst CT_ExtensionList ? */\n      case '<extLst':\n      case '<extLst>':\n      case '</extLst>':\n        break;\n      case '<ext':\n        pass = true;\n        break;\n      case '</ext>':\n        pass = false;\n        break;\n      default:\n        if (y[0].charCodeAt(1) !== 47 && !pass) throw new Error('Unrecognized rich format ' + y[0]);\n    }\n  }\n  return font;\n}\nvar parse_rs = /*#__PURE__*/function () {\n  var tregex = matchtag(\"t\"),\n    rpregex = matchtag(\"rPr\");\n  /* 18.4.4 r CT_RElt */\n  function parse_r(r) {\n    /* 18.4.12 t ST_Xstring */\n    var t = r.match(tregex) /*, cp = 65001*/;\n    if (!t) return {\n      t: \"s\",\n      v: \"\"\n    };\n    var o /*:Cell*/ = {\n      t: 's',\n      v: unescapexml(t[1])\n    } /*:any*/;\n    var rpr = r.match(rpregex);\n    if (rpr) o.s = parse_rpr(rpr[1]);\n    return o;\n  }\n  var rregex = /<(?:\\w+:)?r>/g,\n    rend = /<\\/(?:\\w+:)?r>/;\n  return function parse_rs(rs) {\n    return rs.replace(rregex, \"\").split(rend).map(parse_r).filter(function (r) {\n      return r.v;\n    });\n  };\n}();\n\n/* Parse a list of <r> tags */\nvar rs_to_html = /*#__PURE__*/function parse_rs_factory() {\n  var nlregex = /(\\r\\n|\\n)/g;\n  function parse_rpr2(font, intro, outro) {\n    var style /*:Array<string>*/ = [];\n    if (font.u) style.push(\"text-decoration: underline;\");\n    if (font.uval) style.push(\"text-underline-style:\" + font.uval + \";\");\n    if (font.sz) style.push(\"font-size:\" + font.sz + \"pt;\");\n    if (font.outline) style.push(\"text-effect: outline;\");\n    if (font.shadow) style.push(\"text-shadow: auto;\");\n    intro.push('<span style=\"' + style.join(\"\") + '\">');\n    if (font.b) {\n      intro.push(\"<b>\");\n      outro.push(\"</b>\");\n    }\n    if (font.i) {\n      intro.push(\"<i>\");\n      outro.push(\"</i>\");\n    }\n    if (font.strike) {\n      intro.push(\"<s>\");\n      outro.push(\"</s>\");\n    }\n    var align = font.valign || \"\";\n    if (align == \"superscript\" || align == \"super\") align = \"sup\";else if (align == \"subscript\") align = \"sub\";\n    if (align != \"\") {\n      intro.push(\"<\" + align + \">\");\n      outro.push(\"</\" + align + \">\");\n    }\n    outro.push(\"</span>\");\n    return font;\n  }\n\n  /* 18.4.4 r CT_RElt */\n  function r_to_html(r) {\n    var terms /*:[Array<string>, string, Array<string>]*/ = [[], r.v, []];\n    if (!r.v) return \"\";\n    if (r.s) parse_rpr2(r.s, terms[0], terms[2]);\n    return terms[0].join(\"\") + terms[1].replace(nlregex, '<br/>') + terms[2].join(\"\");\n  }\n  return function parse_rs(rs) {\n    return rs.map(r_to_html).join(\"\");\n  };\n}();\n\n/* 18.4.8 si CT_Rst */\nvar sitregex = /<(?:\\w+:)?t[^>]*>([^<]*)<\\/(?:\\w+:)?t>/g,\n  sirregex = /<(?:\\w+:)?r\\b[^>]*>/;\nvar sirphregex = /<(?:\\w+:)?rPh.*?>([\\s\\S]*?)<\\/(?:\\w+:)?rPh>/g;\nfunction parse_si(x, opts) {\n  var html = opts ? opts.cellHTML : true;\n  var z = {};\n  if (!x) return {\n    t: \"\"\n  };\n  //var y;\n  /* 18.4.12 t ST_Xstring (Plaintext String) */\n  // TODO: is whitespace actually valid here?\n  if (x.match(/^\\s*<(?:\\w+:)?t[^>]*>/)) {\n    z.t = unescapexml(utf8read(x.slice(x.indexOf(\">\") + 1).split(/<\\/(?:\\w+:)?t>/)[0] || \"\"), true);\n    z.r = utf8read(x);\n    if (html) z.h = escapehtml(z.t);\n  }\n  /* 18.4.4 r CT_RElt (Rich Text Run) */else if ( /*y = */x.match(sirregex)) {\n    z.r = utf8read(x);\n    z.t = unescapexml(utf8read((x.replace(sirphregex, '').match(sitregex) || []).join(\"\").replace(tagregex, \"\")), true);\n    if (html) z.h = rs_to_html(parse_rs(z.r));\n  }\n  /* 18.4.3 phoneticPr CT_PhoneticPr (TODO: needed for Asian support) */\n  /* 18.4.6 rPh CT_PhoneticRun (TODO: needed for Asian support) */\n  return z;\n}\n\n/* 18.4 Shared String Table */\nvar sstr0 = /<(?:\\w+:)?sst([^>]*)>([\\s\\S]*)<\\/(?:\\w+:)?sst>/;\nvar sstr1 = /<(?:\\w+:)?(?:si|sstItem)>/g;\nvar sstr2 = /<\\/(?:\\w+:)?(?:si|sstItem)>/;\nfunction parse_sst_xml(data /*:string*/, opts) /*:SST*/{\n  var s /*:SST*/ = [] /*:any*/,\n    ss = \"\";\n  if (!data) return s;\n  /* 18.4.9 sst CT_Sst */\n  var sst = data.match(sstr0);\n  if (sst) {\n    ss = sst[2].replace(sstr1, \"\").split(sstr2);\n    for (var i = 0; i != ss.length; ++i) {\n      var o = parse_si(ss[i].trim(), opts);\n      if (o != null) s[s.length] = o;\n    }\n    sst = parsexmltag(sst[1]);\n    s.Count = sst.count;\n    s.Unique = sst.uniqueCount;\n  }\n  return s;\n}\nvar straywsregex = /^\\s|\\s$|[\\t\\n\\r]/;\nfunction write_sst_xml(sst /*:SST*/, opts) /*:string*/{\n  if (!opts.bookSST) return \"\";\n  var o = [XML_HEADER];\n  o[o.length] = writextag('sst', null, {\n    xmlns: XMLNS_main[0],\n    count: sst.Count,\n    uniqueCount: sst.Unique\n  });\n  for (var i = 0; i != sst.length; ++i) {\n    if (sst[i] == null) continue;\n    var s /*:XLString*/ = sst[i];\n    var sitag = \"<si>\";\n    if (s.r) sitag += s.r;else {\n      sitag += \"<t\";\n      if (!s.t) s.t = \"\";\n      if (typeof s.t !== \"string\") s.t = String(s.t);\n      if (s.t.match(straywsregex)) sitag += ' xml:space=\"preserve\"';\n      sitag += \">\" + escapexml(s.t) + \"</t>\";\n    }\n    sitag += \"</si>\";\n    o[o.length] = sitag;\n  }\n  if (o.length > 2) {\n    o[o.length] = '</sst>';\n    o[1] = o[1].replace(\"/>\", \">\");\n  }\n  return o.join(\"\");\n}\n/* [MS-XLSB] 2.4.221 BrtBeginSst */\nfunction parse_BrtBeginSst(data) {\n  return [data.read_shift(4), data.read_shift(4)];\n}\n\n/* [MS-XLSB] 2.1.7.45 Shared Strings */\nfunction parse_sst_bin(data, opts) /*:SST*/{\n  var s /*:SST*/ = [] /*:any*/;\n  var pass = false;\n  recordhopper(data, function hopper_sst(val, R, RT) {\n    switch (RT) {\n      case 0x009F:\n        /* BrtBeginSst */\n        s.Count = val[0];\n        s.Unique = val[1];\n        break;\n      case 0x0013:\n        /* BrtSSTItem */\n        s.push(val);\n        break;\n      case 0x00A0:\n        /* BrtEndSst */\n        return true;\n      case 0x0023:\n        /* BrtFRTBegin */\n        pass = true;\n        break;\n      case 0x0024:\n        /* BrtFRTEnd */\n        pass = false;\n        break;\n      default:\n        if (R.T) ;\n        if (!pass || opts.WTF) throw new Error(\"Unexpected record 0x\" + RT.toString(16));\n    }\n  });\n  return s;\n}\nfunction write_BrtBeginSst(sst, o) {\n  if (!o) o = new_buf(8);\n  o.write_shift(4, sst.Count);\n  o.write_shift(4, sst.Unique);\n  return o;\n}\nvar write_BrtSSTItem = write_RichStr;\nfunction write_sst_bin(sst /*::, opts*/) {\n  var ba = buf_array();\n  write_record(ba, 0x009F /* BrtBeginSst */, write_BrtBeginSst(sst));\n  for (var i = 0; i < sst.length; ++i) write_record(ba, 0x0013 /* BrtSSTItem */, write_BrtSSTItem(sst[i]));\n  /* FRTSST */\n  write_record(ba, 0x00A0 /* BrtEndSst */);\n  return ba.end();\n}\nfunction _JS2ANSI(str /*:string*/) /*:Array<number>*/{\n  var o /*:Array<number>*/ = [],\n    oo = str.split(\"\");\n  for (var i = 0; i < oo.length; ++i) o[i] = oo[i].charCodeAt(0);\n  return o;\n}\n\n/* [MS-OFFCRYPTO] 2.1.4 Version */\nfunction parse_CRYPTOVersion(blob, length /*:?number*/) {\n  var o /*:any*/ = {};\n  o.Major = blob.read_shift(2);\n  o.Minor = blob.read_shift(2);\n  /*:: if(length == null) return o; */\n  if (length >= 4) blob.l += length - 4;\n  return o;\n}\n\n/* [MS-OFFCRYPTO] 2.1.5 DataSpaceVersionInfo */\nfunction parse_DataSpaceVersionInfo(blob) {\n  var o = {};\n  o.id = blob.read_shift(0, 'lpp4');\n  o.R = parse_CRYPTOVersion(blob, 4);\n  o.U = parse_CRYPTOVersion(blob, 4);\n  o.W = parse_CRYPTOVersion(blob, 4);\n  return o;\n}\n\n/* [MS-OFFCRYPTO] 2.1.6.1 DataSpaceMapEntry Structure */\nfunction parse_DataSpaceMapEntry(blob) {\n  var len = blob.read_shift(4);\n  var end = blob.l + len - 4;\n  var o = {};\n  var cnt = blob.read_shift(4);\n  var comps /*:Array<{t:number, v:string}>*/ = [];\n  /* [MS-OFFCRYPTO] 2.1.6.2 DataSpaceReferenceComponent Structure */\n  while (cnt-- > 0) comps.push({\n    t: blob.read_shift(4),\n    v: blob.read_shift(0, 'lpp4')\n  });\n  o.name = blob.read_shift(0, 'lpp4');\n  o.comps = comps;\n  if (blob.l != end) throw new Error(\"Bad DataSpaceMapEntry: \" + blob.l + \" != \" + end);\n  return o;\n}\n\n/* [MS-OFFCRYPTO] 2.1.6 DataSpaceMap */\nfunction parse_DataSpaceMap(blob) {\n  var o = [];\n  blob.l += 4; // must be 0x8\n  var cnt = blob.read_shift(4);\n  while (cnt-- > 0) o.push(parse_DataSpaceMapEntry(blob));\n  return o;\n}\n\n/* [MS-OFFCRYPTO] 2.1.7 DataSpaceDefinition */\nfunction parse_DataSpaceDefinition(blob) /*:Array<string>*/{\n  var o /*:Array<string>*/ = [];\n  blob.l += 4; // must be 0x8\n  var cnt = blob.read_shift(4);\n  while (cnt-- > 0) o.push(blob.read_shift(0, 'lpp4'));\n  return o;\n}\n\n/* [MS-OFFCRYPTO] 2.1.8 DataSpaceDefinition */\nfunction parse_TransformInfoHeader(blob) {\n  var o = {};\n  /*var len = */\n  blob.read_shift(4);\n  blob.l += 4; // must be 0x1\n  o.id = blob.read_shift(0, 'lpp4');\n  o.name = blob.read_shift(0, 'lpp4');\n  o.R = parse_CRYPTOVersion(blob, 4);\n  o.U = parse_CRYPTOVersion(blob, 4);\n  o.W = parse_CRYPTOVersion(blob, 4);\n  return o;\n}\nfunction parse_Primary(blob) {\n  /* [MS-OFFCRYPTO] 2.2.6 IRMDSTransformInfo */\n  var hdr = parse_TransformInfoHeader(blob);\n  /* [MS-OFFCRYPTO] 2.1.9 EncryptionTransformInfo */\n  hdr.ename = blob.read_shift(0, '8lpp4');\n  hdr.blksz = blob.read_shift(4);\n  hdr.cmode = blob.read_shift(4);\n  if (blob.read_shift(4) != 0x04) throw new Error(\"Bad !Primary record\");\n  return hdr;\n}\n\n/* [MS-OFFCRYPTO] 2.3.2 Encryption Header */\nfunction parse_EncryptionHeader(blob, length /*:number*/) {\n  var tgt = blob.l + length;\n  var o = {};\n  o.Flags = blob.read_shift(4) & 0x3F;\n  blob.l += 4;\n  o.AlgID = blob.read_shift(4);\n  var valid = false;\n  switch (o.AlgID) {\n    case 0x660E:\n    case 0x660F:\n    case 0x6610:\n      valid = o.Flags == 0x24;\n      break;\n    case 0x6801:\n      valid = o.Flags == 0x04;\n      break;\n    case 0:\n      valid = o.Flags == 0x10 || o.Flags == 0x04 || o.Flags == 0x24;\n      break;\n    default:\n      throw 'Unrecognized encryption algorithm: ' + o.AlgID;\n  }\n  if (!valid) throw new Error(\"Encryption Flags/AlgID mismatch\");\n  o.AlgIDHash = blob.read_shift(4);\n  o.KeySize = blob.read_shift(4);\n  o.ProviderType = blob.read_shift(4);\n  blob.l += 8;\n  o.CSPName = blob.read_shift(tgt - blob.l >> 1, 'utf16le');\n  blob.l = tgt;\n  return o;\n}\n\n/* [MS-OFFCRYPTO] 2.3.3 Encryption Verifier */\nfunction parse_EncryptionVerifier(blob, length /*:number*/) {\n  var o = {},\n    tgt = blob.l + length;\n  blob.l += 4; // SaltSize must be 0x10\n  o.Salt = blob.slice(blob.l, blob.l + 16);\n  blob.l += 16;\n  o.Verifier = blob.slice(blob.l, blob.l + 16);\n  blob.l += 16;\n  /*var sz = */\n  blob.read_shift(4);\n  o.VerifierHash = blob.slice(blob.l, tgt);\n  blob.l = tgt;\n  return o;\n}\n\n/* [MS-OFFCRYPTO] 2.3.4.* EncryptionInfo Stream */\nfunction parse_EncryptionInfo(blob) {\n  var vers = parse_CRYPTOVersion(blob);\n  switch (vers.Minor) {\n    case 0x02:\n      return [vers.Minor, parse_EncInfoStd(blob)];\n    case 0x03:\n      return [vers.Minor, parse_EncInfoExt()];\n    case 0x04:\n      return [vers.Minor, parse_EncInfoAgl(blob)];\n  }\n  throw new Error(\"ECMA-376 Encrypted file unrecognized Version: \" + vers.Minor);\n}\n\n/* [MS-OFFCRYPTO] 2.3.4.5  EncryptionInfo Stream (Standard Encryption) */\nfunction parse_EncInfoStd(blob /*::, vers*/) {\n  var flags = blob.read_shift(4);\n  if ((flags & 0x3F) != 0x24) throw new Error(\"EncryptionInfo mismatch\");\n  var sz = blob.read_shift(4);\n  //var tgt = blob.l + sz;\n  var hdr = parse_EncryptionHeader(blob, sz);\n  var verifier = parse_EncryptionVerifier(blob, blob.length - blob.l);\n  return {\n    t: \"Std\",\n    h: hdr,\n    v: verifier\n  };\n}\n/* [MS-OFFCRYPTO] 2.3.4.6  EncryptionInfo Stream (Extensible Encryption) */\nfunction parse_EncInfoExt( /*::blob, vers*/) {\n  throw new Error(\"File is password-protected: ECMA-376 Extensible\");\n}\n/* [MS-OFFCRYPTO] 2.3.4.10 EncryptionInfo Stream (Agile Encryption) */\nfunction parse_EncInfoAgl(blob /*::, vers*/) {\n  var KeyData = [\"saltSize\", \"blockSize\", \"keyBits\", \"hashSize\", \"cipherAlgorithm\", \"cipherChaining\", \"hashAlgorithm\", \"saltValue\"];\n  blob.l += 4;\n  var xml = blob.read_shift(blob.length - blob.l, 'utf8');\n  var o = {};\n  xml.replace(tagregex, function xml_agile(x) {\n    var y /*:any*/ = parsexmltag(x);\n    switch (strip_ns(y[0])) {\n      case '<?xml':\n        break;\n      case '<encryption':\n      case '</encryption>':\n        break;\n      case '<keyData':\n        KeyData.forEach(function (k) {\n          o[k] = y[k];\n        });\n        break;\n      case '<dataIntegrity':\n        o.encryptedHmacKey = y.encryptedHmacKey;\n        o.encryptedHmacValue = y.encryptedHmacValue;\n        break;\n      case '<keyEncryptors>':\n      case '<keyEncryptors':\n        o.encs = [];\n        break;\n      case '</keyEncryptors>':\n        break;\n      case '<keyEncryptor':\n        o.uri = y.uri;\n        break;\n      case '</keyEncryptor>':\n        break;\n      case '<encryptedKey':\n        o.encs.push(y);\n        break;\n      default:\n        throw y[0];\n    }\n  });\n  return o;\n}\n\n/* [MS-OFFCRYPTO] 2.3.5.1 RC4 CryptoAPI Encryption Header */\nfunction parse_RC4CryptoHeader(blob, length /*:number*/) {\n  var o = {};\n  var vers = o.EncryptionVersionInfo = parse_CRYPTOVersion(blob, 4);\n  length -= 4;\n  if (vers.Minor != 2) throw new Error('unrecognized minor version code: ' + vers.Minor);\n  if (vers.Major > 4 || vers.Major < 2) throw new Error('unrecognized major version code: ' + vers.Major);\n  o.Flags = blob.read_shift(4);\n  length -= 4;\n  var sz = blob.read_shift(4);\n  length -= 4;\n  o.EncryptionHeader = parse_EncryptionHeader(blob, sz);\n  length -= sz;\n  o.EncryptionVerifier = parse_EncryptionVerifier(blob, length);\n  return o;\n}\n/* [MS-OFFCRYPTO] 2.3.6.1 RC4 Encryption Header */\nfunction parse_RC4Header(blob /*::, length*/) {\n  var o = {};\n  var vers = o.EncryptionVersionInfo = parse_CRYPTOVersion(blob, 4);\n  if (vers.Major != 1 || vers.Minor != 1) throw 'unrecognized version code ' + vers.Major + ' : ' + vers.Minor;\n  o.Salt = blob.read_shift(16);\n  o.EncryptedVerifier = blob.read_shift(16);\n  o.EncryptedVerifierHash = blob.read_shift(16);\n  return o;\n}\n\n/* [MS-OFFCRYPTO] 2.3.7.1 Binary Document Password Verifier Derivation */\nfunction crypto_CreatePasswordVerifier_Method1(Password /*:string*/) {\n  var Verifier = 0x0000,\n    PasswordArray;\n  var PasswordDecoded = _JS2ANSI(Password);\n  var len = PasswordDecoded.length + 1,\n    i,\n    PasswordByte;\n  var Intermediate1, Intermediate2, Intermediate3;\n  PasswordArray = new_raw_buf(len);\n  PasswordArray[0] = PasswordDecoded.length;\n  for (i = 1; i != len; ++i) PasswordArray[i] = PasswordDecoded[i - 1];\n  for (i = len - 1; i >= 0; --i) {\n    PasswordByte = PasswordArray[i];\n    Intermediate1 = (Verifier & 0x4000) === 0x0000 ? 0 : 1;\n    Intermediate2 = Verifier << 1 & 0x7FFF;\n    Intermediate3 = Intermediate1 | Intermediate2;\n    Verifier = Intermediate3 ^ PasswordByte;\n  }\n  return Verifier ^ 0xCE4B;\n}\n\n/* [MS-OFFCRYPTO] 2.3.7.2 Binary Document XOR Array Initialization */\nvar crypto_CreateXorArray_Method1 = /*#__PURE__*/function () {\n  var PadArray = [0xBB, 0xFF, 0xFF, 0xBA, 0xFF, 0xFF, 0xB9, 0x80, 0x00, 0xBE, 0x0F, 0x00, 0xBF, 0x0F, 0x00];\n  var InitialCode = [0xE1F0, 0x1D0F, 0xCC9C, 0x84C0, 0x110C, 0x0E10, 0xF1CE, 0x313E, 0x1872, 0xE139, 0xD40F, 0x84F9, 0x280C, 0xA96A, 0x4EC3];\n  var XorMatrix = [0xAEFC, 0x4DD9, 0x9BB2, 0x2745, 0x4E8A, 0x9D14, 0x2A09, 0x7B61, 0xF6C2, 0xFDA5, 0xEB6B, 0xC6F7, 0x9DCF, 0x2BBF, 0x4563, 0x8AC6, 0x05AD, 0x0B5A, 0x16B4, 0x2D68, 0x5AD0, 0x0375, 0x06EA, 0x0DD4, 0x1BA8, 0x3750, 0x6EA0, 0xDD40, 0xD849, 0xA0B3, 0x5147, 0xA28E, 0x553D, 0xAA7A, 0x44D5, 0x6F45, 0xDE8A, 0xAD35, 0x4A4B, 0x9496, 0x390D, 0x721A, 0xEB23, 0xC667, 0x9CEF, 0x29FF, 0x53FE, 0xA7FC, 0x5FD9, 0x47D3, 0x8FA6, 0x0F6D, 0x1EDA, 0x3DB4, 0x7B68, 0xF6D0, 0xB861, 0x60E3, 0xC1C6, 0x93AD, 0x377B, 0x6EF6, 0xDDEC, 0x45A0, 0x8B40, 0x06A1, 0x0D42, 0x1A84, 0x3508, 0x6A10, 0xAA51, 0x4483, 0x8906, 0x022D, 0x045A, 0x08B4, 0x1168, 0x76B4, 0xED68, 0xCAF1, 0x85C3, 0x1BA7, 0x374E, 0x6E9C, 0x3730, 0x6E60, 0xDCC0, 0xA9A1, 0x4363, 0x86C6, 0x1DAD, 0x3331, 0x6662, 0xCCC4, 0x89A9, 0x0373, 0x06E6, 0x0DCC, 0x1021, 0x2042, 0x4084, 0x8108, 0x1231, 0x2462, 0x48C4];\n  var Ror = function (Byte) {\n    return (Byte / 2 | Byte * 128) & 0xFF;\n  };\n  var XorRor = function (byte1, byte2) {\n    return Ror(byte1 ^ byte2);\n  };\n  var CreateXorKey_Method1 = function (Password) {\n    var XorKey = InitialCode[Password.length - 1];\n    var CurrentElement = 0x68;\n    for (var i = Password.length - 1; i >= 0; --i) {\n      var Char = Password[i];\n      for (var j = 0; j != 7; ++j) {\n        if (Char & 0x40) XorKey ^= XorMatrix[CurrentElement];\n        Char *= 2;\n        --CurrentElement;\n      }\n    }\n    return XorKey;\n  };\n  return function (password /*:string*/) {\n    var Password = _JS2ANSI(password);\n    var XorKey = CreateXorKey_Method1(Password);\n    var Index = Password.length;\n    var ObfuscationArray = new_raw_buf(16);\n    for (var i = 0; i != 16; ++i) ObfuscationArray[i] = 0x00;\n    var Temp, PasswordLastChar, PadIndex;\n    if ((Index & 1) === 1) {\n      Temp = XorKey >> 8;\n      ObfuscationArray[Index] = XorRor(PadArray[0], Temp);\n      --Index;\n      Temp = XorKey & 0xFF;\n      PasswordLastChar = Password[Password.length - 1];\n      ObfuscationArray[Index] = XorRor(PasswordLastChar, Temp);\n    }\n    while (Index > 0) {\n      --Index;\n      Temp = XorKey >> 8;\n      ObfuscationArray[Index] = XorRor(Password[Index], Temp);\n      --Index;\n      Temp = XorKey & 0xFF;\n      ObfuscationArray[Index] = XorRor(Password[Index], Temp);\n    }\n    Index = 15;\n    PadIndex = 15 - Password.length;\n    while (PadIndex > 0) {\n      Temp = XorKey >> 8;\n      ObfuscationArray[Index] = XorRor(PadArray[PadIndex], Temp);\n      --Index;\n      --PadIndex;\n      Temp = XorKey & 0xFF;\n      ObfuscationArray[Index] = XorRor(Password[Index], Temp);\n      --Index;\n      --PadIndex;\n    }\n    return ObfuscationArray;\n  };\n}();\n\n/* [MS-OFFCRYPTO] 2.3.7.3 Binary Document XOR Data Transformation Method 1 */\nvar crypto_DecryptData_Method1 = function (password /*:string*/, Data, XorArrayIndex, XorArray, O) {\n  /* If XorArray is set, use it; if O is not set, make changes in-place */\n  if (!O) O = Data;\n  if (!XorArray) XorArray = crypto_CreateXorArray_Method1(password);\n  var Index, Value;\n  for (Index = 0; Index != Data.length; ++Index) {\n    Value = Data[Index];\n    Value ^= XorArray[XorArrayIndex];\n    Value = (Value >> 5 | Value << 3) & 0xFF;\n    O[Index] = Value;\n    ++XorArrayIndex;\n  }\n  return [O, XorArrayIndex, XorArray];\n};\nvar crypto_MakeXorDecryptor = function (password /*:string*/) {\n  var XorArrayIndex = 0,\n    XorArray = crypto_CreateXorArray_Method1(password);\n  return function (Data) {\n    var O = crypto_DecryptData_Method1(\"\", Data, XorArrayIndex, XorArray);\n    XorArrayIndex = O[1];\n    return O[0];\n  };\n};\n\n/* 2.5.343 */\nfunction parse_XORObfuscation(blob, length, opts, out) {\n  var o = {\n    key: parseuint16(blob),\n    verificationBytes: parseuint16(blob)\n  } /*:any*/;\n  if (opts.password) o.verifier = crypto_CreatePasswordVerifier_Method1(opts.password);\n  out.valid = o.verificationBytes === o.verifier;\n  if (out.valid) out.insitu = crypto_MakeXorDecryptor(opts.password);\n  return o;\n}\n\n/* 2.4.117 */\nfunction parse_FilePassHeader(blob, length /*:number*/, oo) {\n  var o = oo || {};\n  o.Info = blob.read_shift(2);\n  blob.l -= 2;\n  if (o.Info === 1) o.Data = parse_RC4Header(blob);else o.Data = parse_RC4CryptoHeader(blob, length);\n  return o;\n}\nfunction parse_FilePass(blob, length /*:number*/, opts) {\n  var o = {\n    Type: opts.biff >= 8 ? blob.read_shift(2) : 0\n  } /*:any*/; /* wEncryptionType */\n  if (o.Type) parse_FilePassHeader(blob, length - 2, o);else parse_XORObfuscation(blob, opts.biff >= 8 ? length : length - 2, opts, o);\n  return o;\n}\nfunction rtf_to_sheet(d, opts) {\n  switch (opts.type) {\n    case \"base64\":\n      return rtf_to_sheet_str(Base64_decode(d), opts);\n    case \"binary\":\n      return rtf_to_sheet_str(d, opts);\n    case \"buffer\":\n      return rtf_to_sheet_str(has_buf && Buffer.isBuffer(d) ? d.toString(\"binary\") : a2s(d), opts);\n    case \"array\":\n      return rtf_to_sheet_str(cc2str(d), opts);\n  }\n  throw new Error(\"Unrecognized type \" + opts.type);\n}\nfunction rtf_to_sheet_str(str, opts) {\n  var o = opts || {};\n  var ws = {};\n  var dense = o.dense;\n  if (dense) ws[\"!data\"] = [];\n  var rows = str.match(/\\\\trowd[\\s\\S]*?\\\\row\\b/g);\n  if (!rows) throw new Error(\"RTF missing table\");\n  var range = {\n    s: {\n      c: 0,\n      r: 0\n    },\n    e: {\n      c: 0,\n      r: rows.length - 1\n    }\n  };\n  var row = [];\n  rows.forEach(function (rowtf, R) {\n    if (dense) row = ws[\"!data\"][R] = [];\n    var rtfre = /\\\\[\\w\\-]+\\b/g;\n    var last_index = 0;\n    var res;\n    var C = -1;\n    var payload = [];\n    while ((res = rtfre.exec(rowtf)) != null) {\n      var data = rowtf.slice(last_index, rtfre.lastIndex - res[0].length);\n      if (data.charCodeAt(0) == 32) data = data.slice(1);\n      if (data.length) payload.push(data);\n      switch (res[0]) {\n        case \"\\\\cell\":\n          ++C;\n          if (payload.length) {\n            var cell = {\n              v: payload.join(\"\"),\n              t: \"s\"\n            };\n            if (cell.v == \"TRUE\" || cell.v == \"FALSE\") {\n              cell.v = cell.v == \"TRUE\";\n              cell.t = \"b\";\n            } else if (!isNaN(fuzzynum(cell.v))) {\n              cell.t = \"n\";\n              if (o.cellText !== false) cell.w = cell.v;\n              cell.v = fuzzynum(cell.v);\n            }\n            if (dense) row[C] = cell;else ws[encode_cell({\n              r: R,\n              c: C\n            })] = cell;\n          }\n          payload = [];\n          break;\n        case \"\\\\par\":\n          payload.push(\"\\n\");\n          break;\n      }\n      last_index = rtfre.lastIndex;\n    }\n    if (C > range.e.c) range.e.c = C;\n  });\n  ws[\"!ref\"] = encode_range(range);\n  return ws;\n}\nfunction rtf_to_workbook(d, opts) {\n  var wb = sheet_to_workbook(rtf_to_sheet(d, opts), opts);\n  wb.bookType = \"rtf\";\n  return wb;\n}\nfunction sheet_to_rtf(ws, opts) {\n  var o = [\"{\\\\rtf1\\\\ansi\"];\n  if (!ws[\"!ref\"]) return o[0] + \"}\";\n  var r = safe_decode_range(ws[\"!ref\"]),\n    cell;\n  var dense = ws[\"!data\"] != null,\n    row = [];\n  for (var R = r.s.r; R <= r.e.r; ++R) {\n    o.push(\"\\\\trowd\\\\trautofit1\");\n    for (var C = r.s.c; C <= r.e.c; ++C) o.push(\"\\\\cellx\" + (C + 1));\n    o.push(\"\\\\pard\\\\intbl\");\n    if (dense) row = ws[\"!data\"][R] || [];\n    for (C = r.s.c; C <= r.e.c; ++C) {\n      var coord = encode_cell({\n        r: R,\n        c: C\n      });\n      cell = dense ? row[C] : ws[coord];\n      if (!cell || cell.v == null && (!cell.f || cell.F)) {\n        o.push(\" \\\\cell\");\n        continue;\n      }\n      o.push(\" \" + (cell.w || (format_cell(cell), cell.w) || \"\").replace(/[\\r\\n]/g, \"\\\\par \"));\n      o.push(\"\\\\cell\");\n    }\n    o.push(\"\\\\pard\\\\intbl\\\\row\");\n  }\n  return o.join(\"\") + \"}\";\n}\nfunction hex2RGB(h) {\n  var o = h.slice(h[0] === \"#\" ? 1 : 0).slice(0, 6);\n  return [parseInt(o.slice(0, 2), 16), parseInt(o.slice(2, 4), 16), parseInt(o.slice(4, 6), 16)];\n}\nfunction rgb2Hex(rgb) {\n  for (var i = 0, o = 1; i != 3; ++i) o = o * 256 + (rgb[i] > 255 ? 255 : rgb[i] < 0 ? 0 : rgb[i]);\n  return o.toString(16).toUpperCase().slice(1);\n}\nfunction rgb2HSL(rgb) {\n  var R = rgb[0] / 255,\n    G = rgb[1] / 255,\n    B = rgb[2] / 255;\n  var M = Math.max(R, G, B),\n    m = Math.min(R, G, B),\n    C = M - m;\n  if (C === 0) return [0, 0, R];\n  var H6 = 0,\n    S = 0,\n    L2 = M + m;\n  S = C / (L2 > 1 ? 2 - L2 : L2);\n  switch (M) {\n    case R:\n      H6 = ((G - B) / C + 6) % 6;\n      break;\n    case G:\n      H6 = (B - R) / C + 2;\n      break;\n    case B:\n      H6 = (R - G) / C + 4;\n      break;\n  }\n  return [H6 / 6, S, L2 / 2];\n}\nfunction hsl2RGB(hsl) {\n  var H = hsl[0],\n    S = hsl[1],\n    L = hsl[2];\n  var C = S * 2 * (L < 0.5 ? L : 1 - L),\n    m = L - C / 2;\n  var rgb = [m, m, m],\n    h6 = 6 * H;\n  var X;\n  if (S !== 0) switch (h6 | 0) {\n    case 0:\n    case 6:\n      X = C * h6;\n      rgb[0] += C;\n      rgb[1] += X;\n      break;\n    case 1:\n      X = C * (2 - h6);\n      rgb[0] += X;\n      rgb[1] += C;\n      break;\n    case 2:\n      X = C * (h6 - 2);\n      rgb[1] += C;\n      rgb[2] += X;\n      break;\n    case 3:\n      X = C * (4 - h6);\n      rgb[1] += X;\n      rgb[2] += C;\n      break;\n    case 4:\n      X = C * (h6 - 4);\n      rgb[2] += C;\n      rgb[0] += X;\n      break;\n    case 5:\n      X = C * (6 - h6);\n      rgb[2] += X;\n      rgb[0] += C;\n      break;\n  }\n  for (var i = 0; i != 3; ++i) rgb[i] = Math.round(rgb[i] * 255);\n  return rgb;\n}\n\n/* 18.8.3 bgColor tint algorithm */\nfunction rgb_tint(hex, tint) {\n  if (tint === 0) return hex;\n  var hsl = rgb2HSL(hex2RGB(hex));\n  if (tint < 0) hsl[2] = hsl[2] * (1 + tint);else hsl[2] = 1 - (1 - hsl[2]) * (1 - tint);\n  return rgb2Hex(hsl2RGB(hsl));\n}\n\n/* 18.3.1.13 width calculations */\n/* [MS-OI29500] 2.1.595 Column Width & Formatting */\nvar DEF_MDW = 6,\n  MAX_MDW = 15,\n  MIN_MDW = 1,\n  MDW = DEF_MDW;\nfunction width2px(width) {\n  return Math.floor((width + Math.round(128 / MDW) / 256) * MDW);\n}\nfunction px2char(px) {\n  return Math.floor((px - 5) / MDW * 100 + 0.5) / 100;\n}\nfunction char2width(chr) {\n  return Math.round((chr * MDW + 5) / MDW * 256) / 256;\n}\n//function px2char_(px) { return (((px - 5)/MDW * 100 + 0.5))/100; }\n//function char2width_(chr) { return (((chr * MDW + 5)/MDW*256))/256; }\nfunction cycle_width(collw) {\n  return char2width(px2char(width2px(collw)));\n}\n/* XLSX/XLSB/XLS specify width in units of MDW */\nfunction find_mdw_colw(collw) {\n  var delta = Math.abs(collw - cycle_width(collw)),\n    _MDW = MDW;\n  if (delta > 0.005) for (MDW = MIN_MDW; MDW < MAX_MDW; ++MDW) if (Math.abs(collw - cycle_width(collw)) <= delta) {\n    delta = Math.abs(collw - cycle_width(collw));\n    _MDW = MDW;\n  }\n  MDW = _MDW;\n}\n/* XLML specifies width in terms of pixels */\n/*function find_mdw_wpx(wpx) {\n\tvar delta = Infinity, guess = 0, _MDW = MIN_MDW;\n\tfor(MDW=MIN_MDW; MDW<MAX_MDW; ++MDW) {\n\t\tguess = char2width_(px2char_(wpx))*256;\n\t\tguess = (guess) % 1;\n\t\tif(guess > 0.5) guess--;\n\t\tif(Math.abs(guess) < delta) { delta = Math.abs(guess); _MDW = MDW; }\n\t}\n\tMDW = _MDW;\n}*/\n\nfunction process_col(coll /*:ColInfo*/) {\n  if (coll.width) {\n    coll.wpx = width2px(coll.width);\n    coll.wch = px2char(coll.wpx);\n    coll.MDW = MDW;\n  } else if (coll.wpx) {\n    coll.wch = px2char(coll.wpx);\n    coll.width = char2width(coll.wch);\n    coll.MDW = MDW;\n  } else if (typeof coll.wch == 'number') {\n    coll.width = char2width(coll.wch);\n    coll.wpx = width2px(coll.width);\n    coll.MDW = MDW;\n  }\n  if (coll.customWidth) delete coll.customWidth;\n}\nvar DEF_PPI = 96,\n  PPI = DEF_PPI;\nfunction px2pt(px) {\n  return px * 96 / PPI;\n}\nfunction pt2px(pt) {\n  return pt * PPI / 96;\n}\n\n/* [MS-EXSPXML3] 2.4.54 ST_enmPattern */\nvar XLMLPatternTypeMap = {\n  \"None\": \"none\",\n  \"Solid\": \"solid\",\n  \"Gray50\": \"mediumGray\",\n  \"Gray75\": \"darkGray\",\n  \"Gray25\": \"lightGray\",\n  \"HorzStripe\": \"darkHorizontal\",\n  \"VertStripe\": \"darkVertical\",\n  \"ReverseDiagStripe\": \"darkDown\",\n  \"DiagStripe\": \"darkUp\",\n  \"DiagCross\": \"darkGrid\",\n  \"ThickDiagCross\": \"darkTrellis\",\n  \"ThinHorzStripe\": \"lightHorizontal\",\n  \"ThinVertStripe\": \"lightVertical\",\n  \"ThinReverseDiagStripe\": \"lightDown\",\n  \"ThinHorzCross\": \"lightGrid\"\n};\n\n/* 18.8.5 borders CT_Borders */\nfunction parse_borders(t, styles, themes, opts) {\n  styles.Borders = [];\n  var border = {};\n  var pass = false;\n  (t[0].match(tagregex) || []).forEach(function (x) {\n    var y = parsexmltag(x);\n    switch (strip_ns(y[0])) {\n      case '<borders':\n      case '<borders>':\n      case '</borders>':\n        break;\n\n      /* 18.8.4 border CT_Border */\n      case '<border':\n      case '<border>':\n      case '<border/>':\n        border = /*::(*/{} /*:: :any)*/;\n        if (y.diagonalUp) border.diagonalUp = parsexmlbool(y.diagonalUp);\n        if (y.diagonalDown) border.diagonalDown = parsexmlbool(y.diagonalDown);\n        styles.Borders.push(border);\n        break;\n      case '</border>':\n        break;\n\n      /* note: not in spec, appears to be CT_BorderPr */\n      case '<left/>':\n        break;\n      case '<left':\n      case '<left>':\n        break;\n      case '</left>':\n        break;\n\n      /* note: not in spec, appears to be CT_BorderPr */\n      case '<right/>':\n        break;\n      case '<right':\n      case '<right>':\n        break;\n      case '</right>':\n        break;\n\n      /* 18.8.43 top CT_BorderPr */\n      case '<top/>':\n        break;\n      case '<top':\n      case '<top>':\n        break;\n      case '</top>':\n        break;\n\n      /* 18.8.6 bottom CT_BorderPr */\n      case '<bottom/>':\n        break;\n      case '<bottom':\n      case '<bottom>':\n        break;\n      case '</bottom>':\n        break;\n\n      /* 18.8.13 diagonal CT_BorderPr */\n      case '<diagonal':\n      case '<diagonal>':\n      case '<diagonal/>':\n        break;\n      case '</diagonal>':\n        break;\n\n      /* 18.8.25 horizontal CT_BorderPr */\n      case '<horizontal':\n      case '<horizontal>':\n      case '<horizontal/>':\n        break;\n      case '</horizontal>':\n        break;\n\n      /* 18.8.44 vertical CT_BorderPr */\n      case '<vertical':\n      case '<vertical>':\n      case '<vertical/>':\n        break;\n      case '</vertical>':\n        break;\n\n      /* 18.8.37 start CT_BorderPr */\n      case '<start':\n      case '<start>':\n      case '<start/>':\n        break;\n      case '</start>':\n        break;\n\n      /* 18.8.16 end CT_BorderPr */\n      case '<end':\n      case '<end>':\n      case '<end/>':\n        break;\n      case '</end>':\n        break;\n\n      /* 18.8.? color CT_Color */\n      case '<color':\n      case '<color>':\n        break;\n      case '<color/>':\n      case '</color>':\n        break;\n\n      /* 18.2.10 extLst CT_ExtensionList ? */\n      case '<extLst':\n      case '<extLst>':\n      case '</extLst>':\n        break;\n      case '<ext':\n        pass = true;\n        break;\n      case '</ext>':\n        pass = false;\n        break;\n      default:\n        if (opts && opts.WTF) {\n          if (!pass) throw new Error('unrecognized ' + y[0] + ' in borders');\n        }\n    }\n  });\n}\n\n/* 18.8.21 fills CT_Fills */\nfunction parse_fills(t, styles, themes, opts) {\n  styles.Fills = [];\n  var fill = {};\n  var pass = false;\n  (t[0].match(tagregex) || []).forEach(function (x) {\n    var y = parsexmltag(x);\n    switch (strip_ns(y[0])) {\n      case '<fills':\n      case '<fills>':\n      case '</fills>':\n        break;\n\n      /* 18.8.20 fill CT_Fill */\n      case '<fill>':\n      case '<fill':\n      case '<fill/>':\n        fill = {};\n        styles.Fills.push(fill);\n        break;\n      case '</fill>':\n        break;\n\n      /* 18.8.24 gradientFill CT_GradientFill */\n      case '<gradientFill>':\n        break;\n      case '<gradientFill':\n      case '</gradientFill>':\n        styles.Fills.push(fill);\n        fill = {};\n        break;\n\n      /* 18.8.32 patternFill CT_PatternFill */\n      case '<patternFill':\n      case '<patternFill>':\n        if (y.patternType) fill.patternType = y.patternType;\n        break;\n      case '<patternFill/>':\n      case '</patternFill>':\n        break;\n\n      /* 18.8.3 bgColor CT_Color */\n      case '<bgColor':\n        if (!fill.bgColor) fill.bgColor = {};\n        if (y.indexed) fill.bgColor.indexed = parseInt(y.indexed, 10);\n        if (y.theme) fill.bgColor.theme = parseInt(y.theme, 10);\n        if (y.tint) fill.bgColor.tint = parseFloat(y.tint);\n        /* Excel uses ARGB strings */\n        if (y.rgb) fill.bgColor.rgb = y.rgb.slice(-6);\n        break;\n      case '<bgColor/>':\n      case '</bgColor>':\n        break;\n\n      /* 18.8.19 fgColor CT_Color */\n      case '<fgColor':\n        if (!fill.fgColor) fill.fgColor = {};\n        if (y.theme) fill.fgColor.theme = parseInt(y.theme, 10);\n        if (y.tint) fill.fgColor.tint = parseFloat(y.tint);\n        /* Excel uses ARGB strings */\n        if (y.rgb != null) fill.fgColor.rgb = y.rgb.slice(-6);\n        break;\n      case '<fgColor/>':\n      case '</fgColor>':\n        break;\n\n      /* 18.8.38 stop CT_GradientStop */\n      case '<stop':\n      case '<stop/>':\n        break;\n      case '</stop>':\n        break;\n\n      /* 18.8.? color CT_Color */\n      case '<color':\n      case '<color/>':\n        break;\n      case '</color>':\n        break;\n\n      /* 18.2.10 extLst CT_ExtensionList ? */\n      case '<extLst':\n      case '<extLst>':\n      case '</extLst>':\n        break;\n      case '<ext':\n        pass = true;\n        break;\n      case '</ext>':\n        pass = false;\n        break;\n      default:\n        if (opts && opts.WTF) {\n          if (!pass) throw new Error('unrecognized ' + y[0] + ' in fills');\n        }\n    }\n  });\n}\n\n/* 18.8.23 fonts CT_Fonts */\nfunction parse_fonts(t, styles, themes, opts) {\n  styles.Fonts = [];\n  var font = {};\n  var pass = false;\n  (t[0].match(tagregex) || []).forEach(function (x) {\n    var y = parsexmltag(x);\n    switch (strip_ns(y[0])) {\n      case '<fonts':\n      case '<fonts>':\n      case '</fonts>':\n        break;\n\n      /* 18.8.22 font CT_Font */\n      case '<font':\n      case '<font>':\n        break;\n      case '</font>':\n      case '<font/>':\n        styles.Fonts.push(font);\n        font = {};\n        break;\n\n      /* 18.8.29 name CT_FontName */\n      case '<name':\n        if (y.val) font.name = utf8read(y.val);\n        break;\n      case '<name/>':\n      case '</name>':\n        break;\n\n      /* 18.8.2  b CT_BooleanProperty */\n      case '<b':\n        font.bold = y.val ? parsexmlbool(y.val) : 1;\n        break;\n      case '<b/>':\n        font.bold = 1;\n        break;\n\n      /* 18.8.26 i CT_BooleanProperty */\n      case '<i':\n        font.italic = y.val ? parsexmlbool(y.val) : 1;\n        break;\n      case '<i/>':\n        font.italic = 1;\n        break;\n\n      /* 18.4.13 u CT_UnderlineProperty */\n      case '<u':\n        switch (y.val) {\n          case \"none\":\n            font.underline = 0x00;\n            break;\n          case \"single\":\n            font.underline = 0x01;\n            break;\n          case \"double\":\n            font.underline = 0x02;\n            break;\n          case \"singleAccounting\":\n            font.underline = 0x21;\n            break;\n          case \"doubleAccounting\":\n            font.underline = 0x22;\n            break;\n        }\n        break;\n      case '<u/>':\n        font.underline = 1;\n        break;\n\n      /* 18.4.10 strike CT_BooleanProperty */\n      case '<strike':\n        font.strike = y.val ? parsexmlbool(y.val) : 1;\n        break;\n      case '<strike/>':\n        font.strike = 1;\n        break;\n\n      /* 18.4.2  outline CT_BooleanProperty */\n      case '<outline':\n        font.outline = y.val ? parsexmlbool(y.val) : 1;\n        break;\n      case '<outline/>':\n        font.outline = 1;\n        break;\n\n      /* 18.8.36 shadow CT_BooleanProperty */\n      case '<shadow':\n        font.shadow = y.val ? parsexmlbool(y.val) : 1;\n        break;\n      case '<shadow/>':\n        font.shadow = 1;\n        break;\n\n      /* 18.8.12 condense CT_BooleanProperty */\n      case '<condense':\n        font.condense = y.val ? parsexmlbool(y.val) : 1;\n        break;\n      case '<condense/>':\n        font.condense = 1;\n        break;\n\n      /* 18.8.17 extend CT_BooleanProperty */\n      case '<extend':\n        font.extend = y.val ? parsexmlbool(y.val) : 1;\n        break;\n      case '<extend/>':\n        font.extend = 1;\n        break;\n\n      /* 18.4.11 sz CT_FontSize */\n      case '<sz':\n        if (y.val) font.sz = +y.val;\n        break;\n      case '<sz/>':\n      case '</sz>':\n        break;\n\n      /* 18.4.14 vertAlign CT_VerticalAlignFontProperty */\n      case '<vertAlign':\n        if (y.val) font.vertAlign = y.val;\n        break;\n      case '<vertAlign/>':\n      case '</vertAlign>':\n        break;\n\n      /* 18.8.18 family CT_FontFamily */\n      case '<family':\n        if (y.val) font.family = parseInt(y.val, 10);\n        break;\n      case '<family/>':\n      case '</family>':\n        break;\n\n      /* 18.8.35 scheme CT_FontScheme */\n      case '<scheme':\n        if (y.val) font.scheme = y.val;\n        break;\n      case '<scheme/>':\n      case '</scheme>':\n        break;\n\n      /* 18.4.1 charset CT_IntProperty */\n      case '<charset':\n        if (y.val == '1') break;\n        y.codepage = CS2CP[parseInt(y.val, 10)];\n        break;\n\n      /* 18.?.? color CT_Color */\n      case '<color':\n        if (!font.color) font.color = {};\n        if (y.auto) font.color.auto = parsexmlbool(y.auto);\n        if (y.rgb) font.color.rgb = y.rgb.slice(-6);else if (y.indexed) {\n          font.color.index = parseInt(y.indexed, 10);\n          var icv = XLSIcv[font.color.index];\n          if (font.color.index == 81) icv = XLSIcv[1];\n          if (!icv) icv = XLSIcv[1]; //throw new Error(x); // note: 206 is valid\n          font.color.rgb = icv[0].toString(16) + icv[1].toString(16) + icv[2].toString(16);\n        } else if (y.theme) {\n          font.color.theme = parseInt(y.theme, 10);\n          if (y.tint) font.color.tint = parseFloat(y.tint);\n          if (y.theme && themes.themeElements && themes.themeElements.clrScheme) {\n            font.color.rgb = rgb_tint(themes.themeElements.clrScheme[font.color.theme].rgb, font.color.tint || 0);\n          }\n        }\n        break;\n      case '<color/>':\n      case '</color>':\n        break;\n\n      /* note: sometimes mc:AlternateContent appears bare */\n      case '<AlternateContent':\n        pass = true;\n        break;\n      case '</AlternateContent>':\n        pass = false;\n        break;\n\n      /* 18.2.10 extLst CT_ExtensionList ? */\n      case '<extLst':\n      case '<extLst>':\n      case '</extLst>':\n        break;\n      case '<ext':\n        pass = true;\n        break;\n      case '</ext>':\n        pass = false;\n        break;\n      default:\n        if (opts && opts.WTF) {\n          if (!pass) throw new Error('unrecognized ' + y[0] + ' in fonts');\n        }\n    }\n  });\n}\n\n/* 18.8.31 numFmts CT_NumFmts */\nfunction parse_numFmts(t, styles, opts) {\n  styles.NumberFmt = [];\n  var k /*Array<number>*/ = keys(table_fmt) /*:any*/;\n  for (var i = 0; i < k.length; ++i) styles.NumberFmt[k[i]] = table_fmt[k[i]];\n  var m = t[0].match(tagregex);\n  if (!m) return;\n  for (i = 0; i < m.length; ++i) {\n    var y = parsexmltag(m[i]);\n    switch (strip_ns(y[0])) {\n      case '<numFmts':\n      case '</numFmts>':\n      case '<numFmts/>':\n      case '<numFmts>':\n        break;\n      case '<numFmt':\n        {\n          var f = unescapexml(utf8read(y.formatCode)),\n            j = parseInt(y.numFmtId, 10);\n          styles.NumberFmt[j] = f;\n          if (j > 0) {\n            if (j > 0x188) {\n              for (j = 0x188; j > 0x3c; --j) if (styles.NumberFmt[j] == null) break;\n              styles.NumberFmt[j] = f;\n            }\n            SSF__load(f, j);\n          }\n        }\n        break;\n      case '</numFmt>':\n        break;\n      default:\n        if (opts.WTF) throw new Error('unrecognized ' + y[0] + ' in numFmts');\n    }\n  }\n}\nfunction write_numFmts(NF /*:{[n:number|string]:string}*/ /*::, opts*/) {\n  var o = [\"<numFmts>\"];\n  [[5, 8], [23, 26], [41, 44], [/*63*/50, /*66],[164,*/392]].forEach(function (r) {\n    for (var i = r[0]; i <= r[1]; ++i) if (NF[i] != null) o[o.length] = writextag('numFmt', null, {\n      numFmtId: i,\n      formatCode: escapexml(NF[i])\n    });\n  });\n  if (o.length === 1) return \"\";\n  o[o.length] = \"</numFmts>\";\n  o[0] = writextag('numFmts', null, {\n    count: o.length - 2\n  }).replace(\"/>\", \">\");\n  return o.join(\"\");\n}\n\n/* 18.8.10 cellXfs CT_CellXfs */\nvar cellXF_uint = [\"numFmtId\", \"fillId\", \"fontId\", \"borderId\", \"xfId\"];\nvar cellXF_bool = [\"applyAlignment\", \"applyBorder\", \"applyFill\", \"applyFont\", \"applyNumberFormat\", \"applyProtection\", \"pivotButton\", \"quotePrefix\"];\nfunction parse_cellXfs(t, styles, opts) {\n  styles.CellXf = [];\n  var xf;\n  var pass = false;\n  (t[0].match(tagregex) || []).forEach(function (x) {\n    var y = parsexmltag(x),\n      i = 0;\n    switch (strip_ns(y[0])) {\n      case '<cellXfs':\n      case '<cellXfs>':\n      case '<cellXfs/>':\n      case '</cellXfs>':\n        break;\n\n      /* 18.8.45 xf CT_Xf */\n      case '<xf':\n      case '<xf/>':\n        xf = y;\n        delete xf[0];\n        for (i = 0; i < cellXF_uint.length; ++i) if (xf[cellXF_uint[i]]) xf[cellXF_uint[i]] = parseInt(xf[cellXF_uint[i]], 10);\n        for (i = 0; i < cellXF_bool.length; ++i) if (xf[cellXF_bool[i]]) xf[cellXF_bool[i]] = parsexmlbool(xf[cellXF_bool[i]]);\n        if (styles.NumberFmt && xf.numFmtId > 0x188) {\n          for (i = 0x188; i > 0x3c; --i) if (styles.NumberFmt[xf.numFmtId] == styles.NumberFmt[i]) {\n            xf.numFmtId = i;\n            break;\n          }\n        }\n        styles.CellXf.push(xf);\n        break;\n      case '</xf>':\n        break;\n\n      /* 18.8.1 alignment CT_CellAlignment */\n      case '<alignment':\n      case '<alignment/>':\n        var alignment = {};\n        if (y.vertical) alignment.vertical = y.vertical;\n        if (y.horizontal) alignment.horizontal = y.horizontal;\n        if (y.textRotation != null) alignment.textRotation = y.textRotation;\n        if (y.indent) alignment.indent = y.indent;\n        if (y.wrapText) alignment.wrapText = parsexmlbool(y.wrapText);\n        xf.alignment = alignment;\n        break;\n      case '</alignment>':\n        break;\n\n      /* 18.8.33 protection CT_CellProtection */\n      case '<protection':\n        break;\n      case '</protection>':\n      case '<protection/>':\n        break;\n\n      /* note: sometimes mc:AlternateContent appears bare */\n      case '<AlternateContent':\n        pass = true;\n        break;\n      case '</AlternateContent>':\n        pass = false;\n        break;\n\n      /* 18.2.10 extLst CT_ExtensionList ? */\n      case '<extLst':\n      case '<extLst>':\n      case '</extLst>':\n        break;\n      case '<ext':\n        pass = true;\n        break;\n      case '</ext>':\n        pass = false;\n        break;\n      default:\n        if (opts && opts.WTF) {\n          if (!pass) throw new Error('unrecognized ' + y[0] + ' in cellXfs');\n        }\n    }\n  });\n}\nfunction write_cellXfs(cellXfs) /*:string*/{\n  var o /*:Array<string>*/ = [];\n  o[o.length] = writextag('cellXfs', null);\n  cellXfs.forEach(function (c) {\n    o[o.length] = writextag('xf', null, c);\n  });\n  o[o.length] = \"</cellXfs>\";\n  if (o.length === 2) return \"\";\n  o[0] = writextag('cellXfs', null, {\n    count: o.length - 2\n  }).replace(\"/>\", \">\");\n  return o.join(\"\");\n}\n\n/* 18.8 Styles CT_Stylesheet*/\nvar parse_sty_xml = /*#__PURE__*/function make_pstyx() {\n  var numFmtRegex = /<(?:\\w+:)?numFmts([^>]*)>[\\S\\s]*?<\\/(?:\\w+:)?numFmts>/;\n  var cellXfRegex = /<(?:\\w+:)?cellXfs([^>]*)>[\\S\\s]*?<\\/(?:\\w+:)?cellXfs>/;\n  var fillsRegex = /<(?:\\w+:)?fills([^>]*)>[\\S\\s]*?<\\/(?:\\w+:)?fills>/;\n  var fontsRegex = /<(?:\\w+:)?fonts([^>]*)>[\\S\\s]*?<\\/(?:\\w+:)?fonts>/;\n  var bordersRegex = /<(?:\\w+:)?borders([^>]*)>[\\S\\s]*?<\\/(?:\\w+:)?borders>/;\n  return function parse_sty_xml(data, themes, opts) {\n    var styles = {};\n    if (!data) return styles;\n    data = data.replace(/<!--([\\s\\S]*?)-->/mg, \"\").replace(/<!DOCTYPE[^\\[]*\\[[^\\]]*\\]>/gm, \"\");\n    /* 18.8.39 styleSheet CT_Stylesheet */\n    var t;\n\n    /* 18.8.31 numFmts CT_NumFmts ? */\n    if (t = data.match(numFmtRegex)) parse_numFmts(t, styles, opts);\n\n    /* 18.8.23 fonts CT_Fonts ? */\n    if (t = data.match(fontsRegex)) parse_fonts(t, styles, themes, opts);\n\n    /* 18.8.21 fills CT_Fills ? */\n    if (t = data.match(fillsRegex)) parse_fills(t, styles, themes, opts);\n\n    /* 18.8.5  borders CT_Borders ? */\n    if (t = data.match(bordersRegex)) parse_borders(t, styles, themes, opts);\n\n    /* 18.8.9  cellStyleXfs CT_CellStyleXfs ? */\n    /* 18.8.8  cellStyles CT_CellStyles ? */\n\n    /* 18.8.10 cellXfs CT_CellXfs ? */\n    if (t = data.match(cellXfRegex)) parse_cellXfs(t, styles, opts);\n\n    /* 18.8.15 dxfs CT_Dxfs ? */\n    /* 18.8.42 tableStyles CT_TableStyles ? */\n    /* 18.8.11 colors CT_Colors ? */\n    /* 18.2.10 extLst CT_ExtensionList ? */\n\n    return styles;\n  };\n}();\nfunction write_sty_xml(wb /*:Workbook*/, opts) /*:string*/{\n  var o = [XML_HEADER, writextag('styleSheet', null, {\n      'xmlns': XMLNS_main[0],\n      'xmlns:vt': XMLNS.vt\n    })],\n    w;\n  if (wb.SSF && (w = write_numFmts(wb.SSF)) != null) o[o.length] = w;\n  o[o.length] = '<fonts count=\"1\"><font><sz val=\"12\"/><color theme=\"1\"/><name val=\"Calibri\"/><family val=\"2\"/><scheme val=\"minor\"/></font></fonts>';\n  o[o.length] = '<fills count=\"2\"><fill><patternFill patternType=\"none\"/></fill><fill><patternFill patternType=\"gray125\"/></fill></fills>';\n  o[o.length] = '<borders count=\"1\"><border><left/><right/><top/><bottom/><diagonal/></border></borders>';\n  o[o.length] = '<cellStyleXfs count=\"1\"><xf numFmtId=\"0\" fontId=\"0\" fillId=\"0\" borderId=\"0\"/></cellStyleXfs>';\n  if (w = write_cellXfs(opts.cellXfs)) o[o.length] = w;\n  o[o.length] = '<cellStyles count=\"1\"><cellStyle name=\"Normal\" xfId=\"0\" builtinId=\"0\"/></cellStyles>';\n  o[o.length] = '<dxfs count=\"0\"/>';\n  o[o.length] = '<tableStyles count=\"0\" defaultTableStyle=\"TableStyleMedium9\" defaultPivotStyle=\"PivotStyleMedium4\"/>';\n  if (o.length > 2) {\n    o[o.length] = '</styleSheet>';\n    o[1] = o[1].replace(\"/>\", \">\");\n  }\n  return o.join(\"\");\n}\n/* [MS-XLSB] 2.4.657 BrtFmt */\nfunction parse_BrtFmt(data, length /*:number*/) {\n  var numFmtId = data.read_shift(2);\n  var stFmtCode = parse_XLWideString(data);\n  return [numFmtId, stFmtCode];\n}\nfunction write_BrtFmt(i /*:number*/, f /*:string*/, o) {\n  if (!o) o = new_buf(6 + 4 * f.length);\n  o.write_shift(2, i);\n  write_XLWideString(f, o);\n  var out = o.length > o.l ? o.slice(0, o.l) : o;\n  if (o.l == null) o.l = o.length;\n  return out;\n}\n\n/* [MS-XLSB] 2.4.659 BrtFont TODO */\nfunction parse_BrtFont(data, length /*:number*/, opts) {\n  var out = {} /*:any*/;\n\n  out.sz = data.read_shift(2) / 20;\n  var grbit = parse_FontFlags(data);\n  if (grbit.fItalic) out.italic = 1;\n  if (grbit.fCondense) out.condense = 1;\n  if (grbit.fExtend) out.extend = 1;\n  if (grbit.fShadow) out.shadow = 1;\n  if (grbit.fOutline) out.outline = 1;\n  if (grbit.fStrikeout) out.strike = 1;\n  var bls = data.read_shift(2);\n  if (bls === 0x02BC) out.bold = 1;\n  switch (data.read_shift(2)) {\n    /* case 0: out.vertAlign = \"baseline\"; break; */\n    case 1:\n      out.vertAlign = \"superscript\";\n      break;\n    case 2:\n      out.vertAlign = \"subscript\";\n      break;\n  }\n  var underline = data.read_shift(1);\n  if (underline != 0) out.underline = underline;\n  var family = data.read_shift(1);\n  if (family > 0) out.family = family;\n  var bCharSet = data.read_shift(1);\n  if (bCharSet > 0) out.charset = bCharSet;\n  data.l++;\n  out.color = parse_BrtColor(data);\n  switch (data.read_shift(1)) {\n    /* case 0: out.scheme = \"none\": break; */\n    case 1:\n      out.scheme = \"major\";\n      break;\n    case 2:\n      out.scheme = \"minor\";\n      break;\n  }\n  out.name = parse_XLWideString(data);\n  return out;\n}\nfunction write_BrtFont(font /*:any*/, o) {\n  if (!o) o = new_buf(25 + 4 * 32);\n  o.write_shift(2, font.sz * 20);\n  write_FontFlags(font, o);\n  o.write_shift(2, font.bold ? 0x02BC : 0x0190);\n  var sss = 0;\n  if (font.vertAlign == \"superscript\") sss = 1;else if (font.vertAlign == \"subscript\") sss = 2;\n  o.write_shift(2, sss);\n  o.write_shift(1, font.underline || 0);\n  o.write_shift(1, font.family || 0);\n  o.write_shift(1, font.charset || 0);\n  o.write_shift(1, 0);\n  write_BrtColor(font.color, o);\n  var scheme = 0;\n  if (font.scheme == \"major\") scheme = 1;\n  if (font.scheme == \"minor\") scheme = 2;\n  o.write_shift(1, scheme);\n  write_XLWideString(font.name, o);\n  return o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.4.650 BrtFill */\nvar XLSBFillPTNames = [\"none\", \"solid\", \"mediumGray\", \"darkGray\", \"lightGray\", \"darkHorizontal\", \"darkVertical\", \"darkDown\", \"darkUp\", \"darkGrid\", \"darkTrellis\", \"lightHorizontal\", \"lightVertical\", \"lightDown\", \"lightUp\", \"lightGrid\", \"lightTrellis\", \"gray125\", \"gray0625\"];\nvar rev_XLSBFillPTNames /*:EvertNumType*/;\n/* TODO: gradient fill representation */\nvar parse_BrtFill = parsenoop;\nfunction write_BrtFill(fill, o) {\n  if (!o) o = new_buf(4 * 3 + 8 * 7 + 16 * 1);\n  if (!rev_XLSBFillPTNames) rev_XLSBFillPTNames = evert(XLSBFillPTNames) /*:any*/;\n  var fls /*:number*/ = rev_XLSBFillPTNames[fill.patternType];\n  if (fls == null) fls = 0x28;\n  o.write_shift(4, fls);\n  var j = 0;\n  if (fls != 0x28) {\n    /* TODO: custom FG Color */\n    write_BrtColor({\n      auto: 1\n    }, o);\n    /* TODO: custom BG Color */\n    write_BrtColor({\n      auto: 1\n    }, o);\n    for (; j < 12; ++j) o.write_shift(4, 0);\n  } else {\n    for (; j < 4; ++j) o.write_shift(4, 0);\n    for (; j < 12; ++j) o.write_shift(4, 0); /* TODO */\n    /* iGradientType */\n    /* xnumDegree */\n    /* xnumFillToLeft */\n    /* xnumFillToRight */\n    /* xnumFillToTop */\n    /* xnumFillToBottom */\n    /* cNumStop */\n    /* xfillGradientStop */\n  }\n\n  return o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.4.824 BrtXF */\nfunction parse_BrtXF(data, length /*:number*/) {\n  var tgt = data.l + length;\n  var ixfeParent = data.read_shift(2);\n  var ifmt = data.read_shift(2);\n  data.l = tgt;\n  return {\n    ixfe: ixfeParent,\n    numFmtId: ifmt\n  };\n}\nfunction write_BrtXF(data, ixfeP, o) {\n  if (!o) o = new_buf(16);\n  o.write_shift(2, ixfeP || 0);\n  o.write_shift(2, data.numFmtId || 0);\n  o.write_shift(2, 0); /* iFont */\n  o.write_shift(2, 0); /* iFill */\n  o.write_shift(2, 0); /* ixBorder */\n  o.write_shift(1, 0); /* trot */\n  o.write_shift(1, 0); /* indent */\n  var flow = 0;\n  o.write_shift(1, flow); /* flags */\n  o.write_shift(1, 0); /* flags */\n  o.write_shift(1, 0); /* xfGrbitAtr */\n  o.write_shift(1, 0);\n  return o;\n}\n\n/* [MS-XLSB] 2.5.4 Blxf TODO */\nfunction write_Blxf(data, o) {\n  if (!o) o = new_buf(10);\n  o.write_shift(1, 0); /* dg */\n  o.write_shift(1, 0);\n  o.write_shift(4, 0); /* color */\n  o.write_shift(4, 0); /* color */\n  return o;\n}\n/* [MS-XLSB] 2.4.302 BrtBorder TODO */\nvar parse_BrtBorder = parsenoop;\nfunction write_BrtBorder(border, o) {\n  if (!o) o = new_buf(51);\n  o.write_shift(1, 0); /* diagonal */\n  write_Blxf(null, o); /* top */\n  write_Blxf(null, o); /* bottom */\n  write_Blxf(null, o); /* left */\n  write_Blxf(null, o); /* right */\n  write_Blxf(null, o); /* diag */\n  return o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.4.763 BrtStyle TODO */\nfunction write_BrtStyle(style, o) {\n  if (!o) o = new_buf(12 + 4 * 10);\n  o.write_shift(4, style.xfId);\n  o.write_shift(2, 1);\n  o.write_shift(1, +style.builtinId);\n  o.write_shift(1, 0); /* iLevel */\n  write_XLNullableWideString(style.name || \"\", o);\n  return o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.4.272 BrtBeginTableStyles */\nfunction write_BrtBeginTableStyles(cnt, defTableStyle, defPivotStyle) {\n  var o = new_buf(4 + 256 * 2 * 4);\n  o.write_shift(4, cnt);\n  write_XLNullableWideString(defTableStyle, o);\n  write_XLNullableWideString(defPivotStyle, o);\n  return o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.1.7.50 Styles */\nfunction parse_sty_bin(data, themes, opts) {\n  var styles = {};\n  styles.NumberFmt = [] /*:any*/;\n  for (var y in table_fmt) styles.NumberFmt[y] = table_fmt[y];\n  styles.CellXf = [];\n  styles.Fonts = [];\n  var state /*:Array<string>*/ = [];\n  var pass = false;\n  recordhopper(data, function hopper_sty(val, R, RT) {\n    switch (RT) {\n      case 0x002C:\n        /* BrtFmt */\n        styles.NumberFmt[val[0]] = val[1];\n        SSF__load(val[1], val[0]);\n        break;\n      case 0x002B:\n        /* BrtFont */\n        styles.Fonts.push(val);\n        if (val.color.theme != null && themes && themes.themeElements && themes.themeElements.clrScheme) {\n          val.color.rgb = rgb_tint(themes.themeElements.clrScheme[val.color.theme].rgb, val.color.tint || 0);\n        }\n        break;\n      case 0x0401:\n        /* BrtKnownFonts */break;\n      case 0x002D:\n        /* BrtFill */\n        break;\n      case 0x002E:\n        /* BrtBorder */\n        break;\n      case 0x002F:\n        /* BrtXF */\n        if (state[state.length - 1] == 0x0269 /* BrtBeginCellXFs */) {\n          styles.CellXf.push(val);\n        }\n        break;\n      case 0x0030: /* BrtStyle */\n      case 0x01FB: /* BrtDXF */\n      case 0x023C: /* BrtMRUColor */\n      case 0x01DB:\n        /* BrtIndexedColor */\n        break;\n      case 0x0493: /* BrtDXF14 */\n      case 0x0836: /* BrtDXF15 */\n      case 0x046A: /* BrtSlicerStyleElement */\n      case 0x0200: /* BrtTableStyleElement */\n      case 0x082F: /* BrtTimelineStyleElement */\n      case 0x0C00:\n        /* BrtUid */\n        break;\n      case 0x0023:\n        /* BrtFRTBegin */\n        pass = true;\n        break;\n      case 0x0024:\n        /* BrtFRTEnd */\n        pass = false;\n        break;\n      case 0x0025:\n        /* BrtACBegin */\n        state.push(RT);\n        pass = true;\n        break;\n      case 0x0026:\n        /* BrtACEnd */\n        state.pop();\n        pass = false;\n        break;\n      default:\n        if (R.T > 0) state.push(RT);else if (R.T < 0) state.pop();else if (!pass || opts.WTF && state[state.length - 1] != 0x0025 /* BrtACBegin */) throw new Error(\"Unexpected record 0x\" + RT.toString(16));\n    }\n  });\n  return styles;\n}\nfunction write_FMTS_bin(ba, NF /*:?SSFTable*/) {\n  if (!NF) return;\n  var cnt = 0;\n  [[5, 8], [23, 26], [41, 44], [/*63*/50, /*66],[164,*/392]].forEach(function (r) {\n    /*:: if(!NF) return; */\n    for (var i = r[0]; i <= r[1]; ++i) if (NF[i] != null) ++cnt;\n  });\n  if (cnt == 0) return;\n  write_record(ba, 0x0267 /* BrtBeginFmts */, write_UInt32LE(cnt));\n  [[5, 8], [23, 26], [41, 44], [/*63*/50, /*66],[164,*/392]].forEach(function (r) {\n    /*:: if(!NF) return; */\n    for (var i = r[0]; i <= r[1]; ++i) if (NF[i] != null) write_record(ba, 0x002C /* BrtFmt */, write_BrtFmt(i, NF[i]));\n  });\n  write_record(ba, 0x0268 /* BrtEndFmts */);\n}\n\nfunction write_FONTS_bin(ba /*::, data*/) {\n  var cnt = 1;\n  write_record(ba, 0x0263 /* BrtBeginFonts */, write_UInt32LE(cnt));\n  write_record(ba, 0x002B /* BrtFont */, write_BrtFont({\n    sz: 12,\n    color: {\n      theme: 1\n    },\n    name: \"Calibri\",\n    family: 2,\n    scheme: \"minor\"\n  }));\n  /* 1*65491BrtFont [ACFONTS] */\n  write_record(ba, 0x0264 /* BrtEndFonts */);\n}\n\nfunction write_FILLS_bin(ba /*::, data*/) {\n  var cnt = 2;\n  write_record(ba, 0x025B /* BrtBeginFills */, write_UInt32LE(cnt));\n  write_record(ba, 0x002D /* BrtFill */, write_BrtFill({\n    patternType: \"none\"\n  }));\n  write_record(ba, 0x002D /* BrtFill */, write_BrtFill({\n    patternType: \"gray125\"\n  }));\n  /* 1*65431BrtFill */\n  write_record(ba, 0x025C /* BrtEndFills */);\n}\n\nfunction write_BORDERS_bin(ba /*::, data*/) {\n  var cnt = 1;\n  write_record(ba, 0x0265 /* BrtBeginBorders */, write_UInt32LE(cnt));\n  write_record(ba, 0x002E /* BrtBorder */, write_BrtBorder());\n  /* 1*65430BrtBorder */\n  write_record(ba, 0x0266 /* BrtEndBorders */);\n}\n\nfunction write_CELLSTYLEXFS_bin(ba /*::, data*/) {\n  var cnt = 1;\n  write_record(ba, 0x0272 /* BrtBeginCellStyleXFs */, write_UInt32LE(cnt));\n  write_record(ba, 0x002F /* BrtXF */, write_BrtXF({\n    numFmtId: 0,\n    fontId: 0,\n    fillId: 0,\n    borderId: 0\n  }, 0xFFFF));\n  /* 1*65430(BrtXF *FRT) */\n  write_record(ba, 0x0273 /* BrtEndCellStyleXFs */);\n}\n\nfunction write_CELLXFS_bin(ba, data) {\n  write_record(ba, 0x0269 /* BrtBeginCellXFs */, write_UInt32LE(data.length));\n  data.forEach(function (c) {\n    write_record(ba, 0x002F /* BrtXF */, write_BrtXF(c, 0));\n  });\n  /* 1*65430(BrtXF *FRT) */\n  write_record(ba, 0x026A /* BrtEndCellXFs */);\n}\n\nfunction write_STYLES_bin(ba /*::, data*/) {\n  var cnt = 1;\n  write_record(ba, 0x026B /* BrtBeginStyles */, write_UInt32LE(cnt));\n  write_record(ba, 0x0030 /* BrtStyle */, write_BrtStyle({\n    xfId: 0,\n    builtinId: 0,\n    name: \"Normal\"\n  }));\n  /* 1*65430(BrtStyle *FRT) */\n  write_record(ba, 0x026C /* BrtEndStyles */);\n}\n\nfunction write_DXFS_bin(ba /*::, data*/) {\n  var cnt = 0;\n  write_record(ba, 0x01F9 /* BrtBeginDXFs */, write_UInt32LE(cnt));\n  /* *2147483647(BrtDXF *FRT) */\n  write_record(ba, 0x01FA /* BrtEndDXFs */);\n}\n\nfunction write_TABLESTYLES_bin(ba /*::, data*/) {\n  var cnt = 0;\n  write_record(ba, 0x01FC /* BrtBeginTableStyles */, write_BrtBeginTableStyles(cnt, \"TableStyleMedium9\", \"PivotStyleMedium4\"));\n  /* *TABLESTYLE */\n  write_record(ba, 0x01FD /* BrtEndTableStyles */);\n}\n\n/* [MS-XLSB] 2.1.7.50 Styles */\nfunction write_sty_bin(wb, opts) {\n  var ba = buf_array();\n  write_record(ba, 0x0116 /* BrtBeginStyleSheet */);\n  write_FMTS_bin(ba, wb.SSF);\n  write_FONTS_bin(ba);\n  write_FILLS_bin(ba);\n  write_BORDERS_bin(ba);\n  write_CELLSTYLEXFS_bin(ba);\n  write_CELLXFS_bin(ba, opts.cellXfs);\n  write_STYLES_bin(ba);\n  write_DXFS_bin(ba);\n  write_TABLESTYLES_bin(ba);\n  /* FRTSTYLESHEET*/\n  write_record(ba, 0x0117 /* BrtEndStyleSheet */);\n  return ba.end();\n}\n/* Even though theme layout is dk1 lt1 dk2 lt2, true order is lt1 dk1 lt2 dk2 */\nvar XLSXThemeClrScheme = ['</a:lt1>', '</a:dk1>', '</a:lt2>', '</a:dk2>', '</a:accent1>', '</a:accent2>', '</a:accent3>', '</a:accent4>', '</a:accent5>', '</a:accent6>', '</a:hlink>', '</a:folHlink>'];\n/* 20.1.6.2 clrScheme CT_ColorScheme */\nfunction parse_clrScheme(t, themes, opts) {\n  themes.themeElements.clrScheme = [];\n  var color = {};\n  (t[0].match(tagregex) || []).forEach(function (x) {\n    var y = parsexmltag(x);\n    switch (y[0]) {\n      /* 20.1.6.2 clrScheme (Color Scheme) CT_ColorScheme */\n      case '<a:clrScheme':\n      case '</a:clrScheme>':\n        break;\n\n      /* 20.1.2.3.32 srgbClr CT_SRgbColor */\n      case '<a:srgbClr':\n        color.rgb = y.val;\n        break;\n\n      /* 20.1.2.3.33 sysClr CT_SystemColor */\n      case '<a:sysClr':\n        color.rgb = y.lastClr;\n        break;\n\n      /* 20.1.4.1.1 accent1 (Accent 1) */\n      /* 20.1.4.1.2 accent2 (Accent 2) */\n      /* 20.1.4.1.3 accent3 (Accent 3) */\n      /* 20.1.4.1.4 accent4 (Accent 4) */\n      /* 20.1.4.1.5 accent5 (Accent 5) */\n      /* 20.1.4.1.6 accent6 (Accent 6) */\n      /* 20.1.4.1.9 dk1 (Dark 1) */\n      /* 20.1.4.1.10 dk2 (Dark 2) */\n      /* 20.1.4.1.15 folHlink (Followed Hyperlink) */\n      /* 20.1.4.1.19 hlink (Hyperlink) */\n      /* 20.1.4.1.22 lt1 (Light 1) */\n      /* 20.1.4.1.23 lt2 (Light 2) */\n      case '<a:dk1>':\n      case '</a:dk1>':\n      case '<a:lt1>':\n      case '</a:lt1>':\n      case '<a:dk2>':\n      case '</a:dk2>':\n      case '<a:lt2>':\n      case '</a:lt2>':\n      case '<a:accent1>':\n      case '</a:accent1>':\n      case '<a:accent2>':\n      case '</a:accent2>':\n      case '<a:accent3>':\n      case '</a:accent3>':\n      case '<a:accent4>':\n      case '</a:accent4>':\n      case '<a:accent5>':\n      case '</a:accent5>':\n      case '<a:accent6>':\n      case '</a:accent6>':\n      case '<a:hlink>':\n      case '</a:hlink>':\n      case '<a:folHlink>':\n      case '</a:folHlink>':\n        if (y[0].charAt(1) === '/') {\n          themes.themeElements.clrScheme[XLSXThemeClrScheme.indexOf(y[0])] = color;\n          color = {};\n        } else {\n          color.name = y[0].slice(3, y[0].length - 1);\n        }\n        break;\n      default:\n        if (opts && opts.WTF) throw new Error('Unrecognized ' + y[0] + ' in clrScheme');\n    }\n  });\n}\n\n/* 20.1.4.1.18 fontScheme CT_FontScheme */\nfunction parse_fontScheme( /*::t, themes, opts*/) {}\n\n/* 20.1.4.1.15 fmtScheme CT_StyleMatrix */\nfunction parse_fmtScheme( /*::t, themes, opts*/) {}\nvar clrsregex = /<a:clrScheme([^>]*)>[\\s\\S]*<\\/a:clrScheme>/;\nvar fntsregex = /<a:fontScheme([^>]*)>[\\s\\S]*<\\/a:fontScheme>/;\nvar fmtsregex = /<a:fmtScheme([^>]*)>[\\s\\S]*<\\/a:fmtScheme>/;\n\n/* 20.1.6.10 themeElements CT_BaseStyles */\nfunction parse_themeElements(data, themes, opts) {\n  themes.themeElements = {};\n  var t;\n  [/* clrScheme CT_ColorScheme */\n  ['clrScheme', clrsregex, parse_clrScheme], /* fontScheme CT_FontScheme */\n  ['fontScheme', fntsregex, parse_fontScheme], /* fmtScheme CT_StyleMatrix */\n  ['fmtScheme', fmtsregex, parse_fmtScheme]].forEach(function (m) {\n    if (!(t = data.match(m[1]))) throw new Error(m[0] + ' not found in themeElements');\n    m[2](t, themes, opts);\n  });\n}\nvar themeltregex = /<a:themeElements([^>]*)>[\\s\\S]*<\\/a:themeElements>/;\n\n/* 14.2.7 Theme Part */\nfunction parse_theme_xml(data /*:string*/, opts) {\n  /* 20.1.6.9 theme CT_OfficeStyleSheet */\n  if (!data || data.length === 0) data = write_theme();\n  var t;\n  var themes = {};\n\n  /* themeElements CT_BaseStyles */\n  if (!(t = data.match(themeltregex))) throw new Error('themeElements not found in theme');\n  parse_themeElements(t[0], themes, opts);\n  themes.raw = data;\n  return themes;\n}\nfunction write_theme(Themes, opts) /*:string*/{\n  if (opts && opts.themeXLSX) return opts.themeXLSX;\n  if (Themes && typeof Themes.raw == \"string\") return Themes.raw;\n  var o = [XML_HEADER];\n  o[o.length] = '<a:theme xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\" name=\"Office Theme\">';\n  o[o.length] = '<a:themeElements>';\n  o[o.length] = '<a:clrScheme name=\"Office\">';\n  o[o.length] = '<a:dk1><a:sysClr val=\"windowText\" lastClr=\"000000\"/></a:dk1>';\n  o[o.length] = '<a:lt1><a:sysClr val=\"window\" lastClr=\"FFFFFF\"/></a:lt1>';\n  o[o.length] = '<a:dk2><a:srgbClr val=\"1F497D\"/></a:dk2>';\n  o[o.length] = '<a:lt2><a:srgbClr val=\"EEECE1\"/></a:lt2>';\n  o[o.length] = '<a:accent1><a:srgbClr val=\"4F81BD\"/></a:accent1>';\n  o[o.length] = '<a:accent2><a:srgbClr val=\"C0504D\"/></a:accent2>';\n  o[o.length] = '<a:accent3><a:srgbClr val=\"9BBB59\"/></a:accent3>';\n  o[o.length] = '<a:accent4><a:srgbClr val=\"8064A2\"/></a:accent4>';\n  o[o.length] = '<a:accent5><a:srgbClr val=\"4BACC6\"/></a:accent5>';\n  o[o.length] = '<a:accent6><a:srgbClr val=\"F79646\"/></a:accent6>';\n  o[o.length] = '<a:hlink><a:srgbClr val=\"0000FF\"/></a:hlink>';\n  o[o.length] = '<a:folHlink><a:srgbClr val=\"800080\"/></a:folHlink>';\n  o[o.length] = '</a:clrScheme>';\n  o[o.length] = '<a:fontScheme name=\"Office\">';\n  o[o.length] = '<a:majorFont>';\n  o[o.length] = '<a:latin typeface=\"Cambria\"/>';\n  o[o.length] = '<a:ea typeface=\"\"/>';\n  o[o.length] = '<a:cs typeface=\"\"/>';\n  o[o.length] = '<a:font script=\"Jpan\" typeface=\"ＭＳ Ｐゴシック\"/>';\n  o[o.length] = '<a:font script=\"Hang\" typeface=\"맑은 고딕\"/>';\n  o[o.length] = '<a:font script=\"Hans\" typeface=\"宋体\"/>';\n  o[o.length] = '<a:font script=\"Hant\" typeface=\"新細明體\"/>';\n  o[o.length] = '<a:font script=\"Arab\" typeface=\"Times New Roman\"/>';\n  o[o.length] = '<a:font script=\"Hebr\" typeface=\"Times New Roman\"/>';\n  o[o.length] = '<a:font script=\"Thai\" typeface=\"Tahoma\"/>';\n  o[o.length] = '<a:font script=\"Ethi\" typeface=\"Nyala\"/>';\n  o[o.length] = '<a:font script=\"Beng\" typeface=\"Vrinda\"/>';\n  o[o.length] = '<a:font script=\"Gujr\" typeface=\"Shruti\"/>';\n  o[o.length] = '<a:font script=\"Khmr\" typeface=\"MoolBoran\"/>';\n  o[o.length] = '<a:font script=\"Knda\" typeface=\"Tunga\"/>';\n  o[o.length] = '<a:font script=\"Guru\" typeface=\"Raavi\"/>';\n  o[o.length] = '<a:font script=\"Cans\" typeface=\"Euphemia\"/>';\n  o[o.length] = '<a:font script=\"Cher\" typeface=\"Plantagenet Cherokee\"/>';\n  o[o.length] = '<a:font script=\"Yiii\" typeface=\"Microsoft Yi Baiti\"/>';\n  o[o.length] = '<a:font script=\"Tibt\" typeface=\"Microsoft Himalaya\"/>';\n  o[o.length] = '<a:font script=\"Thaa\" typeface=\"MV Boli\"/>';\n  o[o.length] = '<a:font script=\"Deva\" typeface=\"Mangal\"/>';\n  o[o.length] = '<a:font script=\"Telu\" typeface=\"Gautami\"/>';\n  o[o.length] = '<a:font script=\"Taml\" typeface=\"Latha\"/>';\n  o[o.length] = '<a:font script=\"Syrc\" typeface=\"Estrangelo Edessa\"/>';\n  o[o.length] = '<a:font script=\"Orya\" typeface=\"Kalinga\"/>';\n  o[o.length] = '<a:font script=\"Mlym\" typeface=\"Kartika\"/>';\n  o[o.length] = '<a:font script=\"Laoo\" typeface=\"DokChampa\"/>';\n  o[o.length] = '<a:font script=\"Sinh\" typeface=\"Iskoola Pota\"/>';\n  o[o.length] = '<a:font script=\"Mong\" typeface=\"Mongolian Baiti\"/>';\n  o[o.length] = '<a:font script=\"Viet\" typeface=\"Times New Roman\"/>';\n  o[o.length] = '<a:font script=\"Uigh\" typeface=\"Microsoft Uighur\"/>';\n  o[o.length] = '<a:font script=\"Geor\" typeface=\"Sylfaen\"/>';\n  o[o.length] = '</a:majorFont>';\n  o[o.length] = '<a:minorFont>';\n  o[o.length] = '<a:latin typeface=\"Calibri\"/>';\n  o[o.length] = '<a:ea typeface=\"\"/>';\n  o[o.length] = '<a:cs typeface=\"\"/>';\n  o[o.length] = '<a:font script=\"Jpan\" typeface=\"ＭＳ Ｐゴシック\"/>';\n  o[o.length] = '<a:font script=\"Hang\" typeface=\"맑은 고딕\"/>';\n  o[o.length] = '<a:font script=\"Hans\" typeface=\"宋体\"/>';\n  o[o.length] = '<a:font script=\"Hant\" typeface=\"新細明體\"/>';\n  o[o.length] = '<a:font script=\"Arab\" typeface=\"Arial\"/>';\n  o[o.length] = '<a:font script=\"Hebr\" typeface=\"Arial\"/>';\n  o[o.length] = '<a:font script=\"Thai\" typeface=\"Tahoma\"/>';\n  o[o.length] = '<a:font script=\"Ethi\" typeface=\"Nyala\"/>';\n  o[o.length] = '<a:font script=\"Beng\" typeface=\"Vrinda\"/>';\n  o[o.length] = '<a:font script=\"Gujr\" typeface=\"Shruti\"/>';\n  o[o.length] = '<a:font script=\"Khmr\" typeface=\"DaunPenh\"/>';\n  o[o.length] = '<a:font script=\"Knda\" typeface=\"Tunga\"/>';\n  o[o.length] = '<a:font script=\"Guru\" typeface=\"Raavi\"/>';\n  o[o.length] = '<a:font script=\"Cans\" typeface=\"Euphemia\"/>';\n  o[o.length] = '<a:font script=\"Cher\" typeface=\"Plantagenet Cherokee\"/>';\n  o[o.length] = '<a:font script=\"Yiii\" typeface=\"Microsoft Yi Baiti\"/>';\n  o[o.length] = '<a:font script=\"Tibt\" typeface=\"Microsoft Himalaya\"/>';\n  o[o.length] = '<a:font script=\"Thaa\" typeface=\"MV Boli\"/>';\n  o[o.length] = '<a:font script=\"Deva\" typeface=\"Mangal\"/>';\n  o[o.length] = '<a:font script=\"Telu\" typeface=\"Gautami\"/>';\n  o[o.length] = '<a:font script=\"Taml\" typeface=\"Latha\"/>';\n  o[o.length] = '<a:font script=\"Syrc\" typeface=\"Estrangelo Edessa\"/>';\n  o[o.length] = '<a:font script=\"Orya\" typeface=\"Kalinga\"/>';\n  o[o.length] = '<a:font script=\"Mlym\" typeface=\"Kartika\"/>';\n  o[o.length] = '<a:font script=\"Laoo\" typeface=\"DokChampa\"/>';\n  o[o.length] = '<a:font script=\"Sinh\" typeface=\"Iskoola Pota\"/>';\n  o[o.length] = '<a:font script=\"Mong\" typeface=\"Mongolian Baiti\"/>';\n  o[o.length] = '<a:font script=\"Viet\" typeface=\"Arial\"/>';\n  o[o.length] = '<a:font script=\"Uigh\" typeface=\"Microsoft Uighur\"/>';\n  o[o.length] = '<a:font script=\"Geor\" typeface=\"Sylfaen\"/>';\n  o[o.length] = '</a:minorFont>';\n  o[o.length] = '</a:fontScheme>';\n  o[o.length] = '<a:fmtScheme name=\"Office\">';\n  o[o.length] = '<a:fillStyleLst>';\n  o[o.length] = '<a:solidFill><a:schemeClr val=\"phClr\"/></a:solidFill>';\n  o[o.length] = '<a:gradFill rotWithShape=\"1\">';\n  o[o.length] = '<a:gsLst>';\n  o[o.length] = '<a:gs pos=\"0\"><a:schemeClr val=\"phClr\"><a:tint val=\"50000\"/><a:satMod val=\"300000\"/></a:schemeClr></a:gs>';\n  o[o.length] = '<a:gs pos=\"35000\"><a:schemeClr val=\"phClr\"><a:tint val=\"37000\"/><a:satMod val=\"300000\"/></a:schemeClr></a:gs>';\n  o[o.length] = '<a:gs pos=\"100000\"><a:schemeClr val=\"phClr\"><a:tint val=\"15000\"/><a:satMod val=\"350000\"/></a:schemeClr></a:gs>';\n  o[o.length] = '</a:gsLst>';\n  o[o.length] = '<a:lin ang=\"16200000\" scaled=\"1\"/>';\n  o[o.length] = '</a:gradFill>';\n  o[o.length] = '<a:gradFill rotWithShape=\"1\">';\n  o[o.length] = '<a:gsLst>';\n  o[o.length] = '<a:gs pos=\"0\"><a:schemeClr val=\"phClr\"><a:tint val=\"100000\"/><a:shade val=\"100000\"/><a:satMod val=\"130000\"/></a:schemeClr></a:gs>';\n  o[o.length] = '<a:gs pos=\"100000\"><a:schemeClr val=\"phClr\"><a:tint val=\"50000\"/><a:shade val=\"100000\"/><a:satMod val=\"350000\"/></a:schemeClr></a:gs>';\n  o[o.length] = '</a:gsLst>';\n  o[o.length] = '<a:lin ang=\"16200000\" scaled=\"0\"/>';\n  o[o.length] = '</a:gradFill>';\n  o[o.length] = '</a:fillStyleLst>';\n  o[o.length] = '<a:lnStyleLst>';\n  o[o.length] = '<a:ln w=\"9525\" cap=\"flat\" cmpd=\"sng\" algn=\"ctr\"><a:solidFill><a:schemeClr val=\"phClr\"><a:shade val=\"95000\"/><a:satMod val=\"105000\"/></a:schemeClr></a:solidFill><a:prstDash val=\"solid\"/></a:ln>';\n  o[o.length] = '<a:ln w=\"25400\" cap=\"flat\" cmpd=\"sng\" algn=\"ctr\"><a:solidFill><a:schemeClr val=\"phClr\"/></a:solidFill><a:prstDash val=\"solid\"/></a:ln>';\n  o[o.length] = '<a:ln w=\"38100\" cap=\"flat\" cmpd=\"sng\" algn=\"ctr\"><a:solidFill><a:schemeClr val=\"phClr\"/></a:solidFill><a:prstDash val=\"solid\"/></a:ln>';\n  o[o.length] = '</a:lnStyleLst>';\n  o[o.length] = '<a:effectStyleLst>';\n  o[o.length] = '<a:effectStyle>';\n  o[o.length] = '<a:effectLst>';\n  o[o.length] = '<a:outerShdw blurRad=\"40000\" dist=\"20000\" dir=\"5400000\" rotWithShape=\"0\"><a:srgbClr val=\"000000\"><a:alpha val=\"38000\"/></a:srgbClr></a:outerShdw>';\n  o[o.length] = '</a:effectLst>';\n  o[o.length] = '</a:effectStyle>';\n  o[o.length] = '<a:effectStyle>';\n  o[o.length] = '<a:effectLst>';\n  o[o.length] = '<a:outerShdw blurRad=\"40000\" dist=\"23000\" dir=\"5400000\" rotWithShape=\"0\"><a:srgbClr val=\"000000\"><a:alpha val=\"35000\"/></a:srgbClr></a:outerShdw>';\n  o[o.length] = '</a:effectLst>';\n  o[o.length] = '</a:effectStyle>';\n  o[o.length] = '<a:effectStyle>';\n  o[o.length] = '<a:effectLst>';\n  o[o.length] = '<a:outerShdw blurRad=\"40000\" dist=\"23000\" dir=\"5400000\" rotWithShape=\"0\"><a:srgbClr val=\"000000\"><a:alpha val=\"35000\"/></a:srgbClr></a:outerShdw>';\n  o[o.length] = '</a:effectLst>';\n  o[o.length] = '<a:scene3d><a:camera prst=\"orthographicFront\"><a:rot lat=\"0\" lon=\"0\" rev=\"0\"/></a:camera><a:lightRig rig=\"threePt\" dir=\"t\"><a:rot lat=\"0\" lon=\"0\" rev=\"1200000\"/></a:lightRig></a:scene3d>';\n  o[o.length] = '<a:sp3d><a:bevelT w=\"63500\" h=\"25400\"/></a:sp3d>';\n  o[o.length] = '</a:effectStyle>';\n  o[o.length] = '</a:effectStyleLst>';\n  o[o.length] = '<a:bgFillStyleLst>';\n  o[o.length] = '<a:solidFill><a:schemeClr val=\"phClr\"/></a:solidFill>';\n  o[o.length] = '<a:gradFill rotWithShape=\"1\">';\n  o[o.length] = '<a:gsLst>';\n  o[o.length] = '<a:gs pos=\"0\"><a:schemeClr val=\"phClr\"><a:tint val=\"40000\"/><a:satMod val=\"350000\"/></a:schemeClr></a:gs>';\n  o[o.length] = '<a:gs pos=\"40000\"><a:schemeClr val=\"phClr\"><a:tint val=\"45000\"/><a:shade val=\"99000\"/><a:satMod val=\"350000\"/></a:schemeClr></a:gs>';\n  o[o.length] = '<a:gs pos=\"100000\"><a:schemeClr val=\"phClr\"><a:shade val=\"20000\"/><a:satMod val=\"255000\"/></a:schemeClr></a:gs>';\n  o[o.length] = '</a:gsLst>';\n  o[o.length] = '<a:path path=\"circle\"><a:fillToRect l=\"50000\" t=\"-80000\" r=\"50000\" b=\"180000\"/></a:path>';\n  o[o.length] = '</a:gradFill>';\n  o[o.length] = '<a:gradFill rotWithShape=\"1\">';\n  o[o.length] = '<a:gsLst>';\n  o[o.length] = '<a:gs pos=\"0\"><a:schemeClr val=\"phClr\"><a:tint val=\"80000\"/><a:satMod val=\"300000\"/></a:schemeClr></a:gs>';\n  o[o.length] = '<a:gs pos=\"100000\"><a:schemeClr val=\"phClr\"><a:shade val=\"30000\"/><a:satMod val=\"200000\"/></a:schemeClr></a:gs>';\n  o[o.length] = '</a:gsLst>';\n  o[o.length] = '<a:path path=\"circle\"><a:fillToRect l=\"50000\" t=\"50000\" r=\"50000\" b=\"50000\"/></a:path>';\n  o[o.length] = '</a:gradFill>';\n  o[o.length] = '</a:bgFillStyleLst>';\n  o[o.length] = '</a:fmtScheme>';\n  o[o.length] = '</a:themeElements>';\n  o[o.length] = '<a:objectDefaults>';\n  o[o.length] = '<a:spDef>';\n  o[o.length] = '<a:spPr/><a:bodyPr/><a:lstStyle/><a:style><a:lnRef idx=\"1\"><a:schemeClr val=\"accent1\"/></a:lnRef><a:fillRef idx=\"3\"><a:schemeClr val=\"accent1\"/></a:fillRef><a:effectRef idx=\"2\"><a:schemeClr val=\"accent1\"/></a:effectRef><a:fontRef idx=\"minor\"><a:schemeClr val=\"lt1\"/></a:fontRef></a:style>';\n  o[o.length] = '</a:spDef>';\n  o[o.length] = '<a:lnDef>';\n  o[o.length] = '<a:spPr/><a:bodyPr/><a:lstStyle/><a:style><a:lnRef idx=\"2\"><a:schemeClr val=\"accent1\"/></a:lnRef><a:fillRef idx=\"0\"><a:schemeClr val=\"accent1\"/></a:fillRef><a:effectRef idx=\"1\"><a:schemeClr val=\"accent1\"/></a:effectRef><a:fontRef idx=\"minor\"><a:schemeClr val=\"tx1\"/></a:fontRef></a:style>';\n  o[o.length] = '</a:lnDef>';\n  o[o.length] = '</a:objectDefaults>';\n  o[o.length] = '<a:extraClrSchemeLst/>';\n  o[o.length] = '</a:theme>';\n  return o.join(\"\");\n}\n/* [MS-XLS] 2.4.326 TODO: payload is a zip file */\nfunction parse_Theme(blob, length, opts) {\n  var end = blob.l + length;\n  var dwThemeVersion = blob.read_shift(4);\n  if (dwThemeVersion === 124226) return;\n  if (!opts.cellStyles) {\n    blob.l = end;\n    return;\n  }\n  var data = blob.slice(blob.l);\n  blob.l = end;\n  var zip;\n  try {\n    zip = zip_read(data, {\n      type: \"array\"\n    });\n  } catch (e) {\n    return;\n  }\n  var themeXML = getzipstr(zip, \"theme/theme/theme1.xml\", true);\n  if (!themeXML) return;\n  return parse_theme_xml(themeXML, opts);\n}\n\n/* 2.5.49 */\nfunction parse_ColorTheme(blob /*::, length*/) {\n  return blob.read_shift(4);\n}\n\n/* 2.5.155 */\nfunction parse_FullColorExt(blob /*::, length*/) {\n  var o = {};\n  o.xclrType = blob.read_shift(2);\n  o.nTintShade = blob.read_shift(2);\n  switch (o.xclrType) {\n    case 0:\n      blob.l += 4;\n      break;\n    case 1:\n      o.xclrValue = parse_IcvXF(blob, 4);\n      break;\n    case 2:\n      o.xclrValue = parse_LongRGBA(blob);\n      break;\n    case 3:\n      o.xclrValue = parse_ColorTheme(blob);\n      break;\n    case 4:\n      blob.l += 4;\n      break;\n  }\n  blob.l += 8;\n  return o;\n}\n\n/* 2.5.164 TODO: read 7 bits*/\nfunction parse_IcvXF(blob, length) {\n  return parsenoop(blob, length);\n}\n\n/* 2.5.280 */\nfunction parse_XFExtGradient(blob, length) {\n  return parsenoop(blob, length);\n}\n\n/* [MS-XLS] 2.5.108 */\nfunction parse_ExtProp(blob /*::, length*/) /*:Array<any>*/{\n  var extType = blob.read_shift(2);\n  var cb = blob.read_shift(2) - 4;\n  var o = [extType];\n  switch (extType) {\n    case 0x04:\n    case 0x05:\n    case 0x07:\n    case 0x08:\n    case 0x09:\n    case 0x0A:\n    case 0x0B:\n    case 0x0D:\n      o[1] = parse_FullColorExt(blob);\n      break;\n    case 0x06:\n      o[1] = parse_XFExtGradient(blob, cb);\n      break;\n    case 0x0E:\n    case 0x0F:\n      o[1] = blob.read_shift(cb === 1 ? 1 : 2);\n      break;\n    default:\n      throw new Error(\"Unrecognized ExtProp type: \" + extType + \" \" + cb);\n  }\n  return o;\n}\n\n/* 2.4.355 */\nfunction parse_XFExt(blob, length) {\n  var end = blob.l + length;\n  blob.l += 2;\n  var ixfe = blob.read_shift(2);\n  blob.l += 2;\n  var cexts = blob.read_shift(2);\n  var ext /*:AOA*/ = [];\n  while (cexts-- > 0) ext.push(parse_ExtProp(blob, end - blob.l));\n  return {\n    ixfe: ixfe,\n    ext: ext\n  };\n}\n\n/* xf is an XF, see parse_XFExt for xfext */\nfunction update_xfext(xf, xfext) {\n  xfext.forEach(function (xfe) {\n    switch /* 2.5.108 extPropData */\n    (xfe[0]) {}\n  });\n}\nfunction parse_BrtMdtinfo(data, length) {\n  return {\n    flags: data.read_shift(4),\n    version: data.read_shift(4),\n    name: parse_XLWideString(data)\n  };\n}\nfunction write_BrtMdtinfo(data) {\n  var o = new_buf(12 + 2 * data.name.length);\n  o.write_shift(4, data.flags);\n  o.write_shift(4, data.version);\n  write_XLWideString(data.name, o);\n  return o.slice(0, o.l);\n}\nfunction parse_BrtMdb(data) {\n  var out = [];\n  var cnt = data.read_shift(4);\n  while (cnt-- > 0) out.push([data.read_shift(4), data.read_shift(4)]);\n  return out;\n}\nfunction write_BrtMdb(mdb) {\n  var o = new_buf(4 + 8 * mdb.length);\n  o.write_shift(4, mdb.length);\n  for (var i = 0; i < mdb.length; ++i) {\n    o.write_shift(4, mdb[i][0]);\n    o.write_shift(4, mdb[i][1]);\n  }\n  return o;\n}\nfunction write_BrtBeginEsfmd(cnt, name) {\n  var o = new_buf(8 + 2 * name.length);\n  o.write_shift(4, cnt);\n  write_XLWideString(name, o);\n  return o.slice(0, o.l);\n}\nfunction parse_BrtBeginEsmdb(data) {\n  data.l += 4;\n  return data.read_shift(4) != 0;\n}\nfunction write_BrtBeginEsmdb(cnt, cm) {\n  var o = new_buf(8);\n  o.write_shift(4, cnt);\n  o.write_shift(4, cm ? 1 : 0);\n  return o;\n}\nfunction parse_xlmeta_bin(data, name, _opts) {\n  var out = {\n    Types: [],\n    Cell: [],\n    Value: []\n  };\n  var opts = _opts || {};\n  var state = [];\n  var pass = false;\n  var metatype = 2;\n  recordhopper(data, function (val, R, RT) {\n    switch (RT) {\n      case 335:\n        out.Types.push({\n          name: val.name\n        });\n        break;\n      case 51:\n        val.forEach(function (r) {\n          if (metatype == 1) out.Cell.push({\n            type: out.Types[r[0] - 1].name,\n            index: r[1]\n          });else if (metatype == 0) out.Value.push({\n            type: out.Types[r[0] - 1].name,\n            index: r[1]\n          });\n        });\n        break;\n      case 337:\n        metatype = val ? 1 : 0;\n        break;\n      case 338:\n        metatype = 2;\n        break;\n      case 35:\n        state.push(RT);\n        pass = true;\n        break;\n      case 36:\n        state.pop();\n        pass = false;\n        break;\n      default:\n        if (R.T) ;else if (!pass || opts.WTF && state[state.length - 1] != 35) throw new Error(\"Unexpected record 0x\" + RT.toString(16));\n    }\n  });\n  return out;\n}\nfunction write_xlmeta_bin() {\n  var ba = buf_array();\n  write_record(ba, 332);\n  write_record(ba, 334, write_UInt32LE(1));\n  write_record(ba, 335, write_BrtMdtinfo({\n    name: \"XLDAPR\",\n    version: 12e4,\n    flags: 3496657072\n  }));\n  write_record(ba, 336);\n  write_record(ba, 339, write_BrtBeginEsfmd(1, \"XLDAPR\"));\n  write_record(ba, 52);\n  write_record(ba, 35, write_UInt32LE(514));\n  write_record(ba, 4096, write_UInt32LE(0));\n  write_record(ba, 4097, writeuint16(1));\n  write_record(ba, 36);\n  write_record(ba, 53);\n  write_record(ba, 340);\n  write_record(ba, 337, write_BrtBeginEsmdb(1, true));\n  write_record(ba, 51, write_BrtMdb([[1, 0]]));\n  write_record(ba, 338);\n  write_record(ba, 333);\n  return ba.end();\n}\nfunction parse_xlmeta_xml(data, name, opts) {\n  var out = {\n    Types: [],\n    Cell: [],\n    Value: []\n  };\n  if (!data) return out;\n  var pass = false;\n  var metatype = 2;\n  var lastmeta;\n  data.replace(tagregex, function (x) {\n    var y = parsexmltag(x);\n    switch (strip_ns(y[0])) {\n      case \"<?xml\":\n        break;\n      case \"<metadata\":\n      case \"</metadata>\":\n        break;\n      case \"<metadataTypes\":\n      case \"</metadataTypes>\":\n        break;\n      case \"<metadataType\":\n        out.Types.push({\n          name: y.name\n        });\n        break;\n      case \"</metadataType>\":\n        break;\n      case \"<futureMetadata\":\n        for (var j = 0; j < out.Types.length; ++j) if (out.Types[j].name == y.name) lastmeta = out.Types[j];\n        break;\n      case \"</futureMetadata>\":\n        break;\n      case \"<bk>\":\n        break;\n      case \"</bk>\":\n        break;\n      case \"<rc\":\n        if (metatype == 1) out.Cell.push({\n          type: out.Types[y.t - 1].name,\n          index: +y.v\n        });else if (metatype == 0) out.Value.push({\n          type: out.Types[y.t - 1].name,\n          index: +y.v\n        });\n        break;\n      case \"</rc>\":\n        break;\n      case \"<cellMetadata\":\n        metatype = 1;\n        break;\n      case \"</cellMetadata>\":\n        metatype = 2;\n        break;\n      case \"<valueMetadata\":\n        metatype = 0;\n        break;\n      case \"</valueMetadata>\":\n        metatype = 2;\n        break;\n      case \"<extLst\":\n      case \"<extLst>\":\n      case \"</extLst>\":\n      case \"<extLst/>\":\n        break;\n      case \"<ext\":\n        pass = true;\n        break;\n      case \"</ext>\":\n        pass = false;\n        break;\n      case \"<rvb\":\n        if (!lastmeta) break;\n        if (!lastmeta.offsets) lastmeta.offsets = [];\n        lastmeta.offsets.push(+y.i);\n        break;\n      default:\n        if (!pass && (opts == null ? void 0 : opts.WTF)) throw new Error(\"unrecognized \" + y[0] + \" in metadata\");\n    }\n    return x;\n  });\n  return out;\n}\nfunction write_xlmeta_xml() {\n  var o = [XML_HEADER];\n  o.push('<metadata xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\" xmlns:xlrd=\"http://schemas.microsoft.com/office/spreadsheetml/2017/richdata\" xmlns:xda=\"http://schemas.microsoft.com/office/spreadsheetml/2017/dynamicarray\">\\n  <metadataTypes count=\"1\">\\n    <metadataType name=\"XLDAPR\" minSupportedVersion=\"120000\" copy=\"1\" pasteAll=\"1\" pasteValues=\"1\" merge=\"1\" splitFirst=\"1\" rowColShift=\"1\" clearFormats=\"1\" clearComments=\"1\" assign=\"1\" coerce=\"1\" cellMeta=\"1\"/>\\n  </metadataTypes>\\n  <futureMetadata name=\"XLDAPR\" count=\"1\">\\n    <bk>\\n      <extLst>\\n        <ext uri=\"{bdbb8cdc-fa1e-496e-a857-3c3f30c029c3}\">\\n          <xda:dynamicArrayProperties fDynamic=\"1\" fCollapsed=\"0\"/>\\n        </ext>\\n      </extLst>\\n    </bk>\\n  </futureMetadata>\\n  <cellMetadata count=\"1\">\\n    <bk>\\n      <rc t=\"1\" v=\"0\"/>\\n    </bk>\\n  </cellMetadata>\\n</metadata>');\n  return o.join(\"\");\n}\n/* 18.6 Calculation Chain */\nfunction parse_cc_xml(data /*::, name, opts*/) /*:Array<any>*/{\n  var d = [];\n  if (!data) return d;\n  var i = 1;\n  (data.match(tagregex) || []).forEach(function (x) {\n    var y = parsexmltag(x);\n    switch (y[0]) {\n      case '<?xml':\n        break;\n      /* 18.6.2  calcChain CT_CalcChain 1 */\n      case '<calcChain':\n      case '<calcChain>':\n      case '</calcChain>':\n        break;\n      /* 18.6.1  c CT_CalcCell 1 */\n      case '<c':\n        delete y[0];\n        if (y.i) i = y.i;else y.i = i;\n        d.push(y);\n        break;\n    }\n  });\n  return d;\n}\n\n//function write_cc_xml(data, opts) { }\n\n/* [MS-XLSB] 2.6.4.1 */\nfunction parse_BrtCalcChainItem$(data) {\n  var out = {};\n  out.i = data.read_shift(4);\n  var cell = {};\n  cell.r = data.read_shift(4);\n  cell.c = data.read_shift(4);\n  out.r = encode_cell(cell);\n  var flags = data.read_shift(1);\n  if (flags & 0x2) out.l = '1';\n  if (flags & 0x8) out.a = '1';\n  return out;\n}\n\n/* 18.6 Calculation Chain */\nfunction parse_cc_bin(data, name, opts) {\n  var out = [];\n  recordhopper(data, function hopper_cc(val, R, RT) {\n    switch (RT) {\n      case 0x003F:\n        /* 'BrtCalcChainItem$' */\n        out.push(val);\n        break;\n      default:\n        if (R.T) ;else throw new Error(\"Unexpected record 0x\" + RT.toString(16));\n    }\n  });\n  return out;\n}\n\n//function write_cc_bin(data, opts) { }\n/* 18.14 Supplementary Workbook Data */\nfunction parse_xlink_xml( /*::data, rel, name:string, _opts*/\n) {\n  //var opts = _opts || {};\n  //if(opts.WTF) throw \"XLSX External Link\";\n}\n\n/* [MS-XLSB] 2.1.7.25 External Link */\nfunction parse_xlink_bin(data, rel, name /*:string*/, _opts) {\n  if (!data) return data;\n  var opts = _opts || {};\n  var pass = false;\n  recordhopper(data, function xlink_parse(val, R, RT) {\n    switch (RT) {\n      case 0x0167: /* 'BrtSupTabs' */\n      case 0x016B: /* 'BrtExternTableStart' */\n      case 0x016C: /* 'BrtExternTableEnd' */\n      case 0x016E: /* 'BrtExternRowHdr' */\n      case 0x016F: /* 'BrtExternCellBlank' */\n      case 0x0170: /* 'BrtExternCellReal' */\n      case 0x0171: /* 'BrtExternCellBool' */\n      case 0x0172: /* 'BrtExternCellError' */\n      case 0x0173: /* 'BrtExternCellString' */\n      case 0x01D8: /* 'BrtExternValueMeta' */\n      case 0x0241: /* 'BrtSupNameStart' */\n      case 0x0242: /* 'BrtSupNameValueStart' */\n      case 0x0243: /* 'BrtSupNameValueEnd' */\n      case 0x0244: /* 'BrtSupNameNum' */\n      case 0x0245: /* 'BrtSupNameErr' */\n      case 0x0246: /* 'BrtSupNameSt' */\n      case 0x0247: /* 'BrtSupNameNil' */\n      case 0x0248: /* 'BrtSupNameBool' */\n      case 0x0249: /* 'BrtSupNameFmla' */\n      case 0x024A: /* 'BrtSupNameBits' */\n      case 0x024B:\n        /* 'BrtSupNameEnd' */\n        break;\n      case 0x0023:\n        /* 'BrtFRTBegin' */\n        pass = true;\n        break;\n      case 0x0024:\n        /* 'BrtFRTEnd' */\n        pass = false;\n        break;\n      default:\n        if (R.T) ;else if (!pass || opts.WTF) throw new Error(\"Unexpected record 0x\" + RT.toString(16));\n    }\n  }, opts);\n}\n/* 20.5 DrawingML - SpreadsheetML Drawing */\n/* 20.5.2.35 wsDr CT_Drawing */\nfunction parse_drawing(data, rels /*:any*/) {\n  if (!data) return \"??\";\n  /*\n    Chartsheet Drawing:\n     - 20.5.2.35 wsDr CT_Drawing\n      - 20.5.2.1  absoluteAnchor CT_AbsoluteAnchor\n       - 20.5.2.16 graphicFrame CT_GraphicalObjectFrame\n        - 20.1.2.2.16 graphic CT_GraphicalObject\n         - 20.1.2.2.17 graphicData CT_GraphicalObjectData\n           - chart reference\n     the actual type is based on the URI of the graphicData\n  \tTODO: handle embedded charts and other types of graphics\n  */\n  var id = (data.match(/<c:chart [^>]*r:id=\"([^\"]*)\"/) || [\"\", \"\"])[1];\n  return rels['!id'][id].Target;\n}\n\n/* L.5.5.2 SpreadsheetML Comments + VML Schema */\nvar shapevmlregex = /<(?:\\w+:)?shape(?:[^\\w][^>]*)?>([\\s\\S]*?)<\\/(?:\\w+:)?shape>/g;\nfunction parse_vml(data /*:string*/, sheet, comments) {\n  var cidx = 0;\n  (data.match(shapevmlregex) || []).forEach(function (m) {\n    var type = \"\";\n    var hidden = true;\n    var aidx = -1;\n    var R = -1,\n      C = -1;\n    m.replace(tagregex, function (x /*:string*/, idx /*:number*/) {\n      var y = parsexmltag(x);\n      switch (strip_ns(y[0])) {\n        case '<ClientData':\n          if (y.ObjectType) type = y.ObjectType;\n          break;\n        case '<Visible':\n        case '<Visible/>':\n          hidden = false;\n          break;\n        case '<Row':\n        case '<Row>':\n          aidx = idx + x.length;\n          break;\n        case '</Row>':\n          R = +m.slice(aidx, idx).trim();\n          break;\n        case '<Column':\n        case '<Column>':\n          aidx = idx + x.length;\n          break;\n        case '</Column>':\n          C = +m.slice(aidx, idx).trim();\n          break;\n      }\n      return \"\";\n    });\n    switch (type) {\n      case 'Note':\n        var cell = ws_get_cell_stub(sheet, R >= 0 && C >= 0 ? encode_cell({\n          r: R,\n          c: C\n        }) : comments[cidx].ref);\n        if (cell.c) {\n          cell.c.hidden = hidden;\n        }\n        ++cidx;\n        break;\n    }\n  });\n}\n\n/* comment boxes */\nfunction write_vml(rId /*:number*/, comments, ws) {\n  var csize = [21600, 21600];\n  /* L.5.2.1.2 Path Attribute */\n  var bbox = [\"m0,0l0\", csize[1], csize[0], csize[1], csize[0], \"0xe\"].join(\",\");\n  var o = [writextag(\"xml\", null, {\n    'xmlns:v': XLMLNS.v,\n    'xmlns:o': XLMLNS.o,\n    'xmlns:x': XLMLNS.x,\n    'xmlns:mv': XLMLNS.mv\n  }).replace(/\\/>/, \">\"), writextag(\"o:shapelayout\", writextag(\"o:idmap\", null, {\n    'v:ext': \"edit\",\n    'data': rId\n  }), {\n    'v:ext': \"edit\"\n  })];\n  var _shapeid = 65536 * rId;\n  var _comments = comments || [];\n  if (_comments.length > 0) o.push(writextag(\"v:shapetype\", [writextag(\"v:stroke\", null, {\n    joinstyle: \"miter\"\n  }), writextag(\"v:path\", null, {\n    gradientshapeok: \"t\",\n    'o:connecttype': \"rect\"\n  })].join(\"\"), {\n    id: \"_x0000_t202\",\n    coordsize: csize.join(\",\"),\n    'o:spt': 202,\n    path: bbox\n  }));\n  _comments.forEach(function (x) {\n    ++_shapeid;\n    o.push(write_vml_comment(x, _shapeid));\n  });\n  o.push('</xml>');\n  return o.join(\"\");\n}\nfunction write_vml_comment(x, _shapeid, ws) /*:string*/{\n  var c = decode_cell(x[0]);\n  var fillopts = /*::(*/{\n    'color2': \"#BEFF82\",\n    'type': \"gradient\"\n  } /*:: :any)*/;\n  if (fillopts.type == \"gradient\") fillopts.angle = \"-180\";\n  var fillparm = fillopts.type == \"gradient\" ? writextag(\"o:fill\", null, {\n    type: \"gradientUnscaled\",\n    'v:ext': \"view\"\n  }) : null;\n  var fillxml = writextag('v:fill', fillparm, fillopts);\n  var shadata = {\n    on: \"t\",\n    'obscured': \"t\"\n  } /*:any*/;\n\n  return ['<v:shape' + wxt_helper({\n    id: '_x0000_s' + _shapeid,\n    type: \"#_x0000_t202\",\n    style: \"position:absolute; margin-left:80pt;margin-top:5pt;width:104pt;height:64pt;z-index:10\" + (x[1].hidden ? \";visibility:hidden\" : \"\"),\n    fillcolor: \"#ECFAD4\",\n    strokecolor: \"#edeaa1\"\n  }) + '>', fillxml, writextag(\"v:shadow\", null, shadata), writextag(\"v:path\", null, {\n    'o:connecttype': \"none\"\n  }), '<v:textbox><div style=\"text-align:left\"></div></v:textbox>', '<x:ClientData ObjectType=\"Note\">', '<x:MoveWithCells/>', '<x:SizeWithCells/>', /* Part 4 19.4.2.3 Anchor (Anchor) */\n  writetag('x:Anchor', [c.c + 1, 0, c.r + 1, 0, c.c + 3, 20, c.r + 5, 20].join(\",\")), writetag('x:AutoFill', \"False\"), writetag('x:Row', String(c.r)), writetag('x:Column', String(c.c)), x[1].hidden ? '' : '<x:Visible/>', '</x:ClientData>', '</v:shape>'].join(\"\");\n}\nfunction sheet_insert_comments(sheet /*:WorkSheet*/, comments /*:Array<RawComment>*/, threaded /*:boolean*/, people /*:?Array<any>*/) {\n  var dense = sheet[\"!data\"] != null;\n  var cell /*:Cell*/;\n  comments.forEach(function (comment) {\n    var r = decode_cell(comment.ref);\n    if (r.r < 0 || r.c < 0) return;\n    if (dense) {\n      if (!sheet[\"!data\"][r.r]) sheet[\"!data\"][r.r] = [];\n      cell = sheet[\"!data\"][r.r][r.c];\n    } else cell = sheet[comment.ref];\n    if (!cell) {\n      cell = {\n        t: \"z\"\n      } /*:any*/;\n      if (dense) sheet[\"!data\"][r.r][r.c] = cell;else sheet[comment.ref] = cell;\n      var range = safe_decode_range(sheet[\"!ref\"] || \"BDWGO1000001:A1\");\n      if (range.s.r > r.r) range.s.r = r.r;\n      if (range.e.r < r.r) range.e.r = r.r;\n      if (range.s.c > r.c) range.s.c = r.c;\n      if (range.e.c < r.c) range.e.c = r.c;\n      var encoded = encode_range(range);\n      sheet[\"!ref\"] = encoded;\n    }\n    if (!cell.c) cell.c = [];\n    var o /*:Comment*/ = {\n      a: comment.author,\n      t: comment.t,\n      r: comment.r,\n      T: threaded\n    };\n    if (comment.h) o.h = comment.h;\n\n    /* threaded comments always override */\n    for (var i = cell.c.length - 1; i >= 0; --i) {\n      if (!threaded && cell.c[i].T) return;\n      if (threaded && !cell.c[i].T) cell.c.splice(i, 1);\n    }\n    if (threaded && people) for (i = 0; i < people.length; ++i) {\n      if (o.a == people[i].id) {\n        o.a = people[i].name || o.a;\n        break;\n      }\n    }\n    cell.c.push(o);\n  });\n}\n/* 18.7 Comments */\nfunction parse_comments_xml(data /*:string*/, opts) /*:Array<RawComment>*/{\n  /* 18.7.6 CT_Comments */\n  if (data.match(/<(?:\\w+:)?comments *\\/>/)) return [];\n  var authors /*:Array<string>*/ = [];\n  var commentList /*:Array<RawComment>*/ = [];\n  var authtag = data.match(/<(?:\\w+:)?authors>([\\s\\S]*)<\\/(?:\\w+:)?authors>/);\n  if (authtag && authtag[1]) authtag[1].split(/<\\/\\w*:?author>/).forEach(function (x) {\n    if (x === \"\" || x.trim() === \"\") return;\n    var a = x.match(/<(?:\\w+:)?author[^>]*>(.*)/);\n    if (a) authors.push(a[1]);\n  });\n  var cmnttag = data.match(/<(?:\\w+:)?commentList>([\\s\\S]*)<\\/(?:\\w+:)?commentList>/);\n  if (cmnttag && cmnttag[1]) cmnttag[1].split(/<\\/\\w*:?comment>/).forEach(function (x) {\n    if (x === \"\" || x.trim() === \"\") return;\n    var cm = x.match(/<(?:\\w+:)?comment[^>]*>/);\n    if (!cm) return;\n    var y = parsexmltag(cm[0]);\n    var comment /*:RawComment*/ = {\n      author: y.authorId && authors[y.authorId] || \"sheetjsghost\",\n      ref: y.ref,\n      guid: y.guid\n    } /*:any*/;\n    var cell = decode_cell(y.ref);\n    if (opts.sheetRows && opts.sheetRows <= cell.r) return;\n    var textMatch = x.match(/<(?:\\w+:)?text>([\\s\\S]*)<\\/(?:\\w+:)?text>/);\n    var rt = !!textMatch && !!textMatch[1] && parse_si(textMatch[1]) || {\n      r: \"\",\n      t: \"\",\n      h: \"\"\n    };\n    comment.r = rt.r;\n    if (rt.r == \"<t></t>\") rt.t = rt.h = \"\";\n    comment.t = (rt.t || \"\").replace(/\\r\\n/g, \"\\n\").replace(/\\r/g, \"\\n\");\n    if (opts.cellHTML) comment.h = rt.h;\n    commentList.push(comment);\n  });\n  return commentList;\n}\nfunction write_comments_xml(data /*::, opts*/) {\n  var o = [XML_HEADER, writextag('comments', null, {\n    'xmlns': XMLNS_main[0]\n  })];\n  var iauthor /*:Array<string>*/ = [];\n  o.push(\"<authors>\");\n  data.forEach(function (x) {\n    x[1].forEach(function (w) {\n      var a = escapexml(w.a);\n      if (iauthor.indexOf(a) == -1) {\n        iauthor.push(a);\n        o.push(\"<author>\" + a + \"</author>\");\n      }\n      if (w.T && w.ID && iauthor.indexOf(\"tc=\" + w.ID) == -1) {\n        iauthor.push(\"tc=\" + w.ID);\n        o.push(\"<author>\" + \"tc=\" + w.ID + \"</author>\");\n      }\n    });\n  });\n  if (iauthor.length == 0) {\n    iauthor.push(\"SheetJ5\");\n    o.push(\"<author>SheetJ5</author>\");\n  }\n  o.push(\"</authors>\");\n  o.push(\"<commentList>\");\n  data.forEach(function (d) {\n    /* 18.7.3 CT_Comment */\n    var lastauthor = 0,\n      ts = [],\n      tcnt = 0;\n    if (d[1][0] && d[1][0].T && d[1][0].ID) lastauthor = iauthor.indexOf(\"tc=\" + d[1][0].ID);\n    d[1].forEach(function (c) {\n      if (c.a) lastauthor = iauthor.indexOf(escapexml(c.a));\n      if (c.T) ++tcnt;\n      ts.push(c.t == null ? \"\" : escapexml(c.t));\n    });\n    if (tcnt === 0) {\n      d[1].forEach(function (c) {\n        o.push('<comment ref=\"' + d[0] + '\" authorId=\"' + iauthor.indexOf(escapexml(c.a)) + '\"><text>');\n        o.push(writetag(\"t\", c.t == null ? \"\" : escapexml(c.t)));\n        o.push('</text></comment>');\n      });\n    } else {\n      if (d[1][0] && d[1][0].T && d[1][0].ID) lastauthor = iauthor.indexOf(\"tc=\" + d[1][0].ID);\n      /* based on Threaded Comments -> Comments projection */\n      o.push('<comment ref=\"' + d[0] + '\" authorId=\"' + lastauthor + '\"><text>');\n      var t = \"Comment:\\n    \" + ts[0] + \"\\n\";\n      for (var i = 1; i < ts.length; ++i) t += \"Reply:\\n    \" + ts[i] + \"\\n\";\n      o.push(writetag(\"t\", escapexml(t)));\n      o.push('</text></comment>');\n    }\n  });\n  o.push(\"</commentList>\");\n  if (o.length > 2) {\n    o[o.length] = '</comments>';\n    o[1] = o[1].replace(\"/>\", \">\");\n  }\n  return o.join(\"\");\n}\n\n/* [MS-XLSX] 2.1.17 */\nfunction parse_tcmnt_xml(data /*:string*/, opts) /*:Array<RawComment>*/{\n  var out = [];\n  var pass = false,\n    comment = {},\n    tidx = 0;\n  data.replace(tagregex, function xml_tcmnt(x, idx) {\n    var y /*:any*/ = parsexmltag(x);\n    switch (strip_ns(y[0])) {\n      case '<?xml':\n        break;\n\n      /* 2.6.207 ThreadedComments CT_ThreadedComments */\n      case '<ThreadedComments':\n        break;\n      case '</ThreadedComments>':\n        break;\n\n      /* 2.6.205 threadedComment CT_ThreadedComment */\n      case '<threadedComment':\n        comment = {\n          author: y.personId,\n          guid: y.id,\n          ref: y.ref,\n          T: 1\n        };\n        break;\n      case '</threadedComment>':\n        if (comment.t != null) out.push(comment);\n        break;\n      case '<text>':\n      case '<text':\n        tidx = idx + x.length;\n        break;\n      case '</text>':\n        comment.t = data.slice(tidx, idx).replace(/\\r\\n/g, \"\\n\").replace(/\\r/g, \"\\n\");\n        break;\n\n      /* 2.6.206 mentions CT_ThreadedCommentMentions TODO */\n      case '<mentions':\n      case '<mentions>':\n        pass = true;\n        break;\n      case '</mentions>':\n        pass = false;\n        break;\n\n      /* 2.6.202 mention CT_Mention TODO */\n\n      /* 18.2.10 extLst CT_ExtensionList ? */\n      case '<extLst':\n      case '<extLst>':\n      case '</extLst>':\n      case '<extLst/>':\n        break;\n      /* 18.2.7  ext CT_Extension + */\n      case '<ext':\n        pass = true;\n        break;\n      case '</ext>':\n        pass = false;\n        break;\n      default:\n        if (!pass && opts.WTF) throw new Error('unrecognized ' + y[0] + ' in threaded comments');\n    }\n    return x;\n  });\n  return out;\n}\nfunction write_tcmnt_xml(comments, people, opts) {\n  var o = [XML_HEADER, writextag('ThreadedComments', null, {\n    'xmlns': XMLNS.TCMNT\n  }).replace(/[\\/]>/, \">\")];\n  comments.forEach(function (carr) {\n    var rootid = \"\";\n    (carr[1] || []).forEach(function (c, idx) {\n      if (!c.T) {\n        delete c.ID;\n        return;\n      }\n      if (c.a && people.indexOf(c.a) == -1) people.push(c.a);\n      var tcopts = {\n        ref: carr[0],\n        id: \"{54EE7951-7262-4200-6969-\" + (\"000000000000\" + opts.tcid++).slice(-12) + \"}\"\n      };\n      if (idx == 0) rootid = tcopts.id;else tcopts.parentId = rootid;\n      c.ID = tcopts.id;\n      if (c.a) tcopts.personId = \"{54EE7950-7262-4200-6969-\" + (\"000000000000\" + people.indexOf(c.a)).slice(-12) + \"}\";\n      o.push(writextag('threadedComment', writetag('text', c.t || \"\"), tcopts));\n    });\n  });\n  o.push('</ThreadedComments>');\n  return o.join(\"\");\n}\n\n/* [MS-XLSX] 2.1.18 */\nfunction parse_people_xml(data /*:string*/, opts) {\n  var out = [];\n  var pass = false;\n  data.replace(tagregex, function xml_tcmnt(x) {\n    var y /*:any*/ = parsexmltag(x);\n    switch (strip_ns(y[0])) {\n      case '<?xml':\n        break;\n\n      /* 2.4.85 personList CT_PersonList */\n      case '<personList':\n        break;\n      case '</personList>':\n        break;\n\n      /* 2.6.203 person CT_Person TODO: providers */\n      case '<person':\n        out.push({\n          name: y.displayname,\n          id: y.id\n        });\n        break;\n      case '</person>':\n        break;\n\n      /* 18.2.10 extLst CT_ExtensionList ? */\n      case '<extLst':\n      case '<extLst>':\n      case '</extLst>':\n      case '<extLst/>':\n        break;\n      /* 18.2.7  ext CT_Extension + */\n      case '<ext':\n        pass = true;\n        break;\n      case '</ext>':\n        pass = false;\n        break;\n      default:\n        if (!pass && opts.WTF) throw new Error('unrecognized ' + y[0] + ' in threaded comments');\n    }\n    return x;\n  });\n  return out;\n}\nfunction write_people_xml(people /*, opts*/) {\n  var o = [XML_HEADER, writextag('personList', null, {\n    'xmlns': XMLNS.TCMNT,\n    'xmlns:x': XMLNS_main[0]\n  }).replace(/[\\/]>/, \">\")];\n  people.forEach(function (person, idx) {\n    o.push(writextag('person', null, {\n      displayName: person,\n      id: \"{54EE7950-7262-4200-6969-\" + (\"000000000000\" + idx).slice(-12) + \"}\",\n      userId: person,\n      providerId: \"None\"\n    }));\n  });\n  o.push(\"</personList>\");\n  return o.join(\"\");\n}\n/* [MS-XLSB] 2.4.28 BrtBeginComment */\nfunction parse_BrtBeginComment(data) {\n  var out = {};\n  out.iauthor = data.read_shift(4);\n  var rfx = parse_UncheckedRfX(data);\n  out.rfx = rfx.s;\n  out.ref = encode_cell(rfx.s);\n  data.l += 16; /*var guid = parse_GUID(data); */\n  return out;\n}\nfunction write_BrtBeginComment(data, o) {\n  if (o == null) o = new_buf(36);\n  o.write_shift(4, data[1].iauthor);\n  write_UncheckedRfX(data[0] /*:any*/, o);\n  o.write_shift(4, 0);\n  o.write_shift(4, 0);\n  o.write_shift(4, 0);\n  o.write_shift(4, 0);\n  return o;\n}\n\n/* [MS-XLSB] 2.4.327 BrtCommentAuthor */\nvar parse_BrtCommentAuthor = parse_XLWideString;\nfunction write_BrtCommentAuthor(data) {\n  return write_XLWideString(data.slice(0, 54));\n}\n\n/* [MS-XLSB] 2.1.7.8 Comments */\nfunction parse_comments_bin(data, opts) /*:Array<RawComment>*/{\n  var out /*:Array<RawComment>*/ = [];\n  var authors /*:Array<string>*/ = [];\n  var c = {};\n  var pass = false;\n  recordhopper(data, function hopper_cmnt(val, R, RT) {\n    switch (RT) {\n      case 0x0278:\n        /* 'BrtCommentAuthor' */\n        authors.push(val);\n        break;\n      case 0x027B:\n        /* 'BrtBeginComment' */\n        c = val;\n        break;\n      case 0x027D:\n        /* 'BrtCommentText' */\n        c.t = val.t;\n        c.h = val.h;\n        c.r = val.r;\n        break;\n      case 0x027C:\n        /* 'BrtEndComment' */\n        c.author = authors[c.iauthor];\n        delete c /*:any*/.iauthor;\n        if (opts.sheetRows && c.rfx && opts.sheetRows <= c.rfx.r) break;\n        if (!c.t) c.t = \"\";\n        delete c.rfx;\n        out.push(c);\n        break;\n      case 0x0C00:\n        /* 'BrtUid' */\n        break;\n      case 0x0023:\n        /* 'BrtFRTBegin' */\n        pass = true;\n        break;\n      case 0x0024:\n        /* 'BrtFRTEnd' */\n        pass = false;\n        break;\n      case 0x0025:\n        /* 'BrtACBegin' */break;\n      case 0x0026:\n        /* 'BrtACEnd' */break;\n      default:\n        if (R.T) ;else if (!pass || opts.WTF) throw new Error(\"Unexpected record 0x\" + RT.toString(16));\n    }\n  });\n  return out;\n}\nfunction write_comments_bin(data /*::, opts*/) {\n  var ba = buf_array();\n  var iauthor /*:Array<string>*/ = [];\n  write_record(ba, 0x0274 /* BrtBeginComments */);\n\n  write_record(ba, 0x0276 /* BrtBeginCommentAuthors */);\n  data.forEach(function (comment) {\n    comment[1].forEach(function (c) {\n      if (iauthor.indexOf(c.a) > -1) return;\n      iauthor.push(c.a.slice(0, 54));\n      write_record(ba, 0x0278 /* BrtCommentAuthor */, write_BrtCommentAuthor(c.a));\n      if (c.T && c.ID && iauthor.indexOf(\"tc=\" + c.ID) == -1) {\n        iauthor.push(\"tc=\" + c.ID);\n        write_record(ba, 0x0278 /* BrtCommentAuthor */, write_BrtCommentAuthor(\"tc=\" + c.ID));\n      }\n    });\n  });\n  write_record(ba, 0x0277 /* BrtEndCommentAuthors */);\n\n  write_record(ba, 0x0279 /* BrtBeginCommentList */);\n  data.forEach(function (comment) {\n    comment[1].forEach(function (c) {\n      var _ia = -1;\n      if (c.ID) _ia = iauthor.indexOf(\"tc=\" + c.ID);\n      if (_ia == -1 && comment[1][0].T && comment[1][0].ID) _ia = iauthor.indexOf(\"tc=\" + comment[1][0].ID);\n      if (_ia == -1) _ia = iauthor.indexOf(c.a);\n      c.iauthor = _ia;\n      var range = {\n        s: decode_cell(comment[0]),\n        e: decode_cell(comment[0])\n      };\n      write_record(ba, 0x027B /* BrtBeginComment */, write_BrtBeginComment([range, c]));\n      if (c.t && c.t.length > 0) write_record(ba, 0x027D /* BrtCommentText */, write_BrtCommentText(c));\n      write_record(ba, 0x027C /* BrtEndComment */);\n      delete c.iauthor;\n    });\n  });\n  write_record(ba, 0x027A /* BrtEndCommentList */);\n\n  write_record(ba, 0x0275 /* BrtEndComments */);\n  return ba.end();\n}\nvar CT_VBA = \"application/vnd.ms-office.vbaProject\";\nfunction make_vba_xls(cfb) {\n  var newcfb = CFB.utils.cfb_new({\n    root: \"R\"\n  });\n  cfb.FullPaths.forEach(function (p, i) {\n    if (p.slice(-1) === \"/\" || !p.match(/_VBA_PROJECT_CUR/)) return;\n    var newpath = p.replace(/^[^\\/]*/, \"R\").replace(/\\/_VBA_PROJECT_CUR\\u0000*/, \"\");\n    CFB.utils.cfb_add(newcfb, newpath, cfb.FileIndex[i].content);\n  });\n  return CFB.write(newcfb);\n}\nfunction fill_vba_xls(cfb, vba) {\n  vba.FullPaths.forEach(function (p, i) {\n    if (i == 0) return;\n    var newpath = p.replace(/[^\\/]*[\\/]/, \"/_VBA_PROJECT_CUR/\");\n    if (newpath.slice(-1) !== \"/\") CFB.utils.cfb_add(cfb, newpath, vba.FileIndex[i].content);\n  });\n}\nvar VBAFMTS = [\"xlsb\", \"xlsm\", \"xlam\", \"biff8\", \"xla\"];\n/* macro and dialog sheet stubs */\nfunction parse_ds_bin( /*::data:any, opts, idx:number, rels, wb, themes, styles*/) /*:Worksheet*/{\n  return {\n    '!type': 'dialog'\n  };\n}\nfunction parse_ds_xml( /*::data:any, opts, idx:number, rels, wb, themes, styles*/) /*:Worksheet*/{\n  return {\n    '!type': 'dialog'\n  };\n}\nfunction parse_ms_bin( /*::data:any, opts, idx:number, rels, wb, themes, styles*/) /*:Worksheet*/{\n  return {\n    '!type': 'macro'\n  };\n}\nfunction parse_ms_xml( /*::data:any, opts, idx:number, rels, wb, themes, styles*/) /*:Worksheet*/{\n  return {\n    '!type': 'macro'\n  };\n}\n/* TODO: it will be useful to parse the function str */\nvar rc_to_a1 = /*#__PURE__*/function () {\n  var rcregex = /(^|[^A-Za-z_])R(\\[?-?\\d+\\]|[1-9]\\d*|)C(\\[?-?\\d+\\]|[1-9]\\d*|)(?![A-Za-z0-9_])/g;\n  var rcbase /*:Cell*/ = {\n    r: 0,\n    c: 0\n  } /*:any*/;\n  function rcfunc($$, $1, $2, $3) {\n    var cRel = false,\n      rRel = false;\n    if ($2.length == 0) rRel = true;else if ($2.charAt(0) == \"[\") {\n      rRel = true;\n      $2 = $2.slice(1, -1);\n    }\n    if ($3.length == 0) cRel = true;else if ($3.charAt(0) == \"[\") {\n      cRel = true;\n      $3 = $3.slice(1, -1);\n    }\n    var R = $2.length > 0 ? parseInt($2, 10) | 0 : 0,\n      C = $3.length > 0 ? parseInt($3, 10) | 0 : 0;\n    if (cRel) C += rcbase.c;else --C;\n    if (rRel) R += rcbase.r;else --R;\n    return $1 + (cRel ? \"\" : \"$\") + encode_col(C) + (rRel ? \"\" : \"$\") + encode_row(R);\n  }\n  return function rc_to_a1(fstr /*:string*/, base /*:Cell*/) /*:string*/{\n    rcbase = base;\n    return fstr.replace(rcregex, rcfunc);\n  };\n}();\nvar crefregex = /(^|[^._A-Z0-9])([$]?)([A-Z]{1,2}|[A-W][A-Z]{2}|X[A-E][A-Z]|XF[A-D])([$]?)(10[0-3]\\d{4}|104[0-7]\\d{3}|1048[0-4]\\d{2}|10485[0-6]\\d|104857[0-6]|[1-9]\\d{0,5})(?![_.\\(A-Za-z0-9])/g;\nvar a1_to_rc = /*#__PURE__*/function () {\n  return function a1_to_rc(fstr /*:string*/, base /*:CellAddress*/) {\n    return fstr.replace(crefregex, function ($0, $1, $2, $3, $4, $5) {\n      var c = decode_col($3) - ($2 ? 0 : base.c);\n      var r = decode_row($5) - ($4 ? 0 : base.r);\n      var R = $4 == \"$\" ? r + 1 : r == 0 ? \"\" : \"[\" + r + \"]\";\n      var C = $2 == \"$\" ? c + 1 : c == 0 ? \"\" : \"[\" + c + \"]\";\n      return $1 + \"R\" + R + \"C\" + C;\n    });\n  };\n}();\n\n/* no defined name can collide with a valid cell address A1:XFD1048576 ... except LOG10! */\nfunction shift_formula_str(f /*:string*/, delta /*:Cell*/) /*:string*/{\n  return f.replace(crefregex, function ($0, $1, $2, $3, $4, $5) {\n    return $1 + ($2 == \"$\" ? $2 + $3 : encode_col(decode_col($3) + delta.c)) + ($4 == \"$\" ? $4 + $5 : encode_row(decode_row($5) + delta.r));\n  });\n}\nfunction shift_formula_xlsx(f /*:string*/, range /*:string*/, cell /*:string*/) /*:string*/{\n  var r = decode_range(range),\n    s = r.s,\n    c = decode_cell(cell);\n  var delta = {\n    r: c.r - s.r,\n    c: c.c - s.c\n  };\n  return shift_formula_str(f, delta);\n}\n\n/* TODO: parse formula */\nfunction fuzzyfmla(f /*:string*/) /*:boolean*/{\n  if (f.length == 1) return false;\n  return true;\n}\nfunction _xlfn(f /*:string*/) /*:string*/{\n  return f.replace(/_xlfn\\./g, \"\");\n}\nfunction parseread1(blob) {\n  blob.l += 1;\n  return;\n}\n\n/* [MS-XLS] 2.5.51 */\nfunction parse_ColRelU(blob, length) {\n  var c = blob.read_shift(length == 1 ? 1 : 2);\n  return [c & 0x3FFF, c >> 14 & 1, c >> 15 & 1];\n}\n\n/* [MS-XLS] 2.5.198.105 ; [MS-XLSB] 2.5.97.89 */\nfunction parse_RgceArea(blob, length, opts) {\n  var w = 2;\n  if (opts) {\n    if (opts.biff >= 2 && opts.biff <= 5) return parse_RgceArea_BIFF2(blob);else if (opts.biff == 12) w = 4;\n  }\n  var r = blob.read_shift(w),\n    R = blob.read_shift(w);\n  var c = parse_ColRelU(blob, 2);\n  var C = parse_ColRelU(blob, 2);\n  return {\n    s: {\n      r: r,\n      c: c[0],\n      cRel: c[1],\n      rRel: c[2]\n    },\n    e: {\n      r: R,\n      c: C[0],\n      cRel: C[1],\n      rRel: C[2]\n    }\n  };\n}\n/* BIFF 2-5 encodes flags in the row field */\nfunction parse_RgceArea_BIFF2(blob /*::, length, opts*/) {\n  var r = parse_ColRelU(blob, 2),\n    R = parse_ColRelU(blob, 2);\n  var c = blob.read_shift(1);\n  var C = blob.read_shift(1);\n  return {\n    s: {\n      r: r[0],\n      c: c,\n      cRel: r[1],\n      rRel: r[2]\n    },\n    e: {\n      r: R[0],\n      c: C,\n      cRel: R[1],\n      rRel: R[2]\n    }\n  };\n}\n\n/* [MS-XLS] 2.5.198.105 ; [MS-XLSB] 2.5.97.90 */\nfunction parse_RgceAreaRel(blob, length, opts) {\n  if (opts.biff < 8) return parse_RgceArea_BIFF2(blob);\n  var r = blob.read_shift(opts.biff == 12 ? 4 : 2),\n    R = blob.read_shift(opts.biff == 12 ? 4 : 2);\n  var c = parse_ColRelU(blob, 2);\n  var C = parse_ColRelU(blob, 2);\n  return {\n    s: {\n      r: r,\n      c: c[0],\n      cRel: c[1],\n      rRel: c[2]\n    },\n    e: {\n      r: R,\n      c: C[0],\n      cRel: C[1],\n      rRel: C[2]\n    }\n  };\n}\n\n/* [MS-XLS] 2.5.198.109 ; [MS-XLSB] 2.5.97.91 */\nfunction parse_RgceLoc(blob, length, opts) {\n  if (opts && opts.biff >= 2 && opts.biff <= 5) return parse_RgceLoc_BIFF2(blob);\n  var r = blob.read_shift(opts && opts.biff == 12 ? 4 : 2);\n  var c = parse_ColRelU(blob, 2);\n  return {\n    r: r,\n    c: c[0],\n    cRel: c[1],\n    rRel: c[2]\n  };\n}\nfunction parse_RgceLoc_BIFF2(blob /*::, length, opts*/) {\n  var r = parse_ColRelU(blob, 2);\n  var c = blob.read_shift(1);\n  return {\n    r: r[0],\n    c: c,\n    cRel: r[1],\n    rRel: r[2]\n  };\n}\n\n/* [MS-XLS] 2.5.198.107, 2.5.47 */\nfunction parse_RgceElfLoc(blob /*::, length, opts*/) {\n  var r = blob.read_shift(2);\n  var c = blob.read_shift(2);\n  return {\n    r: r,\n    c: c & 0xFF,\n    fQuoted: !!(c & 0x4000),\n    cRel: c >> 15,\n    rRel: c >> 15\n  };\n}\n\n/* [MS-XLS] 2.5.198.111 ; [MS-XLSB] 2.5.97.92 TODO */\nfunction parse_RgceLocRel(blob, length, opts) {\n  var biff = opts && opts.biff ? opts.biff : 8;\n  if (biff >= 2 && biff <= 5) return parse_RgceLocRel_BIFF2(blob);\n  var r = blob.read_shift(biff >= 12 ? 4 : 2);\n  var cl = blob.read_shift(2);\n  var cRel = (cl & 0x4000) >> 14,\n    rRel = (cl & 0x8000) >> 15;\n  cl &= 0x3FFF;\n  if (rRel == 1) while (r > 0x7FFFF) r -= 0x100000;\n  if (cRel == 1) while (cl > 0x1FFF) cl = cl - 0x4000;\n  return {\n    r: r,\n    c: cl,\n    cRel: cRel,\n    rRel: rRel\n  };\n}\nfunction parse_RgceLocRel_BIFF2(blob /*::, length:number, opts*/) {\n  var rl = blob.read_shift(2);\n  var c = blob.read_shift(1);\n  var rRel = (rl & 0x8000) >> 15,\n    cRel = (rl & 0x4000) >> 14;\n  rl &= 0x3FFF;\n  if (rRel == 1 && rl >= 0x2000) rl = rl - 0x4000;\n  if (cRel == 1 && c >= 0x80) c = c - 0x100;\n  return {\n    r: rl,\n    c: c,\n    cRel: cRel,\n    rRel: rRel\n  };\n}\n\n/* [MS-XLS] 2.5.198.27 ; [MS-XLSB] 2.5.97.18 */\nfunction parse_PtgArea(blob, length, opts) {\n  var type = (blob[blob.l++] & 0x60) >> 5;\n  var area = parse_RgceArea(blob, opts.biff >= 2 && opts.biff <= 5 ? 6 : 8, opts);\n  return [type, area];\n}\n\n/* [MS-XLS] 2.5.198.28 ; [MS-XLSB] 2.5.97.19 */\nfunction parse_PtgArea3d(blob, length, opts) {\n  var type = (blob[blob.l++] & 0x60) >> 5;\n  var ixti = blob.read_shift(2, 'i');\n  var w = 8;\n  if (opts) switch (opts.biff) {\n    case 5:\n      blob.l += 12;\n      w = 6;\n      break;\n    case 12:\n      w = 12;\n      break;\n  }\n  var area = parse_RgceArea(blob, w, opts);\n  return [type, ixti, area];\n}\n\n/* [MS-XLS] 2.5.198.29 ; [MS-XLSB] 2.5.97.20 */\nfunction parse_PtgAreaErr(blob, length, opts) {\n  var type = (blob[blob.l++] & 0x60) >> 5;\n  blob.l += opts && opts.biff > 8 ? 12 : opts.biff < 8 ? 6 : 8;\n  return [type];\n}\n/* [MS-XLS] 2.5.198.30 ; [MS-XLSB] 2.5.97.21 */\nfunction parse_PtgAreaErr3d(blob, length, opts) {\n  var type = (blob[blob.l++] & 0x60) >> 5;\n  var ixti = blob.read_shift(2);\n  var w = 8;\n  if (opts) switch (opts.biff) {\n    case 5:\n      blob.l += 12;\n      w = 6;\n      break;\n    case 12:\n      w = 12;\n      break;\n  }\n  blob.l += w;\n  return [type, ixti];\n}\n\n/* [MS-XLS] 2.5.198.31 ; [MS-XLSB] 2.5.97.22 */\nfunction parse_PtgAreaN(blob, length, opts) {\n  var type = (blob[blob.l++] & 0x60) >> 5;\n  var area = parse_RgceAreaRel(blob, length - 1, opts);\n  return [type, area];\n}\n\n/* [MS-XLS] 2.5.198.32 ; [MS-XLSB] 2.5.97.23 */\nfunction parse_PtgArray(blob, length, opts) {\n  var type = (blob[blob.l++] & 0x60) >> 5;\n  blob.l += opts.biff == 2 ? 6 : opts.biff == 12 ? 14 : 7;\n  return [type];\n}\n\n/* [MS-XLS] 2.5.198.33 ; [MS-XLSB] 2.5.97.24 */\nfunction parse_PtgAttrBaxcel(blob) {\n  var bitSemi = blob[blob.l + 1] & 0x01; /* 1 = volatile */\n  var bitBaxcel = 1;\n  blob.l += 4;\n  return [bitSemi, bitBaxcel];\n}\n\n/* [MS-XLS] 2.5.198.34 ; [MS-XLSB] 2.5.97.25 */\nfunction parse_PtgAttrChoose(blob, length, opts) /*:Array<number>*/{\n  blob.l += 2;\n  var offset = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);\n  var o /*:Array<number>*/ = [];\n  /* offset is 1 less than the number of elements */\n  for (var i = 0; i <= offset; ++i) o.push(blob.read_shift(opts && opts.biff == 2 ? 1 : 2));\n  return o;\n}\n\n/* [MS-XLS] 2.5.198.35 ; [MS-XLSB] 2.5.97.26 */\nfunction parse_PtgAttrGoto(blob, length, opts) {\n  var bitGoto = blob[blob.l + 1] & 0xFF ? 1 : 0;\n  blob.l += 2;\n  return [bitGoto, blob.read_shift(opts && opts.biff == 2 ? 1 : 2)];\n}\n\n/* [MS-XLS] 2.5.198.36 ; [MS-XLSB] 2.5.97.27 */\nfunction parse_PtgAttrIf(blob, length, opts) {\n  var bitIf = blob[blob.l + 1] & 0xFF ? 1 : 0;\n  blob.l += 2;\n  return [bitIf, blob.read_shift(opts && opts.biff == 2 ? 1 : 2)];\n}\n\n/* [MS-XLSB] 2.5.97.28 */\nfunction parse_PtgAttrIfError(blob) {\n  var bitIf = blob[blob.l + 1] & 0xFF ? 1 : 0;\n  blob.l += 2;\n  return [bitIf, blob.read_shift(2)];\n}\n\n/* [MS-XLS] 2.5.198.37 ; [MS-XLSB] 2.5.97.29 */\nfunction parse_PtgAttrSemi(blob, length, opts) {\n  var bitSemi = blob[blob.l + 1] & 0xFF ? 1 : 0;\n  blob.l += opts && opts.biff == 2 ? 3 : 4;\n  return [bitSemi];\n}\n\n/* [MS-XLS] 2.5.198.40 ; [MS-XLSB] 2.5.97.32 */\nfunction parse_PtgAttrSpaceType(blob /*::, length*/) {\n  var type = blob.read_shift(1),\n    cch = blob.read_shift(1);\n  return [type, cch];\n}\n\n/* [MS-XLS] 2.5.198.38 ; [MS-XLSB] 2.5.97.30 */\nfunction parse_PtgAttrSpace(blob) {\n  blob.read_shift(2);\n  return parse_PtgAttrSpaceType(blob);\n}\n\n/* [MS-XLS] 2.5.198.39 ; [MS-XLSB] 2.5.97.31 */\nfunction parse_PtgAttrSpaceSemi(blob) {\n  blob.read_shift(2);\n  return parse_PtgAttrSpaceType(blob);\n}\n\n/* [MS-XLS] 2.5.198.84 ; [MS-XLSB] 2.5.97.68 TODO */\nfunction parse_PtgRef(blob, length, opts) {\n  //var ptg = blob[blob.l] & 0x1F;\n  var type = (blob[blob.l] & 0x60) >> 5;\n  blob.l += 1;\n  var loc = parse_RgceLoc(blob, 0, opts);\n  return [type, loc];\n}\n\n/* [MS-XLS] 2.5.198.88 ; [MS-XLSB] 2.5.97.72 TODO */\nfunction parse_PtgRefN(blob, length, opts) {\n  var type = (blob[blob.l] & 0x60) >> 5;\n  blob.l += 1;\n  var loc = parse_RgceLocRel(blob, 0, opts);\n  return [type, loc];\n}\n\n/* [MS-XLS] 2.5.198.85 ; [MS-XLSB] 2.5.97.69 TODO */\nfunction parse_PtgRef3d(blob, length, opts) {\n  var type = (blob[blob.l] & 0x60) >> 5;\n  blob.l += 1;\n  var ixti = blob.read_shift(2); // XtiIndex\n  if (opts && opts.biff == 5) blob.l += 12;\n  var loc = parse_RgceLoc(blob, 0, opts); // TODO: or RgceLocRel\n  return [type, ixti, loc];\n}\n\n/* [MS-XLS] 2.5.198.62 ; [MS-XLSB] 2.5.97.45 TODO */\nfunction parse_PtgFunc(blob, length, opts) {\n  //var ptg = blob[blob.l] & 0x1F;\n  var type = (blob[blob.l] & 0x60) >> 5;\n  blob.l += 1;\n  var iftab = blob.read_shift(opts && opts.biff <= 3 ? 1 : 2);\n  return [FtabArgc[iftab], Ftab[iftab], type];\n}\n/* [MS-XLS] 2.5.198.63 ; [MS-XLSB] 2.5.97.46 TODO */\nfunction parse_PtgFuncVar(blob, length, opts) {\n  var type = blob[blob.l++];\n  var cparams = blob.read_shift(1),\n    tab = opts && opts.biff <= 3 ? [type == 0x58 ? -1 : 0, blob.read_shift(1)] : parsetab(blob);\n  return [cparams, (tab[0] === 0 ? Ftab : Cetab)[tab[1]]];\n}\nfunction parsetab(blob) {\n  return [blob[blob.l + 1] >> 7, blob.read_shift(2) & 0x7FFF];\n}\n\n/* [MS-XLS] 2.5.198.41 ; [MS-XLSB] 2.5.97.33 */\nfunction parse_PtgAttrSum(blob, length, opts) {\n  blob.l += opts && opts.biff == 2 ? 3 : 4;\n  return;\n}\n\n/* [MS-XLS] 2.5.198.58 ; [MS-XLSB] 2.5.97.40 */\nfunction parse_PtgExp(blob, length, opts) {\n  blob.l++;\n  if (opts && opts.biff == 12) return [blob.read_shift(4, 'i'), 0];\n  var row = blob.read_shift(2);\n  var col = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);\n  return [row, col];\n}\n\n/* [MS-XLS] 2.5.198.57 ; [MS-XLSB] 2.5.97.39 */\nfunction parse_PtgErr(blob) {\n  blob.l++;\n  return BErr[blob.read_shift(1)];\n}\n\n/* [MS-XLS] 2.5.198.66 ; [MS-XLSB] 2.5.97.49 */\nfunction parse_PtgInt(blob) {\n  blob.l++;\n  return blob.read_shift(2);\n}\n\n/* [MS-XLS] 2.5.198.42 ; [MS-XLSB] 2.5.97.34 */\nfunction parse_PtgBool(blob) {\n  blob.l++;\n  return blob.read_shift(1) !== 0;\n}\n\n/* [MS-XLS] 2.5.198.79 ; [MS-XLSB] 2.5.97.63 */\nfunction parse_PtgNum(blob) {\n  blob.l++;\n  return parse_Xnum(blob);\n}\n\n/* [MS-XLS] 2.5.198.89 ; [MS-XLSB] 2.5.97.74 */\nfunction parse_PtgStr(blob, length, opts) {\n  blob.l++;\n  return parse_ShortXLUnicodeString(blob, length - 1, opts);\n}\n\n/* [MS-XLS] 2.5.192.112 + 2.5.192.11{3,4,5,6,7} */\n/* [MS-XLSB] 2.5.97.93 + 2.5.97.9{4,5,6,7} */\nfunction parse_SerAr(blob, biff /*:number*/) {\n  var val = [blob.read_shift(1)];\n  if (biff == 12) switch (val[0]) {\n    case 0x02:\n      val[0] = 0x04;\n      break;\n    /* SerBool */\n    case 0x04:\n      val[0] = 0x10;\n      break;\n    /* SerErr */\n    case 0x00:\n      val[0] = 0x01;\n      break;\n    /* SerNum */\n    case 0x01:\n      val[0] = 0x02;\n      break;\n    /* SerStr */\n  }\n\n  switch (val[0]) {\n    case 0x04:\n      /* SerBool -- boolean */\n      val[1] = parsebool(blob, 1) ? 'TRUE' : 'FALSE';\n      if (biff != 12) blob.l += 7;\n      break;\n    case 0x25: /* appears to be an alias */\n    case 0x10:\n      /* SerErr -- error */\n      val[1] = BErr[blob[blob.l]];\n      blob.l += biff == 12 ? 4 : 8;\n      break;\n    case 0x00:\n      /* SerNil -- honestly, I'm not sure how to reproduce this */\n      blob.l += 8;\n      break;\n    case 0x01:\n      /* SerNum -- Xnum */\n      val[1] = parse_Xnum(blob);\n      break;\n    case 0x02:\n      /* SerStr -- XLUnicodeString (<256 chars) */\n      val[1] = parse_XLUnicodeString2(blob, 0, {\n        biff: biff > 0 && biff < 8 ? 2 : biff\n      });\n      break;\n    default:\n      throw new Error(\"Bad SerAr: \" + val[0]);\n    /* Unreachable */\n  }\n\n  return val;\n}\n\n/* [MS-XLS] 2.5.198.61 ; [MS-XLSB] 2.5.97.44 */\nfunction parse_PtgExtraMem(blob, cce, opts) {\n  var count = blob.read_shift(opts.biff == 12 ? 4 : 2);\n  var out /*:Array<Range>*/ = [];\n  for (var i = 0; i != count; ++i) out.push((opts.biff == 12 ? parse_UncheckedRfX : parse_Ref8U)(blob));\n  return out;\n}\n\n/* [MS-XLS] 2.5.198.59 ; [MS-XLSB] 2.5.97.41 */\nfunction parse_PtgExtraArray(blob, length, opts) {\n  var rows = 0,\n    cols = 0;\n  if (opts.biff == 12) {\n    rows = blob.read_shift(4); // DRw\n    cols = blob.read_shift(4); // DCol\n  } else {\n    cols = 1 + blob.read_shift(1); //DColByteU\n    rows = 1 + blob.read_shift(2); //DRw\n  }\n\n  if (opts.biff >= 2 && opts.biff < 8) {\n    --rows;\n    if (--cols == 0) cols = 0x100;\n  }\n  // $FlowIgnore\n  for (var i = 0, o /*:Array<Array<any>>*/ = []; i != rows && (o[i] = []); ++i) for (var j = 0; j != cols; ++j) o[i][j] = parse_SerAr(blob, opts.biff);\n  return o;\n}\n\n/* [MS-XLS] 2.5.198.76 ; [MS-XLSB] 2.5.97.60 */\nfunction parse_PtgName(blob, length, opts) {\n  var type = blob.read_shift(1) >>> 5 & 0x03;\n  var w = !opts || opts.biff >= 8 ? 4 : 2;\n  var nameindex = blob.read_shift(w);\n  switch (opts.biff) {\n    case 2:\n      blob.l += 5;\n      break;\n    case 3:\n    case 4:\n      blob.l += 8;\n      break;\n    case 5:\n      blob.l += 12;\n      break;\n  }\n  return [type, 0, nameindex];\n}\n\n/* [MS-XLS] 2.5.198.77 ; [MS-XLSB] 2.5.97.61 */\nfunction parse_PtgNameX(blob, length, opts) {\n  if (opts.biff == 5) return parse_PtgNameX_BIFF5(blob);\n  var type = blob.read_shift(1) >>> 5 & 0x03;\n  var ixti = blob.read_shift(2); // XtiIndex\n  var nameindex = blob.read_shift(4);\n  return [type, ixti, nameindex];\n}\nfunction parse_PtgNameX_BIFF5(blob /*::, length, opts*/) {\n  var type = blob.read_shift(1) >>> 5 & 0x03;\n  var ixti = blob.read_shift(2, 'i'); // XtiIndex\n  blob.l += 8;\n  var nameindex = blob.read_shift(2);\n  blob.l += 12;\n  return [type, ixti, nameindex];\n}\n\n/* [MS-XLS] 2.5.198.70 ; [MS-XLSB] 2.5.97.54 */\nfunction parse_PtgMemArea(blob, length, opts) {\n  var type = blob.read_shift(1) >>> 5 & 0x03;\n  blob.l += opts && opts.biff == 2 ? 3 : 4;\n  var cce = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);\n  return [type, cce];\n}\n\n/* [MS-XLS] 2.5.198.72 ; [MS-XLSB] 2.5.97.56 */\nfunction parse_PtgMemFunc(blob, length, opts) {\n  var type = blob.read_shift(1) >>> 5 & 0x03;\n  var cce = blob.read_shift(opts && opts.biff == 2 ? 1 : 2);\n  return [type, cce];\n}\n\n/* [MS-XLS] 2.5.198.86 ; [MS-XLSB] 2.5.97.69 */\nfunction parse_PtgRefErr(blob, length, opts) {\n  var type = blob.read_shift(1) >>> 5 & 0x03;\n  blob.l += 4;\n  if (opts.biff < 8) blob.l--;\n  if (opts.biff == 12) blob.l += 2;\n  return [type];\n}\n\n/* [MS-XLS] 2.5.198.87 ; [MS-XLSB] 2.5.97.71 */\nfunction parse_PtgRefErr3d(blob, length, opts) {\n  var type = (blob[blob.l++] & 0x60) >> 5;\n  var ixti = blob.read_shift(2);\n  var w = 4;\n  if (opts) switch (opts.biff) {\n    case 5:\n      w = 15;\n      break;\n    case 12:\n      w = 6;\n      break;\n  }\n  blob.l += w;\n  return [type, ixti];\n}\n\n/* [MS-XLS] 2.5.198.71 ; [MS-XLSB] 2.5.97.55 */\nvar parse_PtgMemErr = parsenoop;\n/* [MS-XLS] 2.5.198.73  ; [MS-XLSB] 2.5.97.57 */\nvar parse_PtgMemNoMem = parsenoop;\n/* [MS-XLS] 2.5.198.92 */\nvar parse_PtgTbl = parsenoop;\nfunction parse_PtgElfLoc(blob, length, opts) {\n  blob.l += 2;\n  return [parse_RgceElfLoc(blob)];\n}\nfunction parse_PtgElfNoop(blob /*::, length, opts*/) {\n  blob.l += 6;\n  return [];\n}\n/* [MS-XLS] 2.5.198.46 */\nvar parse_PtgElfCol = parse_PtgElfLoc;\n/* [MS-XLS] 2.5.198.47 */\nvar parse_PtgElfColS = parse_PtgElfNoop;\n/* [MS-XLS] 2.5.198.48 */\nvar parse_PtgElfColSV = parse_PtgElfNoop;\n/* [MS-XLS] 2.5.198.49 */\nvar parse_PtgElfColV = parse_PtgElfLoc;\n/* [MS-XLS] 2.5.198.50 */\nfunction parse_PtgElfLel(blob /*::, length, opts*/) {\n  blob.l += 2;\n  return [parseuint16(blob), blob.read_shift(2) & 0x01];\n}\n/* [MS-XLS] 2.5.198.51 */\nvar parse_PtgElfRadical = parse_PtgElfLoc;\n/* [MS-XLS] 2.5.198.52 */\nvar parse_PtgElfRadicalLel = parse_PtgElfLel;\n/* [MS-XLS] 2.5.198.53 */\nvar parse_PtgElfRadicalS = parse_PtgElfNoop;\n/* [MS-XLS] 2.5.198.54 */\nvar parse_PtgElfRw = parse_PtgElfLoc;\n/* [MS-XLS] 2.5.198.55 */\nvar parse_PtgElfRwV = parse_PtgElfLoc;\n\n/* [MS-XLSB] 2.5.97.52 TODO */\nvar PtgListRT = [\"Data\", \"All\", \"Headers\", \"??\", \"?Data2\", \"??\", \"?DataHeaders\", \"??\", \"Totals\", \"??\", \"??\", \"??\", \"?DataTotals\", \"??\", \"??\", \"??\", \"?Current\"];\nfunction parse_PtgList(blob /*::, length, opts*/) {\n  blob.l += 2;\n  var ixti = blob.read_shift(2);\n  var flags = blob.read_shift(2);\n  var idx = blob.read_shift(4);\n  var c = blob.read_shift(2);\n  var C = blob.read_shift(2);\n  var rt = PtgListRT[flags >> 2 & 0x1F];\n  return {\n    ixti: ixti,\n    coltype: flags & 0x3,\n    rt: rt,\n    idx: idx,\n    c: c,\n    C: C\n  };\n}\n/* [MS-XLS] 2.5.198.91 ; [MS-XLSB] 2.5.97.76 */\nfunction parse_PtgSxName(blob /*::, length, opts*/) {\n  blob.l += 2;\n  return [blob.read_shift(4)];\n}\n\n/* [XLS] old spec */\nfunction parse_PtgSheet(blob, length, opts) {\n  blob.l += 5;\n  blob.l += 2;\n  blob.l += opts.biff == 2 ? 1 : 4;\n  return [\"PTGSHEET\"];\n}\nfunction parse_PtgEndSheet(blob, length, opts) {\n  blob.l += opts.biff == 2 ? 4 : 5;\n  return [\"PTGENDSHEET\"];\n}\nfunction parse_PtgMemAreaN(blob /*::, length, opts*/) {\n  var type = blob.read_shift(1) >>> 5 & 0x03;\n  var cce = blob.read_shift(2);\n  return [type, cce];\n}\nfunction parse_PtgMemNoMemN(blob /*::, length, opts*/) {\n  var type = blob.read_shift(1) >>> 5 & 0x03;\n  var cce = blob.read_shift(2);\n  return [type, cce];\n}\nfunction parse_PtgAttrNoop(blob /*::, length, opts*/) {\n  blob.l += 4;\n  return [0, 0];\n}\n\n/* [MS-XLS] 2.5.198.25 ; [MS-XLSB] 2.5.97.16 */\nvar PtgTypes = {\n  /*::[*/0x01 /*::]*/: {\n    n: 'PtgExp',\n    f: parse_PtgExp\n  },\n  /*::[*/0x02 /*::]*/: {\n    n: 'PtgTbl',\n    f: parse_PtgTbl\n  },\n  /*::[*/0x03 /*::]*/: {\n    n: 'PtgAdd',\n    f: parseread1\n  },\n  /*::[*/0x04 /*::]*/: {\n    n: 'PtgSub',\n    f: parseread1\n  },\n  /*::[*/0x05 /*::]*/: {\n    n: 'PtgMul',\n    f: parseread1\n  },\n  /*::[*/0x06 /*::]*/: {\n    n: 'PtgDiv',\n    f: parseread1\n  },\n  /*::[*/0x07 /*::]*/: {\n    n: 'PtgPower',\n    f: parseread1\n  },\n  /*::[*/0x08 /*::]*/: {\n    n: 'PtgConcat',\n    f: parseread1\n  },\n  /*::[*/0x09 /*::]*/: {\n    n: 'PtgLt',\n    f: parseread1\n  },\n  /*::[*/0x0A /*::]*/: {\n    n: 'PtgLe',\n    f: parseread1\n  },\n  /*::[*/0x0B /*::]*/: {\n    n: 'PtgEq',\n    f: parseread1\n  },\n  /*::[*/0x0C /*::]*/: {\n    n: 'PtgGe',\n    f: parseread1\n  },\n  /*::[*/0x0D /*::]*/: {\n    n: 'PtgGt',\n    f: parseread1\n  },\n  /*::[*/0x0E /*::]*/: {\n    n: 'PtgNe',\n    f: parseread1\n  },\n  /*::[*/0x0F /*::]*/: {\n    n: 'PtgIsect',\n    f: parseread1\n  },\n  /*::[*/0x10 /*::]*/: {\n    n: 'PtgUnion',\n    f: parseread1\n  },\n  /*::[*/0x11 /*::]*/: {\n    n: 'PtgRange',\n    f: parseread1\n  },\n  /*::[*/0x12 /*::]*/: {\n    n: 'PtgUplus',\n    f: parseread1\n  },\n  /*::[*/0x13 /*::]*/: {\n    n: 'PtgUminus',\n    f: parseread1\n  },\n  /*::[*/0x14 /*::]*/: {\n    n: 'PtgPercent',\n    f: parseread1\n  },\n  /*::[*/0x15 /*::]*/: {\n    n: 'PtgParen',\n    f: parseread1\n  },\n  /*::[*/0x16 /*::]*/: {\n    n: 'PtgMissArg',\n    f: parseread1\n  },\n  /*::[*/0x17 /*::]*/: {\n    n: 'PtgStr',\n    f: parse_PtgStr\n  },\n  /*::[*/0x1A /*::]*/: {\n    n: 'PtgSheet',\n    f: parse_PtgSheet\n  },\n  /*::[*/0x1B /*::]*/: {\n    n: 'PtgEndSheet',\n    f: parse_PtgEndSheet\n  },\n  /*::[*/0x1C /*::]*/: {\n    n: 'PtgErr',\n    f: parse_PtgErr\n  },\n  /*::[*/0x1D /*::]*/: {\n    n: 'PtgBool',\n    f: parse_PtgBool\n  },\n  /*::[*/0x1E /*::]*/: {\n    n: 'PtgInt',\n    f: parse_PtgInt\n  },\n  /*::[*/0x1F /*::]*/: {\n    n: 'PtgNum',\n    f: parse_PtgNum\n  },\n  /*::[*/0x20 /*::]*/: {\n    n: 'PtgArray',\n    f: parse_PtgArray\n  },\n  /*::[*/0x21 /*::]*/: {\n    n: 'PtgFunc',\n    f: parse_PtgFunc\n  },\n  /*::[*/0x22 /*::]*/: {\n    n: 'PtgFuncVar',\n    f: parse_PtgFuncVar\n  },\n  /*::[*/0x23 /*::]*/: {\n    n: 'PtgName',\n    f: parse_PtgName\n  },\n  /*::[*/0x24 /*::]*/: {\n    n: 'PtgRef',\n    f: parse_PtgRef\n  },\n  /*::[*/0x25 /*::]*/: {\n    n: 'PtgArea',\n    f: parse_PtgArea\n  },\n  /*::[*/0x26 /*::]*/: {\n    n: 'PtgMemArea',\n    f: parse_PtgMemArea\n  },\n  /*::[*/0x27 /*::]*/: {\n    n: 'PtgMemErr',\n    f: parse_PtgMemErr\n  },\n  /*::[*/0x28 /*::]*/: {\n    n: 'PtgMemNoMem',\n    f: parse_PtgMemNoMem\n  },\n  /*::[*/0x29 /*::]*/: {\n    n: 'PtgMemFunc',\n    f: parse_PtgMemFunc\n  },\n  /*::[*/0x2A /*::]*/: {\n    n: 'PtgRefErr',\n    f: parse_PtgRefErr\n  },\n  /*::[*/0x2B /*::]*/: {\n    n: 'PtgAreaErr',\n    f: parse_PtgAreaErr\n  },\n  /*::[*/0x2C /*::]*/: {\n    n: 'PtgRefN',\n    f: parse_PtgRefN\n  },\n  /*::[*/0x2D /*::]*/: {\n    n: 'PtgAreaN',\n    f: parse_PtgAreaN\n  },\n  /*::[*/0x2E /*::]*/: {\n    n: 'PtgMemAreaN',\n    f: parse_PtgMemAreaN\n  },\n  /*::[*/0x2F /*::]*/: {\n    n: 'PtgMemNoMemN',\n    f: parse_PtgMemNoMemN\n  },\n  /*::[*/0x39 /*::]*/: {\n    n: 'PtgNameX',\n    f: parse_PtgNameX\n  },\n  /*::[*/0x3A /*::]*/: {\n    n: 'PtgRef3d',\n    f: parse_PtgRef3d\n  },\n  /*::[*/0x3B /*::]*/: {\n    n: 'PtgArea3d',\n    f: parse_PtgArea3d\n  },\n  /*::[*/0x3C /*::]*/: {\n    n: 'PtgRefErr3d',\n    f: parse_PtgRefErr3d\n  },\n  /*::[*/0x3D /*::]*/: {\n    n: 'PtgAreaErr3d',\n    f: parse_PtgAreaErr3d\n  },\n  /*::[*/0xFF /*::]*/: {}\n};\n/* These are duplicated in the PtgTypes table */\nvar PtgDupes = {\n  /*::[*/0x40 /*::]*/: 0x20,\n  /*::[*/0x60 /*::]*/: 0x20,\n  /*::[*/0x41 /*::]*/: 0x21,\n  /*::[*/0x61 /*::]*/: 0x21,\n  /*::[*/0x42 /*::]*/: 0x22,\n  /*::[*/0x62 /*::]*/: 0x22,\n  /*::[*/0x43 /*::]*/: 0x23,\n  /*::[*/0x63 /*::]*/: 0x23,\n  /*::[*/0x44 /*::]*/: 0x24,\n  /*::[*/0x64 /*::]*/: 0x24,\n  /*::[*/0x45 /*::]*/: 0x25,\n  /*::[*/0x65 /*::]*/: 0x25,\n  /*::[*/0x46 /*::]*/: 0x26,\n  /*::[*/0x66 /*::]*/: 0x26,\n  /*::[*/0x47 /*::]*/: 0x27,\n  /*::[*/0x67 /*::]*/: 0x27,\n  /*::[*/0x48 /*::]*/: 0x28,\n  /*::[*/0x68 /*::]*/: 0x28,\n  /*::[*/0x49 /*::]*/: 0x29,\n  /*::[*/0x69 /*::]*/: 0x29,\n  /*::[*/0x4A /*::]*/: 0x2A,\n  /*::[*/0x6A /*::]*/: 0x2A,\n  /*::[*/0x4B /*::]*/: 0x2B,\n  /*::[*/0x6B /*::]*/: 0x2B,\n  /*::[*/0x4C /*::]*/: 0x2C,\n  /*::[*/0x6C /*::]*/: 0x2C,\n  /*::[*/0x4D /*::]*/: 0x2D,\n  /*::[*/0x6D /*::]*/: 0x2D,\n  /*::[*/0x4E /*::]*/: 0x2E,\n  /*::[*/0x6E /*::]*/: 0x2E,\n  /*::[*/0x4F /*::]*/: 0x2F,\n  /*::[*/0x6F /*::]*/: 0x2F,\n  /*::[*/0x58 /*::]*/: 0x22,\n  /*::[*/0x78 /*::]*/: 0x22,\n  /*::[*/0x59 /*::]*/: 0x39,\n  /*::[*/0x79 /*::]*/: 0x39,\n  /*::[*/0x5A /*::]*/: 0x3A,\n  /*::[*/0x7A /*::]*/: 0x3A,\n  /*::[*/0x5B /*::]*/: 0x3B,\n  /*::[*/0x7B /*::]*/: 0x3B,\n  /*::[*/0x5C /*::]*/: 0x3C,\n  /*::[*/0x7C /*::]*/: 0x3C,\n  /*::[*/0x5D /*::]*/: 0x3D,\n  /*::[*/0x7D /*::]*/: 0x3D\n};\nvar Ptg18 = {\n  /*::[*/0x01 /*::]*/: {\n    n: 'PtgElfLel',\n    f: parse_PtgElfLel\n  },\n  /*::[*/0x02 /*::]*/: {\n    n: 'PtgElfRw',\n    f: parse_PtgElfRw\n  },\n  /*::[*/0x03 /*::]*/: {\n    n: 'PtgElfCol',\n    f: parse_PtgElfCol\n  },\n  /*::[*/0x06 /*::]*/: {\n    n: 'PtgElfRwV',\n    f: parse_PtgElfRwV\n  },\n  /*::[*/0x07 /*::]*/: {\n    n: 'PtgElfColV',\n    f: parse_PtgElfColV\n  },\n  /*::[*/0x0A /*::]*/: {\n    n: 'PtgElfRadical',\n    f: parse_PtgElfRadical\n  },\n  /*::[*/0x0B /*::]*/: {\n    n: 'PtgElfRadicalS',\n    f: parse_PtgElfRadicalS\n  },\n  /*::[*/0x0D /*::]*/: {\n    n: 'PtgElfColS',\n    f: parse_PtgElfColS\n  },\n  /*::[*/0x0F /*::]*/: {\n    n: 'PtgElfColSV',\n    f: parse_PtgElfColSV\n  },\n  /*::[*/0x10 /*::]*/: {\n    n: 'PtgElfRadicalLel',\n    f: parse_PtgElfRadicalLel\n  },\n  /*::[*/0x19 /*::]*/: {\n    n: 'PtgList',\n    f: parse_PtgList\n  },\n  /*::[*/0x1D /*::]*/: {\n    n: 'PtgSxName',\n    f: parse_PtgSxName\n  },\n  /*::[*/0xFF /*::]*/: {}\n};\nvar Ptg19 = {\n  /*::[*/0x00 /*::]*/: {\n    n: 'PtgAttrNoop',\n    f: parse_PtgAttrNoop\n  },\n  /*::[*/0x01 /*::]*/: {\n    n: 'PtgAttrSemi',\n    f: parse_PtgAttrSemi\n  },\n  /*::[*/0x02 /*::]*/: {\n    n: 'PtgAttrIf',\n    f: parse_PtgAttrIf\n  },\n  /*::[*/0x04 /*::]*/: {\n    n: 'PtgAttrChoose',\n    f: parse_PtgAttrChoose\n  },\n  /*::[*/0x08 /*::]*/: {\n    n: 'PtgAttrGoto',\n    f: parse_PtgAttrGoto\n  },\n  /*::[*/0x10 /*::]*/: {\n    n: 'PtgAttrSum',\n    f: parse_PtgAttrSum\n  },\n  /*::[*/0x20 /*::]*/: {\n    n: 'PtgAttrBaxcel',\n    f: parse_PtgAttrBaxcel\n  },\n  /*::[*/0x21 /*::]*/: {\n    n: 'PtgAttrBaxcel',\n    f: parse_PtgAttrBaxcel\n  },\n  /*::[*/0x40 /*::]*/: {\n    n: 'PtgAttrSpace',\n    f: parse_PtgAttrSpace\n  },\n  /*::[*/0x41 /*::]*/: {\n    n: 'PtgAttrSpaceSemi',\n    f: parse_PtgAttrSpaceSemi\n  },\n  /*::[*/0x80 /*::]*/: {\n    n: 'PtgAttrIfError',\n    f: parse_PtgAttrIfError\n  },\n  /*::[*/0xFF /*::]*/: {}\n};\n\n/* [MS-XLS] 2.5.198.103 ; [MS-XLSB] 2.5.97.87 */\nfunction parse_RgbExtra(blob, length, rgce, opts) {\n  if (opts.biff < 8) return parsenoop(blob, length);\n  var target = blob.l + length;\n  var o = [];\n  for (var i = 0; i !== rgce.length; ++i) {\n    switch (rgce[i][0]) {\n      case 'PtgArray':\n        /* PtgArray -> PtgExtraArray */\n        rgce[i][1] = parse_PtgExtraArray(blob, 0, opts);\n        o.push(rgce[i][1]);\n        break;\n      case 'PtgMemArea':\n        /* PtgMemArea -> PtgExtraMem */\n        rgce[i][2] = parse_PtgExtraMem(blob, rgce[i][1], opts);\n        o.push(rgce[i][2]);\n        break;\n      case 'PtgExp':\n        /* PtgExp -> PtgExtraCol */\n        if (opts && opts.biff == 12) {\n          rgce[i][1][1] = blob.read_shift(4);\n          o.push(rgce[i][1]);\n        }\n        break;\n      case 'PtgList': /* TODO: PtgList -> PtgExtraList */\n      case 'PtgElfRadicalS': /* TODO: PtgElfRadicalS -> PtgExtraElf */\n      case 'PtgElfColS': /* TODO: PtgElfColS -> PtgExtraElf */\n      case 'PtgElfColSV':\n        /* TODO: PtgElfColSV -> PtgExtraElf */\n        throw \"Unsupported \" + rgce[i][0];\n    }\n  }\n  length = target - blob.l;\n  /* note: this is technically an error but Excel disregards */\n  //if(target !== blob.l && blob.l !== target - length) throw new Error(target + \" != \" + blob.l);\n  if (length !== 0) o.push(parsenoop(blob, length));\n  return o;\n}\n\n/* [MS-XLS] 2.5.198.104 ; [MS-XLSB] 2.5.97.88 */\nfunction parse_Rgce(blob, length, opts) {\n  var target = blob.l + length;\n  var R,\n    id,\n    ptgs = [];\n  while (target != blob.l) {\n    length = target - blob.l;\n    id = blob[blob.l];\n    R = PtgTypes[id] || PtgTypes[PtgDupes[id]];\n    if (id === 0x18 || id === 0x19) R = (id === 0x18 ? Ptg18 : Ptg19)[blob[blob.l + 1]];\n    if (!R || !R.f) {\n      /*ptgs.push*/parsenoop(blob, length);\n    } else {\n      ptgs.push([R.n, R.f(blob, length, opts)]);\n    }\n  }\n  return ptgs;\n}\nfunction stringify_array(f /*:Array<Array<string>>*/) /*:string*/{\n  var o /*:Array<string>*/ = [];\n  for (var i = 0; i < f.length; ++i) {\n    var x = f[i],\n      r /*:Array<string>*/ = [];\n    for (var j = 0; j < x.length; ++j) {\n      var y = x[j];\n      if (y) switch (y[0]) {\n        // TODO: handle embedded quotes\n        case 0x02:\n          /*:: if(typeof y[1] != 'string') throw \"unreachable\"; */\n          r.push('\"' + y[1].replace(/\"/g, '\"\"') + '\"');\n          break;\n        default:\n          r.push(y[1]);\n      } else r.push(\"\");\n    }\n    o.push(r.join(\",\"));\n  }\n  return o.join(\";\");\n}\n\n/* [MS-XLS] 2.2.2 ; [MS-XLSB] 2.2.2 TODO */\nvar PtgBinOp = {\n  PtgAdd: \"+\",\n  PtgConcat: \"&\",\n  PtgDiv: \"/\",\n  PtgEq: \"=\",\n  PtgGe: \">=\",\n  PtgGt: \">\",\n  PtgLe: \"<=\",\n  PtgLt: \"<\",\n  PtgMul: \"*\",\n  PtgNe: \"<>\",\n  PtgPower: \"^\",\n  PtgSub: \"-\"\n};\n\n// TODO: explore space\nfunction make_3d_range(start, end) {\n  var s = start.lastIndexOf(\"!\"),\n    e = end.lastIndexOf(\"!\");\n  if (s == -1 && e == -1) return start + \":\" + end;\n  if (s > 0 && e > 0 && start.slice(0, s).toLowerCase() == end.slice(0, e).toLowerCase()) return start + \":\" + end.slice(e + 1);\n  console.error(\"Cannot hydrate range\", start, end);\n  return start + \":\" + end;\n}\nfunction get_ixti_raw(supbooks, ixti /*:number*/, opts) /*:string*/{\n  if (!supbooks) return \"SH33TJSERR0\";\n  if (opts.biff > 8 && (!supbooks.XTI || !supbooks.XTI[ixti])) return supbooks.SheetNames[ixti];\n  if (!supbooks.XTI) return \"SH33TJSERR6\";\n  var XTI = supbooks.XTI[ixti];\n  if (opts.biff < 8) {\n    if (ixti > 10000) ixti -= 65536;\n    if (ixti < 0) ixti = -ixti;\n    return ixti == 0 ? \"\" : supbooks.XTI[ixti - 1];\n  }\n  if (!XTI) return \"SH33TJSERR1\";\n  var o = \"\";\n  if (opts.biff > 8) switch (supbooks[XTI[0]][0]) {\n    case 0x0165:\n      /* 'BrtSupSelf' */\n      o = XTI[1] == -1 ? \"#REF\" : supbooks.SheetNames[XTI[1]];\n      return XTI[1] == XTI[2] ? o : o + \":\" + supbooks.SheetNames[XTI[2]];\n    case 0x0166:\n      /* 'BrtSupSame' */\n      if (opts.SID != null) return supbooks.SheetNames[opts.SID];\n      return \"SH33TJSSAME\" + supbooks[XTI[0]][0];\n    case 0x0163: /* 'BrtSupBookSrc' */\n    /* falls through */\n    default:\n      return \"SH33TJSSRC\" + supbooks[XTI[0]][0];\n  }\n  switch (supbooks[XTI[0]][0][0]) {\n    case 0x0401:\n      o = XTI[1] == -1 ? \"#REF\" : supbooks.SheetNames[XTI[1]] || \"SH33TJSERR3\";\n      return XTI[1] == XTI[2] ? o : o + \":\" + supbooks.SheetNames[XTI[2]];\n    case 0x3A01:\n      return supbooks[XTI[0]].slice(1).map(function (name) {\n        return name.Name;\n      }).join(\";;\");\n    //return \"SH33TJSERR8\";\n    default:\n      if (!supbooks[XTI[0]][0][3]) return \"SH33TJSERR2\";\n      o = XTI[1] == -1 ? \"#REF\" : supbooks[XTI[0]][0][3][XTI[1]] || \"SH33TJSERR4\";\n      return XTI[1] == XTI[2] ? o : o + \":\" + supbooks[XTI[0]][0][3][XTI[2]];\n  }\n}\nfunction get_ixti(supbooks, ixti /*:number*/, opts) /*:string*/{\n  var ixtiraw = get_ixti_raw(supbooks, ixti, opts);\n  return ixtiraw == \"#REF\" ? ixtiraw : formula_quote_sheet_name(ixtiraw, opts);\n}\nfunction stringify_formula(formula /*Array<any>*/, range, cell /*:any*/, supbooks, opts) /*:string*/{\n  var biff = opts && opts.biff || 8;\n  var _range = /*range != null ? range :*/{\n    s: {\n      c: 0,\n      r: 0\n    },\n    e: {\n      c: 0,\n      r: 0\n    }\n  };\n  var stack /*:Array<string>*/ = [],\n    e1,\n    e2,\n    /*::type,*/c /*:CellAddress*/,\n    ixti = 0,\n    nameidx = 0,\n    r,\n    sname = \"\";\n  if (!formula[0] || !formula[0][0]) return \"\";\n  var last_sp = -1,\n    sp = \"\";\n  for (var ff = 0, fflen = formula[0].length; ff < fflen; ++ff) {\n    var f = formula[0][ff];\n    switch (f[0]) {\n      case 'PtgUminus':\n        /* [MS-XLS] 2.5.198.93 */\n        stack.push(\"-\" + stack.pop());\n        break;\n      case 'PtgUplus':\n        /* [MS-XLS] 2.5.198.95 */\n        stack.push(\"+\" + stack.pop());\n        break;\n      case 'PtgPercent':\n        /* [MS-XLS] 2.5.198.81 */\n        stack.push(stack.pop() + \"%\");\n        break;\n      case 'PtgAdd': /* [MS-XLS] 2.5.198.26 */\n      case 'PtgConcat': /* [MS-XLS] 2.5.198.43 */\n      case 'PtgDiv': /* [MS-XLS] 2.5.198.45 */\n      case 'PtgEq': /* [MS-XLS] 2.5.198.56 */\n      case 'PtgGe': /* [MS-XLS] 2.5.198.64 */\n      case 'PtgGt': /* [MS-XLS] 2.5.198.65 */\n      case 'PtgLe': /* [MS-XLS] 2.5.198.68 */\n      case 'PtgLt': /* [MS-XLS] 2.5.198.69 */\n      case 'PtgMul': /* [MS-XLS] 2.5.198.75 */\n      case 'PtgNe': /* [MS-XLS] 2.5.198.78 */\n      case 'PtgPower': /* [MS-XLS] 2.5.198.82 */\n      case 'PtgSub':\n        /* [MS-XLS] 2.5.198.90 */\n        e1 = stack.pop();\n        e2 = stack.pop();\n        if (last_sp >= 0) {\n          switch (formula[0][last_sp][1][0]) {\n            case 0:\n              // $FlowIgnore\n              sp = fill(\" \", formula[0][last_sp][1][1]);\n              break;\n            case 1:\n              // $FlowIgnore\n              sp = fill(\"\\r\", formula[0][last_sp][1][1]);\n              break;\n            default:\n              sp = \"\";\n              // $FlowIgnore\n              if (opts.WTF) throw new Error(\"Unexpected PtgAttrSpaceType \" + formula[0][last_sp][1][0]);\n          }\n          e2 = e2 + sp;\n          last_sp = -1;\n        }\n        stack.push(e2 + PtgBinOp[f[0]] + e1);\n        break;\n      case 'PtgIsect':\n        /* [MS-XLS] 2.5.198.67 */\n        e1 = stack.pop();\n        e2 = stack.pop();\n        stack.push(e2 + \" \" + e1);\n        break;\n      case 'PtgUnion':\n        /* [MS-XLS] 2.5.198.94 */\n        e1 = stack.pop();\n        e2 = stack.pop();\n        stack.push(e2 + \",\" + e1);\n        break;\n      case 'PtgRange':\n        /* [MS-XLS] 2.5.198.83 */\n        e1 = stack.pop();\n        e2 = stack.pop();\n        stack.push(make_3d_range(e2, e1));\n        break;\n      case 'PtgAttrChoose':\n        /* [MS-XLS] 2.5.198.34 */\n        break;\n      case 'PtgAttrGoto':\n        /* [MS-XLS] 2.5.198.35 */\n        break;\n      case 'PtgAttrIf':\n        /* [MS-XLS] 2.5.198.36 */\n        break;\n      case 'PtgAttrIfError':\n        /* [MS-XLSB] 2.5.97.28 */\n        break;\n      case 'PtgRef':\n        /* [MS-XLS] 2.5.198.84 */\n        /*::type = f[1][0]; */c = shift_cell_xls(f[1][1] /*:any*/, _range, opts);\n        stack.push(encode_cell_xls(c, biff));\n        break;\n      case 'PtgRefN':\n        /* [MS-XLS] 2.5.198.88 */\n        /*::type = f[1][0]; */c = cell ? shift_cell_xls(f[1][1] /*:any*/, cell, opts) : f[1][1] /*:any*/;\n        stack.push(encode_cell_xls(c, biff));\n        break;\n      case 'PtgRef3d':\n        /* [MS-XLS] 2.5.198.85 */\n        /*::type = f[1][0]; */ixti = /*::Number(*/f[1][1] /*::)*/;\n        c = shift_cell_xls(f[1][2] /*:any*/, _range, opts);\n        sname = get_ixti(supbooks, ixti, opts);\n        stack.push(sname + \"!\" + encode_cell_xls(c, biff));\n        break;\n      case 'PtgFunc': /* [MS-XLS] 2.5.198.62 */\n      case 'PtgFuncVar':\n        /* [MS-XLS] 2.5.198.63 */\n        /* f[1] = [argc, func, type] */\n        var argc /*:number*/ = f[1][0] /*:any*/,\n          func /*:string*/ = f[1][1] /*:any*/;\n        if (!argc) argc = 0;\n        argc &= 0x7F;\n        var args = argc == 0 ? [] : stack.slice(-argc);\n        stack.length -= argc;\n        if (func === 'User') func = args.shift();\n        stack.push(func + \"(\" + args.join(\",\") + \")\");\n        break;\n      case 'PtgBool':\n        /* [MS-XLS] 2.5.198.42 */\n        stack.push(f[1] ? \"TRUE\" : \"FALSE\");\n        break;\n      case 'PtgInt':\n        /* [MS-XLS] 2.5.198.66 */\n        stack.push( /*::String(*/f[1] /*::)*/);\n        break;\n      case 'PtgNum':\n        /* [MS-XLS] 2.5.198.79 TODO: precision? */\n        stack.push(String(f[1]));\n        break;\n      case 'PtgStr':\n        /* [MS-XLS] 2.5.198.89 */\n        // $FlowIgnore\n        stack.push('\"' + f[1].replace(/\"/g, '\"\"') + '\"');\n        break;\n      case 'PtgErr':\n        /* [MS-XLS] 2.5.198.57 */\n        stack.push( /*::String(*/f[1] /*::)*/);\n        break;\n      case 'PtgAreaN':\n        /* [MS-XLS] 2.5.198.31 TODO */\n        /*::type = f[1][0]; */r = shift_range_xls(f[1][1], cell ? {\n          s: cell\n        } : _range, opts);\n        stack.push(encode_range_xls(r /*:any*/, opts));\n        break;\n      case 'PtgArea':\n        /* [MS-XLS] 2.5.198.27 TODO: fixed points */\n        /*::type = f[1][0]; */r = shift_range_xls(f[1][1], _range, opts);\n        stack.push(encode_range_xls(r /*:any*/, opts));\n        break;\n      case 'PtgArea3d':\n        /* [MS-XLS] 2.5.198.28 TODO */\n        /*::type = f[1][0]; */ixti = /*::Number(*/f[1][1] /*::)*/;\n        r = f[1][2];\n        sname = get_ixti(supbooks, ixti, opts);\n        stack.push(sname + \"!\" + encode_range_xls(r /*:any*/, opts));\n        break;\n      case 'PtgAttrSum':\n        /* [MS-XLS] 2.5.198.41 */\n        stack.push(\"SUM(\" + stack.pop() + \")\");\n        break;\n      case 'PtgAttrBaxcel': /* [MS-XLS] 2.5.198.33 */\n      case 'PtgAttrSemi':\n        /* [MS-XLS] 2.5.198.37 */\n        break;\n      case 'PtgName':\n        /* [MS-XLS] 2.5.198.76 ; [MS-XLSB] 2.5.97.60 TODO: revisions */\n        /* f[1] = type, 0, nameindex */\n        nameidx = f[1][2] /*:any*/;\n        var lbl = (supbooks.names || [])[nameidx - 1] || (supbooks[0] || [])[nameidx];\n        var name = lbl ? lbl.Name : \"SH33TJSNAME\" + String(nameidx);\n        /* [MS-XLSB] 2.5.97.10 Ftab -- last verified 20220204 */\n        if (name && name.slice(0, 6) == \"_xlfn.\" && !opts.xlfn) name = name.slice(6);\n        stack.push(name);\n        break;\n      case 'PtgNameX':\n        /* [MS-XLS] 2.5.198.77 ; [MS-XLSB] 2.5.97.61 TODO: revisions */\n        /* f[1] = type, ixti, nameindex */\n        var bookidx /*:number*/ = f[1][1] /*:any*/;\n        nameidx = f[1][2] /*:any*/;\n        var externbook;\n        /* TODO: Properly handle missing values -- this should be using get_ixti_raw primarily */\n        if (opts.biff <= 5) {\n          if (bookidx < 0) bookidx = -bookidx;\n          if (supbooks[bookidx]) externbook = supbooks[bookidx][nameidx];\n        } else {\n          var o = \"\";\n          if (((supbooks[bookidx] || [])[0] || [])[0] == 0x3A01) ;else if (((supbooks[bookidx] || [])[0] || [])[0] == 0x0401) {\n            if (supbooks[bookidx][nameidx] && supbooks[bookidx][nameidx].itab > 0) {\n              o = supbooks.SheetNames[supbooks[bookidx][nameidx].itab - 1] + \"!\";\n            }\n          } else o = supbooks.SheetNames[nameidx - 1] + \"!\";\n          if (supbooks[bookidx] && supbooks[bookidx][nameidx]) o += supbooks[bookidx][nameidx].Name;else if (supbooks[0] && supbooks[0][nameidx]) o += supbooks[0][nameidx].Name;else {\n            var ixtidata = (get_ixti_raw(supbooks, bookidx, opts) || \"\").split(\";;\");\n            if (ixtidata[nameidx - 1]) o = ixtidata[nameidx - 1]; // TODO: confirm this is correct\n            else o += \"SH33TJSERRX\";\n          }\n          stack.push(o);\n          break;\n        }\n        if (!externbook) externbook = {\n          Name: \"SH33TJSERRY\"\n        };\n        stack.push(externbook.Name);\n        break;\n      case 'PtgParen':\n        /* [MS-XLS] 2.5.198.80 */\n        var lp = '(',\n          rp = ')';\n        if (last_sp >= 0) {\n          sp = \"\";\n          switch (formula[0][last_sp][1][0]) {\n            // $FlowIgnore\n            case 2:\n              lp = fill(\" \", formula[0][last_sp][1][1]) + lp;\n              break;\n            // $FlowIgnore\n            case 3:\n              lp = fill(\"\\r\", formula[0][last_sp][1][1]) + lp;\n              break;\n            // $FlowIgnore\n            case 4:\n              rp = fill(\" \", formula[0][last_sp][1][1]) + rp;\n              break;\n            // $FlowIgnore\n            case 5:\n              rp = fill(\"\\r\", formula[0][last_sp][1][1]) + rp;\n              break;\n            default:\n              // $FlowIgnore\n              if (opts.WTF) throw new Error(\"Unexpected PtgAttrSpaceType \" + formula[0][last_sp][1][0]);\n          }\n          last_sp = -1;\n        }\n        stack.push(lp + stack.pop() + rp);\n        break;\n      case 'PtgRefErr':\n        /* [MS-XLS] 2.5.198.86 */\n        stack.push('#REF!');\n        break;\n      case 'PtgRefErr3d':\n        /* [MS-XLS] 2.5.198.87 */\n        stack.push('#REF!');\n        break;\n      case 'PtgExp':\n        /* [MS-XLS] 2.5.198.58 TODO */\n        c = {\n          c: f[1][1] /*:any*/,\n          r: f[1][0] /*:any*/\n        };\n        var q = {\n          c: cell.c,\n          r: cell.r\n        } /*:any*/;\n        if (supbooks.sharedf[encode_cell(c)]) {\n          var parsedf = supbooks.sharedf[encode_cell(c)];\n          stack.push(stringify_formula(parsedf, _range, q, supbooks, opts));\n        } else {\n          var fnd = false;\n          for (e1 = 0; e1 != supbooks.arrayf.length; ++e1) {\n            /* TODO: should be something like range_has */\n            e2 = supbooks.arrayf[e1];\n            if (c.c < e2[0].s.c || c.c > e2[0].e.c) continue;\n            if (c.r < e2[0].s.r || c.r > e2[0].e.r) continue;\n            stack.push(stringify_formula(e2[1], _range, q, supbooks, opts));\n            fnd = true;\n            break;\n          }\n          if (!fnd) stack.push( /*::String(*/f[1] /*::)*/);\n        }\n\n        break;\n      case 'PtgArray':\n        /* [MS-XLS] 2.5.198.32 TODO */\n        stack.push(\"{\" + stringify_array( /*::(*/f[1] /*:: :any)*/) + \"}\");\n        break;\n      case 'PtgMemArea':\n        /* [MS-XLS] 2.5.198.70 TODO: confirm this is a non-display */\n        //stack.push(\"(\" + f[2].map(encode_range).join(\",\") + \")\");\n        break;\n      case 'PtgAttrSpace': /* [MS-XLS] 2.5.198.38 */\n      case 'PtgAttrSpaceSemi':\n        /* [MS-XLS] 2.5.198.39 */\n        last_sp = ff;\n        break;\n      case 'PtgTbl':\n        /* [MS-XLS] 2.5.198.92 TODO */\n        break;\n      case 'PtgMemErr':\n        /* [MS-XLS] 2.5.198.71 */\n        break;\n      case 'PtgMissArg':\n        /* [MS-XLS] 2.5.198.74 */\n        stack.push(\"\");\n        break;\n      case 'PtgAreaErr':\n        /* [MS-XLS] 2.5.198.29 */\n        stack.push(\"#REF!\");\n        break;\n      case 'PtgAreaErr3d':\n        /* [MS-XLS] 2.5.198.30 */\n        stack.push(\"#REF!\");\n        break;\n      case 'PtgList':\n        /* [MS-XLSB] 2.5.97.52 */\n        // $FlowIgnore\n        stack.push(\"Table\" + f[1].idx + \"[#\" + f[1].rt + \"]\");\n        break;\n      case 'PtgMemAreaN':\n      case 'PtgMemNoMemN':\n      case 'PtgAttrNoop':\n      case 'PtgSheet':\n      case 'PtgEndSheet':\n        break;\n      case 'PtgMemFunc':\n        /* [MS-XLS] 2.5.198.72 TODO */\n        break;\n      case 'PtgMemNoMem':\n        /* [MS-XLS] 2.5.198.73 TODO */\n        break;\n      case 'PtgElfCol': /* [MS-XLS] 2.5.198.46 */\n      case 'PtgElfColS': /* [MS-XLS] 2.5.198.47 */\n      case 'PtgElfColSV': /* [MS-XLS] 2.5.198.48 */\n      case 'PtgElfColV': /* [MS-XLS] 2.5.198.49 */\n      case 'PtgElfLel': /* [MS-XLS] 2.5.198.50 */\n      case 'PtgElfRadical': /* [MS-XLS] 2.5.198.51 */\n      case 'PtgElfRadicalLel': /* [MS-XLS] 2.5.198.52 */\n      case 'PtgElfRadicalS': /* [MS-XLS] 2.5.198.53 */\n      case 'PtgElfRw': /* [MS-XLS] 2.5.198.54 */\n      case 'PtgElfRwV':\n        /* [MS-XLS] 2.5.198.55 */\n        throw new Error(\"Unsupported ELFs\");\n      case 'PtgSxName':\n        /* [MS-XLS] 2.5.198.91 TODO -- find a test case */\n        throw new Error('Unrecognized Formula Token: ' + String(f));\n      default:\n        throw new Error('Unrecognized Formula Token: ' + String(f));\n    }\n    var PtgNonDisp = ['PtgAttrSpace', 'PtgAttrSpaceSemi', 'PtgAttrGoto'];\n    if (opts.biff != 3) if (last_sp >= 0 && PtgNonDisp.indexOf(formula[0][ff][0]) == -1) {\n      f = formula[0][last_sp];\n      var _left = true;\n      switch (f[1][0]) {\n        /* note: some bad XLSB files omit the PtgParen */\n        case 4:\n          _left = false;\n        /* falls through */\n        case 0:\n          // $FlowIgnore\n          sp = fill(\" \", f[1][1]);\n          break;\n        case 5:\n          _left = false;\n        /* falls through */\n        case 1:\n          // $FlowIgnore\n          sp = fill(\"\\r\", f[1][1]);\n          break;\n        default:\n          sp = \"\";\n          // $FlowIgnore\n          if (opts.WTF) throw new Error(\"Unexpected PtgAttrSpaceType \" + f[1][0]);\n      }\n      stack.push((_left ? sp : \"\") + stack.pop() + (_left ? \"\" : sp));\n      last_sp = -1;\n    }\n  }\n  if (stack.length > 1 && opts.WTF) throw new Error(\"bad formula stack\");\n  if (stack[0] == \"TRUE\") return true;\n  if (stack[0] == \"FALSE\") return false;\n  return stack[0];\n}\n\n/* [MS-XLS] 2.5.198.1 TODO */\nfunction parse_ArrayParsedFormula(blob, length, opts /*::, ref*/) {\n  var target = blob.l + length,\n    len = opts.biff == 2 ? 1 : 2;\n  var rgcb,\n    cce = blob.read_shift(len); // length of rgce\n  if (cce == 0xFFFF) return [[], parsenoop(blob, length - 2)];\n  var rgce = parse_Rgce(blob, cce, opts);\n  if (length !== cce + len) rgcb = parse_RgbExtra(blob, length - cce - len, rgce, opts);\n  blob.l = target;\n  return [rgce, rgcb];\n}\n\n/* [MS-XLS] 2.5.198.3 TODO */\nfunction parse_XLSCellParsedFormula(blob, length, opts) {\n  var target = blob.l + length,\n    len = opts.biff == 2 ? 1 : 2;\n  var rgcb,\n    cce = blob.read_shift(len); // length of rgce\n  if (cce == 0xFFFF) return [[], parsenoop(blob, length - 2)];\n  var rgce = parse_Rgce(blob, cce, opts);\n  if (length !== cce + len) rgcb = parse_RgbExtra(blob, length - cce - len, rgce, opts);\n  blob.l = target;\n  return [rgce, rgcb];\n}\n\n/* [MS-XLS] 2.5.198.21 */\nfunction parse_NameParsedFormula(blob, length, opts, cce) {\n  var target = blob.l + length;\n  var rgce = parse_Rgce(blob, cce, opts);\n  var rgcb;\n  if (target !== blob.l) rgcb = parse_RgbExtra(blob, target - blob.l, rgce, opts);\n  return [rgce, rgcb];\n}\n\n/* [MS-XLS] 2.5.198.118 TODO */\nfunction parse_SharedParsedFormula(blob, length, opts) {\n  var target = blob.l + length;\n  var rgcb,\n    cce = blob.read_shift(2); // length of rgce\n  var rgce = parse_Rgce(blob, cce, opts);\n  if (cce == 0xFFFF) return [[], parsenoop(blob, length - 2)];\n  if (length !== cce + 2) rgcb = parse_RgbExtra(blob, target - cce - 2, rgce, opts);\n  return [rgce, rgcb];\n}\n\n/* [MS-XLS] 2.5.133 TODO: how to emit empty strings? */\nfunction parse_FormulaValue(blob /*::, length*/) {\n  var b;\n  if (__readUInt16LE(blob, blob.l + 6) !== 0xFFFF) return [parse_Xnum(blob), 'n'];\n  switch (blob[blob.l]) {\n    case 0x00:\n      blob.l += 8;\n      return [\"String\", 's'];\n    case 0x01:\n      b = blob[blob.l + 2] === 0x1;\n      blob.l += 8;\n      return [b, 'b'];\n    case 0x02:\n      b = blob[blob.l + 2];\n      blob.l += 8;\n      return [b, 'e'];\n    case 0x03:\n      blob.l += 8;\n      return [\"\", 's'];\n  }\n  return [];\n}\nfunction write_FormulaValue(value) {\n  if (value == null) {\n    // Blank String Value\n    var o = new_buf(8);\n    o.write_shift(1, 0x03);\n    o.write_shift(1, 0);\n    o.write_shift(2, 0);\n    o.write_shift(2, 0);\n    o.write_shift(2, 0xFFFF);\n    return o;\n  } else if (typeof value == \"number\") return write_Xnum(value);\n  return write_Xnum(0);\n}\n\n/* [MS-XLS] 2.4.127 TODO */\nfunction parse_Formula(blob, length, opts) {\n  var end = blob.l + length;\n  var cell = parse_XLSCell(blob, 6, opts);\n  var val = parse_FormulaValue(blob);\n  var flags = blob.read_shift(1);\n  if (opts.biff != 2) {\n    blob.read_shift(1);\n    if (opts.biff >= 5) {\n      /*var chn = */blob.read_shift(4);\n    }\n  }\n  var cbf = parse_XLSCellParsedFormula(blob, end - blob.l, opts);\n  return {\n    cell: cell,\n    val: val[0],\n    formula: cbf,\n    shared: flags >> 3 & 1,\n    tt: val[1]\n  };\n}\nfunction write_Formula(cell /*:Cell*/, R /*:number*/, C /*:number*/, opts, os /*:number*/) {\n  // Cell\n  var o1 = write_XLSCell(R, C, os);\n\n  // FormulaValue\n  var o2 = write_FormulaValue(cell.v);\n\n  // flags + cache\n  var o3 = new_buf(6);\n  var flags = 0x01 | 0x20;\n  o3.write_shift(2, flags);\n  o3.write_shift(4, 0);\n\n  // CellParsedFormula\n  var bf = new_buf(cell.bf.length);\n  for (var i = 0; i < cell.bf.length; ++i) bf[i] = cell.bf[i];\n  var out = bconcat([o1, o2, o3, bf]);\n  return out;\n}\n\n/* XLSB Parsed Formula records have the same shape */\nfunction parse_XLSBParsedFormula(data, length, opts) {\n  var cce = data.read_shift(4);\n  var rgce = parse_Rgce(data, cce, opts);\n  var cb = data.read_shift(4);\n  var rgcb = cb > 0 ? parse_RgbExtra(data, cb, rgce, opts) : null;\n  return [rgce, rgcb];\n}\n\n/* [MS-XLSB] 2.5.97.1 ArrayParsedFormula */\nvar parse_XLSBArrayParsedFormula = parse_XLSBParsedFormula;\n/* [MS-XLSB] 2.5.97.4 CellParsedFormula */\nvar parse_XLSBCellParsedFormula = parse_XLSBParsedFormula;\n/* [MS-XLSB] 2.5.97.8 DVParsedFormula */\n//var parse_XLSBDVParsedFormula = parse_XLSBParsedFormula;\n/* [MS-XLSB] 2.5.97.9 FRTParsedFormula */\n//var parse_XLSBFRTParsedFormula = parse_XLSBParsedFormula2;\n/* [MS-XLSB] 2.5.97.12 NameParsedFormula */\nvar parse_XLSBNameParsedFormula = parse_XLSBParsedFormula;\n/* [MS-XLSB] 2.5.97.98 SharedParsedFormula */\nvar parse_XLSBSharedParsedFormula = parse_XLSBParsedFormula;\n\n/* Writes a PtgNum or PtgInt */\nfunction write_XLSBFormulaNum(val /*:number*/) {\n  if ((val | 0) == val && val < Math.pow(2, 16) && val >= 0) {\n    var oint = new_buf(11);\n    oint.write_shift(4, 3);\n    oint.write_shift(1, 0x1e);\n    oint.write_shift(2, val);\n    oint.write_shift(4, 0);\n    return oint;\n  }\n  var num = new_buf(17);\n  num.write_shift(4, 11);\n  num.write_shift(1, 0x1f);\n  num.write_shift(8, val);\n  num.write_shift(4, 0);\n  return num;\n}\n/* Writes a PtgErr */\nfunction write_XLSBFormulaErr(val /*:number*/) {\n  var oint = new_buf(10);\n  oint.write_shift(4, 2);\n  oint.write_shift(1, 0x1C);\n  oint.write_shift(1, val);\n  oint.write_shift(4, 0);\n  return oint;\n}\n/* Writes a PtgBool */\nfunction write_XLSBFormulaBool(val /*:boolean*/) {\n  var oint = new_buf(10);\n  oint.write_shift(4, 2);\n  oint.write_shift(1, 0x1D);\n  oint.write_shift(1, val ? 1 : 0);\n  oint.write_shift(4, 0);\n  return oint;\n}\n\n/* Writes a PtgStr */\nfunction write_XLSBFormulaStr(val /*:string*/) {\n  var preamble = new_buf(7);\n  preamble.write_shift(4, 3 + 2 * val.length);\n  preamble.write_shift(1, 0x17);\n  preamble.write_shift(2, val.length);\n  var body = new_buf(2 * val.length);\n  body.write_shift(2 * val.length, val, \"utf16le\");\n  var postamble = new_buf(4);\n  postamble.write_shift(4, 0);\n  return bconcat([preamble, body, postamble]);\n}\n\n/* Writes a PtgRef */\nfunction write_XLSBFormulaRef(str) {\n  var cell = decode_cell(str);\n  var out = new_buf(15);\n  out.write_shift(4, 7);\n  out.write_shift(1, 0x04 | 1 << 5);\n  out.write_shift(4, cell.r);\n  out.write_shift(2, cell.c | (str.charAt(0) == \"$\" ? 0 : 1) << 14 | (str.match(/\\$\\d/) ? 0 : 1) << 15); // <== ColRelShort\n  out.write_shift(4, 0);\n  return out;\n}\n\n/* Writes a PtgRef3d */\nfunction write_XLSBFormulaRef3D(str, wb) {\n  var lastbang = str.lastIndexOf(\"!\");\n  var sname = str.slice(0, lastbang);\n  str = str.slice(lastbang + 1);\n  var cell = decode_cell(str);\n  if (sname.charAt(0) == \"'\") sname = sname.slice(1, -1).replace(/''/g, \"'\");\n  var out = new_buf(17);\n  out.write_shift(4, 9);\n  out.write_shift(1, 0x1A | 1 << 5);\n  out.write_shift(2, 2 + wb.SheetNames.map(function (n) {\n    return n.toLowerCase();\n  }).indexOf(sname.toLowerCase()));\n  out.write_shift(4, cell.r);\n  out.write_shift(2, cell.c | (str.charAt(0) == \"$\" ? 0 : 1) << 14 | (str.match(/\\$\\d/) ? 0 : 1) << 15); // <== ColRelShort\n  out.write_shift(4, 0);\n  return out;\n}\n\n/* Writes a PtgRefErr3d */\nfunction write_XLSBFormulaRefErr3D(str, wb) {\n  var lastbang = str.lastIndexOf(\"!\");\n  var sname = str.slice(0, lastbang);\n  str = str.slice(lastbang + 1);\n  if (sname.charAt(0) == \"'\") sname = sname.slice(1, -1).replace(/''/g, \"'\");\n  var out = new_buf(17);\n  out.write_shift(4, 9);\n  out.write_shift(1, 0x1C | 1 << 5);\n  out.write_shift(2, 2 + wb.SheetNames.map(function (n) {\n    return n.toLowerCase();\n  }).indexOf(sname.toLowerCase()));\n  out.write_shift(4, 0);\n  out.write_shift(2, 0); // <== ColRelShort\n  out.write_shift(4, 0);\n  return out;\n}\n\n/* Writes a single sheet range [PtgRef PtgRef PtgRange] */\nfunction write_XLSBFormulaRange(_str) {\n  var parts = _str.split(\":\"),\n    str = parts[0];\n  var out = new_buf(23);\n  out.write_shift(4, 15);\n\n  /* start cell */\n  str = parts[0];\n  var cell = decode_cell(str);\n  out.write_shift(1, 0x04 | 1 << 5);\n  out.write_shift(4, cell.r);\n  out.write_shift(2, cell.c | (str.charAt(0) == \"$\" ? 0 : 1) << 14 | (str.match(/\\$\\d/) ? 0 : 1) << 15); // <== ColRelShort\n  out.write_shift(4, 0);\n\n  /* end cell */\n  str = parts[1];\n  cell = decode_cell(str);\n  out.write_shift(1, 0x04 | 1 << 5);\n  out.write_shift(4, cell.r);\n  out.write_shift(2, cell.c | (str.charAt(0) == \"$\" ? 0 : 1) << 14 | (str.match(/\\$\\d/) ? 0 : 1) << 15); // <== ColRelShort\n  out.write_shift(4, 0);\n\n  /* PtgRange */\n  out.write_shift(1, 0x11);\n  out.write_shift(4, 0);\n  return out;\n}\n\n/* Writes a range with explicit sheet name [PtgRef3D PtgRef3D PtgRange] */\nfunction write_XLSBFormulaRangeWS(_str, wb) {\n  var lastbang = _str.lastIndexOf(\"!\");\n  var sname = _str.slice(0, lastbang);\n  _str = _str.slice(lastbang + 1);\n  if (sname.charAt(0) == \"'\") sname = sname.slice(1, -1).replace(/''/g, \"'\");\n  var parts = _str.split(\":\");\n  var out = new_buf(27);\n  out.write_shift(4, 19);\n\n  /* start cell */\n  var str = parts[0],\n    cell = decode_cell(str);\n  out.write_shift(1, 0x1A | 1 << 5);\n  out.write_shift(2, 2 + wb.SheetNames.map(function (n) {\n    return n.toLowerCase();\n  }).indexOf(sname.toLowerCase()));\n  out.write_shift(4, cell.r);\n  out.write_shift(2, cell.c | (str.charAt(0) == \"$\" ? 0 : 1) << 14 | (str.match(/\\$\\d/) ? 0 : 1) << 15); // <== ColRelShort\n\n  /* end cell */\n  str = parts[1];\n  cell = decode_cell(str);\n  out.write_shift(1, 0x1A | 1 << 5);\n  out.write_shift(2, 2 + wb.SheetNames.map(function (n) {\n    return n.toLowerCase();\n  }).indexOf(sname.toLowerCase()));\n  out.write_shift(4, cell.r);\n  out.write_shift(2, cell.c | (str.charAt(0) == \"$\" ? 0 : 1) << 14 | (str.match(/\\$\\d/) ? 0 : 1) << 15); // <== ColRelShort\n\n  /* PtgRange */\n  out.write_shift(1, 0x11);\n  out.write_shift(4, 0);\n  return out;\n}\n\n/* Writes a range with explicit sheet name [PtgArea3d] */\nfunction write_XLSBFormulaArea3D(_str, wb) {\n  var lastbang = _str.lastIndexOf(\"!\");\n  var sname = _str.slice(0, lastbang);\n  _str = _str.slice(lastbang + 1);\n  if (sname.charAt(0) == \"'\") sname = sname.slice(1, -1).replace(/''/g, \"'\");\n  var range = decode_range(_str);\n  var out = new_buf(23);\n  out.write_shift(4, 15);\n  out.write_shift(1, 0x1B | 1 << 5);\n  out.write_shift(2, 2 + wb.SheetNames.map(function (n) {\n    return n.toLowerCase();\n  }).indexOf(sname.toLowerCase()));\n  out.write_shift(4, range.s.r);\n  out.write_shift(4, range.e.r);\n  out.write_shift(2, range.s.c);\n  out.write_shift(2, range.e.c);\n  out.write_shift(4, 0);\n  return out;\n}\n\n/* General Formula */\nfunction write_XLSBFormula(val /*:string|number*/, wb) {\n  if (typeof val == \"number\") return write_XLSBFormulaNum(val);\n  if (typeof val == \"boolean\") return write_XLSBFormulaBool(val);\n  if (/^#(DIV\\/0!|GETTING_DATA|N\\/A|NAME\\?|NULL!|NUM!|REF!|VALUE!)$/.test(val)) return write_XLSBFormulaErr(+RBErr[val]);\n  if (val.match(/^\\$?(?:[A-W][A-Z]{2}|X[A-E][A-Z]|XF[A-D]|[A-Z]{1,2})\\$?(?:10[0-3]\\d{4}|104[0-7]\\d{3}|1048[0-4]\\d{2}|10485[0-6]\\d|104857[0-6]|[1-9]\\d{0,5})$/)) return write_XLSBFormulaRef(val);\n  if (val.match(/^\\$?(?:[A-W][A-Z]{2}|X[A-E][A-Z]|XF[A-D]|[A-Z]{1,2})\\$?(?:10[0-3]\\d{4}|104[0-7]\\d{3}|1048[0-4]\\d{2}|10485[0-6]\\d|104857[0-6]|[1-9]\\d{0,5}):\\$?(?:[A-W][A-Z]{2}|X[A-E][A-Z]|XF[A-D]|[A-Z]{1,2})\\$?(?:10[0-3]\\d{4}|104[0-7]\\d{3}|1048[0-4]\\d{2}|10485[0-6]\\d|104857[0-6]|[1-9]\\d{0,5})$/)) return write_XLSBFormulaRange(val);\n  if (val.match(/^#REF!\\$?(?:[A-W][A-Z]{2}|X[A-E][A-Z]|XF[A-D]|[A-Z]{1,2})\\$?(?:10[0-3]\\d{4}|104[0-7]\\d{3}|1048[0-4]\\d{2}|10485[0-6]\\d|104857[0-6]|[1-9]\\d{0,5}):\\$?(?:[A-W][A-Z]{2}|X[A-E][A-Z]|XF[A-D]|[A-Z]{1,2})\\$?(?:10[0-3]\\d{4}|104[0-7]\\d{3}|1048[0-4]\\d{2}|10485[0-6]\\d|104857[0-6]|[1-9]\\d{0,5})$/)) return write_XLSBFormulaArea3D(val, wb);\n  if (val.match(/^(?:'[^\\\\\\/?*\\[\\]:]*'|[^'][^\\\\\\/?*\\[\\]:'`~!@#$%^()\\-=+{}|;,<.>]*)!\\$?(?:[A-W][A-Z]{2}|X[A-E][A-Z]|XF[A-D]|[A-Z]{1,2})\\$?(?:10[0-3]\\d{4}|104[0-7]\\d{3}|1048[0-4]\\d{2}|10485[0-6]\\d|104857[0-6]|[1-9]\\d{0,5})$/)) return write_XLSBFormulaRef3D(val, wb);\n  if (val.match(/^(?:'[^\\\\\\/?*\\[\\]:]*'|[^'][^\\\\\\/?*\\[\\]:'`~!@#$%^()\\-=+{}|;,<.>]*)!\\$?(?:[A-W][A-Z]{2}|X[A-E][A-Z]|XF[A-D]|[A-Z]{1,2})\\$?(?:10[0-3]\\d{4}|104[0-7]\\d{3}|1048[0-4]\\d{2}|10485[0-6]\\d|104857[0-6]|[1-9]\\d{0,5}):\\$?(?:[A-W][A-Z]{2}|X[A-E][A-Z]|XF[A-D]|[A-Z]{1,2})\\$?(?:10[0-3]\\d{4}|104[0-7]\\d{3}|1048[0-4]\\d{2}|10485[0-6]\\d|104857[0-6]|[1-9]\\d{0,5})$/)) return write_XLSBFormulaRangeWS(val, wb);\n  if (/^(?:'[^\\\\\\/?*\\[\\]:]*'|[^'][^\\\\\\/?*\\[\\]:'`~!@#$%^()\\-=+{}|;,<.>]*)!#REF!$/.test(val)) return write_XLSBFormulaRefErr3D(val, wb);\n  if (/^\".*\"$/.test(val)) return write_XLSBFormulaStr(val);\n  if (/^[+-]\\d+$/.test(val)) return write_XLSBFormulaNum(parseInt(val, 10));\n  throw \"Formula |\" + val + \"| not supported for XLSB\";\n}\nvar write_XLSBNameParsedFormula = write_XLSBFormula;\nvar Cetab = {\n  0: \"BEEP\",\n  1: \"OPEN\",\n  2: \"OPEN.LINKS\",\n  3: \"CLOSE.ALL\",\n  4: \"SAVE\",\n  5: \"SAVE.AS\",\n  6: \"FILE.DELETE\",\n  7: \"PAGE.SETUP\",\n  8: \"PRINT\",\n  9: \"PRINTER.SETUP\",\n  10: \"QUIT\",\n  11: \"NEW.WINDOW\",\n  12: \"ARRANGE.ALL\",\n  13: \"WINDOW.SIZE\",\n  14: \"WINDOW.MOVE\",\n  15: \"FULL\",\n  16: \"CLOSE\",\n  17: \"RUN\",\n  22: \"SET.PRINT.AREA\",\n  23: \"SET.PRINT.TITLES\",\n  24: \"SET.PAGE.BREAK\",\n  25: \"REMOVE.PAGE.BREAK\",\n  26: \"FONT\",\n  27: \"DISPLAY\",\n  28: \"PROTECT.DOCUMENT\",\n  29: \"PRECISION\",\n  30: \"A1.R1C1\",\n  31: \"CALCULATE.NOW\",\n  32: \"CALCULATION\",\n  34: \"DATA.FIND\",\n  35: \"EXTRACT\",\n  36: \"DATA.DELETE\",\n  37: \"SET.DATABASE\",\n  38: \"SET.CRITERIA\",\n  39: \"SORT\",\n  40: \"DATA.SERIES\",\n  41: \"TABLE\",\n  42: \"FORMAT.NUMBER\",\n  43: \"ALIGNMENT\",\n  44: \"STYLE\",\n  45: \"BORDER\",\n  46: \"CELL.PROTECTION\",\n  47: \"COLUMN.WIDTH\",\n  48: \"UNDO\",\n  49: \"CUT\",\n  50: \"COPY\",\n  51: \"PASTE\",\n  52: \"CLEAR\",\n  53: \"PASTE.SPECIAL\",\n  54: \"EDIT.DELETE\",\n  55: \"INSERT\",\n  56: \"FILL.RIGHT\",\n  57: \"FILL.DOWN\",\n  61: \"DEFINE.NAME\",\n  62: \"CREATE.NAMES\",\n  63: \"FORMULA.GOTO\",\n  64: \"FORMULA.FIND\",\n  65: \"SELECT.LAST.CELL\",\n  66: \"SHOW.ACTIVE.CELL\",\n  67: \"GALLERY.AREA\",\n  68: \"GALLERY.BAR\",\n  69: \"GALLERY.COLUMN\",\n  70: \"GALLERY.LINE\",\n  71: \"GALLERY.PIE\",\n  72: \"GALLERY.SCATTER\",\n  73: \"COMBINATION\",\n  74: \"PREFERRED\",\n  75: \"ADD.OVERLAY\",\n  76: \"GRIDLINES\",\n  77: \"SET.PREFERRED\",\n  78: \"AXES\",\n  79: \"LEGEND\",\n  80: \"ATTACH.TEXT\",\n  81: \"ADD.ARROW\",\n  82: \"SELECT.CHART\",\n  83: \"SELECT.PLOT.AREA\",\n  84: \"PATTERNS\",\n  85: \"MAIN.CHART\",\n  86: \"OVERLAY\",\n  87: \"SCALE\",\n  88: \"FORMAT.LEGEND\",\n  89: \"FORMAT.TEXT\",\n  90: \"EDIT.REPEAT\",\n  91: \"PARSE\",\n  92: \"JUSTIFY\",\n  93: \"HIDE\",\n  94: \"UNHIDE\",\n  95: \"WORKSPACE\",\n  96: \"FORMULA\",\n  97: \"FORMULA.FILL\",\n  98: \"FORMULA.ARRAY\",\n  99: \"DATA.FIND.NEXT\",\n  100: \"DATA.FIND.PREV\",\n  101: \"FORMULA.FIND.NEXT\",\n  102: \"FORMULA.FIND.PREV\",\n  103: \"ACTIVATE\",\n  104: \"ACTIVATE.NEXT\",\n  105: \"ACTIVATE.PREV\",\n  106: \"UNLOCKED.NEXT\",\n  107: \"UNLOCKED.PREV\",\n  108: \"COPY.PICTURE\",\n  109: \"SELECT\",\n  110: \"DELETE.NAME\",\n  111: \"DELETE.FORMAT\",\n  112: \"VLINE\",\n  113: \"HLINE\",\n  114: \"VPAGE\",\n  115: \"HPAGE\",\n  116: \"VSCROLL\",\n  117: \"HSCROLL\",\n  118: \"ALERT\",\n  119: \"NEW\",\n  120: \"CANCEL.COPY\",\n  121: \"SHOW.CLIPBOARD\",\n  122: \"MESSAGE\",\n  124: \"PASTE.LINK\",\n  125: \"APP.ACTIVATE\",\n  126: \"DELETE.ARROW\",\n  127: \"ROW.HEIGHT\",\n  128: \"FORMAT.MOVE\",\n  129: \"FORMAT.SIZE\",\n  130: \"FORMULA.REPLACE\",\n  131: \"SEND.KEYS\",\n  132: \"SELECT.SPECIAL\",\n  133: \"APPLY.NAMES\",\n  134: \"REPLACE.FONT\",\n  135: \"FREEZE.PANES\",\n  136: \"SHOW.INFO\",\n  137: \"SPLIT\",\n  138: \"ON.WINDOW\",\n  139: \"ON.DATA\",\n  140: \"DISABLE.INPUT\",\n  142: \"OUTLINE\",\n  143: \"LIST.NAMES\",\n  144: \"FILE.CLOSE\",\n  145: \"SAVE.WORKBOOK\",\n  146: \"DATA.FORM\",\n  147: \"COPY.CHART\",\n  148: \"ON.TIME\",\n  149: \"WAIT\",\n  150: \"FORMAT.FONT\",\n  151: \"FILL.UP\",\n  152: \"FILL.LEFT\",\n  153: \"DELETE.OVERLAY\",\n  155: \"SHORT.MENUS\",\n  159: \"SET.UPDATE.STATUS\",\n  161: \"COLOR.PALETTE\",\n  162: \"DELETE.STYLE\",\n  163: \"WINDOW.RESTORE\",\n  164: \"WINDOW.MAXIMIZE\",\n  166: \"CHANGE.LINK\",\n  167: \"CALCULATE.DOCUMENT\",\n  168: \"ON.KEY\",\n  169: \"APP.RESTORE\",\n  170: \"APP.MOVE\",\n  171: \"APP.SIZE\",\n  172: \"APP.MINIMIZE\",\n  173: \"APP.MAXIMIZE\",\n  174: \"BRING.TO.FRONT\",\n  175: \"SEND.TO.BACK\",\n  185: \"MAIN.CHART.TYPE\",\n  186: \"OVERLAY.CHART.TYPE\",\n  187: \"SELECT.END\",\n  188: \"OPEN.MAIL\",\n  189: \"SEND.MAIL\",\n  190: \"STANDARD.FONT\",\n  191: \"CONSOLIDATE\",\n  192: \"SORT.SPECIAL\",\n  193: \"GALLERY.3D.AREA\",\n  194: \"GALLERY.3D.COLUMN\",\n  195: \"GALLERY.3D.LINE\",\n  196: \"GALLERY.3D.PIE\",\n  197: \"VIEW.3D\",\n  198: \"GOAL.SEEK\",\n  199: \"WORKGROUP\",\n  200: \"FILL.GROUP\",\n  201: \"UPDATE.LINK\",\n  202: \"PROMOTE\",\n  203: \"DEMOTE\",\n  204: \"SHOW.DETAIL\",\n  206: \"UNGROUP\",\n  207: \"OBJECT.PROPERTIES\",\n  208: \"SAVE.NEW.OBJECT\",\n  209: \"SHARE\",\n  210: \"SHARE.NAME\",\n  211: \"DUPLICATE\",\n  212: \"APPLY.STYLE\",\n  213: \"ASSIGN.TO.OBJECT\",\n  214: \"OBJECT.PROTECTION\",\n  215: \"HIDE.OBJECT\",\n  216: \"SET.EXTRACT\",\n  217: \"CREATE.PUBLISHER\",\n  218: \"SUBSCRIBE.TO\",\n  219: \"ATTRIBUTES\",\n  220: \"SHOW.TOOLBAR\",\n  222: \"PRINT.PREVIEW\",\n  223: \"EDIT.COLOR\",\n  224: \"SHOW.LEVELS\",\n  225: \"FORMAT.MAIN\",\n  226: \"FORMAT.OVERLAY\",\n  227: \"ON.RECALC\",\n  228: \"EDIT.SERIES\",\n  229: \"DEFINE.STYLE\",\n  240: \"LINE.PRINT\",\n  243: \"ENTER.DATA\",\n  249: \"GALLERY.RADAR\",\n  250: \"MERGE.STYLES\",\n  251: \"EDITION.OPTIONS\",\n  252: \"PASTE.PICTURE\",\n  253: \"PASTE.PICTURE.LINK\",\n  254: \"SPELLING\",\n  256: \"ZOOM\",\n  259: \"INSERT.OBJECT\",\n  260: \"WINDOW.MINIMIZE\",\n  265: \"SOUND.NOTE\",\n  266: \"SOUND.PLAY\",\n  267: \"FORMAT.SHAPE\",\n  268: \"EXTEND.POLYGON\",\n  269: \"FORMAT.AUTO\",\n  272: \"GALLERY.3D.BAR\",\n  273: \"GALLERY.3D.SURFACE\",\n  274: \"FILL.AUTO\",\n  276: \"CUSTOMIZE.TOOLBAR\",\n  277: \"ADD.TOOL\",\n  278: \"EDIT.OBJECT\",\n  279: \"ON.DOUBLECLICK\",\n  280: \"ON.ENTRY\",\n  281: \"WORKBOOK.ADD\",\n  282: \"WORKBOOK.MOVE\",\n  283: \"WORKBOOK.COPY\",\n  284: \"WORKBOOK.OPTIONS\",\n  285: \"SAVE.WORKSPACE\",\n  288: \"CHART.WIZARD\",\n  289: \"DELETE.TOOL\",\n  290: \"MOVE.TOOL\",\n  291: \"WORKBOOK.SELECT\",\n  292: \"WORKBOOK.ACTIVATE\",\n  293: \"ASSIGN.TO.TOOL\",\n  295: \"COPY.TOOL\",\n  296: \"RESET.TOOL\",\n  297: \"CONSTRAIN.NUMERIC\",\n  298: \"PASTE.TOOL\",\n  302: \"WORKBOOK.NEW\",\n  305: \"SCENARIO.CELLS\",\n  306: \"SCENARIO.DELETE\",\n  307: \"SCENARIO.ADD\",\n  308: \"SCENARIO.EDIT\",\n  309: \"SCENARIO.SHOW\",\n  310: \"SCENARIO.SHOW.NEXT\",\n  311: \"SCENARIO.SUMMARY\",\n  312: \"PIVOT.TABLE.WIZARD\",\n  313: \"PIVOT.FIELD.PROPERTIES\",\n  314: \"PIVOT.FIELD\",\n  315: \"PIVOT.ITEM\",\n  316: \"PIVOT.ADD.FIELDS\",\n  318: \"OPTIONS.CALCULATION\",\n  319: \"OPTIONS.EDIT\",\n  320: \"OPTIONS.VIEW\",\n  321: \"ADDIN.MANAGER\",\n  322: \"MENU.EDITOR\",\n  323: \"ATTACH.TOOLBARS\",\n  324: \"VBAActivate\",\n  325: \"OPTIONS.CHART\",\n  328: \"VBA.INSERT.FILE\",\n  330: \"VBA.PROCEDURE.DEFINITION\",\n  336: \"ROUTING.SLIP\",\n  338: \"ROUTE.DOCUMENT\",\n  339: \"MAIL.LOGON\",\n  342: \"INSERT.PICTURE\",\n  343: \"EDIT.TOOL\",\n  344: \"GALLERY.DOUGHNUT\",\n  350: \"CHART.TREND\",\n  352: \"PIVOT.ITEM.PROPERTIES\",\n  354: \"WORKBOOK.INSERT\",\n  355: \"OPTIONS.TRANSITION\",\n  356: \"OPTIONS.GENERAL\",\n  370: \"FILTER.ADVANCED\",\n  373: \"MAIL.ADD.MAILER\",\n  374: \"MAIL.DELETE.MAILER\",\n  375: \"MAIL.REPLY\",\n  376: \"MAIL.REPLY.ALL\",\n  377: \"MAIL.FORWARD\",\n  378: \"MAIL.NEXT.LETTER\",\n  379: \"DATA.LABEL\",\n  380: \"INSERT.TITLE\",\n  381: \"FONT.PROPERTIES\",\n  382: \"MACRO.OPTIONS\",\n  383: \"WORKBOOK.HIDE\",\n  384: \"WORKBOOK.UNHIDE\",\n  385: \"WORKBOOK.DELETE\",\n  386: \"WORKBOOK.NAME\",\n  388: \"GALLERY.CUSTOM\",\n  390: \"ADD.CHART.AUTOFORMAT\",\n  391: \"DELETE.CHART.AUTOFORMAT\",\n  392: \"CHART.ADD.DATA\",\n  393: \"AUTO.OUTLINE\",\n  394: \"TAB.ORDER\",\n  395: \"SHOW.DIALOG\",\n  396: \"SELECT.ALL\",\n  397: \"UNGROUP.SHEETS\",\n  398: \"SUBTOTAL.CREATE\",\n  399: \"SUBTOTAL.REMOVE\",\n  400: \"RENAME.OBJECT\",\n  412: \"WORKBOOK.SCROLL\",\n  413: \"WORKBOOK.NEXT\",\n  414: \"WORKBOOK.PREV\",\n  415: \"WORKBOOK.TAB.SPLIT\",\n  416: \"FULL.SCREEN\",\n  417: \"WORKBOOK.PROTECT\",\n  420: \"SCROLLBAR.PROPERTIES\",\n  421: \"PIVOT.SHOW.PAGES\",\n  422: \"TEXT.TO.COLUMNS\",\n  423: \"FORMAT.CHARTTYPE\",\n  424: \"LINK.FORMAT\",\n  425: \"TRACER.DISPLAY\",\n  430: \"TRACER.NAVIGATE\",\n  431: \"TRACER.CLEAR\",\n  432: \"TRACER.ERROR\",\n  433: \"PIVOT.FIELD.GROUP\",\n  434: \"PIVOT.FIELD.UNGROUP\",\n  435: \"CHECKBOX.PROPERTIES\",\n  436: \"LABEL.PROPERTIES\",\n  437: \"LISTBOX.PROPERTIES\",\n  438: \"EDITBOX.PROPERTIES\",\n  439: \"PIVOT.REFRESH\",\n  440: \"LINK.COMBO\",\n  441: \"OPEN.TEXT\",\n  442: \"HIDE.DIALOG\",\n  443: \"SET.DIALOG.FOCUS\",\n  444: \"ENABLE.OBJECT\",\n  445: \"PUSHBUTTON.PROPERTIES\",\n  446: \"SET.DIALOG.DEFAULT\",\n  447: \"FILTER\",\n  448: \"FILTER.SHOW.ALL\",\n  449: \"CLEAR.OUTLINE\",\n  450: \"FUNCTION.WIZARD\",\n  451: \"ADD.LIST.ITEM\",\n  452: \"SET.LIST.ITEM\",\n  453: \"REMOVE.LIST.ITEM\",\n  454: \"SELECT.LIST.ITEM\",\n  455: \"SET.CONTROL.VALUE\",\n  456: \"SAVE.COPY.AS\",\n  458: \"OPTIONS.LISTS.ADD\",\n  459: \"OPTIONS.LISTS.DELETE\",\n  460: \"SERIES.AXES\",\n  461: \"SERIES.X\",\n  462: \"SERIES.Y\",\n  463: \"ERRORBAR.X\",\n  464: \"ERRORBAR.Y\",\n  465: \"FORMAT.CHART\",\n  466: \"SERIES.ORDER\",\n  467: \"MAIL.LOGOFF\",\n  468: \"CLEAR.ROUTING.SLIP\",\n  469: \"APP.ACTIVATE.MICROSOFT\",\n  470: \"MAIL.EDIT.MAILER\",\n  471: \"ON.SHEET\",\n  472: \"STANDARD.WIDTH\",\n  473: \"SCENARIO.MERGE\",\n  474: \"SUMMARY.INFO\",\n  475: \"FIND.FILE\",\n  476: \"ACTIVE.CELL.FONT\",\n  477: \"ENABLE.TIPWIZARD\",\n  478: \"VBA.MAKE.ADDIN\",\n  480: \"INSERTDATATABLE\",\n  481: \"WORKGROUP.OPTIONS\",\n  482: \"MAIL.SEND.MAILER\",\n  485: \"AUTOCORRECT\",\n  489: \"POST.DOCUMENT\",\n  491: \"PICKLIST\",\n  493: \"VIEW.SHOW\",\n  494: \"VIEW.DEFINE\",\n  495: \"VIEW.DELETE\",\n  509: \"SHEET.BACKGROUND\",\n  510: \"INSERT.MAP.OBJECT\",\n  511: \"OPTIONS.MENONO\",\n  517: \"MSOCHECKS\",\n  518: \"NORMAL\",\n  519: \"LAYOUT\",\n  520: \"RM.PRINT.AREA\",\n  521: \"CLEAR.PRINT.AREA\",\n  522: \"ADD.PRINT.AREA\",\n  523: \"MOVE.BRK\",\n  545: \"HIDECURR.NOTE\",\n  546: \"HIDEALL.NOTES\",\n  547: \"DELETE.NOTE\",\n  548: \"TRAVERSE.NOTES\",\n  549: \"ACTIVATE.NOTES\",\n  620: \"PROTECT.REVISIONS\",\n  621: \"UNPROTECT.REVISIONS\",\n  647: \"OPTIONS.ME\",\n  653: \"WEB.PUBLISH\",\n  667: \"NEWWEBQUERY\",\n  673: \"PIVOT.TABLE.CHART\",\n  753: \"OPTIONS.SAVE\",\n  755: \"OPTIONS.SPELL\",\n  808: \"HIDEALL.INKANNOTS\"\n};\nvar Ftab = {\n  0: \"COUNT\",\n  1: \"IF\",\n  2: \"ISNA\",\n  3: \"ISERROR\",\n  4: \"SUM\",\n  5: \"AVERAGE\",\n  6: \"MIN\",\n  7: \"MAX\",\n  8: \"ROW\",\n  9: \"COLUMN\",\n  10: \"NA\",\n  11: \"NPV\",\n  12: \"STDEV\",\n  13: \"DOLLAR\",\n  14: \"FIXED\",\n  15: \"SIN\",\n  16: \"COS\",\n  17: \"TAN\",\n  18: \"ATAN\",\n  19: \"PI\",\n  20: \"SQRT\",\n  21: \"EXP\",\n  22: \"LN\",\n  23: \"LOG10\",\n  24: \"ABS\",\n  25: \"INT\",\n  26: \"SIGN\",\n  27: \"ROUND\",\n  28: \"LOOKUP\",\n  29: \"INDEX\",\n  30: \"REPT\",\n  31: \"MID\",\n  32: \"LEN\",\n  33: \"VALUE\",\n  34: \"TRUE\",\n  35: \"FALSE\",\n  36: \"AND\",\n  37: \"OR\",\n  38: \"NOT\",\n  39: \"MOD\",\n  40: \"DCOUNT\",\n  41: \"DSUM\",\n  42: \"DAVERAGE\",\n  43: \"DMIN\",\n  44: \"DMAX\",\n  45: \"DSTDEV\",\n  46: \"VAR\",\n  47: \"DVAR\",\n  48: \"TEXT\",\n  49: \"LINEST\",\n  50: \"TREND\",\n  51: \"LOGEST\",\n  52: \"GROWTH\",\n  53: \"GOTO\",\n  54: \"HALT\",\n  55: \"RETURN\",\n  56: \"PV\",\n  57: \"FV\",\n  58: \"NPER\",\n  59: \"PMT\",\n  60: \"RATE\",\n  61: \"MIRR\",\n  62: \"IRR\",\n  63: \"RAND\",\n  64: \"MATCH\",\n  65: \"DATE\",\n  66: \"TIME\",\n  67: \"DAY\",\n  68: \"MONTH\",\n  69: \"YEAR\",\n  70: \"WEEKDAY\",\n  71: \"HOUR\",\n  72: \"MINUTE\",\n  73: \"SECOND\",\n  74: \"NOW\",\n  75: \"AREAS\",\n  76: \"ROWS\",\n  77: \"COLUMNS\",\n  78: \"OFFSET\",\n  79: \"ABSREF\",\n  80: \"RELREF\",\n  81: \"ARGUMENT\",\n  82: \"SEARCH\",\n  83: \"TRANSPOSE\",\n  84: \"ERROR\",\n  85: \"STEP\",\n  86: \"TYPE\",\n  87: \"ECHO\",\n  88: \"SET.NAME\",\n  89: \"CALLER\",\n  90: \"DEREF\",\n  91: \"WINDOWS\",\n  92: \"SERIES\",\n  93: \"DOCUMENTS\",\n  94: \"ACTIVE.CELL\",\n  95: \"SELECTION\",\n  96: \"RESULT\",\n  97: \"ATAN2\",\n  98: \"ASIN\",\n  99: \"ACOS\",\n  100: \"CHOOSE\",\n  101: \"HLOOKUP\",\n  102: \"VLOOKUP\",\n  103: \"LINKS\",\n  104: \"INPUT\",\n  105: \"ISREF\",\n  106: \"GET.FORMULA\",\n  107: \"GET.NAME\",\n  108: \"SET.VALUE\",\n  109: \"LOG\",\n  110: \"EXEC\",\n  111: \"CHAR\",\n  112: \"LOWER\",\n  113: \"UPPER\",\n  114: \"PROPER\",\n  115: \"LEFT\",\n  116: \"RIGHT\",\n  117: \"EXACT\",\n  118: \"TRIM\",\n  119: \"REPLACE\",\n  120: \"SUBSTITUTE\",\n  121: \"CODE\",\n  122: \"NAMES\",\n  123: \"DIRECTORY\",\n  124: \"FIND\",\n  125: \"CELL\",\n  126: \"ISERR\",\n  127: \"ISTEXT\",\n  128: \"ISNUMBER\",\n  129: \"ISBLANK\",\n  130: \"T\",\n  131: \"N\",\n  132: \"FOPEN\",\n  133: \"FCLOSE\",\n  134: \"FSIZE\",\n  135: \"FREADLN\",\n  136: \"FREAD\",\n  137: \"FWRITELN\",\n  138: \"FWRITE\",\n  139: \"FPOS\",\n  140: \"DATEVALUE\",\n  141: \"TIMEVALUE\",\n  142: \"SLN\",\n  143: \"SYD\",\n  144: \"DDB\",\n  145: \"GET.DEF\",\n  146: \"REFTEXT\",\n  147: \"TEXTREF\",\n  148: \"INDIRECT\",\n  149: \"REGISTER\",\n  150: \"CALL\",\n  151: \"ADD.BAR\",\n  152: \"ADD.MENU\",\n  153: \"ADD.COMMAND\",\n  154: \"ENABLE.COMMAND\",\n  155: \"CHECK.COMMAND\",\n  156: \"RENAME.COMMAND\",\n  157: \"SHOW.BAR\",\n  158: \"DELETE.MENU\",\n  159: \"DELETE.COMMAND\",\n  160: \"GET.CHART.ITEM\",\n  161: \"DIALOG.BOX\",\n  162: \"CLEAN\",\n  163: \"MDETERM\",\n  164: \"MINVERSE\",\n  165: \"MMULT\",\n  166: \"FILES\",\n  167: \"IPMT\",\n  168: \"PPMT\",\n  169: \"COUNTA\",\n  170: \"CANCEL.KEY\",\n  171: \"FOR\",\n  172: \"WHILE\",\n  173: \"BREAK\",\n  174: \"NEXT\",\n  175: \"INITIATE\",\n  176: \"REQUEST\",\n  177: \"POKE\",\n  178: \"EXECUTE\",\n  179: \"TERMINATE\",\n  180: \"RESTART\",\n  181: \"HELP\",\n  182: \"GET.BAR\",\n  183: \"PRODUCT\",\n  184: \"FACT\",\n  185: \"GET.CELL\",\n  186: \"GET.WORKSPACE\",\n  187: \"GET.WINDOW\",\n  188: \"GET.DOCUMENT\",\n  189: \"DPRODUCT\",\n  190: \"ISNONTEXT\",\n  191: \"GET.NOTE\",\n  192: \"NOTE\",\n  193: \"STDEVP\",\n  194: \"VARP\",\n  195: \"DSTDEVP\",\n  196: \"DVARP\",\n  197: \"TRUNC\",\n  198: \"ISLOGICAL\",\n  199: \"DCOUNTA\",\n  200: \"DELETE.BAR\",\n  201: \"UNREGISTER\",\n  204: \"USDOLLAR\",\n  205: \"FINDB\",\n  206: \"SEARCHB\",\n  207: \"REPLACEB\",\n  208: \"LEFTB\",\n  209: \"RIGHTB\",\n  210: \"MIDB\",\n  211: \"LENB\",\n  212: \"ROUNDUP\",\n  213: \"ROUNDDOWN\",\n  214: \"ASC\",\n  215: \"DBCS\",\n  216: \"RANK\",\n  219: \"ADDRESS\",\n  220: \"DAYS360\",\n  221: \"TODAY\",\n  222: \"VDB\",\n  223: \"ELSE\",\n  224: \"ELSE.IF\",\n  225: \"END.IF\",\n  226: \"FOR.CELL\",\n  227: \"MEDIAN\",\n  228: \"SUMPRODUCT\",\n  229: \"SINH\",\n  230: \"COSH\",\n  231: \"TANH\",\n  232: \"ASINH\",\n  233: \"ACOSH\",\n  234: \"ATANH\",\n  235: \"DGET\",\n  236: \"CREATE.OBJECT\",\n  237: \"VOLATILE\",\n  238: \"LAST.ERROR\",\n  239: \"CUSTOM.UNDO\",\n  240: \"CUSTOM.REPEAT\",\n  241: \"FORMULA.CONVERT\",\n  242: \"GET.LINK.INFO\",\n  243: \"TEXT.BOX\",\n  244: \"INFO\",\n  245: \"GROUP\",\n  246: \"GET.OBJECT\",\n  247: \"DB\",\n  248: \"PAUSE\",\n  251: \"RESUME\",\n  252: \"FREQUENCY\",\n  253: \"ADD.TOOLBAR\",\n  254: \"DELETE.TOOLBAR\",\n  255: \"User\",\n  256: \"RESET.TOOLBAR\",\n  257: \"EVALUATE\",\n  258: \"GET.TOOLBAR\",\n  259: \"GET.TOOL\",\n  260: \"SPELLING.CHECK\",\n  261: \"ERROR.TYPE\",\n  262: \"APP.TITLE\",\n  263: \"WINDOW.TITLE\",\n  264: \"SAVE.TOOLBAR\",\n  265: \"ENABLE.TOOL\",\n  266: \"PRESS.TOOL\",\n  267: \"REGISTER.ID\",\n  268: \"GET.WORKBOOK\",\n  269: \"AVEDEV\",\n  270: \"BETADIST\",\n  271: \"GAMMALN\",\n  272: \"BETAINV\",\n  273: \"BINOMDIST\",\n  274: \"CHIDIST\",\n  275: \"CHIINV\",\n  276: \"COMBIN\",\n  277: \"CONFIDENCE\",\n  278: \"CRITBINOM\",\n  279: \"EVEN\",\n  280: \"EXPONDIST\",\n  281: \"FDIST\",\n  282: \"FINV\",\n  283: \"FISHER\",\n  284: \"FISHERINV\",\n  285: \"FLOOR\",\n  286: \"GAMMADIST\",\n  287: \"GAMMAINV\",\n  288: \"CEILING\",\n  289: \"HYPGEOMDIST\",\n  290: \"LOGNORMDIST\",\n  291: \"LOGINV\",\n  292: \"NEGBINOMDIST\",\n  293: \"NORMDIST\",\n  294: \"NORMSDIST\",\n  295: \"NORMINV\",\n  296: \"NORMSINV\",\n  297: \"STANDARDIZE\",\n  298: \"ODD\",\n  299: \"PERMUT\",\n  300: \"POISSON\",\n  301: \"TDIST\",\n  302: \"WEIBULL\",\n  303: \"SUMXMY2\",\n  304: \"SUMX2MY2\",\n  305: \"SUMX2PY2\",\n  306: \"CHITEST\",\n  307: \"CORREL\",\n  308: \"COVAR\",\n  309: \"FORECAST\",\n  310: \"FTEST\",\n  311: \"INTERCEPT\",\n  312: \"PEARSON\",\n  313: \"RSQ\",\n  314: \"STEYX\",\n  315: \"SLOPE\",\n  316: \"TTEST\",\n  317: \"PROB\",\n  318: \"DEVSQ\",\n  319: \"GEOMEAN\",\n  320: \"HARMEAN\",\n  321: \"SUMSQ\",\n  322: \"KURT\",\n  323: \"SKEW\",\n  324: \"ZTEST\",\n  325: \"LARGE\",\n  326: \"SMALL\",\n  327: \"QUARTILE\",\n  328: \"PERCENTILE\",\n  329: \"PERCENTRANK\",\n  330: \"MODE\",\n  331: \"TRIMMEAN\",\n  332: \"TINV\",\n  334: \"MOVIE.COMMAND\",\n  335: \"GET.MOVIE\",\n  336: \"CONCATENATE\",\n  337: \"POWER\",\n  338: \"PIVOT.ADD.DATA\",\n  339: \"GET.PIVOT.TABLE\",\n  340: \"GET.PIVOT.FIELD\",\n  341: \"GET.PIVOT.ITEM\",\n  342: \"RADIANS\",\n  343: \"DEGREES\",\n  344: \"SUBTOTAL\",\n  345: \"SUMIF\",\n  346: \"COUNTIF\",\n  347: \"COUNTBLANK\",\n  348: \"SCENARIO.GET\",\n  349: \"OPTIONS.LISTS.GET\",\n  350: \"ISPMT\",\n  351: \"DATEDIF\",\n  352: \"DATESTRING\",\n  353: \"NUMBERSTRING\",\n  354: \"ROMAN\",\n  355: \"OPEN.DIALOG\",\n  356: \"SAVE.DIALOG\",\n  357: \"VIEW.GET\",\n  358: \"GETPIVOTDATA\",\n  359: \"HYPERLINK\",\n  360: \"PHONETIC\",\n  361: \"AVERAGEA\",\n  362: \"MAXA\",\n  363: \"MINA\",\n  364: \"STDEVPA\",\n  365: \"VARPA\",\n  366: \"STDEVA\",\n  367: \"VARA\",\n  368: \"BAHTTEXT\",\n  369: \"THAIDAYOFWEEK\",\n  370: \"THAIDIGIT\",\n  371: \"THAIMONTHOFYEAR\",\n  372: \"THAINUMSOUND\",\n  373: \"THAINUMSTRING\",\n  374: \"THAISTRINGLENGTH\",\n  375: \"ISTHAIDIGIT\",\n  376: \"ROUNDBAHTDOWN\",\n  377: \"ROUNDBAHTUP\",\n  378: \"THAIYEAR\",\n  379: \"RTD\",\n  380: \"CUBEVALUE\",\n  381: \"CUBEMEMBER\",\n  382: \"CUBEMEMBERPROPERTY\",\n  383: \"CUBERANKEDMEMBER\",\n  384: \"HEX2BIN\",\n  385: \"HEX2DEC\",\n  386: \"HEX2OCT\",\n  387: \"DEC2BIN\",\n  388: \"DEC2HEX\",\n  389: \"DEC2OCT\",\n  390: \"OCT2BIN\",\n  391: \"OCT2HEX\",\n  392: \"OCT2DEC\",\n  393: \"BIN2DEC\",\n  394: \"BIN2OCT\",\n  395: \"BIN2HEX\",\n  396: \"IMSUB\",\n  397: \"IMDIV\",\n  398: \"IMPOWER\",\n  399: \"IMABS\",\n  400: \"IMSQRT\",\n  401: \"IMLN\",\n  402: \"IMLOG2\",\n  403: \"IMLOG10\",\n  404: \"IMSIN\",\n  405: \"IMCOS\",\n  406: \"IMEXP\",\n  407: \"IMARGUMENT\",\n  408: \"IMCONJUGATE\",\n  409: \"IMAGINARY\",\n  410: \"IMREAL\",\n  411: \"COMPLEX\",\n  412: \"IMSUM\",\n  413: \"IMPRODUCT\",\n  414: \"SERIESSUM\",\n  415: \"FACTDOUBLE\",\n  416: \"SQRTPI\",\n  417: \"QUOTIENT\",\n  418: \"DELTA\",\n  419: \"GESTEP\",\n  420: \"ISEVEN\",\n  421: \"ISODD\",\n  422: \"MROUND\",\n  423: \"ERF\",\n  424: \"ERFC\",\n  425: \"BESSELJ\",\n  426: \"BESSELK\",\n  427: \"BESSELY\",\n  428: \"BESSELI\",\n  429: \"XIRR\",\n  430: \"XNPV\",\n  431: \"PRICEMAT\",\n  432: \"YIELDMAT\",\n  433: \"INTRATE\",\n  434: \"RECEIVED\",\n  435: \"DISC\",\n  436: \"PRICEDISC\",\n  437: \"YIELDDISC\",\n  438: \"TBILLEQ\",\n  439: \"TBILLPRICE\",\n  440: \"TBILLYIELD\",\n  441: \"PRICE\",\n  442: \"YIELD\",\n  443: \"DOLLARDE\",\n  444: \"DOLLARFR\",\n  445: \"NOMINAL\",\n  446: \"EFFECT\",\n  447: \"CUMPRINC\",\n  448: \"CUMIPMT\",\n  449: \"EDATE\",\n  450: \"EOMONTH\",\n  451: \"YEARFRAC\",\n  452: \"COUPDAYBS\",\n  453: \"COUPDAYS\",\n  454: \"COUPDAYSNC\",\n  455: \"COUPNCD\",\n  456: \"COUPNUM\",\n  457: \"COUPPCD\",\n  458: \"DURATION\",\n  459: \"MDURATION\",\n  460: \"ODDLPRICE\",\n  461: \"ODDLYIELD\",\n  462: \"ODDFPRICE\",\n  463: \"ODDFYIELD\",\n  464: \"RANDBETWEEN\",\n  465: \"WEEKNUM\",\n  466: \"AMORDEGRC\",\n  467: \"AMORLINC\",\n  468: \"CONVERT\",\n  724: \"SHEETJS\",\n  469: \"ACCRINT\",\n  470: \"ACCRINTM\",\n  471: \"WORKDAY\",\n  472: \"NETWORKDAYS\",\n  473: \"GCD\",\n  474: \"MULTINOMIAL\",\n  475: \"LCM\",\n  476: \"FVSCHEDULE\",\n  477: \"CUBEKPIMEMBER\",\n  478: \"CUBESET\",\n  479: \"CUBESETCOUNT\",\n  480: \"IFERROR\",\n  481: \"COUNTIFS\",\n  482: \"SUMIFS\",\n  483: \"AVERAGEIF\",\n  484: \"AVERAGEIFS\"\n};\nvar FtabArgc = {\n  2: 1,\n  3: 1,\n  10: 0,\n  15: 1,\n  16: 1,\n  17: 1,\n  18: 1,\n  19: 0,\n  20: 1,\n  21: 1,\n  22: 1,\n  23: 1,\n  24: 1,\n  25: 1,\n  26: 1,\n  27: 2,\n  30: 2,\n  31: 3,\n  32: 1,\n  33: 1,\n  34: 0,\n  35: 0,\n  38: 1,\n  39: 2,\n  40: 3,\n  41: 3,\n  42: 3,\n  43: 3,\n  44: 3,\n  45: 3,\n  47: 3,\n  48: 2,\n  53: 1,\n  61: 3,\n  63: 0,\n  65: 3,\n  66: 3,\n  67: 1,\n  68: 1,\n  69: 1,\n  70: 1,\n  71: 1,\n  72: 1,\n  73: 1,\n  74: 0,\n  75: 1,\n  76: 1,\n  77: 1,\n  79: 2,\n  80: 2,\n  83: 1,\n  85: 0,\n  86: 1,\n  89: 0,\n  90: 1,\n  94: 0,\n  95: 0,\n  97: 2,\n  98: 1,\n  99: 1,\n  101: 3,\n  102: 3,\n  105: 1,\n  106: 1,\n  108: 2,\n  111: 1,\n  112: 1,\n  113: 1,\n  114: 1,\n  117: 2,\n  118: 1,\n  119: 4,\n  121: 1,\n  126: 1,\n  127: 1,\n  128: 1,\n  129: 1,\n  130: 1,\n  131: 1,\n  133: 1,\n  134: 1,\n  135: 1,\n  136: 2,\n  137: 2,\n  138: 2,\n  140: 1,\n  141: 1,\n  142: 3,\n  143: 4,\n  144: 4,\n  161: 1,\n  162: 1,\n  163: 1,\n  164: 1,\n  165: 2,\n  172: 1,\n  175: 2,\n  176: 2,\n  177: 3,\n  178: 2,\n  179: 1,\n  184: 1,\n  186: 1,\n  189: 3,\n  190: 1,\n  195: 3,\n  196: 3,\n  197: 1,\n  198: 1,\n  199: 3,\n  201: 1,\n  207: 4,\n  210: 3,\n  211: 1,\n  212: 2,\n  213: 2,\n  214: 1,\n  215: 1,\n  225: 0,\n  229: 1,\n  230: 1,\n  231: 1,\n  232: 1,\n  233: 1,\n  234: 1,\n  235: 3,\n  244: 1,\n  247: 4,\n  252: 2,\n  257: 1,\n  261: 1,\n  271: 1,\n  273: 4,\n  274: 2,\n  275: 2,\n  276: 2,\n  277: 3,\n  278: 3,\n  279: 1,\n  280: 3,\n  281: 3,\n  282: 3,\n  283: 1,\n  284: 1,\n  285: 2,\n  286: 4,\n  287: 3,\n  288: 2,\n  289: 4,\n  290: 3,\n  291: 3,\n  292: 3,\n  293: 4,\n  294: 1,\n  295: 3,\n  296: 1,\n  297: 3,\n  298: 1,\n  299: 2,\n  300: 3,\n  301: 3,\n  302: 4,\n  303: 2,\n  304: 2,\n  305: 2,\n  306: 2,\n  307: 2,\n  308: 2,\n  309: 3,\n  310: 2,\n  311: 2,\n  312: 2,\n  313: 2,\n  314: 2,\n  315: 2,\n  316: 4,\n  325: 2,\n  326: 2,\n  327: 2,\n  328: 2,\n  331: 2,\n  332: 2,\n  337: 2,\n  342: 1,\n  343: 1,\n  346: 2,\n  347: 1,\n  350: 4,\n  351: 3,\n  352: 1,\n  353: 2,\n  360: 1,\n  368: 1,\n  369: 1,\n  370: 1,\n  371: 1,\n  372: 1,\n  373: 1,\n  374: 1,\n  375: 1,\n  376: 1,\n  377: 1,\n  378: 1,\n  382: 3,\n  385: 1,\n  392: 1,\n  393: 1,\n  396: 2,\n  397: 2,\n  398: 2,\n  399: 1,\n  400: 1,\n  401: 1,\n  402: 1,\n  403: 1,\n  404: 1,\n  405: 1,\n  406: 1,\n  407: 1,\n  408: 1,\n  409: 1,\n  410: 1,\n  414: 4,\n  415: 1,\n  416: 1,\n  417: 2,\n  420: 1,\n  421: 1,\n  422: 2,\n  424: 1,\n  425: 2,\n  426: 2,\n  427: 2,\n  428: 2,\n  430: 3,\n  438: 3,\n  439: 3,\n  440: 3,\n  443: 2,\n  444: 2,\n  445: 2,\n  446: 2,\n  447: 6,\n  448: 6,\n  449: 2,\n  450: 2,\n  464: 2,\n  468: 3,\n  476: 2,\n  479: 1,\n  480: 2,\n  65535: 0\n};\n/* Part 3 TODO: actually parse formulae */\nfunction ods_to_csf_formula(f /*:string*/) /*:string*/{\n  if (f.slice(0, 3) == \"of:\") f = f.slice(3);\n  /* 5.2 Basic Expressions */\n  if (f.charCodeAt(0) == 61) {\n    f = f.slice(1);\n    if (f.charCodeAt(0) == 61) f = f.slice(1);\n  }\n  f = f.replace(/COM\\.MICROSOFT\\./g, \"\");\n  /* Part 3 Section 5.8 References */\n  f = f.replace(/\\[((?:\\.[A-Z]+[0-9]+)(?::\\.[A-Z]+[0-9]+)?)\\]/g, function ($$, $1) {\n    return $1.replace(/\\./g, \"\");\n  });\n  f = f.replace(/\\$'([^']|'')+'/g, function ($$) {\n    return $$.slice(1);\n  });\n  f = f.replace(/\\$([^\\]\\. #$]+)/g, function ($$, $1) {\n    return $1.match(/^([A-Z]{1,2}|[A-W][A-Z]{2}|X[A-E][A-Z]|XF[A-D])?(10[0-3]\\d{4}|104[0-7]\\d{3}|1048[0-4]\\d{2}|10485[0-6]\\d|104857[0-6]|[1-9]\\d{0,5})?$/) ? $$ : $1;\n  });\n  /* TODO: something other than this */\n  f = f.replace(/\\[.(#[A-Z]*[?!])\\]/g, \"$1\");\n  return f.replace(/[;~]/g, \",\").replace(/\\|/g, \";\");\n}\nfunction csf_to_ods_formula(f /*:string*/) /*:string*/{\n  var o = \"of:=\" + f.replace(crefregex, \"$1[.$2$3$4$5]\").replace(/\\]:\\[/g, \":\");\n  /* TODO: something other than this */\n  return o.replace(/;/g, \"|\").replace(/,/g, \";\");\n}\nfunction ods_to_csf_3D(r /*:string*/) /*:[string, string]*/{\n  r = r.replace(/\\$'([^']|'')+'/g, function ($$) {\n    return $$.slice(1);\n  });\n  r = r.replace(/\\$([^\\]\\. #$]+)/g, function ($$, $1) {\n    return $1.match(/^([A-Z]{1,2}|[A-W][A-Z]{2}|X[A-E][A-Z]|XF[A-D])?(10[0-3]\\d{4}|104[0-7]\\d{3}|1048[0-4]\\d{2}|10485[0-6]\\d|104857[0-6]|[1-9]\\d{0,5})?$/) ? $$ : $1;\n  });\n  var a = r.split(\":\");\n  var s = a[0].split(\".\")[0];\n  return [s, a[0].split(\".\")[1] + (a.length > 1 ? \":\" + (a[1].split(\".\")[1] || a[1].split(\".\")[0]) : \"\")];\n}\nfunction csf_to_ods_3D(r /*:string*/) /*:string*/{\n  return r.replace(/!/, \".\").replace(/:/, \":.\");\n}\nvar strs = {}; // shared strings\nvar _ssfopts = {}; // spreadsheet formatting options\n\n/*global Map */\nvar browser_has_Map = typeof Map !== 'undefined';\nfunction get_sst_id(sst /*:SST*/, str /*:string*/, rev) /*:number*/{\n  var i = 0,\n    len = sst.length;\n  if (rev) {\n    if (browser_has_Map ? rev.has(str) : Object.prototype.hasOwnProperty.call(rev, str)) {\n      var revarr = browser_has_Map ? rev.get(str) : rev[str];\n      for (; i < revarr.length; ++i) {\n        if (sst[revarr[i]].t === str) {\n          sst.Count++;\n          return revarr[i];\n        }\n      }\n    }\n  } else for (; i < len; ++i) {\n    if (sst[i].t === str) {\n      sst.Count++;\n      return i;\n    }\n  }\n  sst[len] = {\n    t: str\n  } /*:any*/;\n  sst.Count++;\n  sst.Unique++;\n  if (rev) {\n    if (browser_has_Map) {\n      if (!rev.has(str)) rev.set(str, []);\n      rev.get(str).push(len);\n    } else {\n      if (!Object.prototype.hasOwnProperty.call(rev, str)) rev[str] = [];\n      rev[str].push(len);\n    }\n  }\n  return len;\n}\nfunction col_obj_w(C /*:number*/, col) {\n  var p = {\n    min: C + 1,\n    max: C + 1\n  } /*:any*/;\n  /* wch (chars), wpx (pixels) */\n  var wch = -1;\n  if (col.MDW) MDW = col.MDW;\n  if (col.width != null) p.customWidth = 1;else if (col.wpx != null) wch = px2char(col.wpx);else if (col.wch != null) wch = col.wch;\n  if (wch > -1) {\n    p.width = char2width(wch);\n    p.customWidth = 1;\n  } else if (col.width != null) p.width = col.width;\n  if (col.hidden) p.hidden = true;\n  if (col.level != null) {\n    p.outlineLevel = p.level = col.level;\n  }\n  return p;\n}\nfunction default_margins(margins /*:Margins*/, mode /*:?string*/) {\n  if (!margins) return;\n  var defs = [0.7, 0.7, 0.75, 0.75, 0.3, 0.3];\n  if (mode == 'xlml') defs = [1, 1, 1, 1, 0.5, 0.5];\n  if (margins.left == null) margins.left = defs[0];\n  if (margins.right == null) margins.right = defs[1];\n  if (margins.top == null) margins.top = defs[2];\n  if (margins.bottom == null) margins.bottom = defs[3];\n  if (margins.header == null) margins.header = defs[4];\n  if (margins.footer == null) margins.footer = defs[5];\n}\nfunction get_cell_style(styles /*:Array<any>*/, cell /*:Cell*/, opts) {\n  var z = opts.revssf[cell.z != null ? cell.z : \"General\"];\n  var i = 0x3c,\n    len = styles.length;\n  if (z == null && opts.ssf) {\n    for (; i < 0x188; ++i) if (opts.ssf[i] == null) {\n      SSF__load(cell.z, i);\n      // $FlowIgnore\n      opts.ssf[i] = cell.z;\n      opts.revssf[cell.z] = z = i;\n      break;\n    }\n  }\n  for (i = 0; i != len; ++i) if (styles[i].numFmtId === z) return i;\n  styles[len] = {\n    numFmtId: z,\n    fontId: 0,\n    fillId: 0,\n    borderId: 0,\n    xfId: 0,\n    applyNumberFormat: 1\n  };\n  return len;\n}\nfunction safe_format(p /*:Cell*/, fmtid /*:number*/, fillid /*:?number*/, opts, themes, styles, date1904) {\n  try {\n    if (opts.cellNF) p.z = table_fmt[fmtid];\n  } catch (e) {\n    if (opts.WTF) throw e;\n  }\n  if (p.t === 'z' && !opts.cellStyles) return;\n  if (p.t === 'd' && typeof p.v === 'string') p.v = parseDate$1(p.v);\n  if ((!opts || opts.cellText !== false) && p.t !== 'z') try {\n    if (table_fmt[fmtid] == null) SSF__load(SSFImplicit[fmtid] || \"General\", fmtid);\n    if (p.t === 'e') p.w = p.w || BErr[p.v];else if (fmtid === 0) {\n      if (p.t === 'n') {\n        if ((p.v | 0) === p.v) p.w = p.v.toString(10);else p.w = SSF_general_num(p.v);\n      } else if (p.t === 'd') {\n        var dd = datenum(p.v, !!date1904);\n        if ((dd | 0) === dd) p.w = dd.toString(10);else p.w = SSF_general_num(dd);\n      } else if (p.v === undefined) return \"\";else p.w = SSF_general(p.v, _ssfopts);\n    } else if (p.t === 'd') p.w = SSF_format(fmtid, datenum(p.v, !!date1904), _ssfopts);else p.w = SSF_format(fmtid, p.v, _ssfopts);\n  } catch (e) {\n    if (opts.WTF) throw e;\n  }\n  if (!opts.cellStyles) return;\n  if (fillid != null) try {\n    p.s = styles.Fills[fillid];\n    if (p.s.fgColor && p.s.fgColor.theme && !p.s.fgColor.rgb) {\n      p.s.fgColor.rgb = rgb_tint(themes.themeElements.clrScheme[p.s.fgColor.theme].rgb, p.s.fgColor.tint || 0);\n      if (opts.WTF) p.s.fgColor.raw_rgb = themes.themeElements.clrScheme[p.s.fgColor.theme].rgb;\n    }\n    if (p.s.bgColor && p.s.bgColor.theme) {\n      p.s.bgColor.rgb = rgb_tint(themes.themeElements.clrScheme[p.s.bgColor.theme].rgb, p.s.bgColor.tint || 0);\n      if (opts.WTF) p.s.bgColor.raw_rgb = themes.themeElements.clrScheme[p.s.bgColor.theme].rgb;\n    }\n  } catch (e) {\n    if (opts.WTF && styles.Fills) throw e;\n  }\n}\nfunction check_ws(ws /*:Worksheet*/, sname /*:string*/, i /*:number*/) {\n  if (ws && ws['!ref']) {\n    var range = safe_decode_range(ws['!ref']);\n    if (range.e.c < range.s.c || range.e.r < range.s.r) throw new Error(\"Bad range (\" + i + \"): \" + ws['!ref']);\n  }\n}\nfunction parse_ws_xml_dim(ws /*:Worksheet*/, s /*:string*/) {\n  var d = safe_decode_range(s);\n  if (d.s.r <= d.e.r && d.s.c <= d.e.c && d.s.r >= 0 && d.s.c >= 0) ws[\"!ref\"] = encode_range(d);\n}\nvar mergecregex = /<(?:\\w:)?mergeCell ref=\"[A-Z0-9:]+\"\\s*[\\/]?>/g;\nvar sheetdataregex = /<(?:\\w+:)?sheetData[^>]*>([\\s\\S]*)<\\/(?:\\w+:)?sheetData>/;\nvar hlinkregex = /<(?:\\w:)?hyperlink [^>]*>/mg;\nvar dimregex = /\"(\\w*:\\w*)\"/;\nvar colregex = /<(?:\\w:)?col\\b[^>]*[\\/]?>/g;\nvar afregex = /<(?:\\w:)?autoFilter[^>]*([\\/]|>([\\s\\S]*)<\\/(?:\\w:)?autoFilter)>/g;\nvar marginregex = /<(?:\\w:)?pageMargins[^>]*\\/>/g;\nvar sheetprregex = /<(?:\\w:)?sheetPr\\b(?:[^>a-z][^>]*)?\\/>/;\nvar sheetprregex2 = /<(?:\\w:)?sheetPr[^>]*(?:[\\/]|>([\\s\\S]*)<\\/(?:\\w:)?sheetPr)>/;\nvar svsregex = /<(?:\\w:)?sheetViews[^>]*(?:[\\/]|>([\\s\\S]*)<\\/(?:\\w:)?sheetViews)>/;\n\n/* 18.3 Worksheets */\nfunction parse_ws_xml(data /*:?string*/, opts, idx /*:number*/, rels, wb /*:WBWBProps*/, themes, styles) /*:Worksheet*/{\n  if (!data) return data;\n  if (!rels) rels = {\n    '!id': {}\n  };\n\n  /* 18.3.1.99 worksheet CT_Worksheet */\n  var s = {} /*:any*/;\n  if (opts.dense) s[\"!data\"] = [];\n  var refguess /*:Range*/ = {\n    s: {\n      r: 2000000,\n      c: 2000000\n    },\n    e: {\n      r: 0,\n      c: 0\n    }\n  } /*:any*/;\n\n  var data1 = \"\",\n    data2 = \"\";\n  var mtch /*:?any*/ = data.match(sheetdataregex);\n  if (mtch) {\n    data1 = data.slice(0, mtch.index);\n    data2 = data.slice(mtch.index + mtch[0].length);\n  } else data1 = data2 = data;\n\n  /* 18.3.1.82 sheetPr CT_SheetPr */\n  var sheetPr = data1.match(sheetprregex);\n  if (sheetPr) parse_ws_xml_sheetpr(sheetPr[0], s, wb, idx);else if (sheetPr = data1.match(sheetprregex2)) parse_ws_xml_sheetpr2(sheetPr[0], sheetPr[1] || \"\", s, wb, idx);\n\n  /* 18.3.1.35 dimension CT_SheetDimension */\n  var ridx = (data1.match(/<(?:\\w*:)?dimension/) || {\n    index: -1\n  }).index;\n  if (ridx > 0) {\n    var ref = data1.slice(ridx, ridx + 50).match(dimregex);\n    if (ref && !(opts && opts.nodim)) parse_ws_xml_dim(s, ref[1]);\n  }\n\n  /* 18.3.1.88 sheetViews CT_SheetViews */\n  var svs = data1.match(svsregex);\n  if (svs && svs[1]) parse_ws_xml_sheetviews(svs[1], wb);\n\n  /* 18.3.1.17 cols CT_Cols */\n  var columns /*:Array<ColInfo>*/ = [];\n  if (opts.cellStyles) {\n    /* 18.3.1.13 col CT_Col */\n    var cols = data1.match(colregex);\n    if (cols) parse_ws_xml_cols(columns, cols);\n  }\n\n  /* 18.3.1.80 sheetData CT_SheetData ? */\n  if (mtch) parse_ws_xml_data(mtch[1], s, opts, refguess, themes, styles, wb);\n\n  /* 18.3.1.2  autoFilter CT_AutoFilter */\n  var afilter = data2.match(afregex);\n  if (afilter) s['!autofilter'] = parse_ws_xml_autofilter(afilter[0]);\n\n  /* 18.3.1.55 mergeCells CT_MergeCells */\n  var merges /*:Array<Range>*/ = [];\n  var _merge = data2.match(mergecregex);\n  if (_merge) for (ridx = 0; ridx != _merge.length; ++ridx) merges[ridx] = safe_decode_range(_merge[ridx].slice(_merge[ridx].indexOf(\"\\\"\") + 1));\n\n  /* 18.3.1.48 hyperlinks CT_Hyperlinks */\n  var hlink = data2.match(hlinkregex);\n  if (hlink) parse_ws_xml_hlinks(s, hlink, rels);\n\n  /* 18.3.1.62 pageMargins CT_PageMargins */\n  var margins = data2.match(marginregex);\n  if (margins) s['!margins'] = parse_ws_xml_margins(parsexmltag(margins[0]));\n\n  /* legacyDrawing */\n  var m;\n  if (m = data2.match(/legacyDrawing r:id=\"(.*?)\"/)) s['!legrel'] = m[1];\n  if (opts && opts.nodim) refguess.s.c = refguess.s.r = 0;\n  if (!s[\"!ref\"] && refguess.e.c >= refguess.s.c && refguess.e.r >= refguess.s.r) s[\"!ref\"] = encode_range(refguess);\n  if (opts.sheetRows > 0 && s[\"!ref\"]) {\n    var tmpref = safe_decode_range(s[\"!ref\"]);\n    if (opts.sheetRows <= +tmpref.e.r) {\n      tmpref.e.r = opts.sheetRows - 1;\n      if (tmpref.e.r > refguess.e.r) tmpref.e.r = refguess.e.r;\n      if (tmpref.e.r < tmpref.s.r) tmpref.s.r = tmpref.e.r;\n      if (tmpref.e.c > refguess.e.c) tmpref.e.c = refguess.e.c;\n      if (tmpref.e.c < tmpref.s.c) tmpref.s.c = tmpref.e.c;\n      s[\"!fullref\"] = s[\"!ref\"];\n      s[\"!ref\"] = encode_range(tmpref);\n    }\n  }\n  if (columns.length > 0) s[\"!cols\"] = columns;\n  if (merges.length > 0) s[\"!merges\"] = merges;\n  if (rels['!id'][s['!legrel']]) s['!legdrawel'] = rels['!id'][s['!legrel']];\n  return s;\n}\nfunction write_ws_xml_merges(merges /*:Array<Range>*/) /*:string*/{\n  if (merges.length === 0) return \"\";\n  var o = '<mergeCells count=\"' + merges.length + '\">';\n  for (var i = 0; i != merges.length; ++i) o += '<mergeCell ref=\"' + encode_range(merges[i]) + '\"/>';\n  return o + '</mergeCells>';\n}\n\n/* 18.3.1.82-3 sheetPr CT_ChartsheetPr / CT_SheetPr */\nfunction parse_ws_xml_sheetpr(sheetPr /*:string*/, s, wb /*:WBWBProps*/, idx /*:number*/) {\n  var data = parsexmltag(sheetPr);\n  if (!wb.Sheets[idx]) wb.Sheets[idx] = {};\n  if (data.codeName) wb.Sheets[idx].CodeName = unescapexml(utf8read(data.codeName));\n}\nfunction parse_ws_xml_sheetpr2(sheetPr /*:string*/, body /*:string*/, s, wb /*:WBWBProps*/, idx /*:number*/) {\n  parse_ws_xml_sheetpr(sheetPr.slice(0, sheetPr.indexOf(\">\")), s, wb, idx);\n}\nfunction write_ws_xml_sheetpr(ws, wb, idx, opts, o) {\n  var needed = false;\n  var props = {},\n    payload = null;\n  if (opts.bookType !== 'xlsx' && wb.vbaraw) {\n    var cname = wb.SheetNames[idx];\n    try {\n      if (wb.Workbook) cname = wb.Workbook.Sheets[idx].CodeName || cname;\n    } catch (e) {}\n    needed = true;\n    props.codeName = utf8write(escapexml(cname));\n  }\n  if (ws && ws[\"!outline\"]) {\n    var outlineprops = {\n      summaryBelow: 1,\n      summaryRight: 1\n    };\n    if (ws[\"!outline\"].above) outlineprops.summaryBelow = 0;\n    if (ws[\"!outline\"].left) outlineprops.summaryRight = 0;\n    payload = (payload || \"\") + writextag('outlinePr', null, outlineprops);\n  }\n  if (!needed && !payload) return;\n  o[o.length] = writextag('sheetPr', payload, props);\n}\n\n/* 18.3.1.85 sheetProtection CT_SheetProtection */\nvar sheetprot_deffalse = [\"objects\", \"scenarios\", \"selectLockedCells\", \"selectUnlockedCells\"];\nvar sheetprot_deftrue = [\"formatColumns\", \"formatRows\", \"formatCells\", \"insertColumns\", \"insertRows\", \"insertHyperlinks\", \"deleteColumns\", \"deleteRows\", \"sort\", \"autoFilter\", \"pivotTables\"];\nfunction write_ws_xml_protection(sp) /*:string*/{\n  // algorithmName, hashValue, saltValue, spinCount\n  var o = {\n    sheet: 1\n  } /*:any*/;\n  sheetprot_deffalse.forEach(function (n) {\n    if (sp[n] != null && sp[n]) o[n] = \"1\";\n  });\n  sheetprot_deftrue.forEach(function (n) {\n    if (sp[n] != null && !sp[n]) o[n] = \"0\";\n  });\n  /* TODO: algorithm */\n  if (sp.password) o.password = crypto_CreatePasswordVerifier_Method1(sp.password).toString(16).toUpperCase();\n  return writextag('sheetProtection', null, o);\n}\nfunction parse_ws_xml_hlinks(s, data /*:Array<string>*/, rels) {\n  var dense = s[\"!data\"] != null;\n  for (var i = 0; i != data.length; ++i) {\n    var val = parsexmltag(utf8read(data[i]), true);\n    if (!val.ref) return;\n    var rel = ((rels || {})['!id'] || [])[val.id];\n    if (rel) {\n      val.Target = rel.Target;\n      if (val.location) val.Target += \"#\" + unescapexml(val.location);\n    } else {\n      val.Target = \"#\" + unescapexml(val.location);\n      rel = {\n        Target: val.Target,\n        TargetMode: 'Internal'\n      };\n    }\n    val.Rel = rel;\n    if (val.tooltip) {\n      val.Tooltip = val.tooltip;\n      delete val.tooltip;\n    }\n    var rng = safe_decode_range(val.ref);\n    for (var R = rng.s.r; R <= rng.e.r; ++R) for (var C = rng.s.c; C <= rng.e.c; ++C) {\n      var addr = encode_col(C) + encode_row(R);\n      if (dense) {\n        if (!s[\"!data\"][R]) s[\"!data\"][R] = [];\n        if (!s[\"!data\"][R][C]) s[\"!data\"][R][C] = {\n          t: \"z\",\n          v: undefined\n        };\n        s[\"!data\"][R][C].l = val;\n      } else {\n        if (!s[addr]) s[addr] = {\n          t: \"z\",\n          v: undefined\n        };\n        s[addr].l = val;\n      }\n    }\n  }\n}\nfunction parse_ws_xml_margins(margin) {\n  var o = {};\n  [\"left\", \"right\", \"top\", \"bottom\", \"header\", \"footer\"].forEach(function (k) {\n    if (margin[k]) o[k] = parseFloat(margin[k]);\n  });\n  return o;\n}\nfunction write_ws_xml_margins(margin) /*:string*/{\n  default_margins(margin);\n  return writextag('pageMargins', null, margin);\n}\nfunction parse_ws_xml_cols(columns, cols) {\n  var seencol = false;\n  for (var coli = 0; coli != cols.length; ++coli) {\n    var coll = parsexmltag(cols[coli], true);\n    if (coll.hidden) coll.hidden = parsexmlbool(coll.hidden);\n    var colm = parseInt(coll.min, 10) - 1,\n      colM = parseInt(coll.max, 10) - 1;\n    if (coll.outlineLevel) coll.level = +coll.outlineLevel || 0;\n    delete coll.min;\n    delete coll.max;\n    coll.width = +coll.width;\n    if (!seencol && coll.width) {\n      seencol = true;\n      find_mdw_colw(coll.width);\n    }\n    process_col(coll);\n    while (colm <= colM) columns[colm++] = dup(coll);\n  }\n}\nfunction write_ws_xml_cols(ws, cols) /*:string*/{\n  var o = [\"<cols>\"],\n    col;\n  for (var i = 0; i != cols.length; ++i) {\n    if (!(col = cols[i])) continue;\n    o[o.length] = writextag('col', null, col_obj_w(i, col));\n  }\n  o[o.length] = \"</cols>\";\n  return o.join(\"\");\n}\nfunction parse_ws_xml_autofilter(data /*:string*/) {\n  var o = {\n    ref: (data.match(/ref=\"([^\"]*)\"/) || [])[1]\n  };\n  return o;\n}\nfunction write_ws_xml_autofilter(data, ws, wb, idx) /*:string*/{\n  var ref = typeof data.ref == \"string\" ? data.ref : encode_range(data.ref);\n  if (!wb.Workbook) wb.Workbook = {\n    Sheets: []\n  } /*:any*/;\n  if (!wb.Workbook.Names) wb.Workbook.Names = [];\n  var names /*: Array<any> */ = wb.Workbook.Names;\n  var range = decode_range(ref);\n  if (range.s.r == range.e.r) {\n    range.e.r = decode_range(ws[\"!ref\"]).e.r;\n    ref = encode_range(range);\n  }\n  for (var i = 0; i < names.length; ++i) {\n    var name = names[i];\n    if (name.Name != '_xlnm._FilterDatabase') continue;\n    if (name.Sheet != idx) continue;\n    name.Ref = formula_quote_sheet_name(wb.SheetNames[idx]) + \"!\" + fix_range(ref);\n    break;\n  }\n  if (i == names.length) names.push({\n    Name: '_xlnm._FilterDatabase',\n    Sheet: idx,\n    Ref: \"'\" + wb.SheetNames[idx] + \"'!\" + ref\n  });\n  return writextag(\"autoFilter\", null, {\n    ref: ref\n  });\n}\n\n/* 18.3.1.88 sheetViews CT_SheetViews */\n/* 18.3.1.87 sheetView CT_SheetView */\nvar sviewregex = /<(?:\\w:)?sheetView(?:[^>a-z][^>]*)?\\/?>/g;\nfunction parse_ws_xml_sheetviews(data, wb /*:WBWBProps*/) {\n  if (!wb.Views) wb.Views = [{}];\n  (data.match(sviewregex) || []).forEach(function (r /*:string*/, i /*:number*/) {\n    var tag = parsexmltag(r);\n    // $FlowIgnore\n    if (!wb.Views[i]) wb.Views[i] = {};\n    // $FlowIgnore\n    if (+tag.zoomScale) wb.Views[i].zoom = +tag.zoomScale;\n    // $FlowIgnore\n    if (tag.rightToLeft && parsexmlbool(tag.rightToLeft)) wb.Views[i].RTL = true;\n  });\n}\nfunction write_ws_xml_sheetviews(ws, opts, idx, wb) /*:string*/{\n  var sview = {\n    workbookViewId: \"0\"\n  } /*:any*/;\n  // $FlowIgnore\n  if ((((wb || {}).Workbook || {}).Views || [])[0]) sview.rightToLeft = wb.Workbook.Views[0].RTL ? \"1\" : \"0\";\n  return writextag(\"sheetViews\", writextag(\"sheetView\", null, sview), {});\n}\nfunction write_ws_xml_cell(cell /*:Cell*/, ref, ws, opts, idx, wb, date1904) /*:string*/{\n  if (cell.c) ws['!comments'].push([ref, cell.c]);\n  if ((cell.v === undefined || cell.t === \"z\" && !(opts || {}).sheetStubs) && typeof cell.f !== \"string\" && typeof cell.z == \"undefined\") return \"\";\n  var vv = \"\";\n  var oldt = cell.t,\n    oldv = cell.v;\n  if (cell.t !== \"z\") switch (cell.t) {\n    case 'b':\n      vv = cell.v ? \"1\" : \"0\";\n      break;\n    case 'n':\n      if (isNaN(cell.v)) {\n        cell.t = \"e\";\n        vv = BErr[cell.v = 0x24];\n      } // #NUM!\n      else if (!isFinite(cell.v)) {\n        cell.t = \"e\";\n        vv = BErr[cell.v = 0x07];\n      } // #DIV/0!\n      else vv = '' + cell.v;\n      break;\n    case 'e':\n      vv = BErr[cell.v];\n      break;\n    case 'd':\n      if (opts && opts.cellDates) {\n        var _vv = parseDate$1(cell.v, date1904);\n        vv = _vv.toISOString();\n        if (_vv.getUTCFullYear() < 1900) vv = vv.slice(vv.indexOf(\"T\") + 1).replace(\"Z\", \"\");\n      } else {\n        cell = dup(cell);\n        cell.t = 'n';\n        vv = '' + (cell.v = datenum(parseDate$1(cell.v, date1904), date1904));\n      }\n      if (typeof cell.z === 'undefined') cell.z = table_fmt[14];\n      break;\n    default:\n      vv = cell.v;\n      break;\n  }\n  var v = cell.t == \"z\" || cell.v == null ? \"\" : writetag('v', escapexml(vv)),\n    o = {\n      r: ref\n    } /*:any*/;\n  /* TODO: cell style */\n  var os = get_cell_style(opts.cellXfs, cell, opts);\n  if (os !== 0) o.s = os;\n  switch (cell.t) {\n    case 'n':\n      break;\n    case 'd':\n      o.t = \"d\";\n      break;\n    case 'b':\n      o.t = \"b\";\n      break;\n    case 'e':\n      o.t = \"e\";\n      break;\n    case 'z':\n      break;\n    default:\n      if (cell.v == null) {\n        delete cell.t;\n        break;\n      }\n      if (cell.v.length > 32767) throw new Error(\"Text length must not exceed 32767 characters\");\n      if (opts && opts.bookSST) {\n        v = writetag('v', '' + get_sst_id(opts.Strings, cell.v, opts.revStrings));\n        o.t = \"s\";\n        break;\n      } else o.t = \"str\";\n      break;\n  }\n  if (cell.t != oldt) {\n    cell.t = oldt;\n    cell.v = oldv;\n  }\n  if (typeof cell.f == \"string\" && cell.f) {\n    var ff = cell.F && cell.F.slice(0, ref.length) == ref ? {\n      t: \"array\",\n      ref: cell.F\n    } : null;\n    v = writextag('f', escapexml(cell.f), ff) + (cell.v != null ? v : \"\");\n  }\n  if (cell.l) {\n    cell.l.display = escapexml(vv);\n    ws['!links'].push([ref, cell.l]);\n  }\n  if (cell.D) o.cm = 1;\n  return writextag('c', v, o);\n}\nvar parse_ws_xml_data = /*#__PURE__*/function () {\n  var cellregex = /<(?:\\w+:)?c[ \\/>]/,\n    rowregex = /<\\/(?:\\w+:)?row>/;\n  var rregex = /r=[\"']([^\"']*)[\"']/,\n    isregex = /<(?:\\w+:)?is>([\\S\\s]*?)<\\/(?:\\w+:)?is>/;\n  var refregex = /ref=[\"']([^\"']*)[\"']/;\n  var match_v = matchtag(\"v\"),\n    match_f = matchtag(\"f\");\n  return function parse_ws_xml_data(sdata /*:string*/, s, opts, guess /*:Range*/, themes, styles, wb) {\n    var ri = 0,\n      x = \"\",\n      cells /*:Array<string>*/ = [],\n      cref /*:?Array<string>*/ = [],\n      idx = 0,\n      i = 0,\n      cc = 0,\n      d = \"\",\n      p /*:any*/;\n    var tag,\n      tagr = 0,\n      tagc = 0;\n    var sstr, ftag;\n    var fmtid = 0,\n      fillid = 0;\n    var do_format = Array.isArray(styles.CellXf),\n      cf;\n    var arrayf /*:Array<[Range, string]>*/ = [];\n    var sharedf = [];\n    var dense = s[\"!data\"] != null;\n    var rows /*:Array<RowInfo>*/ = [],\n      rowobj = {},\n      rowrite = false;\n    var sheetStubs = !!opts.sheetStubs;\n    var date1904 = !!((wb || {}).WBProps || {}).date1904;\n    for (var marr = sdata.split(rowregex), mt = 0, marrlen = marr.length; mt != marrlen; ++mt) {\n      x = marr[mt].trim();\n      var xlen = x.length;\n      if (xlen === 0) continue;\n\n      /* 18.3.1.73 row CT_Row */\n      var rstarti = 0;\n      outa: for (ri = 0; ri < xlen; ++ri) switch ( /*x.charCodeAt(ri)*/x[ri]) {\n        case \">\" /*62*/:\n          if ( /*x.charCodeAt(ri-1) != 47*/x[ri - 1] != \"/\") {\n            ++ri;\n            break outa;\n          }\n          if (opts && opts.cellStyles) {\n            // TODO: avoid duplication\n            tag = parsexmltag(x.slice(rstarti, ri), true);\n            tagr = tag.r != null ? parseInt(tag.r, 10) : tagr + 1;\n            tagc = -1;\n            if (opts.sheetRows && opts.sheetRows < tagr) continue;\n            rowobj = {};\n            rowrite = false;\n            if (tag.ht) {\n              rowrite = true;\n              rowobj.hpt = parseFloat(tag.ht);\n              rowobj.hpx = pt2px(rowobj.hpt);\n            }\n            if (tag.hidden && parsexmlbool(tag.hidden)) {\n              rowrite = true;\n              rowobj.hidden = true;\n            }\n            if (tag.outlineLevel != null) {\n              rowrite = true;\n              rowobj.level = +tag.outlineLevel;\n            }\n            if (rowrite) rows[tagr - 1] = rowobj;\n          }\n          break;\n        case \"<\" /*60*/:\n          rstarti = ri;\n          break;\n      }\n      if (rstarti >= ri) break;\n      tag = parsexmltag(x.slice(rstarti, ri), true);\n      tagr = tag.r != null ? parseInt(tag.r, 10) : tagr + 1;\n      tagc = -1;\n      if (opts.sheetRows && opts.sheetRows < tagr) continue;\n      if (!opts.nodim) {\n        if (guess.s.r > tagr - 1) guess.s.r = tagr - 1;\n        if (guess.e.r < tagr - 1) guess.e.r = tagr - 1;\n      }\n      if (opts && opts.cellStyles) {\n        rowobj = {};\n        rowrite = false;\n        if (tag.ht) {\n          rowrite = true;\n          rowobj.hpt = parseFloat(tag.ht);\n          rowobj.hpx = pt2px(rowobj.hpt);\n        }\n        if (tag.hidden && parsexmlbool(tag.hidden)) {\n          rowrite = true;\n          rowobj.hidden = true;\n        }\n        if (tag.outlineLevel != null) {\n          rowrite = true;\n          rowobj.level = +tag.outlineLevel;\n        }\n        if (rowrite) rows[tagr - 1] = rowobj;\n      }\n\n      /* 18.3.1.4 c CT_Cell */\n      cells = x.slice(ri).split(cellregex);\n      for (var rslice = 0; rslice != cells.length; ++rslice) if (cells[rslice].trim().charAt(0) != \"<\") break;\n      cells = cells.slice(rslice);\n      for (ri = 0; ri != cells.length; ++ri) {\n        x = cells[ri].trim();\n        if (x.length === 0) continue;\n        cref = x.match(rregex);\n        idx = ri;\n        i = 0;\n        cc = 0;\n        x = \"<c \" + (x.slice(0, 1) == \"<\" ? \">\" : \"\") + x;\n        if (cref != null && cref.length === 2) {\n          idx = 0;\n          d = cref[1];\n          for (i = 0; i != d.length; ++i) {\n            if ((cc = d.charCodeAt(i) - 64) < 1 || cc > 26) break;\n            idx = 26 * idx + cc;\n          }\n          --idx;\n          tagc = idx;\n        } else ++tagc;\n        for (i = 0; i != x.length; ++i) if (x.charCodeAt(i) === 62) break;\n        ++i;\n        tag = parsexmltag(x.slice(0, i), true);\n        if (!tag.r) tag.r = encode_cell({\n          r: tagr - 1,\n          c: tagc\n        });\n        d = x.slice(i);\n        p = {\n          t: \"\"\n        } /*:any*/;\n\n        if ((cref = d.match(match_v)) != null && /*::cref != null && */cref[1] !== '') p.v = unescapexml(cref[1]);\n        if (opts.cellFormula) {\n          if ((cref = d.match(match_f)) != null /*:: && cref != null*/) {\n            if (cref[1] == \"\") {\n              if ( /*::cref != null && cref[0] != null && */cref[0].indexOf('t=\"shared\"') > -1) {\n                // TODO: parse formula\n                ftag = parsexmltag(cref[0]);\n                if (sharedf[ftag.si]) p.f = shift_formula_xlsx(sharedf[ftag.si][1], sharedf[ftag.si][2] /*[0].ref*/, tag.r);\n              }\n            } else {\n              /* TODO: match against XLSXFutureFunctions */\n              p.f = unescapexml(utf8read(cref[1]), true);\n              if (!opts.xlfn) p.f = _xlfn(p.f);\n              if ( /*::cref != null && cref[0] != null && */cref[0].indexOf('t=\"array\"') > -1) {\n                p.F = (d.match(refregex) || [])[1];\n                if (p.F.indexOf(\":\") > -1) arrayf.push([safe_decode_range(p.F), p.F]);\n              } else if ( /*::cref != null && cref[0] != null && */cref[0].indexOf('t=\"shared\"') > -1) {\n                // TODO: parse formula\n                ftag = parsexmltag(cref[0]);\n                var ___f = unescapexml(utf8read(cref[1]));\n                if (!opts.xlfn) ___f = _xlfn(___f);\n                sharedf[parseInt(ftag.si, 10)] = [ftag, ___f, tag.r];\n              }\n            }\n          } else if (cref = d.match(/<f[^>]*\\/>/)) {\n            ftag = parsexmltag(cref[0]);\n            if (sharedf[ftag.si]) p.f = shift_formula_xlsx(sharedf[ftag.si][1], sharedf[ftag.si][2] /*[0].ref*/, tag.r);\n          }\n          /* TODO: factor out contains logic */\n          var _tag = decode_cell(tag.r);\n          for (i = 0; i < arrayf.length; ++i) if (_tag.r >= arrayf[i][0].s.r && _tag.r <= arrayf[i][0].e.r) if (_tag.c >= arrayf[i][0].s.c && _tag.c <= arrayf[i][0].e.c) p.F = arrayf[i][1];\n        }\n        if (tag.t == null && p.v === undefined) {\n          if (p.f || p.F) {\n            p.v = 0;\n            p.t = \"n\";\n          } else if (!sheetStubs) continue;else p.t = \"z\";\n        } else p.t = tag.t || \"n\";\n        if (guess.s.c > tagc) guess.s.c = tagc;\n        if (guess.e.c < tagc) guess.e.c = tagc;\n        /* 18.18.11 t ST_CellType */\n        switch (p.t) {\n          case 'n':\n            if (p.v == \"\" || p.v == null) {\n              if (!sheetStubs) continue;\n              p.t = 'z';\n            } else p.v = parseFloat(p.v);\n            break;\n          case 's':\n            if (typeof p.v == 'undefined') {\n              if (!sheetStubs) continue;\n              p.t = 'z';\n            } else {\n              sstr = strs[parseInt(p.v, 10)];\n              p.v = sstr.t;\n              p.r = sstr.r;\n              if (opts.cellHTML) p.h = sstr.h;\n            }\n            break;\n          case 'str':\n            p.t = \"s\";\n            p.v = p.v != null ? unescapexml(utf8read(p.v), true) : '';\n            if (opts.cellHTML) p.h = escapehtml(p.v);\n            break;\n          case 'inlineStr':\n            cref = d.match(isregex);\n            p.t = 's';\n            if (cref != null && (sstr = parse_si(cref[1]))) {\n              p.v = sstr.t;\n              if (opts.cellHTML) p.h = sstr.h;\n            } else p.v = \"\";\n            break;\n          case 'b':\n            p.v = parsexmlbool(p.v);\n            break;\n          case 'd':\n            if (opts.cellDates) p.v = parseDate$1(p.v, date1904);else {\n              p.v = datenum(parseDate$1(p.v, date1904), date1904);\n              p.t = 'n';\n            }\n            break;\n          /* error string in .w, number in .v */\n          case 'e':\n            if (!opts || opts.cellText !== false) p.w = p.v;\n            p.v = RBErr[p.v];\n            break;\n        }\n        /* formatting */\n        fmtid = fillid = 0;\n        cf = null;\n        if (do_format && tag.s !== undefined) {\n          cf = styles.CellXf[tag.s];\n          if (cf != null) {\n            if (cf.numFmtId != null) fmtid = cf.numFmtId;\n            if (opts.cellStyles) {\n              if (cf.fillId != null) fillid = cf.fillId;\n            }\n          }\n        }\n        safe_format(p, fmtid, fillid, opts, themes, styles, date1904);\n        if (opts.cellDates && do_format && p.t == 'n' && fmt_is_date(table_fmt[fmtid])) {\n          p.v = numdate(p.v + (date1904 ? 1462 : 0));\n          p.t = typeof p.v == \"number\" ? 'n' : 'd';\n        }\n        if (tag.cm && opts.xlmeta) {\n          var cm = (opts.xlmeta.Cell || [])[+tag.cm - 1];\n          if (cm && cm.type == 'XLDAPR') p.D = true;\n        }\n        var _r;\n        if (opts.nodim) {\n          _r = decode_cell(tag.r);\n          if (guess.s.r > _r.r) guess.s.r = _r.r;\n          if (guess.e.r < _r.r) guess.e.r = _r.r;\n        }\n        if (dense) {\n          _r = decode_cell(tag.r);\n          if (!s[\"!data\"][_r.r]) s[\"!data\"][_r.r] = [];\n          s[\"!data\"][_r.r][_r.c] = p;\n        } else s[tag.r] = p;\n      }\n    }\n    if (rows.length > 0) s['!rows'] = rows;\n  };\n}();\nfunction write_ws_xml_data(ws /*:Worksheet*/, opts, idx /*:number*/, wb /*:Workbook*/ /*::, rels*/) /*:string*/{\n  var o /*:Array<string>*/ = [],\n    r /*:Array<string>*/ = [],\n    range = safe_decode_range(ws['!ref']),\n    cell = \"\",\n    ref,\n    rr = \"\",\n    cols /*:Array<string>*/ = [],\n    R = 0,\n    C = 0,\n    rows = ws['!rows'];\n  var dense = ws[\"!data\"] != null;\n  var params = {\n      r: rr\n    } /*:any*/,\n    row /*:RowInfo*/,\n    height = -1;\n  var date1904 = (((wb || {}).Workbook || {}).WBProps || {}).date1904;\n  for (C = range.s.c; C <= range.e.c; ++C) cols[C] = encode_col(C);\n  for (R = range.s.r; R <= range.e.r; ++R) {\n    r = [];\n    rr = encode_row(R);\n    for (C = range.s.c; C <= range.e.c; ++C) {\n      ref = cols[C] + rr;\n      var _cell = dense ? (ws[\"!data\"][R] || [])[C] : ws[ref];\n      if (_cell === undefined) continue;\n      if ((cell = write_ws_xml_cell(_cell, ref, ws, opts, idx, wb, date1904)) != null) r.push(cell);\n    }\n    if (r.length > 0 || rows && rows[R]) {\n      params = {\n        r: rr\n      } /*:any*/;\n      if (rows && rows[R]) {\n        row = rows[R];\n        if (row.hidden) params.hidden = 1;\n        height = -1;\n        if (row.hpx) height = px2pt(row.hpx);else if (row.hpt) height = row.hpt;\n        if (height > -1) {\n          params.ht = height;\n          params.customHeight = 1;\n        }\n        if (row.level) {\n          params.outlineLevel = row.level;\n        }\n      }\n      o[o.length] = writextag('row', r.join(\"\"), params);\n    }\n  }\n  if (rows) for (; R < rows.length; ++R) {\n    if (rows && rows[R]) {\n      params = {\n        r: R + 1\n      } /*:any*/;\n      row = rows[R];\n      if (row.hidden) params.hidden = 1;\n      height = -1;\n      if (row.hpx) height = px2pt(row.hpx);else if (row.hpt) height = row.hpt;\n      if (height > -1) {\n        params.ht = height;\n        params.customHeight = 1;\n      }\n      if (row.level) {\n        params.outlineLevel = row.level;\n      }\n      o[o.length] = writextag('row', \"\", params);\n    }\n  }\n  return o.join(\"\");\n}\nfunction write_ws_xml(idx /*:number*/, opts, wb /*:Workbook*/, rels) /*:string*/{\n  var o = [XML_HEADER, writextag('worksheet', null, {\n    'xmlns': XMLNS_main[0],\n    'xmlns:r': XMLNS.r\n  })];\n  var s = wb.SheetNames[idx],\n    sidx = 0,\n    rdata = \"\";\n  var ws = wb.Sheets[s];\n  if (ws == null) ws = {};\n  var ref = ws['!ref'] || 'A1';\n  var range = safe_decode_range(ref);\n  if (range.e.c > 0x3FFF || range.e.r > 0xFFFFF) {\n    if (opts.WTF) throw new Error(\"Range \" + ref + \" exceeds format limit A1:XFD1048576\");\n    range.e.c = Math.min(range.e.c, 0x3FFF);\n    range.e.r = Math.min(range.e.c, 0xFFFFF);\n    ref = encode_range(range);\n  }\n  if (!rels) rels = {};\n  ws['!comments'] = [];\n  var _drawing = [];\n  write_ws_xml_sheetpr(ws, wb, idx, opts, o);\n  o[o.length] = writextag('dimension', null, {\n    'ref': ref\n  });\n  o[o.length] = write_ws_xml_sheetviews(ws, opts, idx, wb);\n\n  /* TODO: store in WB, process styles */\n  if (opts.sheetFormat) o[o.length] = writextag('sheetFormatPr', null, {\n    defaultRowHeight: opts.sheetFormat.defaultRowHeight || '16',\n    baseColWidth: opts.sheetFormat.baseColWidth || '10',\n    outlineLevelRow: opts.sheetFormat.outlineLevelRow || '7'\n  });\n  if (ws['!cols'] != null && ws['!cols'].length > 0) o[o.length] = write_ws_xml_cols(ws, ws['!cols']);\n  o[sidx = o.length] = '<sheetData/>';\n  ws['!links'] = [];\n  if (ws['!ref'] != null) {\n    rdata = write_ws_xml_data(ws, opts, idx, wb);\n    if (rdata.length > 0) o[o.length] = rdata;\n  }\n  if (o.length > sidx + 1) {\n    o[o.length] = '</sheetData>';\n    o[sidx] = o[sidx].replace(\"/>\", \">\");\n  }\n\n  /* sheetCalcPr */\n\n  if (ws['!protect']) o[o.length] = write_ws_xml_protection(ws['!protect']);\n\n  /* protectedRanges */\n  /* scenarios */\n\n  if (ws['!autofilter'] != null) o[o.length] = write_ws_xml_autofilter(ws['!autofilter'], ws, wb, idx);\n\n  /* sortState */\n  /* dataConsolidate */\n  /* customSheetViews */\n\n  if (ws['!merges'] != null && ws['!merges'].length > 0) o[o.length] = write_ws_xml_merges(ws['!merges']);\n\n  /* phoneticPr */\n  /* conditionalFormatting */\n  /* dataValidations */\n\n  var relc = -1,\n    rel,\n    rId = -1;\n  if ( /*::(*/ws['!links'] /*::||[])*/.length > 0) {\n    o[o.length] = \"<hyperlinks>\";\n    /*::(*/\n    ws['!links'] /*::||[])*/.forEach(function (l) {\n      if (!l[1].Target) return;\n      rel = {\n        \"ref\": l[0]\n      } /*:any*/;\n      if (l[1].Target.charAt(0) != \"#\") {\n        rId = add_rels(rels, -1, escapexml(l[1].Target).replace(/#.*$/, \"\"), RELS.HLINK);\n        rel[\"r:id\"] = \"rId\" + rId;\n      }\n      if ((relc = l[1].Target.indexOf(\"#\")) > -1) rel.location = escapexml(l[1].Target.slice(relc + 1));\n      if (l[1].Tooltip) rel.tooltip = escapexml(l[1].Tooltip);\n      rel.display = l[1].display;\n      o[o.length] = writextag(\"hyperlink\", null, rel);\n    });\n    o[o.length] = \"</hyperlinks>\";\n  }\n  delete ws['!links'];\n\n  /* printOptions */\n\n  if (ws['!margins'] != null) o[o.length] = write_ws_xml_margins(ws['!margins']);\n\n  /* pageSetup */\n  /* headerFooter */\n  /* rowBreaks */\n  /* colBreaks */\n  /* customProperties */\n  /* cellWatches */\n\n  if (!opts || opts.ignoreEC || opts.ignoreEC == void 0) o[o.length] = writetag(\"ignoredErrors\", writextag(\"ignoredError\", null, {\n    numberStoredAsText: 1,\n    sqref: ref\n  }));\n\n  /* smartTags */\n\n  if (_drawing.length > 0) {\n    rId = add_rels(rels, -1, \"../drawings/drawing\" + (idx + 1) + \".xml\", RELS.DRAW);\n    o[o.length] = writextag(\"drawing\", null, {\n      \"r:id\": \"rId\" + rId\n    });\n    ws['!drawing'] = _drawing;\n  }\n  if (ws['!comments'].length > 0) {\n    rId = add_rels(rels, -1, \"../drawings/vmlDrawing\" + (idx + 1) + \".vml\", RELS.VML);\n    o[o.length] = writextag(\"legacyDrawing\", null, {\n      \"r:id\": \"rId\" + rId\n    });\n    ws['!legacy'] = rId;\n  }\n\n  /* legacyDrawingHF */\n  /* picture */\n  /* oleObjects */\n  /* controls */\n  /* webPublishItems */\n  /* tableParts */\n  /* extLst */\n\n  if (o.length > 1) {\n    o[o.length] = '</worksheet>';\n    o[1] = o[1].replace(\"/>\", \">\");\n  }\n  return o.join(\"\");\n}\n\n/* [MS-XLSB] 2.4.726 BrtRowHdr */\nfunction parse_BrtRowHdr(data, length) {\n  var z = {} /*:any*/;\n  var tgt = data.l + length;\n  z.r = data.read_shift(4);\n  data.l += 4; // TODO: ixfe\n  var miyRw = data.read_shift(2);\n  data.l += 1; // TODO: top/bot padding\n  var flags = data.read_shift(1);\n  data.l = tgt;\n  if (flags & 0x07) z.level = flags & 0x07;\n  if (flags & 0x10) z.hidden = true;\n  if (flags & 0x20) z.hpt = miyRw / 20;\n  return z;\n}\nfunction write_BrtRowHdr(R /*:number*/, range, ws) {\n  var o = new_buf(17 + 8 * 16);\n  var row = (ws['!rows'] || [])[R] || {};\n  o.write_shift(4, R);\n  o.write_shift(4, 0); /* TODO: ixfe */\n\n  var miyRw = 0x0140;\n  if (row.hpx) miyRw = px2pt(row.hpx) * 20;else if (row.hpt) miyRw = row.hpt * 20;\n  o.write_shift(2, miyRw);\n  o.write_shift(1, 0); /* top/bot padding */\n\n  var flags = 0x0;\n  if (row.level) flags |= row.level;\n  if (row.hidden) flags |= 0x10;\n  if (row.hpx || row.hpt) flags |= 0x20;\n  o.write_shift(1, flags);\n  o.write_shift(1, 0); /* phonetic guide */\n\n  /* [MS-XLSB] 2.5.8 BrtColSpan explains the mechanism */\n  var ncolspan = 0,\n    lcs = o.l;\n  o.l += 4;\n  var caddr = {\n    r: R,\n    c: 0\n  };\n  var dense = ws[\"!data\"] != null;\n  for (var i = 0; i < 16; ++i) {\n    if (range.s.c > i + 1 << 10 || range.e.c < i << 10) continue;\n    var first = -1,\n      last = -1;\n    for (var j = i << 10; j < i + 1 << 10; ++j) {\n      caddr.c = j;\n      var cell = dense ? (ws[\"!data\"][caddr.r] || [])[caddr.c] : ws[encode_cell(caddr)];\n      if (cell) {\n        if (first < 0) first = j;\n        last = j;\n      }\n    }\n    if (first < 0) continue;\n    ++ncolspan;\n    o.write_shift(4, first);\n    o.write_shift(4, last);\n  }\n  var l = o.l;\n  o.l = lcs;\n  o.write_shift(4, ncolspan);\n  o.l = l;\n  return o.length > o.l ? o.slice(0, o.l) : o;\n}\nfunction write_row_header(ba, ws, range, R) {\n  var o = write_BrtRowHdr(R, range, ws);\n  if (o.length > 17 || (ws['!rows'] || [])[R]) write_record(ba, 0x0000 /* BrtRowHdr */, o);\n}\n\n/* [MS-XLSB] 2.4.820 BrtWsDim */\nvar parse_BrtWsDim = parse_UncheckedRfX;\nvar write_BrtWsDim = write_UncheckedRfX;\n\n/* [MS-XLSB] 2.4.821 BrtWsFmtInfo */\nfunction parse_BrtWsFmtInfo( /*::data, length*/\n) {}\n//function write_BrtWsFmtInfo(ws, o) { }\n\n/* [MS-XLSB] 2.4.823 BrtWsProp */\nfunction parse_BrtWsProp(data, length) {\n  var z = {};\n  var f = data[data.l];\n  ++data.l;\n  z.above = !(f & 0x40);\n  z.left = !(f & 0x80);\n  /* TODO: pull flags */\n  data.l += 18;\n  z.name = parse_XLSBCodeName(data);\n  return z;\n}\nfunction write_BrtWsProp(str, outl, o) {\n  if (o == null) o = new_buf(84 + 4 * str.length);\n  var f = 0xC0;\n  if (outl) {\n    if (outl.above) f &= ~0x40;\n    if (outl.left) f &= ~0x80;\n  }\n  o.write_shift(1, f);\n  for (var i = 1; i < 3; ++i) o.write_shift(1, 0);\n  write_BrtColor({\n    auto: 1\n  }, o);\n  o.write_shift(-4, -1);\n  o.write_shift(-4, -1);\n  write_XLSBCodeName(str, o);\n  return o.slice(0, o.l);\n}\n\n/* [MS-XLSB] 2.4.306 BrtCellBlank */\nfunction parse_BrtCellBlank(data) {\n  var cell = parse_XLSBCell(data);\n  return [cell];\n}\nfunction write_BrtCellBlank(cell, ncell, o) {\n  if (o == null) o = new_buf(8);\n  return write_XLSBCell(ncell, o);\n}\nfunction parse_BrtShortBlank(data) {\n  var cell = parse_XLSBShortCell(data);\n  return [cell];\n}\nfunction write_BrtShortBlank(cell, ncell, o) {\n  if (o == null) o = new_buf(4);\n  return write_XLSBShortCell(ncell, o);\n}\n\n/* [MS-XLSB] 2.4.307 BrtCellBool */\nfunction parse_BrtCellBool(data) {\n  var cell = parse_XLSBCell(data);\n  var fBool = data.read_shift(1);\n  return [cell, fBool, 'b'];\n}\nfunction write_BrtCellBool(cell, ncell, o) {\n  if (o == null) o = new_buf(9);\n  write_XLSBCell(ncell, o);\n  o.write_shift(1, cell.v ? 1 : 0);\n  return o;\n}\nfunction parse_BrtShortBool(data) {\n  var cell = parse_XLSBShortCell(data);\n  var fBool = data.read_shift(1);\n  return [cell, fBool, 'b'];\n}\nfunction write_BrtShortBool(cell, ncell, o) {\n  if (o == null) o = new_buf(5);\n  write_XLSBShortCell(ncell, o);\n  o.write_shift(1, cell.v ? 1 : 0);\n  return o;\n}\n\n/* [MS-XLSB] 2.4.308 BrtCellError */\nfunction parse_BrtCellError(data) {\n  var cell = parse_XLSBCell(data);\n  var bError = data.read_shift(1);\n  return [cell, bError, 'e'];\n}\nfunction write_BrtCellError(cell, ncell, o) {\n  if (o == null) o = new_buf(9);\n  write_XLSBCell(ncell, o);\n  o.write_shift(1, cell.v);\n  return o;\n}\nfunction parse_BrtShortError(data) {\n  var cell = parse_XLSBShortCell(data);\n  var bError = data.read_shift(1);\n  return [cell, bError, 'e'];\n}\nfunction write_BrtShortError(cell, ncell, o) {\n  if (o == null) o = new_buf(8);\n  write_XLSBShortCell(ncell, o);\n  o.write_shift(1, cell.v);\n  o.write_shift(2, 0);\n  o.write_shift(1, 0);\n  return o;\n}\n\n/* [MS-XLSB] 2.4.311 BrtCellIsst */\nfunction parse_BrtCellIsst(data) {\n  var cell = parse_XLSBCell(data);\n  var isst = data.read_shift(4);\n  return [cell, isst, 's'];\n}\nfunction write_BrtCellIsst(cell, ncell, o) {\n  if (o == null) o = new_buf(12);\n  write_XLSBCell(ncell, o);\n  o.write_shift(4, ncell.v);\n  return o;\n}\nfunction parse_BrtShortIsst(data) {\n  var cell = parse_XLSBShortCell(data);\n  var isst = data.read_shift(4);\n  return [cell, isst, 's'];\n}\nfunction write_BrtShortIsst(cell, ncell, o) {\n  if (o == null) o = new_buf(8);\n  write_XLSBShortCell(ncell, o);\n  o.write_shift(4, ncell.v);\n  return o;\n}\n\n/* [MS-XLSB] 2.4.313 BrtCellReal */\nfunction parse_BrtCellReal(data) {\n  var cell = parse_XLSBCell(data);\n  var value = parse_Xnum(data);\n  return [cell, value, 'n'];\n}\nfunction write_BrtCellReal(cell, ncell, o) {\n  if (o == null) o = new_buf(16);\n  write_XLSBCell(ncell, o);\n  write_Xnum(cell.v, o);\n  return o;\n}\nfunction parse_BrtShortReal(data) {\n  var cell = parse_XLSBShortCell(data);\n  var value = parse_Xnum(data);\n  return [cell, value, 'n'];\n}\nfunction write_BrtShortReal(cell, ncell, o) {\n  if (o == null) o = new_buf(12);\n  write_XLSBShortCell(ncell, o);\n  write_Xnum(cell.v, o);\n  return o;\n}\n\n/* [MS-XLSB] 2.4.314 BrtCellRk */\nfunction parse_BrtCellRk(data) {\n  var cell = parse_XLSBCell(data);\n  var value = parse_RkNumber(data);\n  return [cell, value, 'n'];\n}\nfunction write_BrtCellRk(cell, ncell, o) {\n  if (o == null) o = new_buf(12);\n  write_XLSBCell(ncell, o);\n  write_RkNumber(cell.v, o);\n  return o;\n}\nfunction parse_BrtShortRk(data) {\n  var cell = parse_XLSBShortCell(data);\n  var value = parse_RkNumber(data);\n  return [cell, value, 'n'];\n}\nfunction write_BrtShortRk(cell, ncell, o) {\n  if (o == null) o = new_buf(8);\n  write_XLSBShortCell(ncell, o);\n  write_RkNumber(cell.v, o);\n  return o;\n}\n\n/* [MS-XLSB] 2.4.323 BrtCellRString */\nfunction parse_BrtCellRString(data) {\n  var cell = parse_XLSBCell(data);\n  var value = parse_RichStr(data);\n  return [cell, value, 'is'];\n}\n\n/* [MS-XLSB] 2.4.317 BrtCellSt */\nfunction parse_BrtCellSt(data) {\n  var cell = parse_XLSBCell(data);\n  var value = parse_XLWideString(data);\n  return [cell, value, 'str'];\n}\nfunction write_BrtCellSt(cell, ncell, o) {\n  var data = cell.v == null ? \"\" : String(cell.v);\n  if (o == null) o = new_buf(12 + 4 * cell.v.length);\n  write_XLSBCell(ncell, o);\n  write_XLWideString(data, o);\n  return o.length > o.l ? o.slice(0, o.l) : o;\n}\nfunction parse_BrtShortSt(data) {\n  var cell = parse_XLSBShortCell(data);\n  var value = parse_XLWideString(data);\n  return [cell, value, 'str'];\n}\nfunction write_BrtShortSt(cell, ncell, o) {\n  var data = cell.v == null ? \"\" : String(cell.v);\n  if (o == null) o = new_buf(8 + 4 * data.length);\n  write_XLSBShortCell(ncell, o);\n  write_XLWideString(data, o);\n  return o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.4.653 BrtFmlaBool */\nfunction parse_BrtFmlaBool(data, length, opts) {\n  var end = data.l + length;\n  var cell = parse_XLSBCell(data);\n  cell.r = opts['!row'];\n  var value = data.read_shift(1);\n  var o = [cell, value, 'b'];\n  if (opts.cellFormula) {\n    data.l += 2;\n    var formula = parse_XLSBCellParsedFormula(data, end - data.l, opts);\n    o[3] = stringify_formula(formula, null /*range*/, cell, opts.supbooks, opts); /* TODO */\n  } else data.l = end;\n  return o;\n}\n\n/* [MS-XLSB] 2.4.654 BrtFmlaError */\nfunction parse_BrtFmlaError(data, length, opts) {\n  var end = data.l + length;\n  var cell = parse_XLSBCell(data);\n  cell.r = opts['!row'];\n  var value = data.read_shift(1);\n  var o = [cell, value, 'e'];\n  if (opts.cellFormula) {\n    data.l += 2;\n    var formula = parse_XLSBCellParsedFormula(data, end - data.l, opts);\n    o[3] = stringify_formula(formula, null /*range*/, cell, opts.supbooks, opts); /* TODO */\n  } else data.l = end;\n  return o;\n}\n\n/* [MS-XLSB] 2.4.655 BrtFmlaNum */\nfunction parse_BrtFmlaNum(data, length, opts) {\n  var end = data.l + length;\n  var cell = parse_XLSBCell(data);\n  cell.r = opts['!row'];\n  var value = parse_Xnum(data);\n  var o = [cell, value, 'n'];\n  if (opts.cellFormula) {\n    data.l += 2;\n    var formula = parse_XLSBCellParsedFormula(data, end - data.l, opts);\n    o[3] = stringify_formula(formula, null /*range*/, cell, opts.supbooks, opts); /* TODO */\n  } else data.l = end;\n  return o;\n}\n\n/* [MS-XLSB] 2.4.656 BrtFmlaString */\nfunction parse_BrtFmlaString(data, length, opts) {\n  var end = data.l + length;\n  var cell = parse_XLSBCell(data);\n  cell.r = opts['!row'];\n  var value = parse_XLWideString(data);\n  var o = [cell, value, 'str'];\n  if (opts.cellFormula) {\n    data.l += 2;\n    var formula = parse_XLSBCellParsedFormula(data, end - data.l, opts);\n    o[3] = stringify_formula(formula, null /*range*/, cell, opts.supbooks, opts); /* TODO */\n  } else data.l = end;\n  return o;\n}\n\n/* [MS-XLSB] 2.4.682 BrtMergeCell */\nvar parse_BrtMergeCell = parse_UncheckedRfX;\nvar write_BrtMergeCell = write_UncheckedRfX;\n/* [MS-XLSB] 2.4.107 BrtBeginMergeCells */\nfunction write_BrtBeginMergeCells(cnt, o) {\n  if (o == null) o = new_buf(4);\n  o.write_shift(4, cnt);\n  return o;\n}\n\n/* [MS-XLSB] 2.4.662 BrtHLink */\nfunction parse_BrtHLink(data, length /*::, opts*/) {\n  var end = data.l + length;\n  var rfx = parse_UncheckedRfX(data);\n  var relId = parse_XLNullableWideString(data);\n  var loc = parse_XLWideString(data);\n  var tooltip = parse_XLWideString(data);\n  var display = parse_XLWideString(data);\n  data.l = end;\n  var o = {\n    rfx: rfx,\n    relId: relId,\n    loc: loc,\n    display: display\n  } /*:any*/;\n  if (tooltip) o.Tooltip = tooltip;\n  return o;\n}\nfunction write_BrtHLink(l, rId) {\n  var o = new_buf(50 + 4 * (l[1].Target.length + (l[1].Tooltip || \"\").length));\n  write_UncheckedRfX({\n    s: decode_cell(l[0]),\n    e: decode_cell(l[0])\n  }, o);\n  write_RelID(\"rId\" + rId, o);\n  var locidx = l[1].Target.indexOf(\"#\");\n  var loc = locidx == -1 ? \"\" : l[1].Target.slice(locidx + 1);\n  write_XLWideString(loc || \"\", o);\n  write_XLWideString(l[1].Tooltip || \"\", o);\n  write_XLWideString(\"\", o);\n  return o.slice(0, o.l);\n}\n\n/* [MS-XLSB] 2.4.692 BrtPane */\nfunction parse_BrtPane( /*data, length, opts*/\n) {}\n\n/* [MS-XLSB] 2.4.6 BrtArrFmla */\nfunction parse_BrtArrFmla(data, length, opts) {\n  var end = data.l + length;\n  var rfx = parse_RfX(data);\n  var fAlwaysCalc = data.read_shift(1);\n  var o = [rfx];\n  o[2] = fAlwaysCalc;\n  if (opts.cellFormula) {\n    var formula = parse_XLSBArrayParsedFormula(data, end - data.l, opts);\n    o[1] = formula;\n  } else data.l = end;\n  return o;\n}\n\n/* [MS-XLSB] 2.4.750 BrtShrFmla */\nfunction parse_BrtShrFmla(data, length, opts) {\n  var end = data.l + length;\n  var rfx = parse_UncheckedRfX(data);\n  var o = [rfx];\n  if (opts.cellFormula) {\n    var formula = parse_XLSBSharedParsedFormula(data, end - data.l, opts);\n    o[1] = formula;\n    data.l = end;\n  } else data.l = end;\n  return o;\n}\n\n/* [MS-XLSB] 2.4.323 BrtColInfo */\n/* TODO: once XLS ColInfo is set, combine the functions */\nfunction write_BrtColInfo(C /*:number*/, col, o) {\n  if (o == null) o = new_buf(18);\n  var p = col_obj_w(C, col);\n  o.write_shift(-4, C);\n  o.write_shift(-4, C);\n  o.write_shift(4, (p.width || 10) * 256);\n  o.write_shift(4, 0 /*ixfe*/); // style\n  var flags = 0;\n  if (col.hidden) flags |= 0x01;\n  if (typeof p.width == 'number') flags |= 0x02;\n  if (col.level) flags |= col.level << 8;\n  o.write_shift(2, flags); // bit flag\n  return o;\n}\n\n/* [MS-XLSB] 2.4.678 BrtMargins */\nvar BrtMarginKeys = [\"left\", \"right\", \"top\", \"bottom\", \"header\", \"footer\"];\nfunction parse_BrtMargins(data /*::, length, opts*/) /*:Margins*/{\n  var margins = {} /*:any*/;\n  BrtMarginKeys.forEach(function (k) {\n    margins[k] = parse_Xnum(data);\n  });\n  return margins;\n}\nfunction write_BrtMargins(margins /*:Margins*/, o) {\n  if (o == null) o = new_buf(6 * 8);\n  default_margins(margins);\n  BrtMarginKeys.forEach(function (k) {\n    write_Xnum(margins /*:any*/[k], o);\n  });\n  return o;\n}\n\n/* [MS-XLSB] 2.4.299 BrtBeginWsView */\nfunction parse_BrtBeginWsView(data /*::, length, opts*/) {\n  var f = data.read_shift(2);\n  data.l += 28;\n  return {\n    RTL: f & 0x20\n  };\n}\nfunction write_BrtBeginWsView(ws, Workbook, o) {\n  if (o == null) o = new_buf(30);\n  var f = 0x39c;\n  if ((((Workbook || {}).Views || [])[0] || {}).RTL) f |= 0x20;\n  o.write_shift(2, f); // bit flag\n  o.write_shift(4, 0);\n  o.write_shift(4, 0); // view first row\n  o.write_shift(4, 0); // view first col\n  o.write_shift(1, 0); // gridline color ICV\n  o.write_shift(1, 0);\n  o.write_shift(2, 0);\n  o.write_shift(2, 100); // zoom scale\n  o.write_shift(2, 0);\n  o.write_shift(2, 0);\n  o.write_shift(2, 0);\n  o.write_shift(4, 0); // workbook view id\n  return o;\n}\n\n/* [MS-XLSB] 2.4.309 BrtCellIgnoreEC */\nfunction write_BrtCellIgnoreEC(ref) {\n  var o = new_buf(24);\n  o.write_shift(4, 4);\n  o.write_shift(4, 1);\n  write_UncheckedRfX(ref, o);\n  return o;\n}\n\n/* [MS-XLSB] 2.4.748 BrtSheetProtection */\nfunction write_BrtSheetProtection(sp, o) {\n  if (o == null) o = new_buf(16 * 4 + 2);\n  o.write_shift(2, sp.password ? crypto_CreatePasswordVerifier_Method1(sp.password) : 0);\n  o.write_shift(4, 1); // this record should not be written if no protection\n  [[\"objects\", false],\n  // fObjects\n  [\"scenarios\", false],\n  // fScenarios\n  [\"formatCells\", true],\n  // fFormatCells\n  [\"formatColumns\", true],\n  // fFormatColumns\n  [\"formatRows\", true],\n  // fFormatRows\n  [\"insertColumns\", true],\n  // fInsertColumns\n  [\"insertRows\", true],\n  // fInsertRows\n  [\"insertHyperlinks\", true],\n  // fInsertHyperlinks\n  [\"deleteColumns\", true],\n  // fDeleteColumns\n  [\"deleteRows\", true],\n  // fDeleteRows\n  [\"selectLockedCells\", false],\n  // fSelLockedCells\n  [\"sort\", true],\n  // fSort\n  [\"autoFilter\", true],\n  // fAutoFilter\n  [\"pivotTables\", true],\n  // fPivotTables\n  [\"selectUnlockedCells\", false] // fSelUnlockedCells\n  ].forEach(function (n) {\n    /*:: if(o == null) throw \"unreachable\"; */\n    if (n[1]) o.write_shift(4, sp[n[0]] != null && !sp[n[0]] ? 1 : 0);else o.write_shift(4, sp[n[0]] != null && sp[n[0]] ? 0 : 1);\n  });\n  return o;\n}\nfunction parse_BrtDVal( /*data, length, opts*/\n) {}\nfunction parse_BrtDVal14( /*data, length, opts*/\n) {}\n/* [MS-XLSB] 2.1.7.61 Worksheet */\nfunction parse_ws_bin(data, _opts, idx, rels, wb /*:WBWBProps*/, themes, styles) /*:Worksheet*/{\n  if (!data) return data;\n  var opts = _opts || {};\n  if (!rels) rels = {\n    '!id': {}\n  };\n  var s /*:Worksheet*/ = {};\n  if (opts.dense) s[\"!data\"] = [];\n  var ref;\n  var refguess = {\n    s: {\n      r: 2000000,\n      c: 2000000\n    },\n    e: {\n      r: 0,\n      c: 0\n    }\n  };\n  var pass = false,\n    end = false;\n  var row, p, cf, R, C, addr, sstr, rr, cell /*:Cell*/;\n  var merges /*:Array<Range>*/ = [];\n  opts.biff = 12;\n  opts['!row'] = 0;\n  var ai = 0,\n    af = false;\n  var arrayf /*:Array<[Range, string]>*/ = [];\n  var sharedf = {};\n  var supbooks = opts.supbooks || /*::(*/wb /*:: :any)*/.supbooks || [[]] /*:any*/;\n  supbooks.sharedf = sharedf;\n  supbooks.arrayf = arrayf;\n  supbooks.SheetNames = wb.SheetNames || wb.Sheets.map(function (x) {\n    return x.name;\n  });\n  if (!opts.supbooks) {\n    opts.supbooks = supbooks;\n    if (wb.Names) for (var i = 0; i < wb.Names.length; ++i) supbooks[0][i + 1] = wb.Names[i];\n  }\n  var colinfo /*:Array<ColInfo>*/ = [],\n    rowinfo /*:Array<RowInfo>*/ = [];\n  var seencol = false;\n  XLSBRecordEnum[0x0010] = {\n    n: \"BrtShortReal\",\n    f: parse_BrtShortReal\n  };\n  var cm;\n  var date1904 = 1462 * +!!((wb || {}).WBProps || {}).date1904;\n  recordhopper(data, function ws_parse(val, RR, RT) {\n    if (end) return;\n    switch (RT) {\n      case 0x0094:\n        /* 'BrtWsDim' */\n        ref = val;\n        break;\n      case 0x0000:\n        /* 'BrtRowHdr' */\n        row = val;\n        if (opts.sheetRows && opts.sheetRows <= row.r) end = true;\n        rr = encode_row(R = row.r);\n        opts['!row'] = row.r;\n        if (val.hidden || val.hpt || val.level != null) {\n          if (val.hpt) val.hpx = pt2px(val.hpt);\n          rowinfo[val.r] = val;\n        }\n        break;\n      case 0x0002: /* 'BrtCellRk' */\n      case 0x0003: /* 'BrtCellError' */\n      case 0x0004: /* 'BrtCellBool' */\n      case 0x0005: /* 'BrtCellReal' */\n      case 0x0006: /* 'BrtCellSt' */\n      case 0x0007: /* 'BrtCellIsst' */\n      case 0x0008: /* 'BrtFmlaString' */\n      case 0x0009: /* 'BrtFmlaNum' */\n      case 0x000A: /* 'BrtFmlaBool' */\n      case 0x000B: /* 'BrtFmlaError' */\n      case 0x000D: /* 'BrtShortRk' */\n      case 0x000E: /* 'BrtShortError' */\n      case 0x000F: /* 'BrtShortBool' */\n      case 0x0010: /* 'BrtShortReal' */\n      case 0x0011: /* 'BrtShortSt' */\n      case 0x0012: /* 'BrtShortIsst' */\n      case 0x003E:\n        /* 'BrtCellRString' */\n        p = {\n          t: val[2]\n        } /*:any*/;\n        switch (val[2]) {\n          case 'n':\n            p.v = val[1];\n            break;\n          case 's':\n            sstr = strs[val[1]];\n            p.v = sstr.t;\n            p.r = sstr.r;\n            break;\n          case 'b':\n            p.v = val[1] ? true : false;\n            break;\n          case 'e':\n            p.v = val[1];\n            if (opts.cellText !== false) p.w = BErr[p.v];\n            break;\n          case 'str':\n            p.t = 's';\n            p.v = val[1];\n            break;\n          case 'is':\n            p.t = 's';\n            p.v = val[1].t;\n            break;\n        }\n        if (cf = styles.CellXf[val[0].iStyleRef]) safe_format(p, cf.numFmtId, null, opts, themes, styles, date1904 > 0);\n        C = val[0].c == -1 ? C + 1 : val[0].c;\n        if (opts.dense) {\n          if (!s[\"!data\"][R]) s[\"!data\"][R] = [];\n          s[\"!data\"][R][C] = p;\n        } else s[encode_col(C) + rr] = p;\n        if (opts.cellFormula) {\n          af = false;\n          for (ai = 0; ai < arrayf.length; ++ai) {\n            var aii = arrayf[ai];\n            if (row.r >= aii[0].s.r && row.r <= aii[0].e.r) if (C >= aii[0].s.c && C <= aii[0].e.c) {\n              p.F = encode_range(aii[0]);\n              af = true;\n            }\n          }\n          if (!af && val.length > 3) p.f = val[3];\n        }\n        if (refguess.s.r > row.r) refguess.s.r = row.r;\n        if (refguess.s.c > C) refguess.s.c = C;\n        if (refguess.e.r < row.r) refguess.e.r = row.r;\n        if (refguess.e.c < C) refguess.e.c = C;\n        if (opts.cellDates && cf && p.t == 'n' && fmt_is_date(table_fmt[cf.numFmtId])) {\n          var _d = SSF_parse_date_code(p.v + date1904);\n          if (_d) {\n            p.t = 'd';\n            p.v = new Date(Date.UTC(_d.y, _d.m - 1, _d.d, _d.H, _d.M, _d.S, _d.u));\n          }\n        }\n        if (cm) {\n          if (cm.type == 'XLDAPR') p.D = true;\n          cm = void 0;\n        }\n        break;\n      case 0x0001: /* 'BrtCellBlank' */\n      case 0x000C:\n        /* 'BrtShortBlank' */\n        if (!opts.sheetStubs || pass) break;\n        p = {\n          t: 'z',\n          v: void 0\n        } /*:any*/;\n        C = val[0].c == -1 ? C + 1 : val[0].c;\n        if (opts.dense) {\n          if (!s[\"!data\"][R]) s[\"!data\"][R] = [];\n          s[\"!data\"][R][C] = p;\n        } else s[encode_col(C) + rr] = p;\n        if (refguess.s.r > row.r) refguess.s.r = row.r;\n        if (refguess.s.c > C) refguess.s.c = C;\n        if (refguess.e.r < row.r) refguess.e.r = row.r;\n        if (refguess.e.c < C) refguess.e.c = C;\n        if (cm) {\n          if (cm.type == 'XLDAPR') p.D = true;\n          cm = void 0;\n        }\n        break;\n      case 0x00B0:\n        /* 'BrtMergeCell' */\n        merges.push(val);\n        break;\n      case 0x0031:\n        {\n          /* 'BrtCellMeta' */\n          cm = ((opts.xlmeta || {}).Cell || [])[val - 1];\n        }\n        break;\n      case 0x01EE:\n        /* 'BrtHLink' */\n        var rel = rels['!id'][val.relId];\n        if (rel) {\n          val.Target = rel.Target;\n          if (val.loc) val.Target += \"#\" + val.loc;\n          val.Rel = rel;\n        } else if (val.relId == '') {\n          val.Target = \"#\" + val.loc;\n        }\n        for (R = val.rfx.s.r; R <= val.rfx.e.r; ++R) for (C = val.rfx.s.c; C <= val.rfx.e.c; ++C) {\n          if (opts.dense) {\n            if (!s[\"!data\"][R]) s[\"!data\"][R] = [];\n            if (!s[\"!data\"][R][C]) s[\"!data\"][R][C] = {\n              t: 'z',\n              v: undefined\n            };\n            s[\"!data\"][R][C].l = val;\n          } else {\n            addr = encode_col(C) + encode_row(R);\n            if (!s[addr]) s[addr] = {\n              t: 'z',\n              v: undefined\n            };\n            s[addr].l = val;\n          }\n        }\n        break;\n      case 0x01AA:\n        /* 'BrtArrFmla' */\n        if (!opts.cellFormula) break;\n        arrayf.push(val);\n        cell = opts.dense ? s[\"!data\"][R][C] : s[encode_col(C) + rr] /*:any*/;\n        cell.f = stringify_formula(val[1], refguess, {\n          r: row.r,\n          c: C\n        }, supbooks, opts);\n        cell.F = encode_range(val[0]);\n        break;\n      case 0x01AB:\n        /* 'BrtShrFmla' */\n        if (!opts.cellFormula) break;\n        sharedf[encode_cell(val[0].s)] = val[1];\n        cell = opts.dense ? s[\"!data\"][R][C] : s[encode_col(C) + rr];\n        cell.f = stringify_formula(val[1], refguess, {\n          r: row.r,\n          c: C\n        }, supbooks, opts);\n        break;\n\n      /* identical to 'ColInfo' in XLS */\n      case 0x003C:\n        /* 'BrtColInfo' */\n        if (!opts.cellStyles) break;\n        while (val.e >= val.s) {\n          colinfo[val.e--] = {\n            width: val.w / 256,\n            hidden: !!(val.flags & 0x01),\n            level: val.level\n          };\n          if (!seencol) {\n            seencol = true;\n            find_mdw_colw(val.w / 256);\n          }\n          process_col(colinfo[val.e + 1]);\n        }\n        break;\n      case 0x0227:\n        /* 'BrtLegacyDrawing' */\n        if (val) s[\"!legrel\"] = val;\n        break;\n      case 0x00A1:\n        /* 'BrtBeginAFilter' */\n        s['!autofilter'] = {\n          ref: encode_range(val)\n        };\n        break;\n      case 0x01DC:\n        /* 'BrtMargins' */\n        s['!margins'] = val;\n        break;\n      case 0x0093:\n        /* 'BrtWsProp' */\n        if (!wb.Sheets[idx]) wb.Sheets[idx] = {};\n        if (val.name) wb.Sheets[idx].CodeName = val.name;\n        if (val.above || val.left) s['!outline'] = {\n          above: val.above,\n          left: val.left\n        };\n        break;\n      case 0x0089:\n        /* 'BrtBeginWsView' */\n        if (!wb.Views) wb.Views = [{}];\n        if (!wb.Views[0]) wb.Views[0] = {};\n        if (val.RTL) wb.Views[0].RTL = true;\n        break;\n      case 0x01E5:\n        /* 'BrtWsFmtInfo' */\n        break;\n      case 0x0040: /* 'BrtDVal' */\n      case 0x041D:\n        /* 'BrtDVal14' */\n        break;\n      case 0x0097:\n        /* 'BrtPane' */\n        break;\n      case 0x0098: /* 'BrtSel' */\n      case 0x00AF: /* 'BrtAFilterDateGroupItem' */\n      case 0x0284: /* 'BrtActiveX' */\n      case 0x0271: /* 'BrtBigName' */\n      case 0x0232: /* 'BrtBkHim' */\n      case 0x018C: /* 'BrtBrk' */\n      case 0x0458: /* 'BrtCFIcon' */\n      case 0x047A: /* 'BrtCFRuleExt' */\n      case 0x01D7: /* 'BrtCFVO' */\n      case 0x041A: /* 'BrtCFVO14' */\n      case 0x0289: /* 'BrtCellIgnoreEC' */\n      case 0x0451: /* 'BrtCellIgnoreEC14' */\n      case 0x024D: /* 'BrtCellSmartTagProperty' */\n      case 0x025F: /* 'BrtCellWatch' */\n      case 0x0234: /* 'BrtColor' */\n      case 0x041F: /* 'BrtColor14' */\n      case 0x00A8: /* 'BrtColorFilter' */\n      case 0x00AE: /* 'BrtCustomFilter' */\n      case 0x049C: /* 'BrtCustomFilter14' */\n      case 0x01F3: /* 'BrtDRef' */\n      case 0x01FB: /* 'BrtDXF' */\n      case 0x0226: /* 'BrtDrawing' */\n      case 0x00AB: /* 'BrtDynamicFilter' */\n      case 0x00A7: /* 'BrtFilter' */\n      case 0x0499: /* 'BrtFilter14' */\n      case 0x00A9: /* 'BrtIconFilter' */\n      case 0x049D: /* 'BrtIconFilter14' */\n      case 0x0228: /* 'BrtLegacyDrawingHF' */\n      case 0x0295: /* 'BrtListPart' */\n      case 0x027F: /* 'BrtOleObject' */\n      case 0x01DE: /* 'BrtPageSetup' */\n      case 0x0219: /* 'BrtPhoneticInfo' */\n      case 0x01DD: /* 'BrtPrintOptions' */\n      case 0x0218: /* 'BrtRangeProtection' */\n      case 0x044F: /* 'BrtRangeProtection14' */\n      case 0x02A8: /* 'BrtRangeProtectionIso' */\n      case 0x0450: /* 'BrtRangeProtectionIso14' */\n      case 0x0400: /* 'BrtRwDescent' */\n      case 0x0297: /* 'BrtSheetCalcProp' */\n      case 0x0217: /* 'BrtSheetProtection' */\n      case 0x02A6: /* 'BrtSheetProtectionIso' */\n      case 0x01F8: /* 'BrtSlc' */\n      case 0x0413: /* 'BrtSparkline' */\n      case 0x01AC: /* 'BrtTable' */\n      case 0x00AA: /* 'BrtTop10Filter' */\n      case 0x0C00: /* 'BrtUid' */\n      case 0x0032: /* 'BrtValueMeta' */\n      case 0x0816: /* 'BrtWebExtension' */\n      case 0x0415:\n        /* 'BrtWsFmtInfoEx14' */\n        break;\n      case 0x0023:\n        /* 'BrtFRTBegin' */\n        pass = true;\n        break;\n      case 0x0024:\n        /* 'BrtFRTEnd' */\n        pass = false;\n        break;\n      case 0x0025:\n        /* 'BrtACBegin' */\n        pass = true;\n        break;\n      case 0x0026:\n        /* 'BrtACEnd' */\n        pass = false;\n        break;\n      default:\n        if (RR.T) ;else if (!pass || opts.WTF) throw new Error(\"Unexpected record 0x\" + RT.toString(16));\n    }\n  }, opts);\n  delete opts.supbooks;\n  delete opts['!row'];\n  if (!s[\"!ref\"] && (refguess.s.r < 2000000 || ref && (ref.e.r > 0 || ref.e.c > 0 || ref.s.r > 0 || ref.s.c > 0))) s[\"!ref\"] = encode_range(ref || refguess);\n  if (opts.sheetRows && s[\"!ref\"]) {\n    var tmpref = safe_decode_range(s[\"!ref\"]);\n    if (opts.sheetRows <= +tmpref.e.r) {\n      tmpref.e.r = opts.sheetRows - 1;\n      if (tmpref.e.r > refguess.e.r) tmpref.e.r = refguess.e.r;\n      if (tmpref.e.r < tmpref.s.r) tmpref.s.r = tmpref.e.r;\n      if (tmpref.e.c > refguess.e.c) tmpref.e.c = refguess.e.c;\n      if (tmpref.e.c < tmpref.s.c) tmpref.s.c = tmpref.e.c;\n      s[\"!fullref\"] = s[\"!ref\"];\n      s[\"!ref\"] = encode_range(tmpref);\n    }\n  }\n  if (merges.length > 0) s[\"!merges\"] = merges;\n  if (colinfo.length > 0) s[\"!cols\"] = colinfo;\n  if (rowinfo.length > 0) s[\"!rows\"] = rowinfo;\n  if (rels['!id'][s['!legrel']]) s['!legdrawel'] = rels['!id'][s['!legrel']];\n  return s;\n}\n\n/* TODO: something useful -- this is a stub */\nfunction write_ws_bin_cell(ba /*:BufArray*/, cell /*:Cell*/, R /*:number*/, C /*:number*/, opts, ws /*:Worksheet*/, last_seen /*:boolean*/, date1904 /*:boolean*/) /*:boolean*/{\n  var o /*:any*/ = {\n    r: R,\n    c: C\n  } /*:any*/;\n  if (cell.c) ws['!comments'].push([encode_cell(o), cell.c]);\n  if (cell.v === undefined) return false;\n  var vv = \"\";\n  switch (cell.t) {\n    case 'b':\n      vv = cell.v ? \"1\" : \"0\";\n      break;\n    case 'd':\n      // no BrtCellDate :(\n      cell = dup(cell);\n      cell.z = cell.z || table_fmt[14];\n      cell.v = datenum(parseDate$1(cell.v, date1904), date1904);\n      cell.t = 'n';\n      break;\n    /* falls through */\n    case 'n':\n    case 'e':\n      vv = '' + cell.v;\n      break;\n    default:\n      vv = cell.v;\n      break;\n  }\n  /* TODO: cell style */\n  o.s = get_cell_style(opts.cellXfs, cell, opts);\n  if (cell.l) ws['!links'].push([encode_cell(o), cell.l]);\n  switch (cell.t) {\n    case 's':\n    case 'str':\n      if (opts.bookSST) {\n        vv = get_sst_id(opts.Strings, cell.v == null ? \"\" : String(cell.v) /*:any*/, opts.revStrings);\n        o.t = \"s\";\n        o.v = vv;\n        if (last_seen) write_record(ba, 0x0012 /* BrtShortIsst */, write_BrtShortIsst(cell, o));else write_record(ba, 0x0007 /* BrtCellIsst */, write_BrtCellIsst(cell, o));\n      } else {\n        o.t = \"str\";\n        if (last_seen) write_record(ba, 0x0011 /* BrtShortSt */, write_BrtShortSt(cell, o));else write_record(ba, 0x0006 /* BrtCellSt */, write_BrtCellSt(cell, o));\n      }\n      return true;\n    case 'n':\n      /* TODO: determine threshold for Real vs RK */\n      if (cell.v == (cell.v | 0) && cell.v > -1000 && cell.v < 1000) {\n        if (last_seen) write_record(ba, 0x000D /* BrtShortRk */, write_BrtShortRk(cell, o));else write_record(ba, 0x0002 /* BrtCellRk */, write_BrtCellRk(cell, o));\n      } else if (isNaN(cell.v)) {\n        if (last_seen) write_record(ba, 0x000E /* BrtShortError */, write_BrtShortError({\n          t: \"e\",\n          v: 0x24\n        }, o)); // #NUM!\n        else write_record(ba, 0x0003 /* BrtCellError */, write_BrtCellError({\n          t: \"e\",\n          v: 0x24\n        }, o)); // #NUM!\n      } else if (!isFinite(cell.v)) {\n        if (last_seen) write_record(ba, 0x000E /* BrtShortError */, write_BrtShortError({\n          t: \"e\",\n          v: 0x07\n        }, o)); // #DIV/0!\n        else write_record(ba, 0x0003 /* BrtCellError */, write_BrtCellError({\n          t: \"e\",\n          v: 0x07\n        }, o)); // #DIV/0!\n      } else {\n        if (last_seen) write_record(ba, 0x0010 /* BrtShortReal */, write_BrtShortReal(cell, o));else write_record(ba, 0x0005 /* BrtCellReal */, write_BrtCellReal(cell, o));\n      }\n      return true;\n    case 'b':\n      o.t = \"b\";\n      if (last_seen) write_record(ba, 0x000F /* BrtShortBool */, write_BrtShortBool(cell, o));else write_record(ba, 0x0004 /* BrtCellBool */, write_BrtCellBool(cell, o));\n      return true;\n    case 'e':\n      o.t = \"e\";\n      if (last_seen) write_record(ba, 0x000E /* BrtShortError */, write_BrtShortError(cell, o));else write_record(ba, 0x0003 /* BrtCellError */, write_BrtCellError(cell, o));\n      return true;\n  }\n  if (last_seen) write_record(ba, 0x000C /* BrtShortBlank */, write_BrtShortBlank(cell, o));else write_record(ba, 0x0001 /* BrtCellBlank */, write_BrtCellBlank(cell, o));\n  return true;\n}\nfunction write_CELLTABLE(ba, ws /*:Worksheet*/, idx /*:number*/, opts, wb /*:Workbook*/) {\n  var range = safe_decode_range(ws['!ref'] || \"A1\"),\n    ref,\n    rr = \"\",\n    cols /*:Array<string>*/ = [];\n  var date1904 = (((wb || {}).Workbook || {}).WBProps || {}).date1904;\n  write_record(ba, 0x0091 /* BrtBeginSheetData */);\n  var dense = ws[\"!data\"] != null;\n  var cap = range.e.r;\n  if (ws['!rows']) cap = Math.max(range.e.r, ws['!rows'].length - 1);\n  for (var R = range.s.r; R <= cap; ++R) {\n    rr = encode_row(R);\n    /* [ACCELLTABLE] */\n    /* BrtRowHdr */\n    write_row_header(ba, ws, range, R);\n    var last_seen = false;\n    if (R <= range.e.r) for (var C = range.s.c; C <= range.e.c; ++C) {\n      /* *16384CELL */\n      if (R === range.s.r) cols[C] = encode_col(C);\n      ref = cols[C] + rr;\n      var cell = dense ? (ws[\"!data\"][R] || [])[C] : ws[ref];\n      if (!cell) {\n        last_seen = false;\n        continue;\n      }\n      /* write cell */\n      last_seen = write_ws_bin_cell(ba, cell, R, C, opts, ws, last_seen, date1904);\n    }\n  }\n  write_record(ba, 0x0092 /* BrtEndSheetData */);\n}\n\nfunction write_MERGECELLS(ba, ws /*:Worksheet*/) {\n  if (!ws || !ws['!merges']) return;\n  write_record(ba, 0x00B1 /* BrtBeginMergeCells */, write_BrtBeginMergeCells(ws['!merges'].length));\n  ws['!merges'].forEach(function (m) {\n    write_record(ba, 0x00B0 /* BrtMergeCell */, write_BrtMergeCell(m));\n  });\n  write_record(ba, 0x00B2 /* BrtEndMergeCells */);\n}\n\nfunction write_COLINFOS(ba, ws /*:Worksheet*/ /*::, idx:number, opts, wb:Workbook*/) {\n  if (!ws || !ws['!cols']) return;\n  write_record(ba, 0x0186 /* BrtBeginColInfos */);\n  ws['!cols'].forEach(function (m, i) {\n    if (m) write_record(ba, 0x003C /* 'BrtColInfo' */, write_BrtColInfo(i, m));\n  });\n  write_record(ba, 0x0187 /* BrtEndColInfos */);\n}\n\nfunction write_IGNOREECS(ba, ws /*:Worksheet*/) {\n  if (!ws || !ws['!ref']) return;\n  write_record(ba, 0x0288 /* BrtBeginCellIgnoreECs */);\n  write_record(ba, 0x0289 /* BrtCellIgnoreEC */, write_BrtCellIgnoreEC(safe_decode_range(ws['!ref'])));\n  write_record(ba, 0x028A /* BrtEndCellIgnoreECs */);\n}\n\nfunction write_HLINKS(ba, ws /*:Worksheet*/, rels) {\n  /* *BrtHLink */\n  ws['!links'].forEach(function (l) {\n    if (!l[1].Target) return;\n    var rId = add_rels(rels, -1, l[1].Target.replace(/#.*$/, \"\"), RELS.HLINK);\n    write_record(ba, 0x01EE /* BrtHLink */, write_BrtHLink(l, rId));\n  });\n  delete ws['!links'];\n}\nfunction write_LEGACYDRAWING(ba, ws /*:Worksheet*/, idx /*:number*/, rels) {\n  /* [BrtLegacyDrawing] */\n  if (ws['!comments'].length > 0) {\n    var rId = add_rels(rels, -1, \"../drawings/vmlDrawing\" + (idx + 1) + \".vml\", RELS.VML);\n    write_record(ba, 0x0227 /* BrtLegacyDrawing */, write_RelID(\"rId\" + rId));\n    ws['!legacy'] = rId;\n  }\n}\nfunction write_AUTOFILTER(ba, ws, wb, idx) {\n  if (!ws['!autofilter']) return;\n  var data = ws['!autofilter'];\n  var ref = typeof data.ref === \"string\" ? data.ref : encode_range(data.ref);\n\n  /* Update FilterDatabase defined name for the worksheet */\n  if (!wb.Workbook) wb.Workbook = {\n    Sheets: []\n  } /*:any*/;\n  if (!wb.Workbook.Names) wb.Workbook.Names = [];\n  var names /*: Array<any> */ = wb.Workbook.Names;\n  var range = decode_range(ref);\n  if (range.s.r == range.e.r) {\n    range.e.r = decode_range(ws[\"!ref\"]).e.r;\n    ref = encode_range(range);\n  }\n  for (var i = 0; i < names.length; ++i) {\n    var name = names[i];\n    if (name.Name != '_xlnm._FilterDatabase') continue;\n    if (name.Sheet != idx) continue;\n    name.Ref = formula_quote_sheet_name(wb.SheetNames[idx]) + \"!\" + fix_range(ref);\n    break;\n  }\n  if (i == names.length) names.push({\n    Name: '_xlnm._FilterDatabase',\n    Sheet: idx,\n    Ref: formula_quote_sheet_name(wb.SheetNames[idx]) + \"!\" + fix_range(ref)\n  });\n  write_record(ba, 0x00A1 /* BrtBeginAFilter */, write_UncheckedRfX(safe_decode_range(ref)));\n  /* *FILTERCOLUMN */\n  /* [SORTSTATE] */\n  /* BrtEndAFilter */\n  write_record(ba, 0x00A2 /* BrtEndAFilter */);\n}\n\nfunction write_WSVIEWS2(ba, ws, Workbook) {\n  write_record(ba, 0x0085 /* BrtBeginWsViews */);\n  {\n    /* 1*WSVIEW2 */\n    /* [ACUID] */\n    write_record(ba, 0x0089 /* BrtBeginWsView */, write_BrtBeginWsView(ws, Workbook));\n    /* [BrtPane] */\n    /* *4BrtSel */\n    /* *4SXSELECT */\n    /* *FRT */\n    write_record(ba, 0x008A /* BrtEndWsView */);\n  }\n  /* *FRT */\n  write_record(ba, 0x0086 /* BrtEndWsViews */);\n}\n\nfunction write_SHEETPROTECT(ba, ws) {\n  if (!ws['!protect']) return;\n  /* [BrtSheetProtectionIso] */\n  write_record(ba, 0x0217 /* BrtSheetProtection */, write_BrtSheetProtection(ws['!protect']));\n}\nfunction write_ws_bin(idx /*:number*/, opts, wb /*:Workbook*/, rels) {\n  var ba = buf_array();\n  var s = wb.SheetNames[idx],\n    ws = wb.Sheets[s] || {};\n  var c /*:string*/ = s;\n  try {\n    if (wb && wb.Workbook) c = wb.Workbook.Sheets[idx].CodeName || c;\n  } catch (e) {}\n  var r = safe_decode_range(ws['!ref'] || \"A1\");\n  if (r.e.c > 0x3FFF || r.e.r > 0xFFFFF) {\n    if (opts.WTF) throw new Error(\"Range \" + (ws['!ref'] || \"A1\") + \" exceeds format limit A1:XFD1048576\");\n    r.e.c = Math.min(r.e.c, 0x3FFF);\n    r.e.r = Math.min(r.e.c, 0xFFFFF);\n  }\n  ws['!links'] = [];\n  /* passed back to write_zip and removed there */\n  ws['!comments'] = [];\n  write_record(ba, 0x0081 /* BrtBeginSheet */);\n  if (wb.vbaraw || ws['!outline']) write_record(ba, 0x0093 /* BrtWsProp */, write_BrtWsProp(c, ws['!outline']));\n  write_record(ba, 0x0094 /* BrtWsDim */, write_BrtWsDim(r));\n  write_WSVIEWS2(ba, ws, wb.Workbook);\n  write_COLINFOS(ba, ws);\n  write_CELLTABLE(ba, ws, idx, opts, wb);\n  /* [BrtSheetCalcProp] */\n  write_SHEETPROTECT(ba, ws);\n  /* *([BrtRangeProtectionIso] BrtRangeProtection) */\n  /* [SCENMAN] */\n  write_AUTOFILTER(ba, ws, wb, idx);\n  /* [SORTSTATE] */\n  /* [DCON] */\n  /* [USERSHVIEWS] */\n  write_MERGECELLS(ba, ws);\n  /* [BrtPhoneticInfo] */\n  /* *CONDITIONALFORMATTING */\n  /* [DVALS] */\n  write_HLINKS(ba, ws, rels);\n  /* [BrtPrintOptions] */\n  if (ws['!margins']) write_record(ba, 0x01DC /* BrtMargins */, write_BrtMargins(ws['!margins']));\n  /* [BrtPageSetup] */\n  /* [HEADERFOOTER] */\n  /* [RWBRK] */\n  /* [COLBRK] */\n  /* *BrtBigName */\n  /* [CELLWATCHES] */\n  if (!opts || opts.ignoreEC || opts.ignoreEC == void 0) write_IGNOREECS(ba, ws);\n  /* [SMARTTAGS] */\n  /* [BrtDrawing] */\n  write_LEGACYDRAWING(ba, ws, idx, rels);\n  /* [BrtLegacyDrawingHF] */\n  /* [BrtBkHim] */\n  /* [OLEOBJECTS] */\n  /* [ACTIVEXCONTROLS] */\n  /* [WEBPUBITEMS] */\n  /* [LISTPARTS] */\n  /* FRTWORKSHEET */\n  write_record(ba, 0x0082 /* BrtEndSheet */);\n  return ba.end();\n}\nfunction parse_Cache(data /*:string*/) /*:[Array<number|string>, string, ?string]*/{\n  var col /*:Array<number|string>*/ = [];\n  var num = data.match(/^<c:numCache>/);\n  var f;\n\n  /* 21.2.2.150 pt CT_NumVal */\n  (data.match(/<c:pt idx=\"(\\d*)\">(.*?)<\\/c:pt>/mg) || []).forEach(function (pt) {\n    var q = pt.match(/<c:pt idx=\"(\\d*?)\"><c:v>(.*)<\\/c:v><\\/c:pt>/);\n    if (!q) return;\n    col[+q[1]] = num ? +q[2] : q[2];\n  });\n\n  /* 21.2.2.71 formatCode CT_Xstring */\n  var nf = unescapexml((data.match(/<c:formatCode>([\\s\\S]*?)<\\/c:formatCode>/) || [\"\", \"General\"])[1]);\n  (data.match(/<c:f>(.*?)<\\/c:f>/mg) || []).forEach(function (F) {\n    f = F.replace(/<.*?>/g, \"\");\n  });\n  return [col, nf, f];\n}\n\n/* 21.2 DrawingML - Charts */\nfunction parse_chart(data /*:?string*/, name /*:string*/, opts, rels, wb, csheet) {\n  var cs /*:Worksheet*/ = csheet || {\n    \"!type\": \"chart\"\n  } /*:any*/;\n  if (!data) return csheet;\n  /* 21.2.2.27 chart CT_Chart */\n\n  var C = 0,\n    R = 0,\n    col = \"A\";\n  var refguess = {\n    s: {\n      r: 2000000,\n      c: 2000000\n    },\n    e: {\n      r: 0,\n      c: 0\n    }\n  };\n\n  /* 21.2.2.120 numCache CT_NumData */\n  (data.match(/<c:numCache>[\\s\\S]*?<\\/c:numCache>/gm) || []).forEach(function (nc) {\n    var cache = parse_Cache(nc);\n    refguess.s.r = refguess.s.c = 0;\n    refguess.e.c = C;\n    col = encode_col(C);\n    cache[0].forEach(function (n, i) {\n      if (cs[\"!data\"]) {\n        if (!cs[\"!data\"][i]) cs[\"!data\"][i] = [];\n        cs[\"!data\"][i][C] = {\n          t: 'n',\n          v: n,\n          z: cache[1]\n        };\n      } else cs[col + encode_row(i)] = {\n        t: 'n',\n        v: n,\n        z: cache[1]\n      };\n      R = i;\n    });\n    if (refguess.e.r < R) refguess.e.r = R;\n    ++C;\n  });\n  if (C > 0) cs[\"!ref\"] = encode_range(refguess);\n  return cs;\n}\n/* 18.3 Worksheets also covers Chartsheets */\nfunction parse_cs_xml(data /*:?string*/, opts, idx /*:number*/, rels, wb /*::, themes, styles*/) /*:Worksheet*/{\n  if (!data) return data;\n  /* 18.3.1.12 chartsheet CT_ChartSheet */\n  if (!rels) rels = {\n    '!id': {}\n  };\n  var s = {\n    '!type': \"chart\",\n    '!drawel': null,\n    '!rel': \"\"\n  } /*:any*/;\n  var m;\n\n  /* 18.3.1.83 sheetPr CT_ChartsheetPr */\n  var sheetPr = data.match(sheetprregex);\n  if (sheetPr) parse_ws_xml_sheetpr(sheetPr[0], s, wb, idx);\n\n  /* 18.3.1.36 drawing CT_Drawing */\n  if (m = data.match(/drawing r:id=\"(.*?)\"/)) s['!rel'] = m[1];\n  if (rels['!id'][s['!rel']]) s['!drawel'] = rels['!id'][s['!rel']];\n  return s;\n}\n//function write_cs_xml(idx/*:number*/, opts, wb/*:Workbook*/, rels)/*:string*/ {\n//\tvar o = [XML_HEADER, writextag('chartsheet', null, {\n//\t\t'xmlns': XMLNS_main[0],\n//\t\t'xmlns:r': XMLNS.r\n//\t})];\n//\to[o.length] = writextag(\"drawing\", null, {\"r:id\": \"rId1\"});\n//\tadd_rels(rels, -1, \"../drawings/drawing\" + (idx+1) + \".xml\", RELS.DRAW);\n//\tif(o.length>2) { o[o.length] = ('</chartsheet>'); o[1]=o[1].replace(\"/>\",\">\"); }\n//\treturn o.join(\"\");\n//}\n\n/* [MS-XLSB] 2.4.331 BrtCsProp */\nfunction parse_BrtCsProp(data, length /*:number*/) {\n  data.l += 10;\n  var name = parse_XLWideString(data);\n  return {\n    name: name\n  };\n}\n\n/* [MS-XLSB] 2.1.7.7 Chart Sheet */\nfunction parse_cs_bin(data, opts, idx /*:number*/, rels, wb /*::, themes, styles*/) /*:Worksheet*/{\n  if (!data) return data;\n  if (!rels) rels = {\n    '!id': {}\n  };\n  var s = {\n    '!type': \"chart\",\n    '!drawel': null,\n    '!rel': \"\"\n  };\n  var pass = false;\n  recordhopper(data, function cs_parse(val, R, RT) {\n    switch (RT) {\n      case 0x0226:\n        /* 'BrtDrawing' */\n        s['!rel'] = val;\n        break;\n      case 0x028B:\n        /* 'BrtCsProp' */\n        if (!wb.Sheets[idx]) wb.Sheets[idx] = {};\n        if (val.name) wb.Sheets[idx].CodeName = val.name;\n        break;\n      case 0x0232: /* 'BrtBkHim' */\n      case 0x028C: /* 'BrtCsPageSetup' */\n      case 0x029D: /* 'BrtCsProtection' */\n      case 0x02A7: /* 'BrtCsProtectionIso' */\n      case 0x0227: /* 'BrtLegacyDrawing' */\n      case 0x0228: /* 'BrtLegacyDrawingHF' */\n      case 0x01DC: /* 'BrtMargins' */\n      case 0x0C00:\n        /* 'BrtUid' */\n        break;\n      case 0x0023:\n        /* 'BrtFRTBegin' */\n        pass = true;\n        break;\n      case 0x0024:\n        /* 'BrtFRTEnd' */\n        pass = false;\n        break;\n      case 0x0025:\n        /* 'BrtACBegin' */\n        break;\n      case 0x0026:\n        /* 'BrtACEnd' */\n        break;\n      default:\n        if (R.T > 0) ;else if (R.T < 0) ;else if (!pass || opts.WTF) throw new Error(\"Unexpected record 0x\" + RT.toString(16));\n    }\n  }, opts);\n  if (rels['!id'][s['!rel']]) s['!drawel'] = rels['!id'][s['!rel']];\n  return s;\n}\n//function write_cs_bin(/*::idx:number, opts, wb:Workbook, rels*/) {\n//\tvar ba = buf_array();\n//\twrite_record(ba, 0x0081 /* BrtBeginSheet */);\n//\t/* [BrtCsProp] */\n//\t/* CSVIEWS */\n//\t/* [[BrtCsProtectionIso] BrtCsProtection] */\n//\t/* [USERCSVIEWS] */\n//\t/* [BrtMargins] */\n//\t/* [BrtCsPageSetup] */\n//\t/* [HEADERFOOTER] */\n//\t/* BrtDrawing */\n//\t/* [BrtLegacyDrawing] */\n//\t/* [BrtLegacyDrawingHF] */\n//\t/* [BrtBkHim] */\n//\t/* [WEBPUBITEMS] */\n//\t/* FRTCHARTSHEET */\n//\twrite_record(ba, 0x0082 /* BrtEndSheet */);\n//\treturn ba.end();\n//}\n/* 18.2.28 (CT_WorkbookProtection) Defaults */\nvar WBPropsDef = [['allowRefreshQuery', false, \"bool\"], ['autoCompressPictures', true, \"bool\"], ['backupFile', false, \"bool\"], ['checkCompatibility', false, \"bool\"], ['CodeName', ''], ['date1904', false, \"bool\"], ['defaultThemeVersion', 0, \"int\"], ['filterPrivacy', false, \"bool\"], ['hidePivotFieldList', false, \"bool\"], ['promptedSolutions', false, \"bool\"], ['publishItems', false, \"bool\"], ['refreshAllConnections', false, \"bool\"], ['saveExternalLinkValues', true, \"bool\"], ['showBorderUnselectedTables', true, \"bool\"], ['showInkAnnotation', true, \"bool\"], ['showObjects', 'all'], ['showPivotChartFilter', false, \"bool\"], ['updateLinks', 'userSet']];\n\n/* 18.2.30 (CT_BookView) Defaults */\nvar WBViewDef = [['activeTab', 0, \"int\"], ['autoFilterDateGrouping', true, \"bool\"], ['firstSheet', 0, \"int\"], ['minimized', false, \"bool\"], ['showHorizontalScroll', true, \"bool\"], ['showSheetTabs', true, \"bool\"], ['showVerticalScroll', true, \"bool\"], ['tabRatio', 600, \"int\"], ['visibility', 'visible']\n//window{Height,Width}, {x,y}Window\n];\n\n/* 18.2.19 (CT_Sheet) Defaults */\nvar SheetDef = [\n  //['state', 'visible']\n];\n\n/* 18.2.2  (CT_CalcPr) Defaults */\nvar CalcPrDef = [['calcCompleted', 'true'], ['calcMode', 'auto'], ['calcOnSave', 'true'], ['concurrentCalc', 'true'], ['fullCalcOnLoad', 'false'], ['fullPrecision', 'true'], ['iterate', 'false'], ['iterateCount', '100'], ['iterateDelta', '0.001'], ['refMode', 'A1']];\n\n/* 18.2.3 (CT_CustomWorkbookView) Defaults */\n/*var CustomWBViewDef = [\n\t['autoUpdate', 'false'],\n\t['changesSavedWin', 'false'],\n\t['includeHiddenRowCol', 'true'],\n\t['includePrintSettings', 'true'],\n\t['maximized', 'false'],\n\t['minimized', 'false'],\n\t['onlySync', 'false'],\n\t['personalView', 'false'],\n\t['showComments', 'commIndicator'],\n\t['showFormulaBar', 'true'],\n\t['showHorizontalScroll', 'true'],\n\t['showObjects', 'all'],\n\t['showSheetTabs', 'true'],\n\t['showStatusbar', 'true'],\n\t['showVerticalScroll', 'true'],\n\t['tabRatio', '600'],\n\t['xWindow', '0'],\n\t['yWindow', '0']\n];*/\n\nfunction push_defaults_array(target, defaults) {\n  for (var j = 0; j != target.length; ++j) {\n    var w = target[j];\n    for (var i = 0; i != defaults.length; ++i) {\n      var z = defaults[i];\n      if (w[z[0]] == null) w[z[0]] = z[1];else switch (z[2]) {\n        case \"bool\":\n          if (typeof w[z[0]] == \"string\") w[z[0]] = parsexmlbool(w[z[0]]);\n          break;\n        case \"int\":\n          if (typeof w[z[0]] == \"string\") w[z[0]] = parseInt(w[z[0]], 10);\n          break;\n      }\n    }\n  }\n}\nfunction push_defaults(target, defaults) {\n  for (var i = 0; i != defaults.length; ++i) {\n    var z = defaults[i];\n    if (target[z[0]] == null) target[z[0]] = z[1];else switch (z[2]) {\n      case \"bool\":\n        if (typeof target[z[0]] == \"string\") target[z[0]] = parsexmlbool(target[z[0]]);\n        break;\n      case \"int\":\n        if (typeof target[z[0]] == \"string\") target[z[0]] = parseInt(target[z[0]], 10);\n        break;\n    }\n  }\n}\nfunction parse_wb_defaults(wb) {\n  push_defaults(wb.WBProps, WBPropsDef);\n  push_defaults(wb.CalcPr, CalcPrDef);\n  push_defaults_array(wb.WBView, WBViewDef);\n  push_defaults_array(wb.Sheets, SheetDef);\n  _ssfopts.date1904 = parsexmlbool(wb.WBProps.date1904);\n}\nfunction safe1904(wb /*:Workbook*/) /*:string*/{\n  /* TODO: store date1904 somewhere else */\n  if (!wb.Workbook) return \"false\";\n  if (!wb.Workbook.WBProps) return \"false\";\n  return parsexmlbool(wb.Workbook.WBProps.date1904) ? \"true\" : \"false\";\n}\nvar badchars = /*#__PURE__*/\":][*?\\/\\\\\".split(\"\");\nfunction check_ws_name(n /*:string*/, safe /*:?boolean*/) /*:boolean*/{\n  try {\n    if (n == \"\") throw new Error(\"Sheet name cannot be blank\");\n    if (n.length > 31) throw new Error(\"Sheet name cannot exceed 31 chars\");\n    if (n.charCodeAt(0) == 0x27 || n.charCodeAt(n.length - 1) == 0x27) throw new Error(\"Sheet name cannot start or end with apostrophe (')\");\n    if (n.toLowerCase() == \"history\") throw new Error(\"Sheet name cannot be 'History'\");\n    badchars.forEach(function (c) {\n      if (n.indexOf(c) == -1) return;\n      throw new Error(\"Sheet name cannot contain : \\\\ / ? * [ ]\");\n    });\n  } catch (e) {\n    if (safe) return false;\n    throw e;\n  }\n  return true;\n}\nfunction check_wb_names(N, S, codes) {\n  N.forEach(function (n, i) {\n    check_ws_name(n);\n    for (var j = 0; j < i; ++j) if (n == N[j]) throw new Error(\"Duplicate Sheet Name: \" + n);\n    if (codes) {\n      var cn = S && S[i] && S[i].CodeName || n;\n      if (cn.charCodeAt(0) == 95 && cn.length > 22) throw new Error(\"Bad Code Name: Worksheet\" + cn);\n    }\n  });\n}\nfunction check_wb(wb) {\n  if (!wb || !wb.SheetNames || !wb.Sheets) throw new Error(\"Invalid Workbook\");\n  if (!wb.SheetNames.length) throw new Error(\"Workbook is empty\");\n  var Sheets = wb.Workbook && wb.Workbook.Sheets || [];\n  check_wb_names(wb.SheetNames, Sheets, !!wb.vbaraw);\n  for (var i = 0; i < wb.SheetNames.length; ++i) check_ws(wb.Sheets[wb.SheetNames[i]], wb.SheetNames[i], i);\n  wb.SheetNames.forEach(function (n, i) {\n    var ws = wb.Sheets[n];\n    if (!ws || !ws[\"!autofilter\"]) return;\n    var DN;\n    if (!wb.Workbook) wb.Workbook = {};\n    if (!wb.Workbook.Names) wb.Workbook.Names = [];\n    wb.Workbook.Names.forEach(function (dn) {\n      if (dn.Name == \"_xlnm._FilterDatabase\" && dn.Sheet == i) DN = dn;\n    });\n    var nn = formula_quote_sheet_name(n) + \"!\" + fix_range(ws[\"!autofilter\"].ref);\n    if (DN) DN.Ref = nn;else wb.Workbook.Names.push({\n      Name: \"_xlnm._FilterDatabase\",\n      Sheet: i,\n      Ref: nn\n    });\n  });\n  /* TODO: validate workbook */\n}\n/* 18.2 Workbook */\nvar wbnsregex = /<\\w+:workbook/;\nfunction parse_wb_xml(data, opts) /*:WorkbookFile*/{\n  if (!data) throw new Error(\"Could not find file\");\n  var wb = /*::(*/{\n    AppVersion: {},\n    WBProps: {},\n    WBView: [],\n    Sheets: [],\n    CalcPr: {},\n    Names: [],\n    xmlns: \"\"\n  } /*::)*/;\n  var pass = false,\n    xmlns = \"xmlns\";\n  var dname = {},\n    dnstart = 0;\n  data.replace(tagregex, function xml_wb(x, idx) {\n    var y /*:any*/ = parsexmltag(x);\n    switch (strip_ns(y[0])) {\n      case '<?xml':\n        break;\n\n      /* 18.2.27 workbook CT_Workbook 1 */\n      case '<workbook':\n        if (x.match(wbnsregex)) xmlns = \"xmlns\" + x.match(/<(\\w+):/)[1];\n        wb.xmlns = y[xmlns];\n        break;\n      case '</workbook>':\n        break;\n\n      /* 18.2.13 fileVersion CT_FileVersion ? */\n      case '<fileVersion':\n        delete y[0];\n        wb.AppVersion = y;\n        break;\n      case '<fileVersion/>':\n      case '</fileVersion>':\n        break;\n\n      /* 18.2.12 fileSharing CT_FileSharing ? */\n      case '<fileSharing':\n        break;\n      case '<fileSharing/>':\n        break;\n\n      /* 18.2.28 workbookPr CT_WorkbookPr ? */\n      case '<workbookPr':\n      case '<workbookPr/>':\n        WBPropsDef.forEach(function (w) {\n          if (y[w[0]] == null) return;\n          switch (w[2]) {\n            case \"bool\":\n              wb.WBProps[w[0]] = parsexmlbool(y[w[0]]);\n              break;\n            case \"int\":\n              wb.WBProps[w[0]] = parseInt(y[w[0]], 10);\n              break;\n            default:\n              wb.WBProps[w[0]] = y[w[0]];\n          }\n        });\n        if (y.codeName) wb.WBProps.CodeName = utf8read(y.codeName);\n        break;\n      case '</workbookPr>':\n        break;\n\n      /* 18.2.29 workbookProtection CT_WorkbookProtection ? */\n      case '<workbookProtection':\n        break;\n      case '<workbookProtection/>':\n        break;\n\n      /* 18.2.1  bookViews CT_BookViews ? */\n      case '<bookViews':\n      case '<bookViews>':\n      case '</bookViews>':\n        break;\n      /* 18.2.30   workbookView CT_BookView + */\n      case '<workbookView':\n      case '<workbookView/>':\n        delete y[0];\n        wb.WBView.push(y);\n        break;\n      case '</workbookView>':\n        break;\n\n      /* 18.2.20 sheets CT_Sheets 1 */\n      case '<sheets':\n      case '<sheets>':\n      case '</sheets>':\n        break;\n      // aggregate sheet\n      /* 18.2.19   sheet CT_Sheet + */\n      case '<sheet':\n        switch (y.state) {\n          case \"hidden\":\n            y.Hidden = 1;\n            break;\n          case \"veryHidden\":\n            y.Hidden = 2;\n            break;\n          default:\n            y.Hidden = 0;\n        }\n        delete y.state;\n        y.name = unescapexml(utf8read(y.name));\n        delete y[0];\n        wb.Sheets.push(y);\n        break;\n      case '</sheet>':\n        break;\n\n      /* 18.2.15 functionGroups CT_FunctionGroups ? */\n      case '<functionGroups':\n      case '<functionGroups/>':\n        break;\n      /* 18.2.14   functionGroup CT_FunctionGroup + */\n      case '<functionGroup':\n        break;\n\n      /* 18.2.9  externalReferences CT_ExternalReferences ? */\n      case '<externalReferences':\n      case '</externalReferences>':\n      case '<externalReferences>':\n        break;\n      /* 18.2.8    externalReference CT_ExternalReference + */\n      case '<externalReference':\n        break;\n\n      /* 18.2.6  definedNames CT_DefinedNames ? */\n      case '<definedNames/>':\n        break;\n      case '<definedNames>':\n      case '<definedNames':\n        pass = true;\n        break;\n      case '</definedNames>':\n        pass = false;\n        break;\n      /* 18.2.5    definedName CT_DefinedName + */\n      case '<definedName':\n        {\n          dname = {};\n          dname.Name = utf8read(y.name);\n          if (y.comment) dname.Comment = y.comment;\n          if (y.localSheetId) dname.Sheet = +y.localSheetId;\n          if (parsexmlbool(y.hidden || \"0\")) dname.Hidden = true;\n          dnstart = idx + x.length;\n        }\n        break;\n      case '</definedName>':\n        {\n          dname.Ref = unescapexml(utf8read(data.slice(dnstart, idx)));\n          wb.Names.push(dname);\n        }\n        break;\n      case '<definedName/>':\n        break;\n\n      /* 18.2.2  calcPr CT_CalcPr ? */\n      case '<calcPr':\n        delete y[0];\n        wb.CalcPr = y;\n        break;\n      case '<calcPr/>':\n        delete y[0];\n        wb.CalcPr = y;\n        break;\n      case '</calcPr>':\n        break;\n\n      /* 18.2.16 oleSize CT_OleSize ? (ref required) */\n      case '<oleSize':\n        break;\n\n      /* 18.2.4  customWorkbookViews CT_CustomWorkbookViews ? */\n      case '<customWorkbookViews>':\n      case '</customWorkbookViews>':\n      case '<customWorkbookViews':\n        break;\n      /* 18.2.3  customWorkbookView CT_CustomWorkbookView + */\n      case '<customWorkbookView':\n      case '</customWorkbookView>':\n        break;\n\n      /* 18.2.18 pivotCaches CT_PivotCaches ? */\n      case '<pivotCaches>':\n      case '</pivotCaches>':\n      case '<pivotCaches':\n        break;\n      /* 18.2.17 pivotCache CT_PivotCache ? */\n      case '<pivotCache':\n        break;\n\n      /* 18.2.21 smartTagPr CT_SmartTagPr ? */\n      case '<smartTagPr':\n      case '<smartTagPr/>':\n        break;\n\n      /* 18.2.23 smartTagTypes CT_SmartTagTypes ? */\n      case '<smartTagTypes':\n      case '<smartTagTypes>':\n      case '</smartTagTypes>':\n        break;\n      /* 18.2.22 smartTagType CT_SmartTagType ? */\n      case '<smartTagType':\n        break;\n\n      /* 18.2.24 webPublishing CT_WebPublishing ? */\n      case '<webPublishing':\n      case '<webPublishing/>':\n        break;\n\n      /* 18.2.11 fileRecoveryPr CT_FileRecoveryPr ? */\n      case '<fileRecoveryPr':\n      case '<fileRecoveryPr/>':\n        break;\n\n      /* 18.2.26 webPublishObjects CT_WebPublishObjects ? */\n      case '<webPublishObjects>':\n      case '<webPublishObjects':\n      case '</webPublishObjects>':\n        break;\n      /* 18.2.25 webPublishObject CT_WebPublishObject ? */\n      case '<webPublishObject':\n        break;\n\n      /* 18.2.10 extLst CT_ExtensionList ? */\n      case '<extLst':\n      case '<extLst>':\n      case '</extLst>':\n      case '<extLst/>':\n        break;\n      /* 18.2.7  ext CT_Extension + */\n      case '<ext':\n        pass = true;\n        break;\n      //TODO: check with versions of excel\n      case '</ext>':\n        pass = false;\n        break;\n\n      /* Others */\n      case '<ArchID':\n        break;\n      case '<AlternateContent':\n      case '<AlternateContent>':\n        pass = true;\n        break;\n      case '</AlternateContent>':\n        pass = false;\n        break;\n\n      /* TODO */\n      case '<revisionPtr':\n        break;\n      default:\n        if (!pass && opts.WTF) throw new Error('unrecognized ' + y[0] + ' in workbook');\n    }\n    return x;\n  });\n  if (XMLNS_main.indexOf(wb.xmlns) === -1) throw new Error(\"Unknown Namespace: \" + wb.xmlns);\n  parse_wb_defaults(wb);\n  return wb;\n}\nfunction write_wb_xml(wb /*:Workbook*/ /*::, opts:?WriteOpts*/) /*:string*/{\n  var o = [XML_HEADER];\n  o[o.length] = writextag('workbook', null, {\n    'xmlns': XMLNS_main[0],\n    //'xmlns:mx': XMLNS.mx,\n    //'xmlns:s': XMLNS_main[0],\n    'xmlns:r': XMLNS.r\n  });\n  var write_names = wb.Workbook && (wb.Workbook.Names || []).length > 0;\n\n  /* fileVersion */\n  /* fileSharing */\n\n  var workbookPr /*:any*/ = {\n    codeName: \"ThisWorkbook\"\n  } /*:any*/;\n  if (wb.Workbook && wb.Workbook.WBProps) {\n    WBPropsDef.forEach(function (x) {\n      /*:: if(!wb.Workbook || !wb.Workbook.WBProps) throw \"unreachable\"; */\n      if (wb.Workbook.WBProps[x[0]] /*:any*/ == null) return;\n      if (wb.Workbook.WBProps[x[0]] /*:any*/ == x[1]) return;\n      workbookPr[x[0]] = wb.Workbook.WBProps[x[0]] /*:any*/;\n    });\n    /*:: if(!wb.Workbook || !wb.Workbook.WBProps) throw \"unreachable\"; */\n    if (wb.Workbook.WBProps.CodeName) {\n      workbookPr.codeName = wb.Workbook.WBProps.CodeName;\n      delete workbookPr.CodeName;\n    }\n  }\n  o[o.length] = writextag('workbookPr', null, workbookPr);\n\n  /* workbookProtection */\n\n  var sheets = wb.Workbook && wb.Workbook.Sheets || [];\n  var i = 0;\n\n  /* bookViews only written if first worksheet is hidden */\n  if (sheets && sheets[0] && !!sheets[0].Hidden) {\n    o[o.length] = \"<bookViews>\";\n    for (i = 0; i != wb.SheetNames.length; ++i) {\n      if (!sheets[i]) break;\n      if (!sheets[i].Hidden) break;\n    }\n    if (i == wb.SheetNames.length) i = 0;\n    o[o.length] = '<workbookView firstSheet=\"' + i + '\" activeTab=\"' + i + '\"/>';\n    o[o.length] = \"</bookViews>\";\n  }\n  o[o.length] = \"<sheets>\";\n  for (i = 0; i != wb.SheetNames.length; ++i) {\n    var sht = {\n      name: escapexml(wb.SheetNames[i].slice(0, 31))\n    } /*:any*/;\n    sht.sheetId = \"\" + (i + 1);\n    sht[\"r:id\"] = \"rId\" + (i + 1);\n    if (sheets[i]) switch (sheets[i].Hidden) {\n      case 1:\n        sht.state = \"hidden\";\n        break;\n      case 2:\n        sht.state = \"veryHidden\";\n        break;\n    }\n    o[o.length] = writextag('sheet', null, sht);\n  }\n  o[o.length] = \"</sheets>\";\n\n  /* functionGroups */\n  /* externalReferences */\n\n  if (write_names) {\n    o[o.length] = \"<definedNames>\";\n    if (wb.Workbook && wb.Workbook.Names) wb.Workbook.Names.forEach(function (n) {\n      var d /*:any*/ = {\n        name: n.Name\n      };\n      if (n.Comment) d.comment = n.Comment;\n      if (n.Sheet != null) d.localSheetId = \"\" + n.Sheet;\n      if (n.Hidden) d.hidden = \"1\";\n      if (!n.Ref) return;\n      o[o.length] = writextag('definedName', escapexml(n.Ref), d);\n    });\n    o[o.length] = \"</definedNames>\";\n  }\n\n  /* calcPr */\n  /* oleSize */\n  /* customWorkbookViews */\n  /* pivotCaches */\n  /* smartTagPr */\n  /* smartTagTypes */\n  /* webPublishing */\n  /* fileRecoveryPr */\n  /* webPublishObjects */\n  /* extLst */\n\n  if (o.length > 2) {\n    o[o.length] = '</workbook>';\n    o[1] = o[1].replace(\"/>\", \">\");\n  }\n  return o.join(\"\");\n}\n/* [MS-XLSB] 2.4.304 BrtBundleSh */\nfunction parse_BrtBundleSh(data, length /*:number*/) {\n  var z = {};\n  z.Hidden = data.read_shift(4); //hsState ST_SheetState\n  z.iTabID = data.read_shift(4);\n  z.strRelID = parse_RelID(data);\n  z.name = parse_XLWideString(data);\n  return z;\n}\nfunction write_BrtBundleSh(data, o) {\n  if (!o) o = new_buf(127);\n  o.write_shift(4, data.Hidden);\n  o.write_shift(4, data.iTabID);\n  write_RelID(data.strRelID, o);\n  write_XLWideString(data.name.slice(0, 31), o);\n  return o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.4.815 BrtWbProp */\nfunction parse_BrtWbProp(data, length) /*:WBProps*/{\n  var o /*:WBProps*/ = {} /*:any*/;\n  var flags = data.read_shift(4);\n  o.defaultThemeVersion = data.read_shift(4);\n  var strName = length > 8 ? parse_XLWideString(data) : \"\";\n  if (strName.length > 0) o.CodeName = strName;\n  o.autoCompressPictures = !!(flags & 0x10000);\n  o.backupFile = !!(flags & 0x40);\n  o.checkCompatibility = !!(flags & 0x1000);\n  o.date1904 = !!(flags & 0x01);\n  o.filterPrivacy = !!(flags & 0x08);\n  o.hidePivotFieldList = !!(flags & 0x400);\n  o.promptedSolutions = !!(flags & 0x10);\n  o.publishItems = !!(flags & 0x800);\n  o.refreshAllConnections = !!(flags & 0x40000);\n  o.saveExternalLinkValues = !!(flags & 0x80);\n  o.showBorderUnselectedTables = !!(flags & 0x04);\n  o.showInkAnnotation = !!(flags & 0x20);\n  o.showObjects = [\"all\", \"placeholders\", \"none\"][flags >> 13 & 0x03];\n  o.showPivotChartFilter = !!(flags & 0x8000);\n  o.updateLinks = [\"userSet\", \"never\", \"always\"][flags >> 8 & 0x03];\n  return o;\n}\nfunction write_BrtWbProp(data /*:?WBProps*/, o) {\n  if (!o) o = new_buf(72);\n  var flags = 0;\n  if (data) {\n    /* TODO: mirror parse_BrtWbProp fields */\n    if (data.date1904) flags |= 0x01;\n    if (data.filterPrivacy) flags |= 0x08;\n  }\n  o.write_shift(4, flags);\n  o.write_shift(4, 0);\n  write_XLSBCodeName(data && data.CodeName || \"ThisWorkbook\", o);\n  return o.slice(0, o.l);\n}\nfunction parse_BrtFRTArchID$(data, length) {\n  var o = {};\n  data.read_shift(4);\n  o.ArchID = data.read_shift(4);\n  data.l += length - 8;\n  return o;\n}\n\n/* [MS-XLSB] 2.4.687 BrtName */\nfunction parse_BrtName(data, length, opts) {\n  var end = data.l + length;\n  var flags = data.read_shift(4);\n  data.l += 1; //var chKey = data.read_shift(1);\n  var itab = data.read_shift(4);\n  var name = parse_XLNameWideString(data);\n  var formula = parse_XLSBNameParsedFormula(data, 0, opts);\n  var comment = parse_XLNullableWideString(data);\n  if (flags & 0x20) name = \"_xlnm.\" + name;\n  //if(0 /* fProc */) {\n  // unusedstring1: XLNullableWideString\n  // description: XLNullableWideString\n  // helpTopic: XLNullableWideString\n  // unusedstring2: XLNullableWideString\n  //}\n  data.l = end;\n  var out = {\n    Name: name,\n    Ptg: formula,\n    Flags: flags\n  } /*:any*/;\n  if (itab < 0xFFFFFFF) out.Sheet = itab;\n  if (comment) out.Comment = comment;\n  return out;\n}\nfunction write_BrtName(name, wb) {\n  var o = new_buf(9);\n  var flags = 0;\n  var dname = name.Name;\n  if (XLSLblBuiltIn.indexOf(dname) > -1) {\n    flags |= 0x20;\n    dname = dname.slice(6);\n  }\n  o.write_shift(4, flags); // flags\n  o.write_shift(1, 0); // chKey\n  o.write_shift(4, name.Sheet == null ? 0xFFFFFFFF : name.Sheet);\n  var arr = [o, write_XLWideString(dname), write_XLSBNameParsedFormula(name.Ref, wb)];\n  if (name.Comment) arr.push(write_XLNullableWideString(name.Comment));else {\n    var x = new_buf(4);\n    x.write_shift(4, 0xFFFFFFFF);\n    arr.push(x);\n  }\n\n  // if macro (flags & 0x0F):\n  // write_shift(4, 0xFFFFFFFF);\n  // write_XLNullableWideString(description)\n  // write_XLNullableWideString(helpTopic)\n  // write_shift(4, 0xFFFFFFFF);\n\n  return bconcat(arr);\n}\n\n/* [MS-XLSB] 2.1.7.61 Workbook */\nfunction parse_wb_bin(data, opts) /*:WorkbookFile*/{\n  var wb = {\n    AppVersion: {},\n    WBProps: {},\n    WBView: [],\n    Sheets: [],\n    CalcPr: {},\n    xmlns: \"\"\n  };\n  var state /*:Array<string>*/ = [];\n  var pass = false;\n  if (!opts) opts = {};\n  opts.biff = 12;\n  var Names = [];\n  var supbooks = [[]] /*:any*/;\n  supbooks.SheetNames = [];\n  supbooks.XTI = [];\n  XLSBRecordEnum[0x0010] = {\n    n: \"BrtFRTArchID$\",\n    f: parse_BrtFRTArchID$\n  };\n  recordhopper(data, function hopper_wb(val, R, RT) {\n    switch (RT) {\n      case 0x009C:\n        /* 'BrtBundleSh' */\n        supbooks.SheetNames.push(val.name);\n        wb.Sheets.push(val);\n        break;\n      case 0x0099:\n        /* 'BrtWbProp' */\n        wb.WBProps = val;\n        break;\n      case 0x0027:\n        /* 'BrtName' */\n        if (val.Sheet != null) opts.SID = val.Sheet;\n        val.Ref = stringify_formula(val.Ptg, null, null, supbooks, opts);\n        delete opts.SID;\n        delete val.Ptg;\n        Names.push(val);\n        break;\n      case 0x040C:\n        /* 'BrtNameExt' */break;\n      case 0x0165: /* 'BrtSupSelf' */\n      case 0x0166: /* 'BrtSupSame' */\n      case 0x0163: /* 'BrtSupBookSrc' */\n      case 0x029B:\n        /* 'BrtSupAddin' */\n        if (!supbooks[0].length) supbooks[0] = [RT, val];else supbooks.push([RT, val]);\n        supbooks[supbooks.length - 1].XTI = [];\n        break;\n      case 0x016A:\n        /* 'BrtExternSheet' */\n        if (supbooks.length === 0) {\n          supbooks[0] = [];\n          supbooks[0].XTI = [];\n        }\n        supbooks[supbooks.length - 1].XTI = supbooks[supbooks.length - 1].XTI.concat(val);\n        supbooks.XTI = supbooks.XTI.concat(val);\n        break;\n      case 0x0169:\n        /* 'BrtPlaceholderName' */\n        break;\n      case 0x0817: /* 'BrtAbsPath15' */\n      case 0x009E: /* 'BrtBookView' */\n      case 0x008F: /* 'BrtBeginBundleShs' */\n      case 0x0298: /* 'BrtBeginFnGroup' */\n      case 0x0161:\n        /* 'BrtBeginExternals' */\n        break;\n\n      /* case 'BrtModelTimeGroupingCalcCol' */\n      case 0x0C00: /* 'BrtUid' */\n      case 0x0C01: /* 'BrtRevisionPtr' */\n      case 0x0216: /* 'BrtBookProtection' */\n      case 0x02A5: /* 'BrtBookProtectionIso' */\n      case 0x009D: /* 'BrtCalcProp' */\n      case 0x0262: /* 'BrtCrashRecErr' */\n      case 0x0802: /* 'BrtDecoupledPivotCacheID' */\n      case 0x009B: /* 'BrtFileRecover' */\n      case 0x0224: /* 'BrtFileSharing' */\n      case 0x02A4: /* 'BrtFileSharingIso' */\n      case 0x0080: /* 'BrtFileVersion' */\n      case 0x0299: /* 'BrtFnGroup' */\n      case 0x0850: /* 'BrtModelRelationship' */\n      case 0x084D: /* 'BrtModelTable' */\n      case 0x0225: /* 'BrtOleSize' */\n      case 0x0805: /* 'BrtPivotTableRef' */\n      case 0x0254: /* 'BrtSmartTagType' */\n      case 0x081C: /* 'BrtTableSlicerCacheID' */\n      case 0x081B: /* 'BrtTableSlicerCacheIDs' */\n      case 0x0822: /* 'BrtTimelineCachePivotCacheID' */\n      case 0x018D: /* 'BrtUserBookView' */\n      case 0x009A: /* 'BrtWbFactoid' */\n      case 0x045D: /* 'BrtWbProp14' */\n      case 0x0229: /* 'BrtWebOpt' */\n      case 0x082B:\n        /* 'BrtWorkBookPr15' */\n        break;\n      case 0x0023:\n        /* 'BrtFRTBegin' */\n        state.push(RT);\n        pass = true;\n        break;\n      case 0x0024:\n        /* 'BrtFRTEnd' */\n        state.pop();\n        pass = false;\n        break;\n      case 0x0025:\n        /* 'BrtACBegin' */\n        state.push(RT);\n        pass = true;\n        break;\n      case 0x0026:\n        /* 'BrtACEnd' */\n        state.pop();\n        pass = false;\n        break;\n      case 0x0010:\n        /* 'BrtFRTArchID$' */break;\n      default:\n        if (R.T) ;else if (!pass || opts.WTF && state[state.length - 1] != 0x0025 /* BrtACBegin */ && state[state.length - 1] != 0x0023 /* BrtFRTBegin */) throw new Error(\"Unexpected record 0x\" + RT.toString(16));\n    }\n  }, opts);\n  parse_wb_defaults(wb);\n\n  // $FlowIgnore\n  wb.Names = Names;\n  wb /*:any*/.supbooks = supbooks;\n  return wb;\n}\nfunction write_BUNDLESHS(ba, wb /*::, opts*/) {\n  write_record(ba, 0x008F /* BrtBeginBundleShs */);\n  for (var idx = 0; idx != wb.SheetNames.length; ++idx) {\n    var viz = wb.Workbook && wb.Workbook.Sheets && wb.Workbook.Sheets[idx] && wb.Workbook.Sheets[idx].Hidden || 0;\n    var d = {\n      Hidden: viz,\n      iTabID: idx + 1,\n      strRelID: 'rId' + (idx + 1),\n      name: wb.SheetNames[idx]\n    };\n    write_record(ba, 0x009C /* BrtBundleSh */, write_BrtBundleSh(d));\n  }\n  write_record(ba, 0x0090 /* BrtEndBundleShs */);\n}\n\n/* [MS-XLSB] 2.4.649 BrtFileVersion */\nfunction write_BrtFileVersion(data, o) {\n  if (!o) o = new_buf(127);\n  for (var i = 0; i != 4; ++i) o.write_shift(4, 0);\n  write_XLWideString(\"SheetJS\", o);\n  write_XLWideString(XLSX.version, o);\n  write_XLWideString(XLSX.version, o);\n  write_XLWideString(\"7262\", o);\n  return o.length > o.l ? o.slice(0, o.l) : o;\n}\n\n/* [MS-XLSB] 2.4.301 BrtBookView */\nfunction write_BrtBookView(idx, o) {\n  if (!o) o = new_buf(29);\n  o.write_shift(-4, 0);\n  o.write_shift(-4, 460);\n  o.write_shift(4, 28800);\n  o.write_shift(4, 17600);\n  o.write_shift(4, 500);\n  o.write_shift(4, idx);\n  o.write_shift(4, idx);\n  var flags = 0x78;\n  o.write_shift(1, flags);\n  return o.length > o.l ? o.slice(0, o.l) : o;\n}\nfunction write_BOOKVIEWS(ba, wb /*::, opts*/) {\n  /* required if hidden tab appears before visible tab */\n  if (!wb.Workbook || !wb.Workbook.Sheets) return;\n  var sheets = wb.Workbook.Sheets;\n  var i = 0,\n    vistab = -1,\n    hidden = -1;\n  for (; i < sheets.length; ++i) {\n    if (!sheets[i] || !sheets[i].Hidden && vistab == -1) vistab = i;else if (sheets[i].Hidden == 1 && hidden == -1) hidden = i;\n  }\n  if (hidden > vistab) return;\n  write_record(ba, 0x0087 /* BrtBeginBookViews */);\n  write_record(ba, 0x009E /* BrtBookView */, write_BrtBookView(vistab));\n  /* 1*(BrtBookView *FRT) */\n  write_record(ba, 0x0088 /* BrtEndBookViews */);\n}\n\nfunction write_BRTNAMES(ba, wb) {\n  if (!wb.Workbook || !wb.Workbook.Names) return;\n  wb.Workbook.Names.forEach(function (name) {\n    try {\n      if (name.Flags & 0x0e) return; // TODO: macro name write\n      write_record(ba, 0x0027 /* BrtName */, write_BrtName(name, wb));\n    } catch (e) {\n      console.error(\"Could not serialize defined name \" + JSON.stringify(name));\n    }\n  });\n}\nfunction write_SELF_EXTERNS_xlsb(wb) {\n  var L = wb.SheetNames.length;\n  var o = new_buf(12 * L + 28);\n  o.write_shift(4, L + 2);\n  o.write_shift(4, 0);\n  o.write_shift(4, -2);\n  o.write_shift(4, -2); // workbook-level reference\n  o.write_shift(4, 0);\n  o.write_shift(4, -1);\n  o.write_shift(4, -1); // #REF!...\n  for (var i = 0; i < L; ++i) {\n    o.write_shift(4, 0);\n    o.write_shift(4, i);\n    o.write_shift(4, i);\n  }\n  return o;\n}\nfunction write_EXTERNALS_xlsb(ba, wb) {\n  write_record(ba, 0x0161 /* BrtBeginExternals */);\n  write_record(ba, 0x0165 /* BrtSupSelf */);\n  write_record(ba, 0x016A /* BrtExternSheet */, write_SELF_EXTERNS_xlsb(wb));\n  write_record(ba, 0x0162 /* BrtEndExternals */);\n}\n\n/* [MS-XLSB] 2.4.305 BrtCalcProp */\n/*function write_BrtCalcProp(data, o) {\n\tif(!o) o = new_buf(26);\n\to.write_shift(4,0); // force recalc\n\to.write_shift(4,1);\n\to.write_shift(4,0);\n\twrite_Xnum(0, o);\n\to.write_shift(-4, 1023);\n\to.write_shift(1, 0x33);\n\to.write_shift(1, 0x00);\n\treturn o;\n}*/\n\n/* [MS-XLSB] 2.4.646 BrtFileRecover */\n/*function write_BrtFileRecover(data, o) {\n\tif(!o) o = new_buf(1);\n\to.write_shift(1,0);\n\treturn o;\n}*/\n\n/* [MS-XLSB] 2.1.7.61 Workbook */\nfunction write_wb_bin(wb, opts) {\n  var ba = buf_array();\n  write_record(ba, 0x0083 /* BrtBeginBook */);\n  write_record(ba, 0x0080 /* BrtFileVersion */, write_BrtFileVersion());\n  /* [[BrtFileSharingIso] BrtFileSharing] */\n  write_record(ba, 0x0099 /* BrtWbProp */, write_BrtWbProp(wb.Workbook && wb.Workbook.WBProps || null));\n  /* [ACABSPATH] */\n  /* [[BrtBookProtectionIso] BrtBookProtection] */\n  write_BOOKVIEWS(ba, wb);\n  write_BUNDLESHS(ba, wb);\n  /* [FNGROUP] */\n  write_EXTERNALS_xlsb(ba, wb);\n  if ((wb.Workbook || {}).Names) write_BRTNAMES(ba, wb);\n  /* write_record(ba, 0x009D BrtCalcProp, write_BrtCalcProp()); */\n  /* [BrtOleSize] */\n  /* *(BrtUserBookView *FRT) */\n  /* [PIVOTCACHEIDS] */\n  /* [BrtWbFactoid] */\n  /* [SMARTTAGTYPES] */\n  /* [BrtWebOpt] */\n  /* write_record(ba, 0x009B BrtFileRecover, write_BrtFileRecover()); */\n  /* [WEBPUBITEMS] */\n  /* [CRERRS] */\n  /* FRTWORKBOOK */\n  write_record(ba, 0x0084 /* BrtEndBook */);\n\n  return ba.end();\n}\nfunction parse_wb(data, name /*:string*/, opts) /*:WorkbookFile*/{\n  if (name.slice(-4) === \".bin\") return parse_wb_bin(data /*:any*/, opts);\n  return parse_wb_xml(data /*:any*/, opts);\n}\nfunction parse_ws(data, name /*:string*/, idx /*:number*/, opts, rels, wb, themes, styles) /*:Worksheet*/{\n  if (name.slice(-4) === \".bin\") return parse_ws_bin(data /*:any*/, opts, idx, rels, wb, themes, styles);\n  return parse_ws_xml(data /*:any*/, opts, idx, rels, wb, themes, styles);\n}\nfunction parse_cs(data, name /*:string*/, idx /*:number*/, opts, rels, wb, themes, styles) /*:Worksheet*/{\n  if (name.slice(-4) === \".bin\") return parse_cs_bin(data /*:any*/, opts, idx, rels, wb);\n  return parse_cs_xml(data /*:any*/, opts, idx, rels, wb);\n}\nfunction parse_ms(data, name /*:string*/, idx /*:number*/, opts, rels, wb, themes, styles) /*:Worksheet*/{\n  if (name.slice(-4) === \".bin\") return parse_ms_bin();\n  return parse_ms_xml();\n}\nfunction parse_ds(data, name /*:string*/, idx /*:number*/, opts, rels, wb, themes, styles) /*:Worksheet*/{\n  if (name.slice(-4) === \".bin\") return parse_ds_bin();\n  return parse_ds_xml();\n}\nfunction parse_sty(data, name /*:string*/, themes, opts) {\n  if (name.slice(-4) === \".bin\") return parse_sty_bin(data /*:any*/, themes, opts);\n  return parse_sty_xml(data /*:any*/, themes, opts);\n}\nfunction parse_sst(data, name /*:string*/, opts) /*:SST*/{\n  if (name.slice(-4) === \".bin\") return parse_sst_bin(data /*:any*/, opts);\n  return parse_sst_xml(data /*:any*/, opts);\n}\nfunction parse_cmnt(data, name /*:string*/, opts) /*:Array<RawComment>*/{\n  if (name.slice(-4) === \".bin\") return parse_comments_bin(data /*:any*/, opts);\n  return parse_comments_xml(data /*:any*/, opts);\n}\nfunction parse_cc(data, name /*:string*/, opts) {\n  if (name.slice(-4) === \".bin\") return parse_cc_bin(data /*:any*/);\n  return parse_cc_xml(data /*:any*/);\n}\n\nfunction parse_xlink(data, rel, name /*:string*/, opts) {\n  if (name.slice(-4) === \".bin\") return parse_xlink_bin(data /*:any*/, rel, name, opts);\n  return parse_xlink_xml();\n}\nfunction parse_xlmeta(data, name /*:string*/, opts) {\n  if (name.slice(-4) === \".bin\") return parse_xlmeta_bin(data /*:any*/, name, opts);\n  return parse_xlmeta_xml(data /*:any*/, name, opts);\n}\nvar attregexg2 = /([\\w:]+)=((?:\")([^\"]*)(?:\")|(?:')([^']*)(?:'))/g;\nvar attregex2 = /([\\w:]+)=((?:\")(?:[^\"]*)(?:\")|(?:')(?:[^']*)(?:'))/;\nfunction xlml_parsexmltag(tag /*:string*/, skip_root /*:?boolean*/) {\n  var words = tag.split(/\\s+/);\n  var z /*:any*/ = [] /*:any*/;\n  if (!skip_root) z[0] = words[0];\n  if (words.length === 1) return z;\n  var m = tag.match(attregexg2),\n    y,\n    j,\n    w,\n    i;\n  if (m) for (i = 0; i != m.length; ++i) {\n    y = m[i].match(attregex2);\n    /*:: if(!y || !y[2]) continue; */\n    if ((j = y[1].indexOf(\":\")) === -1) z[y[1]] = y[2].slice(1, y[2].length - 1);else {\n      if (y[1].slice(0, 6) === \"xmlns:\") w = \"xmlns\" + y[1].slice(6);else w = y[1].slice(j + 1);\n      z[w] = y[2].slice(1, y[2].length - 1);\n    }\n  }\n  return z;\n}\nfunction xlml_parsexmltagobj(tag /*:string*/) {\n  var words = tag.split(/\\s+/);\n  var z = {};\n  if (words.length === 1) return z;\n  var m = tag.match(attregexg2),\n    y,\n    j,\n    w,\n    i;\n  if (m) for (i = 0; i != m.length; ++i) {\n    y = m[i].match(attregex2);\n    /*:: if(!y || !y[2]) continue; */\n    if ((j = y[1].indexOf(\":\")) === -1) z[y[1]] = y[2].slice(1, y[2].length - 1);else {\n      if (y[1].slice(0, 6) === \"xmlns:\") w = \"xmlns\" + y[1].slice(6);else w = y[1].slice(j + 1);\n      z[w] = y[2].slice(1, y[2].length - 1);\n    }\n  }\n  return z;\n}\n\n// ----\n\n/* map from xlml named formats to SSF TODO: localize */\nvar XLMLFormatMap /*: {[string]:string}*/;\n\nfunction xlml_format(format, value, date1904) /*:string*/{\n  var fmt = XLMLFormatMap[format] || unescapexml(format);\n  if (fmt === \"General\") return SSF_general(value);\n  return SSF_format(fmt, value, {\n    date1904: !!date1904\n  });\n}\nfunction xlml_set_custprop(Custprops, key, cp, val /*:string*/) {\n  var oval /*:any*/ = val;\n  switch ((cp[0].match(/dt:dt=\"([\\w.]+)\"/) || [\"\", \"\"])[1]) {\n    case \"boolean\":\n      oval = parsexmlbool(val);\n      break;\n    case \"i2\":\n    case \"int\":\n      oval = parseInt(val, 10);\n      break;\n    case \"r4\":\n    case \"float\":\n      oval = parseFloat(val);\n      break;\n    case \"date\":\n    case \"dateTime.tz\":\n      oval = parseDate$1(val);\n      break;\n    case \"i8\":\n    case \"string\":\n    case \"fixed\":\n    case \"uuid\":\n    case \"bin.base64\":\n      break;\n    default:\n      throw new Error(\"bad custprop:\" + cp[0]);\n  }\n  Custprops[unescapexml(key)] = oval;\n}\nfunction safe_format_xlml(cell /*:Cell*/, nf, o, date1904) {\n  if (cell.t === 'z') return;\n  if (!o || o.cellText !== false) try {\n    if (cell.t === 'e') {\n      cell.w = cell.w || BErr[cell.v];\n    } else if (nf === \"General\") {\n      if (cell.t === 'n') {\n        if ((cell.v | 0) === cell.v) cell.w = cell.v.toString(10);else cell.w = SSF_general_num(cell.v);\n      } else cell.w = SSF_general(cell.v);\n    } else cell.w = xlml_format(nf || \"General\", cell.v, date1904);\n  } catch (e) {\n    if (o.WTF) throw e;\n  }\n  try {\n    var z = XLMLFormatMap[nf] || nf || \"General\";\n    if (o.cellNF) cell.z = z;\n    if (o.cellDates && cell.t == 'n' && fmt_is_date(z)) {\n      var _d = SSF_parse_date_code(cell.v + (date1904 ? 1462 : 0));\n      if (_d) {\n        cell.t = 'd';\n        cell.v = new Date(Date.UTC(_d.y, _d.m - 1, _d.d, _d.H, _d.M, _d.S, _d.u));\n      }\n    }\n  } catch (e) {\n    if (o.WTF) throw e;\n  }\n}\nfunction process_style_xlml(styles, stag, opts) {\n  if (opts.cellStyles) {\n    if (stag.Interior) {\n      var I = stag.Interior;\n      if (I.Pattern) I.patternType = XLMLPatternTypeMap[I.Pattern] || I.Pattern;\n    }\n  }\n  styles[stag.ID] = stag;\n}\n\n/* TODO: there must exist some form of OSP-blessed spec */\nfunction parse_xlml_data(xml, ss, data, cell /*:any*/, base, styles, csty, row, arrayf, o, date1904) {\n  var nf = \"General\",\n    sid = cell.StyleID,\n    S = {};\n  o = o || {};\n  var interiors = [];\n  var i = 0;\n  if (sid === undefined && row) sid = row.StyleID;\n  if (sid === undefined && csty) sid = csty.StyleID;\n  while (styles[sid] !== undefined) {\n    if (styles[sid].nf) nf = styles[sid].nf;\n    if (styles[sid].Interior) interiors.push(styles[sid].Interior);\n    if (!styles[sid].Parent) break;\n    sid = styles[sid].Parent;\n  }\n  switch (data.Type) {\n    case 'Boolean':\n      cell.t = 'b';\n      cell.v = parsexmlbool(xml);\n      break;\n    case 'String':\n      cell.t = 's';\n      cell.r = xlml_fixstr(unescapexml(xml));\n      cell.v = xml.indexOf(\"<\") > -1 ? unescapexml(ss || xml).replace(/<.*?>/g, \"\") : cell.r; // todo: BR etc\n      break;\n    case 'DateTime':\n      if (xml.slice(-1) != \"Z\") xml += \"Z\";\n      cell.v = datenum(parseDate$1(xml, date1904), date1904);\n      if (cell.v !== cell.v) cell.v = unescapexml(xml);\n      if (!nf || nf == \"General\") nf = \"yyyy-mm-dd\";\n    /* falls through */\n    case 'Number':\n      if (cell.v === undefined) cell.v = +xml;\n      if (!cell.t) cell.t = 'n';\n      break;\n    case 'Error':\n      cell.t = 'e';\n      cell.v = RBErr[xml];\n      if (o.cellText !== false) cell.w = xml;\n      break;\n    default:\n      if (xml == \"\" && ss == \"\") {\n        cell.t = 'z';\n      } else {\n        cell.t = 's';\n        cell.v = xlml_fixstr(ss || xml);\n      }\n      break;\n  }\n  safe_format_xlml(cell, nf, o, date1904);\n  if (o.cellFormula !== false) {\n    if (cell.Formula) {\n      var fstr = unescapexml(cell.Formula);\n      /* strictly speaking, the leading = is required but some writers omit */\n      if (fstr.charCodeAt(0) == 61 /* = */) fstr = fstr.slice(1);\n      cell.f = rc_to_a1(fstr, base);\n      delete cell.Formula;\n      if (cell.ArrayRange == \"RC\") cell.F = rc_to_a1(\"RC:RC\", base);else if (cell.ArrayRange) {\n        cell.F = rc_to_a1(cell.ArrayRange, base);\n        arrayf.push([safe_decode_range(cell.F), cell.F]);\n      }\n    } else {\n      for (i = 0; i < arrayf.length; ++i) if (base.r >= arrayf[i][0].s.r && base.r <= arrayf[i][0].e.r) if (base.c >= arrayf[i][0].s.c && base.c <= arrayf[i][0].e.c) cell.F = arrayf[i][1];\n    }\n  }\n  if (o.cellStyles) {\n    interiors.forEach(function (x) {\n      if (!S.patternType && x.patternType) S.patternType = x.patternType;\n    });\n    cell.s = S;\n  }\n  if (cell.StyleID !== undefined) cell.ixfe = cell.StyleID;\n}\nfunction xlml_prefix_dname(dname) {\n  return XLSLblBuiltIn.indexOf(\"_xlnm.\" + dname) > -1 ? \"_xlnm.\" + dname : dname;\n}\nfunction xlml_clean_comment(comment /*:any*/) {\n  comment.t = comment.v || \"\";\n  comment.t = comment.t.replace(/\\r\\n/g, \"\\n\").replace(/\\r/g, \"\\n\");\n  comment.v = comment.w = comment.ixfe = undefined;\n}\n\n/* TODO: Everything */\nfunction parse_xlml_xml(d, _opts) /*:Workbook*/{\n  var opts = _opts || {};\n  make_ssf();\n  var str = debom(xlml_normalize(d));\n  if (opts.type == 'binary' || opts.type == 'array' || opts.type == 'base64') {\n    str = utf8read(str);\n  }\n  var opening = str.slice(0, 1024).toLowerCase(),\n    ishtml = false;\n  opening = opening.replace(/\".*?\"/g, \"\");\n  if ((opening.indexOf(\">\") & 1023) > Math.min(opening.indexOf(\",\") & 1023, opening.indexOf(\";\") & 1023)) {\n    var _o = dup(opts);\n    _o.type = \"string\";\n    return PRN.to_workbook(str, _o);\n  }\n  if (opening.indexOf(\"<?xml\") == -1) [\"html\", \"table\", \"head\", \"meta\", \"script\", \"style\", \"div\"].forEach(function (tag) {\n    if (opening.indexOf(\"<\" + tag) >= 0) ishtml = true;\n  });\n  if (ishtml) return html_to_workbook(str, opts);\n  XLMLFormatMap = {\n    \"General Number\": \"General\",\n    \"General Date\": table_fmt[22],\n    \"Long Date\": \"dddd, mmmm dd, yyyy\",\n    \"Medium Date\": table_fmt[15],\n    \"Short Date\": table_fmt[14],\n    \"Long Time\": table_fmt[19],\n    \"Medium Time\": table_fmt[18],\n    \"Short Time\": table_fmt[20],\n    \"Currency\": '\"$\"#,##0.00_);[Red]\\\\(\"$\"#,##0.00\\\\)',\n    \"Fixed\": table_fmt[2],\n    \"Standard\": table_fmt[4],\n    \"Percent\": table_fmt[10],\n    \"Scientific\": table_fmt[11],\n    \"Yes/No\": '\"Yes\";\"Yes\";\"No\";@',\n    \"True/False\": '\"True\";\"True\";\"False\";@',\n    \"On/Off\": '\"Yes\";\"Yes\";\"No\";@'\n  } /*:any*/;\n\n  var Rn;\n  var state = [],\n    tmp;\n  var sheets = {},\n    sheetnames /*:Array<string>*/ = [],\n    cursheet /*:Worksheet*/ = {},\n    sheetname = \"\";\n  if (opts.dense) cursheet[\"!data\"] = [];\n  var cell = {} /*:any*/,\n    row = {}; // eslint-disable-line no-unused-vars\n  var dtag = xlml_parsexmltag('<Data ss:Type=\"String\">'),\n    didx = 0;\n  var c = 0,\n    r = 0;\n  var refguess /*:Range*/ = {\n    s: {\n      r: 2000000,\n      c: 2000000\n    },\n    e: {\n      r: 0,\n      c: 0\n    }\n  };\n  var styles = {},\n    stag = {};\n  var ss = \"\",\n    fidx = 0;\n  var merges /*:Array<Range>*/ = [];\n  var Props = {},\n    Custprops = {},\n    pidx = 0,\n    cp = [];\n  var comments /*:Array<Comment>*/ = [],\n    comment /*:Comment*/ = {} /*:any*/;\n  var cstys = [],\n    csty,\n    seencol = false;\n  var arrayf /*:Array<[Range, string]>*/ = [];\n  var rowinfo /*:Array<RowInfo>*/ = [],\n    rowobj = {},\n    cc = 0,\n    rr = 0;\n  var Workbook /*:WBWBProps*/ = {\n      Sheets: [],\n      WBProps: {\n        date1904: false\n      }\n    } /*:any*/,\n    wsprops = {};\n  xlmlregex.lastIndex = 0;\n  str = str.replace(/<!--([\\s\\S]*?)-->/mg, \"\");\n  var raw_Rn3 = \"\";\n  while (Rn = xlmlregex.exec(str)) switch (Rn[3] = (raw_Rn3 = Rn[3]).toLowerCase()) {\n    case 'data' /*case 'Data'*/:\n      if (raw_Rn3 == \"data\") {\n        if (Rn[1] === '/') {\n          if ((tmp = state.pop())[0] !== Rn[3]) throw new Error(\"Bad state: \" + tmp.join(\"|\"));\n        } else if (Rn[0].charAt(Rn[0].length - 2) !== '/') state.push([Rn[3], true]);\n        break;\n      }\n      if (state[state.length - 1][1]) break;\n      if (Rn[1] === '/') parse_xlml_data(str.slice(didx, Rn.index), ss, dtag, state[state.length - 1][0] == /*\"Comment\"*/\"comment\" ? comment : cell, {\n        c: c,\n        r: r\n      }, styles, cstys[c], row, arrayf, opts, Workbook.WBProps.date1904);else {\n        ss = \"\";\n        dtag = xlml_parsexmltag(Rn[0]);\n        didx = Rn.index + Rn[0].length;\n      }\n      break;\n    case 'cell' /*case 'Cell'*/:\n      if (Rn[1] === '/') {\n        if (comments.length > 0) cell.c = comments;\n        if ((!opts.sheetRows || opts.sheetRows > r) && cell.v !== void 0) {\n          if (opts.dense) {\n            if (!cursheet[\"!data\"][r]) cursheet[\"!data\"][r] = [];\n            cursheet[\"!data\"][r][c] = cell;\n          } else cursheet[encode_col(c) + encode_row(r)] = cell;\n        }\n        if (cell.HRef) {\n          cell.l = {\n            Target: unescapexml(cell.HRef)\n          } /*:any*/;\n          if (cell.HRefScreenTip) cell.l.Tooltip = cell.HRefScreenTip;\n          delete cell.HRef;\n          delete cell.HRefScreenTip;\n        }\n        if (cell.MergeAcross || cell.MergeDown) {\n          cc = c + (parseInt(cell.MergeAcross, 10) | 0);\n          rr = r + (parseInt(cell.MergeDown, 10) | 0);\n          if (cc > c || rr > r) merges.push({\n            s: {\n              c: c,\n              r: r\n            },\n            e: {\n              c: cc,\n              r: rr\n            }\n          });\n        }\n        if (!opts.sheetStubs) {\n          if (cell.MergeAcross) c = cc + 1;else ++c;\n        } else if (cell.MergeAcross || cell.MergeDown) {\n          /*:: if(!cc) cc = 0; if(!rr) rr = 0; */\n          for (var cma = c; cma <= cc; ++cma) {\n            for (var cmd = r; cmd <= rr; ++cmd) {\n              if (cma > c || cmd > r) {\n                if (opts.dense) {\n                  if (!cursheet[\"!data\"][cmd]) cursheet[\"!data\"][cmd] = [];\n                  cursheet[\"!data\"][cmd][cma] = {\n                    t: 'z'\n                  };\n                } else cursheet[encode_col(cma) + encode_row(cmd)] = {\n                  t: 'z'\n                };\n              }\n            }\n          }\n          c = cc + 1;\n        } else ++c;\n      } else {\n        cell = xlml_parsexmltagobj(Rn[0]);\n        if (cell.Index) c = +cell.Index - 1;\n        if (c < refguess.s.c) refguess.s.c = c;\n        if (c > refguess.e.c) refguess.e.c = c;\n        if (Rn[0].slice(-2) === \"/>\") ++c;\n        comments = [];\n      }\n      break;\n    case 'row' /*case 'Row'*/:\n      if (Rn[1] === '/' || Rn[0].slice(-2) === \"/>\") {\n        if (r < refguess.s.r) refguess.s.r = r;\n        if (r > refguess.e.r) refguess.e.r = r;\n        if (Rn[0].slice(-2) === \"/>\") {\n          row = xlml_parsexmltag(Rn[0]);\n          if (row.Index) r = +row.Index - 1;\n        }\n        c = 0;\n        ++r;\n      } else {\n        row = xlml_parsexmltag(Rn[0]);\n        if (row.Index) r = +row.Index - 1;\n        rowobj = {};\n        if (row.AutoFitHeight == \"0\" || row.Height) {\n          rowobj.hpx = parseInt(row.Height, 10);\n          rowobj.hpt = px2pt(rowobj.hpx);\n          rowinfo[r] = rowobj;\n        }\n        if (row.Hidden == \"1\") {\n          rowobj.hidden = true;\n          rowinfo[r] = rowobj;\n        }\n      }\n      break;\n    case 'worksheet' /*case 'Worksheet'*/:\n      /* TODO: read range from FullRows/FullColumns */\n      if (Rn[1] === '/') {\n        if ((tmp = state.pop())[0] !== Rn[3]) throw new Error(\"Bad state: \" + tmp.join(\"|\"));\n        sheetnames.push(sheetname);\n        if (refguess.s.r <= refguess.e.r && refguess.s.c <= refguess.e.c) {\n          cursheet[\"!ref\"] = encode_range(refguess);\n          if (opts.sheetRows && opts.sheetRows <= refguess.e.r) {\n            cursheet[\"!fullref\"] = cursheet[\"!ref\"];\n            refguess.e.r = opts.sheetRows - 1;\n            cursheet[\"!ref\"] = encode_range(refguess);\n          }\n        }\n        if (merges.length) cursheet[\"!merges\"] = merges;\n        if (cstys.length > 0) cursheet[\"!cols\"] = cstys;\n        if (rowinfo.length > 0) cursheet[\"!rows\"] = rowinfo;\n        sheets[sheetname] = cursheet;\n      } else {\n        refguess = {\n          s: {\n            r: 2000000,\n            c: 2000000\n          },\n          e: {\n            r: 0,\n            c: 0\n          }\n        };\n        r = c = 0;\n        state.push([Rn[3], false]);\n        tmp = xlml_parsexmltag(Rn[0]);\n        sheetname = unescapexml(tmp.Name);\n        cursheet = {};\n        if (opts.dense) cursheet[\"!data\"] = [];\n        merges = [];\n        arrayf = [];\n        rowinfo = [];\n        wsprops = {\n          name: sheetname,\n          Hidden: 0\n        };\n        Workbook.Sheets.push(wsprops);\n      }\n      break;\n    case 'table' /*case 'Table'*/:\n      if (Rn[1] === '/') {\n        if ((tmp = state.pop())[0] !== Rn[3]) throw new Error(\"Bad state: \" + tmp.join(\"|\"));\n      } else if (Rn[0].slice(-2) == \"/>\") break;else {\n        state.push([Rn[3], false]);\n        cstys = [];\n        seencol = false;\n      }\n      break;\n    case 'style' /*case 'Style'*/:\n      if (Rn[1] === '/') process_style_xlml(styles, stag, opts);else stag = xlml_parsexmltag(Rn[0]);\n      break;\n    case 'numberformat' /*case 'NumberFormat'*/:\n      stag.nf = unescapexml(xlml_parsexmltag(Rn[0]).Format || \"General\");\n      if (XLMLFormatMap[stag.nf]) stag.nf = XLMLFormatMap[stag.nf];\n      for (var ssfidx = 0; ssfidx != 0x188; ++ssfidx) if (table_fmt[ssfidx] == stag.nf) break;\n      if (ssfidx == 0x188) for (ssfidx = 0x39; ssfidx != 0x188; ++ssfidx) if (table_fmt[ssfidx] == null) {\n        SSF__load(stag.nf, ssfidx);\n        break;\n      }\n      break;\n    case 'column' /*case 'Column'*/:\n      if (state[state.length - 1][0] !== /*'Table'*/'table') break;\n      if (Rn[1] === '/') break;\n      csty = xlml_parsexmltag(Rn[0]);\n      if (csty.Hidden) {\n        csty.hidden = true;\n        delete csty.Hidden;\n      }\n      if (csty.Width) csty.wpx = parseInt(csty.Width, 10);\n      if (!seencol && csty.wpx > 10) {\n        seencol = true;\n        MDW = DEF_MDW; //find_mdw_wpx(csty.wpx);\n        for (var _col = 0; _col < cstys.length; ++_col) if (cstys[_col]) process_col(cstys[_col]);\n      }\n      if (seencol) process_col(csty);\n      cstys[csty.Index - 1 || cstys.length] = csty;\n      for (var i = 0; i < +csty.Span; ++i) cstys[cstys.length] = dup(csty);\n      break;\n    case 'namedrange' /*case 'NamedRange'*/:\n      if (Rn[1] === '/') break;\n      if (!Workbook.Names) Workbook.Names = [];\n      var _NamedRange = parsexmltag(Rn[0]);\n      var _DefinedName /*:DefinedName*/ = {\n        Name: xlml_prefix_dname(_NamedRange.Name),\n        Ref: rc_to_a1(_NamedRange.RefersTo.slice(1), {\n          r: 0,\n          c: 0\n        })\n      } /*:any*/;\n      if (Workbook.Sheets.length > 0) _DefinedName.Sheet = Workbook.Sheets.length - 1;\n      /*:: if(Workbook.Names) */\n      Workbook.Names.push(_DefinedName);\n      break;\n    case 'namedcell' /*case 'NamedCell'*/:\n      break;\n    case 'b' /*case 'B'*/:\n      break;\n    case 'i' /*case 'I'*/:\n      break;\n    case 'u' /*case 'U'*/:\n      break;\n    case 's' /*case 'S'*/:\n      break;\n    case 'em' /*case 'EM'*/:\n      break;\n    case 'h2' /*case 'H2'*/:\n      break;\n    case 'h3' /*case 'H3'*/:\n      break;\n    case 'sub' /*case 'Sub'*/:\n      break;\n    case 'sup' /*case 'Sup'*/:\n      break;\n    case 'span' /*case 'Span'*/:\n      break;\n    case 'alignment' /*case 'Alignment'*/:\n      break;\n    case 'borders' /*case 'Borders'*/:\n      break;\n    case 'border' /*case 'Border'*/:\n      break;\n    case 'font' /*case 'Font'*/:\n      if (Rn[0].slice(-2) === \"/>\") break;else if (Rn[1] === \"/\") ss += str.slice(fidx, Rn.index);else fidx = Rn.index + Rn[0].length;\n      break;\n    case 'interior' /*case 'Interior'*/:\n      if (!opts.cellStyles) break;\n      stag.Interior = xlml_parsexmltag(Rn[0]);\n      break;\n    case 'protection' /*case 'Protection'*/:\n      break;\n    case 'author' /*case 'Author'*/:\n    case 'title' /*case 'Title'*/:\n    case 'description' /*case 'Description'*/:\n    case 'created' /*case 'Created'*/:\n    case 'keywords' /*case 'Keywords'*/:\n    case 'subject' /*case 'Subject'*/:\n    case 'category' /*case 'Category'*/:\n    case 'company' /*case 'Company'*/:\n    case 'lastauthor' /*case 'LastAuthor'*/:\n    case 'lastsaved' /*case 'LastSaved'*/:\n    case 'lastprinted' /*case 'LastPrinted'*/:\n    case 'version' /*case 'Version'*/:\n    case 'revision' /*case 'Revision'*/:\n    case 'totaltime' /*case 'TotalTime'*/:\n    case 'hyperlinkbase' /*case 'HyperlinkBase'*/:\n    case 'manager' /*case 'Manager'*/:\n    case 'contentstatus' /*case 'ContentStatus'*/:\n    case 'identifier' /*case 'Identifier'*/:\n    case 'language' /*case 'Language'*/:\n    case 'appname' /*case 'AppName'*/:\n      if (Rn[0].slice(-2) === \"/>\") break;else if (Rn[1] === \"/\") xlml_set_prop(Props, raw_Rn3, str.slice(pidx, Rn.index));else pidx = Rn.index + Rn[0].length;\n      break;\n    case 'paragraphs' /*case 'Paragraphs'*/:\n      break;\n    case 'styles' /*case 'Styles'*/:\n    case 'workbook' /*case 'Workbook'*/:\n      if (Rn[1] === '/') {\n        if ((tmp = state.pop())[0] !== Rn[3]) throw new Error(\"Bad state: \" + tmp.join(\"|\"));\n      } else state.push([Rn[3], false]);\n      break;\n    case 'comment' /*case 'Comment'*/:\n      if (Rn[1] === '/') {\n        if ((tmp = state.pop())[0] !== Rn[3]) throw new Error(\"Bad state: \" + tmp.join(\"|\"));\n        xlml_clean_comment(comment);\n        comments.push(comment);\n      } else {\n        state.push([Rn[3], false]);\n        tmp = xlml_parsexmltag(Rn[0]);\n        if (!parsexmlbool(tmp[\"ShowAlways\"] || \"0\")) comments.hidden = true;\n        comment = {\n          a: tmp.Author\n        } /*:any*/;\n      }\n\n      break;\n    case 'autofilter' /*case 'AutoFilter'*/:\n      if (Rn[1] === '/') {\n        if ((tmp = state.pop())[0] !== Rn[3]) throw new Error(\"Bad state: \" + tmp.join(\"|\"));\n      } else if (Rn[0].charAt(Rn[0].length - 2) !== '/') {\n        var AutoFilter = xlml_parsexmltag(Rn[0]);\n        cursheet['!autofilter'] = {\n          ref: rc_to_a1(AutoFilter.Range).replace(/\\$/g, \"\")\n        };\n        state.push([Rn[3], true]);\n      }\n      break;\n    case 'name' /*case 'Name'*/:\n      break;\n    case 'datavalidation' /*case 'DataValidation'*/:\n      if (Rn[1] === '/') {\n        if ((tmp = state.pop())[0] !== Rn[3]) throw new Error(\"Bad state: \" + tmp.join(\"|\"));\n      } else {\n        if (Rn[0].charAt(Rn[0].length - 2) !== '/') state.push([Rn[3], true]);\n      }\n      break;\n    case 'pixelsperinch' /*case 'PixelsPerInch'*/:\n      break;\n    case 'componentoptions' /*case 'ComponentOptions'*/:\n    case 'documentproperties' /*case 'DocumentProperties'*/:\n    case 'customdocumentproperties' /*case 'CustomDocumentProperties'*/:\n    case 'officedocumentsettings' /*case 'OfficeDocumentSettings'*/:\n    case 'pivottable' /*case 'PivotTable'*/:\n    case 'pivotcache' /*case 'PivotCache'*/:\n    case 'names' /*case 'Names'*/:\n    case 'mapinfo' /*case 'MapInfo'*/:\n    case 'pagebreaks' /*case 'PageBreaks'*/:\n    case 'querytable' /*case 'QueryTable'*/:\n    case 'sorting' /*case 'Sorting'*/:\n    case 'schema' /*case 'Schema'*/: //case 'data' /*case 'data'*/:\n    case 'conditionalformatting' /*case 'ConditionalFormatting'*/:\n    case 'smarttagtype' /*case 'SmartTagType'*/:\n    case 'smarttags' /*case 'SmartTags'*/:\n    case 'excelworkbook' /*case 'ExcelWorkbook'*/:\n    case 'workbookoptions' /*case 'WorkbookOptions'*/:\n    case 'worksheetoptions' /*case 'WorksheetOptions'*/:\n      if (Rn[1] === '/') {\n        if ((tmp = state.pop())[0] !== Rn[3]) throw new Error(\"Bad state: \" + tmp.join(\"|\"));\n      } else if (Rn[0].charAt(Rn[0].length - 2) !== '/') state.push([Rn[3], true]);\n      break;\n    case 'null' /*case 'Null'*/:\n      break;\n    default:\n      /* FODS file root is <office:document> */\n      if (state.length == 0 && Rn[3] == \"document\") return parse_fods(str, opts);\n      /* UOS file root is <uof:UOF> */\n      if (state.length == 0 && Rn[3] == \"uof\" /*\"UOF\"*/) return parse_fods(str, opts);\n      var seen = true;\n      switch (state[state.length - 1][0]) {\n        /* OfficeDocumentSettings */\n        case 'officedocumentsettings' /*case 'OfficeDocumentSettings'*/:\n          switch (Rn[3]) {\n            case 'allowpng' /*case 'AllowPNG'*/:\n              break;\n            case 'removepersonalinformation' /*case 'RemovePersonalInformation'*/:\n              break;\n            case 'downloadcomponents' /*case 'DownloadComponents'*/:\n              break;\n            case 'locationofcomponents' /*case 'LocationOfComponents'*/:\n              break;\n            case 'colors' /*case 'Colors'*/:\n              break;\n            case 'color' /*case 'Color'*/:\n              break;\n            case 'index' /*case 'Index'*/:\n              break;\n            case 'rgb' /*case 'RGB'*/:\n              break;\n            case 'targetscreensize' /*case 'TargetScreenSize'*/:\n              break;\n            case 'readonlyrecommended' /*case 'ReadOnlyRecommended'*/:\n              break;\n            default:\n              seen = false;\n          }\n          break;\n\n        /* ComponentOptions */\n        case 'componentoptions' /*case 'ComponentOptions'*/:\n          switch (Rn[3]) {\n            case 'toolbar' /*case 'Toolbar'*/:\n              break;\n            case 'hideofficelogo' /*case 'HideOfficeLogo'*/:\n              break;\n            case 'spreadsheetautofit' /*case 'SpreadsheetAutoFit'*/:\n              break;\n            case 'label' /*case 'Label'*/:\n              break;\n            case 'caption' /*case 'Caption'*/:\n              break;\n            case 'maxheight' /*case 'MaxHeight'*/:\n              break;\n            case 'maxwidth' /*case 'MaxWidth'*/:\n              break;\n            case 'nextsheetnumber' /*case 'NextSheetNumber'*/:\n              break;\n            default:\n              seen = false;\n          }\n          break;\n\n        /* ExcelWorkbook */\n        case 'excelworkbook' /*case 'ExcelWorkbook'*/:\n          switch (Rn[3]) {\n            case 'date1904' /*case 'Date1904'*/:\n              /*:: if(!Workbook.WBProps) Workbook.WBProps = {}; */\n              Workbook.WBProps.date1904 = true;\n              break;\n            case 'hidehorizontalscrollbar' /*case 'HideHorizontalScrollBar'*/:\n              break;\n            case 'hideverticalscrollbar' /*case 'HideVerticalScrollBar'*/:\n              break;\n            case 'hideworkbooktabs' /*case 'HideWorkbookTabs'*/:\n              break;\n            case 'windowheight' /*case 'WindowHeight'*/:\n              break;\n            case 'windowwidth' /*case 'WindowWidth'*/:\n              break;\n            case 'windowtopx' /*case 'WindowTopX'*/:\n              break;\n            case 'windowtopy' /*case 'WindowTopY'*/:\n              break;\n            case 'tabratio' /*case 'TabRatio'*/:\n              break;\n            case 'protectstructure' /*case 'ProtectStructure'*/:\n              break;\n            case 'protectwindow' /*case 'ProtectWindow'*/:\n              break;\n            case 'protectwindows' /*case 'ProtectWindows'*/:\n              break;\n            case 'activesheet' /*case 'ActiveSheet'*/:\n              break;\n            case 'displayinknotes' /*case 'DisplayInkNotes'*/:\n              break;\n            case 'firstvisiblesheet' /*case 'FirstVisibleSheet'*/:\n              break;\n            case 'supbook' /*case 'SupBook'*/:\n              break;\n            case 'sheetname' /*case 'SheetName'*/:\n              break;\n            case 'sheetindex' /*case 'SheetIndex'*/:\n              break;\n            case 'sheetindexfirst' /*case 'SheetIndexFirst'*/:\n              break;\n            case 'sheetindexlast' /*case 'SheetIndexLast'*/:\n              break;\n            case 'dll' /*case 'Dll'*/:\n              break;\n            case 'acceptlabelsinformulas' /*case 'AcceptLabelsInFormulas'*/:\n              break;\n            case 'donotsavelinkvalues' /*case 'DoNotSaveLinkValues'*/:\n              break;\n            case 'iteration' /*case 'Iteration'*/:\n              break;\n            case 'maxiterations' /*case 'MaxIterations'*/:\n              break;\n            case 'maxchange' /*case 'MaxChange'*/:\n              break;\n            case 'path' /*case 'Path'*/:\n              break;\n            case 'xct' /*case 'Xct'*/:\n              break;\n            case 'count' /*case 'Count'*/:\n              break;\n            case 'selectedsheets' /*case 'SelectedSheets'*/:\n              break;\n            case 'calculation' /*case 'Calculation'*/:\n              break;\n            case 'uncalced' /*case 'Uncalced'*/:\n              break;\n            case 'startupprompt' /*case 'StartupPrompt'*/:\n              break;\n            case 'crn' /*case 'Crn'*/:\n              break;\n            case 'externname' /*case 'ExternName'*/:\n              break;\n            case 'formula' /*case 'Formula'*/:\n              break;\n            case 'colfirst' /*case 'ColFirst'*/:\n              break;\n            case 'collast' /*case 'ColLast'*/:\n              break;\n            case 'wantadvise' /*case 'WantAdvise'*/:\n              break;\n            case 'boolean' /*case 'Boolean'*/:\n              break;\n            case 'error' /*case 'Error'*/:\n              break;\n            case 'text' /*case 'Text'*/:\n              break;\n            case 'ole' /*case 'OLE'*/:\n              break;\n            case 'noautorecover' /*case 'NoAutoRecover'*/:\n              break;\n            case 'publishobjects' /*case 'PublishObjects'*/:\n              break;\n            case 'donotcalculatebeforesave' /*case 'DoNotCalculateBeforeSave'*/:\n              break;\n            case 'number' /*case 'Number'*/:\n              break;\n            case 'refmoder1c1' /*case 'RefModeR1C1'*/:\n              break;\n            case 'embedsavesmarttags' /*case 'EmbedSaveSmartTags'*/:\n              break;\n            default:\n              seen = false;\n          }\n          break;\n\n        /* WorkbookOptions */\n        case 'workbookoptions' /*case 'WorkbookOptions'*/:\n          switch (Rn[3]) {\n            case 'owcversion' /*case 'OWCVersion'*/:\n              break;\n            case 'height' /*case 'Height'*/:\n              break;\n            case 'width' /*case 'Width'*/:\n              break;\n            default:\n              seen = false;\n          }\n          break;\n\n        /* WorksheetOptions */\n        case 'worksheetoptions' /*case 'WorksheetOptions'*/:\n          switch (Rn[3]) {\n            case 'visible' /*case 'Visible'*/:\n              if (Rn[0].slice(-2) === \"/>\") ;else if (Rn[1] === \"/\") switch (str.slice(pidx, Rn.index)) {\n                case \"SheetHidden\":\n                  wsprops.Hidden = 1;\n                  break;\n                case \"SheetVeryHidden\":\n                  wsprops.Hidden = 2;\n                  break;\n              } else pidx = Rn.index + Rn[0].length;\n              break;\n            case 'header' /*case 'Header'*/:\n              if (!cursheet['!margins']) default_margins(cursheet['!margins'] = {}, 'xlml');\n              if (!isNaN(+parsexmltag(Rn[0]).Margin)) cursheet['!margins'].header = +parsexmltag(Rn[0]).Margin;\n              break;\n            case 'footer' /*case 'Footer'*/:\n              if (!cursheet['!margins']) default_margins(cursheet['!margins'] = {}, 'xlml');\n              if (!isNaN(+parsexmltag(Rn[0]).Margin)) cursheet['!margins'].footer = +parsexmltag(Rn[0]).Margin;\n              break;\n            case 'pagemargins' /*case 'PageMargins'*/:\n              var pagemargins = parsexmltag(Rn[0]);\n              if (!cursheet['!margins']) default_margins(cursheet['!margins'] = {}, 'xlml');\n              if (!isNaN(+pagemargins.Top)) cursheet['!margins'].top = +pagemargins.Top;\n              if (!isNaN(+pagemargins.Left)) cursheet['!margins'].left = +pagemargins.Left;\n              if (!isNaN(+pagemargins.Right)) cursheet['!margins'].right = +pagemargins.Right;\n              if (!isNaN(+pagemargins.Bottom)) cursheet['!margins'].bottom = +pagemargins.Bottom;\n              break;\n            case 'displayrighttoleft' /*case 'DisplayRightToLeft'*/:\n              if (!Workbook.Views) Workbook.Views = [];\n              if (!Workbook.Views[0]) Workbook.Views[0] = {};\n              Workbook.Views[0].RTL = true;\n              break;\n            case 'freezepanes' /*case 'FreezePanes'*/:\n              break;\n            case 'frozennosplit' /*case 'FrozenNoSplit'*/:\n              break;\n            case 'splithorizontal' /*case 'SplitHorizontal'*/:\n            case 'splitvertical' /*case 'SplitVertical'*/:\n              break;\n            case 'donotdisplaygridlines' /*case 'DoNotDisplayGridlines'*/:\n              break;\n            case 'activerow' /*case 'ActiveRow'*/:\n              break;\n            case 'activecol' /*case 'ActiveCol'*/:\n              break;\n            case 'toprowbottompane' /*case 'TopRowBottomPane'*/:\n              break;\n            case 'leftcolumnrightpane' /*case 'LeftColumnRightPane'*/:\n              break;\n            case 'unsynced' /*case 'Unsynced'*/:\n              break;\n            case 'print' /*case 'Print'*/:\n              break;\n            case 'printerrors' /*case 'PrintErrors'*/:\n              break;\n            case 'panes' /*case 'Panes'*/:\n              break;\n            case 'scale' /*case 'Scale'*/:\n              break;\n            case 'pane' /*case 'Pane'*/:\n              break;\n            case 'number' /*case 'Number'*/:\n              break;\n            case 'layout' /*case 'Layout'*/:\n              break;\n            case 'pagesetup' /*case 'PageSetup'*/:\n              break;\n            case 'selected' /*case 'Selected'*/:\n              break;\n            case 'protectobjects' /*case 'ProtectObjects'*/:\n              break;\n            case 'enableselection' /*case 'EnableSelection'*/:\n              break;\n            case 'protectscenarios' /*case 'ProtectScenarios'*/:\n              break;\n            case 'validprinterinfo' /*case 'ValidPrinterInfo'*/:\n              break;\n            case 'horizontalresolution' /*case 'HorizontalResolution'*/:\n              break;\n            case 'verticalresolution' /*case 'VerticalResolution'*/:\n              break;\n            case 'numberofcopies' /*case 'NumberofCopies'*/:\n              break;\n            case 'activepane' /*case 'ActivePane'*/:\n              break;\n            case 'toprowvisible' /*case 'TopRowVisible'*/:\n              break;\n            case 'leftcolumnvisible' /*case 'LeftColumnVisible'*/:\n              break;\n            case 'fittopage' /*case 'FitToPage'*/:\n              break;\n            case 'rangeselection' /*case 'RangeSelection'*/:\n              break;\n            case 'papersizeindex' /*case 'PaperSizeIndex'*/:\n              break;\n            case 'pagelayoutzoom' /*case 'PageLayoutZoom'*/:\n              break;\n            case 'pagebreakzoom' /*case 'PageBreakZoom'*/:\n              break;\n            case 'filteron' /*case 'FilterOn'*/:\n              break;\n            case 'fitwidth' /*case 'FitWidth'*/:\n              break;\n            case 'fitheight' /*case 'FitHeight'*/:\n              break;\n            case 'commentslayout' /*case 'CommentsLayout'*/:\n              break;\n            case 'zoom' /*case 'Zoom'*/:\n              break;\n            case 'lefttoright' /*case 'LeftToRight'*/:\n              break;\n            case 'gridlines' /*case 'Gridlines'*/:\n              break;\n            case 'allowsort' /*case 'AllowSort'*/:\n              break;\n            case 'allowfilter' /*case 'AllowFilter'*/:\n              break;\n            case 'allowinsertrows' /*case 'AllowInsertRows'*/:\n              break;\n            case 'allowdeleterows' /*case 'AllowDeleteRows'*/:\n              break;\n            case 'allowinsertcols' /*case 'AllowInsertCols'*/:\n              break;\n            case 'allowdeletecols' /*case 'AllowDeleteCols'*/:\n              break;\n            case 'allowinserthyperlinks' /*case 'AllowInsertHyperlinks'*/:\n              break;\n            case 'allowformatcells' /*case 'AllowFormatCells'*/:\n              break;\n            case 'allowsizecols' /*case 'AllowSizeCols'*/:\n              break;\n            case 'allowsizerows' /*case 'AllowSizeRows'*/:\n              break;\n            case 'nosummaryrowsbelowdetail' /*case 'NoSummaryRowsBelowDetail'*/:\n              if (!cursheet[\"!outline\"]) cursheet[\"!outline\"] = {};\n              cursheet[\"!outline\"].above = true;\n              break;\n            case 'tabcolorindex' /*case 'TabColorIndex'*/:\n              break;\n            case 'donotdisplayheadings' /*case 'DoNotDisplayHeadings'*/:\n              break;\n            case 'showpagelayoutzoom' /*case 'ShowPageLayoutZoom'*/:\n              break;\n            case 'nosummarycolumnsrightdetail' /*case 'NoSummaryColumnsRightDetail'*/:\n              if (!cursheet[\"!outline\"]) cursheet[\"!outline\"] = {};\n              cursheet[\"!outline\"].left = true;\n              break;\n            case 'blackandwhite' /*case 'BlackAndWhite'*/:\n              break;\n            case 'donotdisplayzeros' /*case 'DoNotDisplayZeros'*/:\n              break;\n            case 'displaypagebreak' /*case 'DisplayPageBreak'*/:\n              break;\n            case 'rowcolheadings' /*case 'RowColHeadings'*/:\n              break;\n            case 'donotdisplayoutline' /*case 'DoNotDisplayOutline'*/:\n              break;\n            case 'noorientation' /*case 'NoOrientation'*/:\n              break;\n            case 'allowusepivottables' /*case 'AllowUsePivotTables'*/:\n              break;\n            case 'zeroheight' /*case 'ZeroHeight'*/:\n              break;\n            case 'viewablerange' /*case 'ViewableRange'*/:\n              break;\n            case 'selection' /*case 'Selection'*/:\n              break;\n            case 'protectcontents' /*case 'ProtectContents'*/:\n              break;\n            default:\n              seen = false;\n          }\n          break;\n\n        /* PivotTable */\n        case 'pivottable' /*case 'PivotTable'*/:\n        case 'pivotcache' /*case 'PivotCache'*/:\n          switch (Rn[3]) {\n            case 'immediateitemsondrop' /*case 'ImmediateItemsOnDrop'*/:\n              break;\n            case 'showpagemultipleitemlabel' /*case 'ShowPageMultipleItemLabel'*/:\n              break;\n            case 'compactrowindent' /*case 'CompactRowIndent'*/:\n              break;\n            case 'location' /*case 'Location'*/:\n              break;\n            case 'pivotfield' /*case 'PivotField'*/:\n              break;\n            case 'orientation' /*case 'Orientation'*/:\n              break;\n            case 'layoutform' /*case 'LayoutForm'*/:\n              break;\n            case 'layoutsubtotallocation' /*case 'LayoutSubtotalLocation'*/:\n              break;\n            case 'layoutcompactrow' /*case 'LayoutCompactRow'*/:\n              break;\n            case 'position' /*case 'Position'*/:\n              break;\n            case 'pivotitem' /*case 'PivotItem'*/:\n              break;\n            case 'datatype' /*case 'DataType'*/:\n              break;\n            case 'datafield' /*case 'DataField'*/:\n              break;\n            case 'sourcename' /*case 'SourceName'*/:\n              break;\n            case 'parentfield' /*case 'ParentField'*/:\n              break;\n            case 'ptlineitems' /*case 'PTLineItems'*/:\n              break;\n            case 'ptlineitem' /*case 'PTLineItem'*/:\n              break;\n            case 'countofsameitems' /*case 'CountOfSameItems'*/:\n              break;\n            case 'item' /*case 'Item'*/:\n              break;\n            case 'itemtype' /*case 'ItemType'*/:\n              break;\n            case 'ptsource' /*case 'PTSource'*/:\n              break;\n            case 'cacheindex' /*case 'CacheIndex'*/:\n              break;\n            case 'consolidationreference' /*case 'ConsolidationReference'*/:\n              break;\n            case 'filename' /*case 'FileName'*/:\n              break;\n            case 'reference' /*case 'Reference'*/:\n              break;\n            case 'nocolumngrand' /*case 'NoColumnGrand'*/:\n              break;\n            case 'norowgrand' /*case 'NoRowGrand'*/:\n              break;\n            case 'blanklineafteritems' /*case 'BlankLineAfterItems'*/:\n              break;\n            case 'hidden' /*case 'Hidden'*/:\n              break;\n            case 'subtotal' /*case 'Subtotal'*/:\n              break;\n            case 'basefield' /*case 'BaseField'*/:\n              break;\n            case 'mapchilditems' /*case 'MapChildItems'*/:\n              break;\n            case 'function' /*case 'Function'*/:\n              break;\n            case 'refreshonfileopen' /*case 'RefreshOnFileOpen'*/:\n              break;\n            case 'printsettitles' /*case 'PrintSetTitles'*/:\n              break;\n            case 'mergelabels' /*case 'MergeLabels'*/:\n              break;\n            case 'defaultversion' /*case 'DefaultVersion'*/:\n              break;\n            case 'refreshname' /*case 'RefreshName'*/:\n              break;\n            case 'refreshdate' /*case 'RefreshDate'*/:\n              break;\n            case 'refreshdatecopy' /*case 'RefreshDateCopy'*/:\n              break;\n            case 'versionlastrefresh' /*case 'VersionLastRefresh'*/:\n              break;\n            case 'versionlastupdate' /*case 'VersionLastUpdate'*/:\n              break;\n            case 'versionupdateablemin' /*case 'VersionUpdateableMin'*/:\n              break;\n            case 'versionrefreshablemin' /*case 'VersionRefreshableMin'*/:\n              break;\n            case 'calculation' /*case 'Calculation'*/:\n              break;\n            default:\n              seen = false;\n          }\n          break;\n\n        /* PageBreaks */\n        case 'pagebreaks' /*case 'PageBreaks'*/:\n          switch (Rn[3]) {\n            case 'colbreaks' /*case 'ColBreaks'*/:\n              break;\n            case 'colbreak' /*case 'ColBreak'*/:\n              break;\n            case 'rowbreaks' /*case 'RowBreaks'*/:\n              break;\n            case 'rowbreak' /*case 'RowBreak'*/:\n              break;\n            case 'colstart' /*case 'ColStart'*/:\n              break;\n            case 'colend' /*case 'ColEnd'*/:\n              break;\n            case 'rowend' /*case 'RowEnd'*/:\n              break;\n            default:\n              seen = false;\n          }\n          break;\n\n        /* AutoFilter */\n        case 'autofilter' /*case 'AutoFilter'*/:\n          switch (Rn[3]) {\n            case 'autofiltercolumn' /*case 'AutoFilterColumn'*/:\n              break;\n            case 'autofiltercondition' /*case 'AutoFilterCondition'*/:\n              break;\n            case 'autofilterand' /*case 'AutoFilterAnd'*/:\n              break;\n            case 'autofilteror' /*case 'AutoFilterOr'*/:\n              break;\n            default:\n              seen = false;\n          }\n          break;\n\n        /* QueryTable */\n        case 'querytable' /*case 'QueryTable'*/:\n          switch (Rn[3]) {\n            case 'id' /*case 'Id'*/:\n              break;\n            case 'autoformatfont' /*case 'AutoFormatFont'*/:\n              break;\n            case 'autoformatpattern' /*case 'AutoFormatPattern'*/:\n              break;\n            case 'querysource' /*case 'QuerySource'*/:\n              break;\n            case 'querytype' /*case 'QueryType'*/:\n              break;\n            case 'enableredirections' /*case 'EnableRedirections'*/:\n              break;\n            case 'refreshedinxl9' /*case 'RefreshedInXl9'*/:\n              break;\n            case 'urlstring' /*case 'URLString'*/:\n              break;\n            case 'htmltables' /*case 'HTMLTables'*/:\n              break;\n            case 'connection' /*case 'Connection'*/:\n              break;\n            case 'commandtext' /*case 'CommandText'*/:\n              break;\n            case 'refreshinfo' /*case 'RefreshInfo'*/:\n              break;\n            case 'notitles' /*case 'NoTitles'*/:\n              break;\n            case 'nextid' /*case 'NextId'*/:\n              break;\n            case 'columninfo' /*case 'ColumnInfo'*/:\n              break;\n            case 'overwritecells' /*case 'OverwriteCells'*/:\n              break;\n            case 'donotpromptforfile' /*case 'DoNotPromptForFile'*/:\n              break;\n            case 'textwizardsettings' /*case 'TextWizardSettings'*/:\n              break;\n            case 'source' /*case 'Source'*/:\n              break;\n            case 'number' /*case 'Number'*/:\n              break;\n            case 'decimal' /*case 'Decimal'*/:\n              break;\n            case 'thousandseparator' /*case 'ThousandSeparator'*/:\n              break;\n            case 'trailingminusnumbers' /*case 'TrailingMinusNumbers'*/:\n              break;\n            case 'formatsettings' /*case 'FormatSettings'*/:\n              break;\n            case 'fieldtype' /*case 'FieldType'*/:\n              break;\n            case 'delimiters' /*case 'Delimiters'*/:\n              break;\n            case 'tab' /*case 'Tab'*/:\n              break;\n            case 'comma' /*case 'Comma'*/:\n              break;\n            case 'autoformatname' /*case 'AutoFormatName'*/:\n              break;\n            case 'versionlastedit' /*case 'VersionLastEdit'*/:\n              break;\n            case 'versionlastrefresh' /*case 'VersionLastRefresh'*/:\n              break;\n            default:\n              seen = false;\n          }\n          break;\n        case 'datavalidation' /*case 'DataValidation'*/:\n          switch (Rn[3]) {\n            case 'range' /*case 'Range'*/:\n              break;\n            case 'type' /*case 'Type'*/:\n              break;\n            case 'min' /*case 'Min'*/:\n              break;\n            case 'max' /*case 'Max'*/:\n              break;\n            case 'sort' /*case 'Sort'*/:\n              break;\n            case 'descending' /*case 'Descending'*/:\n              break;\n            case 'order' /*case 'Order'*/:\n              break;\n            case 'casesensitive' /*case 'CaseSensitive'*/:\n              break;\n            case 'value' /*case 'Value'*/:\n              break;\n            case 'errorstyle' /*case 'ErrorStyle'*/:\n              break;\n            case 'errormessage' /*case 'ErrorMessage'*/:\n              break;\n            case 'errortitle' /*case 'ErrorTitle'*/:\n              break;\n            case 'inputmessage' /*case 'InputMessage'*/:\n              break;\n            case 'inputtitle' /*case 'InputTitle'*/:\n              break;\n            case 'combohide' /*case 'ComboHide'*/:\n              break;\n            case 'inputhide' /*case 'InputHide'*/:\n              break;\n            case 'condition' /*case 'Condition'*/:\n              break;\n            case 'qualifier' /*case 'Qualifier'*/:\n              break;\n            case 'useblank' /*case 'UseBlank'*/:\n              break;\n            case 'value1' /*case 'Value1'*/:\n              break;\n            case 'value2' /*case 'Value2'*/:\n              break;\n            case 'format' /*case 'Format'*/:\n              break;\n            case 'cellrangelist' /*case 'CellRangeList'*/:\n              break;\n            default:\n              seen = false;\n          }\n          break;\n        case 'sorting' /*case 'Sorting'*/:\n        case 'conditionalformatting' /*case 'ConditionalFormatting'*/:\n          switch (Rn[3]) {\n            case 'range' /*case 'Range'*/:\n              break;\n            case 'type' /*case 'Type'*/:\n              break;\n            case 'min' /*case 'Min'*/:\n              break;\n            case 'max' /*case 'Max'*/:\n              break;\n            case 'sort' /*case 'Sort'*/:\n              break;\n            case 'descending' /*case 'Descending'*/:\n              break;\n            case 'order' /*case 'Order'*/:\n              break;\n            case 'casesensitive' /*case 'CaseSensitive'*/:\n              break;\n            case 'value' /*case 'Value'*/:\n              break;\n            case 'errorstyle' /*case 'ErrorStyle'*/:\n              break;\n            case 'errormessage' /*case 'ErrorMessage'*/:\n              break;\n            case 'errortitle' /*case 'ErrorTitle'*/:\n              break;\n            case 'cellrangelist' /*case 'CellRangeList'*/:\n              break;\n            case 'inputmessage' /*case 'InputMessage'*/:\n              break;\n            case 'inputtitle' /*case 'InputTitle'*/:\n              break;\n            case 'combohide' /*case 'ComboHide'*/:\n              break;\n            case 'inputhide' /*case 'InputHide'*/:\n              break;\n            case 'condition' /*case 'Condition'*/:\n              break;\n            case 'qualifier' /*case 'Qualifier'*/:\n              break;\n            case 'useblank' /*case 'UseBlank'*/:\n              break;\n            case 'value1' /*case 'Value1'*/:\n              break;\n            case 'value2' /*case 'Value2'*/:\n              break;\n            case 'format' /*case 'Format'*/:\n              break;\n            default:\n              seen = false;\n          }\n          break;\n\n        /* MapInfo (schema) */\n        case 'mapinfo' /*case 'MapInfo'*/:\n        case 'schema' /*case 'Schema'*/:\n        case 'data' /*case 'data'*/:\n          switch (Rn[3]) {\n            case 'map' /*case 'Map'*/:\n              break;\n            case 'entry' /*case 'Entry'*/:\n              break;\n            case 'range' /*case 'Range'*/:\n              break;\n            case 'xpath' /*case 'XPath'*/:\n              break;\n            case 'field' /*case 'Field'*/:\n              break;\n            case 'xsdtype' /*case 'XSDType'*/:\n              break;\n            case 'filteron' /*case 'FilterOn'*/:\n              break;\n            case 'aggregate' /*case 'Aggregate'*/:\n              break;\n            case 'elementtype' /*case 'ElementType'*/:\n              break;\n            case 'attributetype' /*case 'AttributeType'*/:\n              break;\n            /* These are from xsd (XML Schema Definition) */\n            case 'schema' /*case 'schema'*/:\n            case 'element' /*case 'element'*/:\n            case 'complextype' /*case 'complexType'*/:\n            case 'datatype' /*case 'datatype'*/:\n            case 'all' /*case 'all'*/:\n            case 'attribute' /*case 'attribute'*/:\n            case 'extends' /*case 'extends'*/:\n              break;\n            case 'row' /*case 'row'*/:\n              break;\n            default:\n              seen = false;\n          }\n          break;\n\n        /* SmartTags (can be anything) */\n        case 'smarttags' /*case 'SmartTags'*/:\n          break;\n        default:\n          seen = false;\n          break;\n      }\n      if (seen) break;\n      /* CustomDocumentProperties */\n      if (Rn[3].match(/!\\[CDATA/)) break;\n      if (!state[state.length - 1][1]) throw 'Unrecognized tag: ' + Rn[3] + \"|\" + state.join(\"|\");\n      if (state[state.length - 1][0] === /*'CustomDocumentProperties'*/'customdocumentproperties') {\n        if (Rn[0].slice(-2) === \"/>\") break;else if (Rn[1] === \"/\") xlml_set_custprop(Custprops, raw_Rn3, cp, str.slice(pidx, Rn.index));else {\n          cp = Rn;\n          pidx = Rn.index + Rn[0].length;\n        }\n        break;\n      }\n      if (opts.WTF) throw 'Unrecognized tag: ' + Rn[3] + \"|\" + state.join(\"|\");\n  }\n  var out = {} /*:any*/;\n  if (!opts.bookSheets && !opts.bookProps) out.Sheets = sheets;\n  out.SheetNames = sheetnames;\n  out.Workbook = Workbook;\n  out.SSF = dup(table_fmt);\n  out.Props = Props;\n  out.Custprops = Custprops;\n  out.bookType = \"xlml\";\n  return out;\n}\nfunction parse_xlml(data /*:RawBytes|string*/, opts) /*:Workbook*/{\n  fix_read_opts(opts = opts || {});\n  switch (opts.type || \"base64\") {\n    case \"base64\":\n      return parse_xlml_xml(Base64_decode(data), opts);\n    case \"binary\":\n    case \"buffer\":\n    case \"file\":\n      return parse_xlml_xml(data, opts);\n    case \"array\":\n      return parse_xlml_xml(a2s(data), opts);\n  }\n  /*:: throw new Error(\"unsupported type \" + opts.type); */\n}\n\n/* TODO */\nfunction write_props_xlml(wb /*:Workbook*/, opts) /*:string*/{\n  var o /*:Array<string>*/ = [];\n  /* DocumentProperties */\n  if (wb.Props) o.push(xlml_write_docprops(wb.Props, opts));\n  /* CustomDocumentProperties */\n  if (wb.Custprops) o.push(xlml_write_custprops(wb.Props, wb.Custprops));\n  return o.join(\"\");\n}\n/* TODO */\nfunction write_wb_xlml(wb /*::, opts*/) /*:string*/{\n  /* OfficeDocumentSettings */\n  /* ExcelWorkbook */\n  if ((((wb || {}).Workbook || {}).WBProps || {}).date1904) return '<ExcelWorkbook xmlns=\"urn:schemas-microsoft-com:office:excel\"><Date1904/></ExcelWorkbook>';\n  return \"\";\n}\n/* TODO */\nfunction write_sty_xlml(wb, opts) /*:string*/{\n  /* Styles */\n  var styles /*:Array<string>*/ = ['<Style ss:ID=\"Default\" ss:Name=\"Normal\"><NumberFormat/></Style>'];\n  opts.cellXfs.forEach(function (xf, id) {\n    var payload /*:Array<string>*/ = [];\n    payload.push(writextag('NumberFormat', null, {\n      \"ss:Format\": escapexml(table_fmt[xf.numFmtId])\n    }));\n    var o = /*::(*/{\n      \"ss:ID\": \"s\" + (21 + id)\n    } /*:: :any)*/;\n    styles.push(writextag('Style', payload.join(\"\"), o));\n  });\n  return writextag(\"Styles\", styles.join(\"\"));\n}\nfunction write_name_xlml(n) {\n  return writextag(\"NamedRange\", null, {\n    \"ss:Name\": n.Name.slice(0, 6) == \"_xlnm.\" ? n.Name.slice(6) : n.Name,\n    \"ss:RefersTo\": \"=\" + a1_to_rc(n.Ref, {\n      r: 0,\n      c: 0\n    })\n  });\n}\nfunction write_names_xlml(wb /*::, opts*/) /*:string*/{\n  if (!((wb || {}).Workbook || {}).Names) return \"\";\n  /*:: if(!wb || !wb.Workbook || !wb.Workbook.Names) throw new Error(\"unreachable\"); */\n  var names /*:Array<any>*/ = wb.Workbook.Names;\n  var out /*:Array<string>*/ = [];\n  for (var i = 0; i < names.length; ++i) {\n    var n = names[i];\n    if (n.Sheet != null) continue;\n    if (n.Name.match(/^_xlfn\\./)) continue;\n    out.push(write_name_xlml(n));\n  }\n  return writextag(\"Names\", out.join(\"\"));\n}\nfunction write_ws_xlml_names(ws /*:Worksheet*/, opts, idx /*:number*/, wb /*:Workbook*/) /*:string*/{\n  if (!ws) return \"\";\n  if (!((wb || {}).Workbook || {}).Names) return \"\";\n  /*:: if(!wb || !wb.Workbook || !wb.Workbook.Names) throw new Error(\"unreachable\"); */\n  var names /*:Array<any>*/ = wb.Workbook.Names;\n  var out /*:Array<string>*/ = [];\n  for (var i = 0; i < names.length; ++i) {\n    var n = names[i];\n    if (n.Sheet != idx) continue;\n    /*switch(n.Name) {\n    \tcase \"_\": continue;\n    }*/\n    if (n.Name.match(/^_xlfn\\./)) continue;\n    out.push(write_name_xlml(n));\n  }\n  return out.join(\"\");\n}\n/* WorksheetOptions */\nfunction write_ws_xlml_wsopts(ws /*:Worksheet*/, opts, idx /*:number*/, wb /*:Workbook*/) /*:string*/{\n  if (!ws) return \"\";\n  var o /*:Array<string>*/ = [];\n  /* NOTE: spec technically allows any order, but stick with implied order */\n\n  /* FitToPage */\n  /* DoNotDisplayColHeaders */\n  /* DoNotDisplayRowHeaders */\n  /* ViewableRange */\n  /* Selection */\n  /* GridlineColor */\n  /* Name */\n  /* ExcelWorksheetType */\n  /* IntlMacro */\n  /* Unsynced */\n  /* Selected */\n  /* CodeName */\n\n  if (ws['!margins']) {\n    o.push(\"<PageSetup>\");\n    if (ws['!margins'].header) o.push(writextag(\"Header\", null, {\n      'x:Margin': ws['!margins'].header\n    }));\n    if (ws['!margins'].footer) o.push(writextag(\"Footer\", null, {\n      'x:Margin': ws['!margins'].footer\n    }));\n    o.push(writextag(\"PageMargins\", null, {\n      'x:Bottom': ws['!margins'].bottom || \"0.75\",\n      'x:Left': ws['!margins'].left || \"0.7\",\n      'x:Right': ws['!margins'].right || \"0.7\",\n      'x:Top': ws['!margins'].top || \"0.75\"\n    }));\n    o.push(\"</PageSetup>\");\n  }\n\n  /* PageSetup */\n  /* DisplayPageBreak */\n  /* TransitionExpressionEvaluation */\n  /* TransitionFormulaEntry */\n  /* Print */\n  /* Zoom */\n  /* PageLayoutZoom */\n  /* PageBreakZoom */\n  /* ShowPageBreakZoom */\n  /* DefaultRowHeight */\n  /* DefaultColumnWidth */\n  /* StandardWidth */\n\n  if (wb && wb.Workbook && wb.Workbook.Sheets && wb.Workbook.Sheets[idx]) {\n    /* Visible */\n    if (wb.Workbook.Sheets[idx].Hidden) o.push(writextag(\"Visible\", wb.Workbook.Sheets[idx].Hidden == 1 ? \"SheetHidden\" : \"SheetVeryHidden\", {}));else {\n      /* Selected */\n      for (var i = 0; i < idx; ++i) if (wb.Workbook.Sheets[i] && !wb.Workbook.Sheets[i].Hidden) break;\n      if (i == idx) o.push(\"<Selected/>\");\n    }\n  }\n\n  /* LeftColumnVisible */\n\n  if (((((wb || {}).Workbook || {}).Views || [])[0] || {}).RTL) o.push(\"<DisplayRightToLeft/>\");\n\n  /* GridlineColorIndex */\n  /* DisplayFormulas */\n  /* DoNotDisplayGridlines */\n  /* DoNotDisplayHeadings */\n  /* DoNotDisplayOutline */\n  /* ApplyAutomaticOutlineStyles */\n  /* NoSummaryRowsBelowDetail */\n  /* NoSummaryColumnsRightDetail */\n  /* DoNotDisplayZeros */\n  /* ActiveRow */\n  /* ActiveColumn */\n  /* FilterOn */\n  /* RangeSelection */\n  /* TopRowVisible */\n  /* TopRowBottomPane */\n  /* LeftColumnRightPane */\n  /* ActivePane */\n  /* SplitHorizontal */\n  /* SplitVertical */\n  /* FreezePanes */\n  /* FrozenNoSplit */\n  /* TabColorIndex */\n  /* Panes */\n\n  /* NOTE: Password not supported in XLML Format */\n  if (ws['!protect']) {\n    o.push(writetag(\"ProtectContents\", \"True\"));\n    if (ws['!protect'].objects) o.push(writetag(\"ProtectObjects\", \"True\"));\n    if (ws['!protect'].scenarios) o.push(writetag(\"ProtectScenarios\", \"True\"));\n    if (ws['!protect'].selectLockedCells != null && !ws['!protect'].selectLockedCells) o.push(writetag(\"EnableSelection\", \"NoSelection\"));else if (ws['!protect'].selectUnlockedCells != null && !ws['!protect'].selectUnlockedCells) o.push(writetag(\"EnableSelection\", \"UnlockedCells\"));\n    [[\"formatCells\", \"AllowFormatCells\"], [\"formatColumns\", \"AllowSizeCols\"], [\"formatRows\", \"AllowSizeRows\"], [\"insertColumns\", \"AllowInsertCols\"], [\"insertRows\", \"AllowInsertRows\"], [\"insertHyperlinks\", \"AllowInsertHyperlinks\"], [\"deleteColumns\", \"AllowDeleteCols\"], [\"deleteRows\", \"AllowDeleteRows\"], [\"sort\", \"AllowSort\"], [\"autoFilter\", \"AllowFilter\"], [\"pivotTables\", \"AllowUsePivotTables\"]].forEach(function (x) {\n      if (ws['!protect'][x[0]]) o.push(\"<\" + x[1] + \"/>\");\n    });\n  }\n  if (o.length == 0) return \"\";\n  return writextag(\"WorksheetOptions\", o.join(\"\"), {\n    xmlns: XLMLNS.x\n  });\n}\nfunction write_ws_xlml_comment(comments /*:Array<any>*/) /*:string*/{\n  /* TODO: test multiple comments */\n  return comments.map(function (c) {\n    // TODO: formatted text\n    var t = xlml_unfixstr(c.t || \"\");\n    var d = writextag(\"ss:Data\", t, {\n      \"xmlns\": \"http://www.w3.org/TR/REC-html40\"\n    });\n    var p = {};\n    if (c.a) p[\"ss:Author\"] = c.a;\n    if (!comments.hidden) p[\"ss:ShowAlways\"] = \"1\";\n    return writextag(\"Comment\", d, p);\n  }).join(\"\");\n}\nfunction write_ws_xlml_cell(cell, ref /*:string*/, ws, opts, idx /*:number*/, wb, addr) /*:string*/{\n  if (!cell || cell.v == undefined && cell.f == undefined) return \"\";\n  var attr = {};\n  if (cell.f) attr[\"ss:Formula\"] = \"=\" + escapexml(a1_to_rc(cell.f, addr));\n  if (cell.F && cell.F.slice(0, ref.length) == ref) {\n    var end = decode_cell(cell.F.slice(ref.length + 1));\n    attr[\"ss:ArrayRange\"] = \"RC:R\" + (end.r == addr.r ? \"\" : \"[\" + (end.r - addr.r) + \"]\") + \"C\" + (end.c == addr.c ? \"\" : \"[\" + (end.c - addr.c) + \"]\");\n  }\n  if (cell.l && cell.l.Target) {\n    attr[\"ss:HRef\"] = escapexml(cell.l.Target);\n    if (cell.l.Tooltip) attr[\"x:HRefScreenTip\"] = escapexml(cell.l.Tooltip);\n  }\n  if (ws['!merges']) {\n    var marr = ws['!merges'];\n    for (var mi = 0; mi != marr.length; ++mi) {\n      if (marr[mi].s.c != addr.c || marr[mi].s.r != addr.r) continue;\n      if (marr[mi].e.c > marr[mi].s.c) attr['ss:MergeAcross'] = marr[mi].e.c - marr[mi].s.c;\n      if (marr[mi].e.r > marr[mi].s.r) attr['ss:MergeDown'] = marr[mi].e.r - marr[mi].s.r;\n    }\n  }\n  var t = \"\",\n    p = \"\";\n  switch (cell.t) {\n    case 'z':\n      if (!opts.sheetStubs) return \"\";\n      break;\n    case 'n':\n      t = 'Number';\n      p = String(cell.v);\n      break;\n    case 'b':\n      t = 'Boolean';\n      p = cell.v ? \"1\" : \"0\";\n      break;\n    case 'e':\n      t = 'Error';\n      p = BErr[cell.v];\n      break;\n    case 'd':\n      t = 'DateTime';\n      p = new Date(cell.v).toISOString();\n      if (cell.z == null) cell.z = cell.z || table_fmt[14];\n      break;\n    case 's':\n      t = 'String';\n      p = escapexlml(cell.v || \"\");\n      break;\n  }\n  /* TODO: cell style */\n  var os = get_cell_style(opts.cellXfs, cell, opts);\n  attr[\"ss:StyleID\"] = \"s\" + (21 + os);\n  attr[\"ss:Index\"] = addr.c + 1;\n  var _v = cell.v != null ? p : \"\";\n  var m = cell.t == 'z' ? \"\" : '<Data ss:Type=\"' + t + '\">' + _v + '</Data>';\n  if ((cell.c || []).length > 0) m += write_ws_xlml_comment(cell.c);\n  return writextag(\"Cell\", m, attr);\n}\nfunction write_ws_xlml_row(R /*:number*/, row) /*:string*/{\n  var o = '<Row ss:Index=\"' + (R + 1) + '\"';\n  if (row) {\n    if (row.hpt && !row.hpx) row.hpx = pt2px(row.hpt);\n    if (row.hpx) o += ' ss:AutoFitHeight=\"0\" ss:Height=\"' + row.hpx + '\"';\n    if (row.hidden) o += ' ss:Hidden=\"1\"';\n  }\n  return o + '>';\n}\n/* TODO */\nfunction write_ws_xlml_table(ws /*:Worksheet*/, opts, idx /*:number*/, wb /*:Workbook*/) /*:string*/{\n  if (!ws['!ref']) return \"\";\n  var range /*:Range*/ = safe_decode_range(ws['!ref']);\n  var marr /*:Array<Range>*/ = ws['!merges'] || [],\n    mi = 0;\n  var o /*:Array<string>*/ = [];\n  if (ws['!cols']) ws['!cols'].forEach(function (n, i) {\n    process_col(n);\n    var w = !!n.width;\n    var p = col_obj_w(i, n);\n    var k /*:any*/ = {\n      \"ss:Index\": i + 1\n    };\n    if (w) k['ss:Width'] = width2px(p.width);\n    if (n.hidden) k['ss:Hidden'] = \"1\";\n    o.push(writextag(\"Column\", null, k));\n  });\n  var dense = ws[\"!data\"] != null;\n  for (var R = range.s.r; R <= range.e.r; ++R) {\n    var row = [write_ws_xlml_row(R, (ws['!rows'] || [])[R])];\n    for (var C = range.s.c; C <= range.e.c; ++C) {\n      var skip = false;\n      for (mi = 0; mi != marr.length; ++mi) {\n        if (marr[mi].s.c > C) continue;\n        if (marr[mi].s.r > R) continue;\n        if (marr[mi].e.c < C) continue;\n        if (marr[mi].e.r < R) continue;\n        if (marr[mi].s.c != C || marr[mi].s.r != R) skip = true;\n        break;\n      }\n      if (skip) continue;\n      var addr = {\n        r: R,\n        c: C\n      };\n      var ref = encode_col(C) + encode_row(R),\n        cell = dense ? (ws[\"!data\"][R] || [])[C] : ws[ref];\n      row.push(write_ws_xlml_cell(cell, ref, ws, opts, idx, wb, addr));\n    }\n    row.push(\"</Row>\");\n    if (row.length > 2) o.push(row.join(\"\"));\n  }\n  return o.join(\"\");\n}\nfunction write_ws_xlml(idx /*:number*/, opts, wb /*:Workbook*/) /*:string*/{\n  var o /*:Array<string>*/ = [];\n  var s = wb.SheetNames[idx];\n  var ws = wb.Sheets[s];\n  var t /*:string*/ = ws ? write_ws_xlml_names(ws, opts, idx, wb) : \"\";\n  if (t.length > 0) o.push(\"<Names>\" + t + \"</Names>\");\n\n  /* Table */\n  t = ws ? write_ws_xlml_table(ws, opts, idx, wb) : \"\";\n  if (t.length > 0) o.push(\"<Table>\" + t + \"</Table>\");\n\n  /* WorksheetOptions */\n  o.push(write_ws_xlml_wsopts(ws, opts, idx, wb));\n  if (ws[\"!autofilter\"]) o.push('<AutoFilter x:Range=\"' + a1_to_rc(fix_range(ws[\"!autofilter\"].ref), {\n    r: 0,\n    c: 0\n  }) + '\" xmlns=\"urn:schemas-microsoft-com:office:excel\"></AutoFilter>');\n  return o.join(\"\");\n}\nfunction write_xlml(wb, opts) /*:string*/{\n  if (!opts) opts = {};\n  if (!wb.SSF) wb.SSF = dup(table_fmt);\n  if (wb.SSF) {\n    make_ssf();\n    SSF_load_table(wb.SSF);\n    // $FlowIgnore\n    opts.revssf = evert_num(wb.SSF);\n    opts.revssf[wb.SSF[65535]] = 0;\n    opts.ssf = wb.SSF;\n    opts.cellXfs = [];\n    get_cell_style(opts.cellXfs, {}, {\n      revssf: {\n        \"General\": 0\n      }\n    });\n  }\n  var d /*:Array<string>*/ = [];\n  d.push(write_props_xlml(wb, opts));\n  d.push(write_wb_xlml(wb));\n  d.push(\"\");\n  d.push(\"\");\n  for (var i = 0; i < wb.SheetNames.length; ++i) d.push(writextag(\"Worksheet\", write_ws_xlml(i, opts, wb), {\n    \"ss:Name\": escapexml(wb.SheetNames[i])\n  }));\n  d[2] = write_sty_xlml(wb, opts);\n  d[3] = write_names_xlml(wb);\n  return XML_HEADER + writextag(\"Workbook\", d.join(\"\"), {\n    'xmlns': XLMLNS.ss,\n    'xmlns:o': XLMLNS.o,\n    'xmlns:x': XLMLNS.x,\n    'xmlns:ss': XLMLNS.ss,\n    'xmlns:dt': XLMLNS.dt,\n    'xmlns:html': XLMLNS.html\n  });\n}\n/* [MS-OLEDS] 2.3.8 CompObjStream */\nfunction parse_compobj(obj /*:CFBEntry*/) {\n  var v = {};\n  var o = obj.content;\n  /*:: if(o == null) return; */\n\n  /* [MS-OLEDS] 2.3.7 CompObjHeader -- All fields MUST be ignored */\n  o.l = 28;\n  v.AnsiUserType = o.read_shift(0, \"lpstr-ansi\");\n  v.AnsiClipboardFormat = parse_ClipboardFormatOrAnsiString(o);\n  if (o.length - o.l <= 4) return v;\n  var m /*:number*/ = o.read_shift(4);\n  if (m == 0 || m > 40) return v;\n  o.l -= 4;\n  v.Reserved1 = o.read_shift(0, \"lpstr-ansi\");\n  if (o.length - o.l <= 4) return v;\n  m = o.read_shift(4);\n  if (m !== 0x71b239f4) return v;\n  v.UnicodeClipboardFormat = parse_ClipboardFormatOrUnicodeString(o);\n  m = o.read_shift(4);\n  if (m == 0 || m > 40) return v;\n  o.l -= 4;\n  v.Reserved2 = o.read_shift(0, \"lpwstr\");\n}\n\n/*\n\tContinue logic for:\n\t- 2.4.58 Continue          0x003c\n\t- 2.4.59 ContinueBigName   0x043c\n\t- 2.4.60 ContinueFrt       0x0812\n\t- 2.4.61 ContinueFrt11     0x0875\n\t- 2.4.62 ContinueFrt12     0x087f\n*/\nvar CONTINUE_RT = [0x003c, 0x043c, 0x0812, 0x0875, 0x087f];\nfunction slurp(RecordType, R, blob, length /*:number*/, opts) /*:any*/{\n  var l = length;\n  var bufs = [];\n  var d = blob.slice(blob.l, blob.l + l);\n  if (opts && opts.enc && opts.enc.insitu && d.length > 0) switch (RecordType) {\n    case 0x0009:\n    case 0x0209:\n    case 0x0409:\n    case 0x0809 /* BOF */:\n    case 0x002F /* FilePass */:\n    case 0x0195 /* FileLock */:\n    case 0x00E1 /* InterfaceHdr */:\n    case 0x0196 /* RRDInfo */:\n    case 0x0138 /* RRDHead */:\n    case 0x0194 /* UsrExcl */:\n    case 0x000a /* EOF */:\n      break;\n    case 0x0085 /* BoundSheet8 */:\n      break;\n    default:\n      opts.enc.insitu(d);\n  }\n  bufs.push(d);\n  blob.l += l;\n  var nextrt = __readUInt16LE(blob, blob.l),\n    next = XLSRecordEnum[nextrt];\n  var start = 0;\n  while (next != null && CONTINUE_RT.indexOf(nextrt) > -1) {\n    l = __readUInt16LE(blob, blob.l + 2);\n    start = blob.l + 4;\n    if (nextrt == 0x0812 /* ContinueFrt */) start += 4;else if (nextrt == 0x0875 || nextrt == 0x087f) {\n      start += 12;\n    }\n    d = blob.slice(start, blob.l + 4 + l);\n    bufs.push(d);\n    blob.l += 4 + l;\n    next = XLSRecordEnum[nextrt = __readUInt16LE(blob, blob.l)];\n  }\n  var b = bconcat(bufs) /*:any*/;\n  prep_blob(b, 0);\n  var ll = 0;\n  b.lens = [];\n  for (var j = 0; j < bufs.length; ++j) {\n    b.lens.push(ll);\n    ll += bufs[j].length;\n  }\n  if (b.length < length) throw \"XLS Record 0x\" + RecordType.toString(16) + \" Truncated: \" + b.length + \" < \" + length;\n  return R.f(b, b.length, opts);\n}\nfunction safe_format_xf(p /*:any*/, opts /*:ParseOpts*/, date1904 /*:?boolean*/) {\n  if (p.t === 'z') return;\n  if (!p.XF) return;\n  var fmtid = 0;\n  try {\n    fmtid = p.z || p.XF.numFmtId || 0;\n    if (opts.cellNF && p.z == null) p.z = table_fmt[fmtid];\n  } catch (e) {\n    if (opts.WTF) throw e;\n  }\n  if (!opts || opts.cellText !== false) try {\n    if (p.t === 'e') {\n      p.w = p.w || BErr[p.v];\n    } else if (fmtid === 0 || fmtid == \"General\") {\n      if (p.t === 'n') {\n        if ((p.v | 0) === p.v) p.w = p.v.toString(10);else p.w = SSF_general_num(p.v);\n      } else p.w = SSF_general(p.v);\n    } else p.w = SSF_format(fmtid, p.v, {\n      date1904: !!date1904,\n      dateNF: opts && opts.dateNF\n    });\n  } catch (e) {\n    if (opts.WTF) throw e;\n  }\n  if (opts.cellDates && fmtid && p.t == 'n' && fmt_is_date(table_fmt[fmtid] || String(fmtid))) {\n    var _d = SSF_parse_date_code(p.v + (date1904 ? 1462 : 0));\n    if (_d) {\n      p.t = 'd';\n      p.v = new Date(Date.UTC(_d.y, _d.m - 1, _d.d, _d.H, _d.M, _d.S, _d.u));\n    }\n  }\n}\nfunction make_cell(val, ixfe, t) /*:Cell*/{\n  return {\n    v: val,\n    ixfe: ixfe,\n    t: t\n  } /*:any*/;\n}\n\n// 2.3.2\nfunction parse_workbook(blob, options /*:ParseOpts*/) /*:Workbook*/{\n  var wb = {\n    opts: {}\n  } /*:any*/;\n  var Sheets = {};\n  var out /*:Worksheet*/ = {} /*:any*/;\n  if (options.dense) out[\"!data\"] = [];\n  var Directory = {};\n  var range /*:Range*/ = {} /*:any*/;\n  var last_formula = null;\n  var sst /*:SST*/ = [] /*:any*/;\n  var cur_sheet = \"\";\n  var Preamble = {};\n  var lastcell,\n    last_cell = \"\",\n    cc /*:Cell*/,\n    cmnt,\n    rngC,\n    rngR;\n  var sharedf = {};\n  var arrayf /*:Array<[Range, string]>*/ = [];\n  var temp_val /*:Cell*/;\n  var country;\n  var XFs = []; /* XF records */\n  var palette /*:Array<[number, number, number]>*/ = [];\n  var Workbook /*:WBWBProps*/ = {\n      Sheets: [],\n      WBProps: {\n        date1904: false\n      },\n      Views: [{}]\n    } /*:any*/,\n    wsprops = {};\n  var biff4w = false;\n  var get_rgb = function getrgb(icv /*:number*/) /*:[number, number, number]*/{\n    if (icv < 8) return XLSIcv[icv];\n    if (icv < 64) return palette[icv - 8] || XLSIcv[icv];\n    return XLSIcv[icv];\n  };\n  var process_cell_style = function pcs(cell, line /*:any*/, options) {\n    var xfd = line.XF.data;\n    if (!xfd || !xfd.patternType || !options || !options.cellStyles) return;\n    line.s = {} /*:any*/;\n    line.s.patternType = xfd.patternType;\n    var t;\n    if (t = rgb2Hex(get_rgb(xfd.icvFore))) {\n      line.s.fgColor = {\n        rgb: t\n      };\n    }\n    if (t = rgb2Hex(get_rgb(xfd.icvBack))) {\n      line.s.bgColor = {\n        rgb: t\n      };\n    }\n  };\n  var addcell = function addcell(cell /*:any*/, line /*:any*/, options /*:any*/) {\n    if (!biff4w && file_depth > 1) return;\n    if (options.sheetRows && cell.r >= options.sheetRows) return;\n    if (options.cellStyles && line.XF && line.XF.data) process_cell_style(cell, line, options);\n    delete line.ixfe;\n    delete line.XF;\n    lastcell = cell;\n    last_cell = encode_cell(cell);\n    if (!range || !range.s || !range.e) range = {\n      s: {\n        r: 0,\n        c: 0\n      },\n      e: {\n        r: 0,\n        c: 0\n      }\n    };\n    if (cell.r < range.s.r) range.s.r = cell.r;\n    if (cell.c < range.s.c) range.s.c = cell.c;\n    if (cell.r + 1 > range.e.r) range.e.r = cell.r + 1;\n    if (cell.c + 1 > range.e.c) range.e.c = cell.c + 1;\n    if (options.cellFormula && line.f) {\n      for (var afi = 0; afi < arrayf.length; ++afi) {\n        if (arrayf[afi][0].s.c > cell.c || arrayf[afi][0].s.r > cell.r) continue;\n        if (arrayf[afi][0].e.c < cell.c || arrayf[afi][0].e.r < cell.r) continue;\n        line.F = encode_range(arrayf[afi][0]);\n        if (arrayf[afi][0].s.c != cell.c || arrayf[afi][0].s.r != cell.r) delete line.f;\n        if (line.f) line.f = \"\" + stringify_formula(arrayf[afi][1], range, cell, supbooks, opts);\n        break;\n      }\n    }\n    {\n      if (options.dense) {\n        if (!out[\"!data\"][cell.r]) out[\"!data\"][cell.r] = [];\n        out[\"!data\"][cell.r][cell.c] = line;\n      } else out[last_cell] = line;\n    }\n  };\n  var opts = {\n    enc: false,\n    // encrypted\n    sbcch: 0,\n    // cch in the preceding SupBook\n    snames: [],\n    // sheetnames\n    sharedf: sharedf,\n    // shared formulae by address\n    arrayf: arrayf,\n    // array formulae array\n    rrtabid: [],\n    // RRTabId\n    lastuser: \"\",\n    // Last User from WriteAccess\n    biff: 8,\n    // BIFF version\n    codepage: 0,\n    // CP from CodePage record\n    winlocked: 0,\n    // fLockWn from WinProtect\n    cellStyles: !!options && !!options.cellStyles,\n    WTF: !!options && !!options.wtf\n  } /*:any*/;\n  if (options.password) opts.password = options.password;\n  var themes;\n  var merges /*:Array<Range>*/ = [];\n  var objects = [];\n  var colinfo /*:Array<ColInfo>*/ = [],\n    rowinfo /*:Array<RowInfo>*/ = [];\n  var seencol = false;\n  var supbooks = [] /*:any*/; // 1-indexed, will hold extern names\n  supbooks.SheetNames = opts.snames;\n  supbooks.sharedf = opts.sharedf;\n  supbooks.arrayf = opts.arrayf;\n  supbooks.names = [];\n  supbooks.XTI = [];\n  var last_RT = 0;\n  var file_depth = 0; /* TODO: make a real stack */\n  var BIFF2Fmt = 0,\n    BIFF2FmtTable /*:Array<string>*/ = [];\n  var FilterDatabases = []; /* TODO: sort out supbooks and process elsewhere */\n  var last_lbl /*:?DefinedName*/;\n\n  /* explicit override for some broken writers */\n  opts.codepage = 1200;\n  set_cp(1200);\n  var seen_codepage = false;\n  while (blob.l < blob.length - 1) {\n    var s = blob.l;\n    var RecordType = blob.read_shift(2);\n    if (RecordType === 0 && last_RT === 0x000a /* EOF */) break;\n    var length = blob.l === blob.length ? 0 : blob.read_shift(2);\n    var R = XLSRecordEnum[RecordType];\n    if (file_depth == 0 && [0x0009, 0x0209, 0x0409, 0x0809].indexOf(RecordType) == -1 /* BOF */) break;\n    //console.log(RecordType.toString(16), RecordType, R, blob.l, length, blob.length);\n    //if(!R) console.log(blob.slice(blob.l, blob.l + length));\n    if (R && R.f) {\n      if (options.bookSheets) {\n        if (last_RT === 0x0085 /* BoundSheet8 */ && RecordType !== 0x0085 /* R.n !== 'BoundSheet8' */) break;\n      }\n      last_RT = RecordType;\n      if (R.r === 2 || R.r == 12) {\n        var rt = blob.read_shift(2);\n        length -= 2;\n        if (!opts.enc && rt !== RecordType && ((rt & 0xFF) << 8 | rt >> 8) !== RecordType) throw new Error(\"rt mismatch: \" + rt + \"!=\" + RecordType);\n        if (R.r == 12) {\n          blob.l += 10;\n          length -= 10;\n        } // skip FRT\n      }\n      //console.error(R,blob.l,length,blob.length);\n      var val /*:any*/ = {} /*:any*/;\n      if (RecordType === 0x000a /* EOF */) val = /*::(*/R.f(blob, length, opts) /*:: :any)*/;else val = /*::(*/slurp(RecordType, R, blob, length, opts) /*:: :any)*/;\n      /*:: val = (val:any); */\n      if (file_depth == 0 && [0x0009, 0x0209, 0x0409, 0x0809].indexOf(last_RT) === -1 /* BOF */) continue;\n      switch (RecordType) {\n        case 0x0022 /* Date1904 */:\n          /*:: if(!Workbook.WBProps) Workbook.WBProps = {}; */\n          wb.opts.Date1904 = Workbook.WBProps.date1904 = val;\n          break;\n        case 0x0086 /* WriteProtect */:\n          wb.opts.WriteProtect = true;\n          break;\n        case 0x002f /* FilePass */:\n          if (!opts.enc) blob.l = 0;\n          opts.enc = val;\n          if (!options.password) throw new Error(\"File is password-protected\");\n          if (val.valid == null) throw new Error(\"Encryption scheme unsupported\");\n          if (!val.valid) throw new Error(\"Password is incorrect\");\n          break;\n        case 0x005c /* WriteAccess */:\n          opts.lastuser = val;\n          break;\n        case 0x0042 /* CodePage */:\n          var cpval = Number(val);\n          /* overrides based on test cases */\n          switch (cpval) {\n            case 0x5212:\n              cpval = 1200;\n              break;\n            case 0x8000:\n              cpval = 10000;\n              break;\n            case 0x8001:\n              cpval = 1252;\n              break;\n          }\n          set_cp(opts.codepage = cpval);\n          seen_codepage = true;\n          break;\n        case 0x013d /* RRTabId */:\n          opts.rrtabid = val;\n          break;\n        case 0x0019 /* WinProtect */:\n          opts.winlocked = val;\n          break;\n        case 0x01b7 /* RefreshAll */:\n          wb.opts[\"RefreshAll\"] = val;\n          break;\n        case 0x000c /* CalcCount */:\n          wb.opts[\"CalcCount\"] = val;\n          break;\n        case 0x0010 /* CalcDelta */:\n          wb.opts[\"CalcDelta\"] = val;\n          break;\n        case 0x0011 /* CalcIter */:\n          wb.opts[\"CalcIter\"] = val;\n          break;\n        case 0x000d /* CalcMode */:\n          wb.opts[\"CalcMode\"] = val;\n          break;\n        case 0x000e /* CalcPrecision */:\n          wb.opts[\"CalcPrecision\"] = val;\n          break;\n        case 0x005f /* CalcSaveRecalc */:\n          wb.opts[\"CalcSaveRecalc\"] = val;\n          break;\n        case 0x000f /* CalcRefMode */:\n          opts.CalcRefMode = val;\n          break;\n        // TODO: implement R1C1\n        case 0x08a3 /* ForceFullCalculation */:\n          wb.opts.FullCalc = val;\n          break;\n        case 0x0081 /* WsBool */:\n          if (val.fDialog) out[\"!type\"] = \"dialog\";\n          if (!val.fBelow) (out[\"!outline\"] || (out[\"!outline\"] = {})).above = true;\n          if (!val.fRight) (out[\"!outline\"] || (out[\"!outline\"] = {})).left = true;\n          break;\n        // TODO\n        case 0x0043: /* BIFF2XF */\n        case 0x0243: /* BIFF3XF */\n        case 0x0443: /* BIFF4XF */\n        case 0x00e0 /* XF */:\n          XFs.push(val);\n          break;\n        case 0x01ae /* SupBook */:\n          supbooks.push([val]);\n          supbooks[supbooks.length - 1].XTI = [];\n          break;\n        case 0x0023:\n        case 0x0223 /* ExternName */:\n          supbooks[supbooks.length - 1].push(val);\n          break;\n        case 0x0018:\n        case 0x0218 /* Lbl */:\n          last_lbl = {\n            Name: val.Name,\n            Ref: stringify_formula(val.rgce, range, null, supbooks, opts)\n          } /*:DefinedName*/;\n          if (val.itab > 0) last_lbl.Sheet = val.itab - 1;\n          supbooks.names.push(last_lbl);\n          if (!supbooks[0]) {\n            supbooks[0] = [];\n            supbooks[0].XTI = [];\n          }\n          supbooks[supbooks.length - 1].push(val);\n          if (val.Name == \"_xlnm._FilterDatabase\" && val.itab > 0) if (val.rgce && val.rgce[0] && val.rgce[0][0] && val.rgce[0][0][0] == 'PtgArea3d') FilterDatabases[val.itab - 1] = {\n            ref: encode_range(val.rgce[0][0][1][2])\n          };\n          break;\n        case 0x0016 /* ExternCount */:\n          opts.ExternCount = val;\n          break;\n        case 0x0017 /* ExternSheet */:\n          if (supbooks.length == 0) {\n            supbooks[0] = [];\n            supbooks[0].XTI = [];\n          }\n          supbooks[supbooks.length - 1].XTI = supbooks[supbooks.length - 1].XTI.concat(val);\n          supbooks.XTI = supbooks.XTI.concat(val);\n          break;\n        case 0x0894 /* NameCmt */:\n          /* TODO: search for correct name */\n          if (opts.biff < 8) break;\n          if (last_lbl != null) last_lbl.Comment = val[1];\n          break;\n        case 0x0012 /* Protect */:\n          out[\"!protect\"] = val;\n          break;\n        /* for sheet or book */\n        case 0x0013 /* Password */:\n          if (val !== 0 && opts.WTF) console.error(\"Password verifier: \" + val);\n          break;\n        case 0x0085 /* BoundSheet8 */:\n          {\n            Directory[opts.biff == 4 ? opts.snames.length : val.pos] = val;\n            opts.snames.push(val.name);\n          }\n          break;\n        case 0x000a /* EOF */:\n          {\n            if (--file_depth ? !biff4w : biff4w) break;\n            if (range.e) {\n              if (range.e.r > 0 && range.e.c > 0) {\n                range.e.r--;\n                range.e.c--;\n                out[\"!ref\"] = encode_range(range);\n                if (options.sheetRows && options.sheetRows <= range.e.r) {\n                  var tmpri = range.e.r;\n                  range.e.r = options.sheetRows - 1;\n                  out[\"!fullref\"] = out[\"!ref\"];\n                  out[\"!ref\"] = encode_range(range);\n                  range.e.r = tmpri;\n                }\n                range.e.r++;\n                range.e.c++;\n              }\n              if (merges.length > 0) out[\"!merges\"] = merges;\n              if (objects.length > 0) out[\"!objects\"] = objects;\n              if (colinfo.length > 0) out[\"!cols\"] = colinfo;\n              if (rowinfo.length > 0) out[\"!rows\"] = rowinfo;\n              Workbook.Sheets.push(wsprops);\n            }\n            if (cur_sheet === \"\") Preamble = out;else Sheets[cur_sheet] = out;\n            out = {} /*:any*/;\n            if (options.dense) out[\"!data\"] = [];\n          }\n          break;\n        case 0x0009:\n        case 0x0209:\n        case 0x0409:\n        case 0x0809 /* BOF */:\n          {\n            if (opts.biff === 8) opts.biff = {\n              /*::[*/0x0009 /*::]*/: 2,\n              /*::[*/0x0209 /*::]*/: 3,\n              /*::[*/0x0409 /*::]*/: 4\n            }[RecordType] || {\n              /*::[*/0x0200 /*::]*/: 2,\n              /*::[*/0x0300 /*::]*/: 3,\n              /*::[*/0x0400 /*::]*/: 4,\n              /*::[*/0x0500 /*::]*/: 5,\n              /*::[*/0x0600 /*::]*/: 8,\n              /*::[*/0x0002 /*::]*/: 2,\n              /*::[*/0x0007 /*::]*/: 2\n            }[val.BIFFVer] || 8;\n            opts.biffguess = val.BIFFVer == 0;\n            if (val.BIFFVer == 0 && val.dt == 0x1000) {\n              opts.biff = 5;\n              seen_codepage = true;\n              set_cp(opts.codepage = 28591);\n            }\n            if (opts.biff == 4 && val.dt & 0x100) biff4w = true;\n            if (opts.biff == 8 && val.BIFFVer == 0 && val.dt == 16) opts.biff = 2;\n            if (file_depth++ && !biff4w) break;\n            out = {} /*:any*/;\n            if (options.dense) out[\"!data\"] = [];\n            if (opts.biff < 8 && !seen_codepage) {\n              seen_codepage = true;\n              set_cp(opts.codepage = options.codepage || 1252);\n            }\n            if (opts.biff == 4 && biff4w) {\n              cur_sheet = (Directory[opts.snames.indexOf(cur_sheet) + 1] || {\n                name: \"\"\n              }).name;\n            } else if (opts.biff < 5 || val.BIFFVer == 0 && val.dt == 0x1000) {\n              if (cur_sheet === \"\") cur_sheet = \"Sheet1\";\n              range = {\n                s: {\n                  r: 0,\n                  c: 0\n                },\n                e: {\n                  r: 0,\n                  c: 0\n                }\n              };\n              /* fake BoundSheet8 */\n              var fakebs8 = {\n                pos: blob.l - length,\n                name: cur_sheet\n              };\n              Directory[fakebs8.pos] = fakebs8;\n              opts.snames.push(cur_sheet);\n            } else cur_sheet = (Directory[s] || {\n              name: \"\"\n            }).name;\n            if (val.dt == 0x20) out[\"!type\"] = \"chart\";\n            if (val.dt == 0x40) out[\"!type\"] = \"macro\";\n            merges = [];\n            objects = [];\n            opts.arrayf = arrayf = [];\n            colinfo = [];\n            rowinfo = [];\n            seencol = false;\n            wsprops = {\n              Hidden: (Directory[s] || {\n                hs: 0\n              }).hs,\n              name: cur_sheet\n            };\n          }\n          break;\n        case 0x0203 /* Number */:\n        case 0x0003 /* BIFF2NUM */:\n        case 0x0002 /* BIFF2INT */:\n          {\n            if (out[\"!type\"] == \"chart\") if (options.dense ? (out[\"!data\"][val.r] || [])[val.c] : out[encode_col(val.c) + encode_row(val.r)]) ++val.c;\n            temp_val = {\n              ixfe: val.ixfe,\n              XF: XFs[val.ixfe] || {},\n              v: val.val,\n              t: 'n'\n            } /*:any*/;\n            if (BIFF2Fmt > 0) temp_val.z = temp_val.XF && temp_val.XF.numFmtId && BIFF2FmtTable[temp_val.XF.numFmtId] || BIFF2FmtTable[temp_val.ixfe >> 8 & 0x3F];\n            safe_format_xf(temp_val, options, wb.opts.Date1904);\n            addcell({\n              c: val.c,\n              r: val.r\n            }, temp_val, options);\n          }\n          break;\n        case 0x0005:\n        case 0x0205 /* BoolErr */:\n          {\n            temp_val = {\n              ixfe: val.ixfe,\n              XF: XFs[val.ixfe],\n              v: val.val,\n              t: val.t\n            } /*:any*/;\n            if (BIFF2Fmt > 0) temp_val.z = temp_val.XF && temp_val.XF.numFmtId && BIFF2FmtTable[temp_val.XF.numFmtId] || BIFF2FmtTable[temp_val.ixfe >> 8 & 0x3F];\n            safe_format_xf(temp_val, options, wb.opts.Date1904);\n            addcell({\n              c: val.c,\n              r: val.r\n            }, temp_val, options);\n          }\n          break;\n        case 0x027e /* RK */:\n          {\n            temp_val = {\n              ixfe: val.ixfe,\n              XF: XFs[val.ixfe],\n              v: val.rknum,\n              t: 'n'\n            } /*:any*/;\n            if (BIFF2Fmt > 0) temp_val.z = temp_val.XF && temp_val.XF.numFmtId && BIFF2FmtTable[temp_val.XF.numFmtId] || BIFF2FmtTable[temp_val.ixfe >> 8 & 0x3F];\n            safe_format_xf(temp_val, options, wb.opts.Date1904);\n            addcell({\n              c: val.c,\n              r: val.r\n            }, temp_val, options);\n          }\n          break;\n        case 0x00bd /* MulRk */:\n          {\n            for (var j = val.c; j <= val.C; ++j) {\n              var ixfe = val.rkrec[j - val.c][0];\n              temp_val = {\n                ixfe: ixfe,\n                XF: XFs[ixfe],\n                v: val.rkrec[j - val.c][1],\n                t: 'n'\n              } /*:any*/;\n              if (BIFF2Fmt > 0) temp_val.z = temp_val.XF && temp_val.XF.numFmtId && BIFF2FmtTable[temp_val.XF.numFmtId] || BIFF2FmtTable[temp_val.ixfe >> 8 & 0x3F];\n              safe_format_xf(temp_val, options, wb.opts.Date1904);\n              addcell({\n                c: j,\n                r: val.r\n              }, temp_val, options);\n            }\n          }\n          break;\n        case 0x0006:\n        case 0x0206:\n        case 0x0406 /* Formula */:\n          {\n            if (val.val == 'String') {\n              last_formula = val;\n              break;\n            }\n            temp_val = make_cell(val.val, val.cell.ixfe, val.tt);\n            temp_val.XF = XFs[temp_val.ixfe];\n            if (options.cellFormula) {\n              var _f = val.formula;\n              if (_f && _f[0] && _f[0][0] && _f[0][0][0] == 'PtgExp') {\n                var _fr = _f[0][0][1][0],\n                  _fc = _f[0][0][1][1];\n                var _fe = encode_cell({\n                  r: _fr,\n                  c: _fc\n                });\n                if (sharedf[_fe]) temp_val.f = \"\" + stringify_formula(val.formula, range, val.cell, supbooks, opts);else temp_val.F = ((options.dense ? (out[\"!data\"][_fr] || [])[_fc] : out[_fe]) || {}).F;\n              } else temp_val.f = \"\" + stringify_formula(val.formula, range, val.cell, supbooks, opts);\n            }\n            if (BIFF2Fmt > 0) temp_val.z = temp_val.XF && temp_val.XF.numFmtId && BIFF2FmtTable[temp_val.XF.numFmtId] || BIFF2FmtTable[temp_val.ixfe >> 8 & 0x3F];\n            safe_format_xf(temp_val, options, wb.opts.Date1904);\n            addcell(val.cell, temp_val, options);\n            last_formula = val;\n          }\n          break;\n        case 0x0007:\n        case 0x0207 /* String */:\n          {\n            if (last_formula) {\n              /* technically always true */\n              last_formula.val = val;\n              temp_val = make_cell(val, last_formula.cell.ixfe, 's');\n              temp_val.XF = XFs[temp_val.ixfe];\n              if (options.cellFormula) {\n                temp_val.f = \"\" + stringify_formula(last_formula.formula, range, last_formula.cell, supbooks, opts);\n              }\n              if (BIFF2Fmt > 0) temp_val.z = temp_val.XF && temp_val.XF.numFmtId && BIFF2FmtTable[temp_val.XF.numFmtId] || BIFF2FmtTable[temp_val.ixfe >> 8 & 0x3F];\n              safe_format_xf(temp_val, options, wb.opts.Date1904);\n              addcell(last_formula.cell, temp_val, options);\n              last_formula = null;\n            } else throw new Error(\"String record expects Formula\");\n          }\n          break;\n        case 0x0021:\n        case 0x0221 /* Array */:\n          {\n            arrayf.push(val);\n            var _arraystart = encode_cell(val[0].s);\n            cc = options.dense ? (out[\"!data\"][val[0].s.r] || [])[val[0].s.c] : out[_arraystart];\n            if (options.cellFormula && cc) {\n              if (!last_formula) break; /* technically unreachable */\n              if (!_arraystart || !cc) break;\n              cc.f = \"\" + stringify_formula(val[1], range, val[0], supbooks, opts);\n              cc.F = encode_range(val[0]);\n            }\n          }\n          break;\n        case 0x04bc /* ShrFmla */:\n          {\n            if (!options.cellFormula) break;\n            if (last_cell) {\n              /* TODO: capture range */\n              if (!last_formula) break; /* technically unreachable */\n              sharedf[encode_cell(last_formula.cell)] = val[0];\n              cc = options.dense ? (out[\"!data\"][last_formula.cell.r] || [])[last_formula.cell.c] : out[encode_cell(last_formula.cell)];\n              (cc || {}).f = \"\" + stringify_formula(val[0], range, lastcell, supbooks, opts);\n            }\n          }\n          break;\n        case 0x00fd /* LabelSst */:\n          temp_val = make_cell(sst[val.isst].t, val.ixfe, 's');\n          if (sst[val.isst].h) temp_val.h = sst[val.isst].h;\n          temp_val.XF = XFs[temp_val.ixfe];\n          if (BIFF2Fmt > 0) temp_val.z = temp_val.XF && temp_val.XF.numFmtId && BIFF2FmtTable[temp_val.XF.numFmtId] || BIFF2FmtTable[temp_val.ixfe >> 8 & 0x3F];\n          safe_format_xf(temp_val, options, wb.opts.Date1904);\n          addcell({\n            c: val.c,\n            r: val.r\n          }, temp_val, options);\n          break;\n        case 0x0201 /* Blank */:\n          if (options.sheetStubs) {\n            temp_val = {\n              ixfe: val.ixfe,\n              XF: XFs[val.ixfe],\n              t: 'z'\n            } /*:any*/;\n            if (BIFF2Fmt > 0) temp_val.z = temp_val.XF && temp_val.XF.numFmtId && BIFF2FmtTable[temp_val.XF.numFmtId] || BIFF2FmtTable[temp_val.ixfe >> 8 & 0x3F];\n            safe_format_xf(temp_val, options, wb.opts.Date1904);\n            addcell({\n              c: val.c,\n              r: val.r\n            }, temp_val, options);\n          }\n          break;\n        case 0x00be /* MulBlank */:\n          if (options.sheetStubs) {\n            for (var _j = val.c; _j <= val.C; ++_j) {\n              var _ixfe = val.ixfe[_j - val.c];\n              temp_val = {\n                ixfe: _ixfe,\n                XF: XFs[_ixfe],\n                t: 'z'\n              } /*:any*/;\n              if (BIFF2Fmt > 0) temp_val.z = temp_val.XF && temp_val.XF.numFmtId && BIFF2FmtTable[temp_val.XF.numFmtId] || BIFF2FmtTable[temp_val.ixfe >> 8 & 0x3F];\n              safe_format_xf(temp_val, options, wb.opts.Date1904);\n              addcell({\n                c: _j,\n                r: val.r\n              }, temp_val, options);\n            }\n          }\n          break;\n        case 0x00d6 /* RString */:\n        case 0x0204 /* Label */:\n        case 0x0004 /* BIFF2STR */:\n          temp_val = make_cell(val.val, val.ixfe, 's');\n          temp_val.XF = XFs[temp_val.ixfe];\n          if (BIFF2Fmt > 0) temp_val.z = temp_val.XF && temp_val.XF.numFmtId && BIFF2FmtTable[temp_val.XF.numFmtId] || BIFF2FmtTable[temp_val.ixfe >> 8 & 0x3F];\n          safe_format_xf(temp_val, options, wb.opts.Date1904);\n          addcell({\n            c: val.c,\n            r: val.r\n          }, temp_val, options);\n          break;\n        case 0x0000:\n        case 0x0200 /* Dimensions */:\n          {\n            if (file_depth === 1) range = val; /* TODO: stack */\n          }\n          break;\n        case 0x00fc /* SST */:\n          {\n            sst = val;\n          }\n          break;\n        case 0x041e /* Format */:\n          {\n            /* val = [id, fmt] */\n            if (opts.biff >= 3 && opts.biff <= 4) {\n              BIFF2FmtTable[BIFF2Fmt++] = val[1];\n              for (var b4idx = 0; b4idx < BIFF2Fmt + 163; ++b4idx) if (table_fmt[b4idx] == val[1]) break;\n              if (b4idx >= 163) SSF__load(val[1], BIFF2Fmt + 163);\n            } else SSF__load(val[1], val[0]);\n          }\n          break;\n        case 0x001e /* BIFF2FORMAT */:\n          {\n            BIFF2FmtTable[BIFF2Fmt++] = val;\n            for (var b2idx = 0; b2idx < BIFF2Fmt + 163; ++b2idx) if (table_fmt[b2idx] == val) break;\n            if (b2idx >= 163) SSF__load(val, BIFF2Fmt + 163);\n          }\n          break;\n        case 0x00e5 /* MergeCells */:\n          merges = merges.concat(val);\n          break;\n        case 0x005d /* Obj */:\n          objects[val.cmo[0]] = opts.lastobj = val;\n          break;\n        case 0x01b6 /* TxO */:\n          opts.lastobj.TxO = val;\n          break;\n        case 0x007f /* ImData */:\n          opts.lastobj.ImData = val;\n          break;\n        case 0x01b8 /* HLink */:\n          {\n            for (rngR = val[0].s.r; rngR <= val[0].e.r; ++rngR) for (rngC = val[0].s.c; rngC <= val[0].e.c; ++rngC) {\n              cc = options.dense ? (out[\"!data\"][rngR] || [])[rngC] : out[encode_cell({\n                c: rngC,\n                r: rngR\n              })];\n              if (cc) cc.l = val[1];\n            }\n          }\n          break;\n        case 0x0800 /* HLinkTooltip */:\n          {\n            for (rngR = val[0].s.r; rngR <= val[0].e.r; ++rngR) for (rngC = val[0].s.c; rngC <= val[0].e.c; ++rngC) {\n              cc = options.dense ? (out[\"!data\"][rngR] || [])[rngC] : out[encode_cell({\n                c: rngC,\n                r: rngR\n              })];\n              if (cc && cc.l) cc.l.Tooltip = val[1];\n            }\n          }\n          break;\n        case 0x001c /* Note */:\n          {\n            /* TODO: comment continuation (row == -1 / 0xFFFF) */\n            cc = options.dense ? (out[\"!data\"][val[0].r] || [])[val[0].c] : out[encode_cell(val[0])];\n            if (!cc) {\n              if (options.dense) {\n                if (!out[\"!data\"][val[0].r]) out[\"!data\"][val[0].r] = [];\n                cc = out[\"!data\"][val[0].r][val[0].c] = {\n                  t: \"z\"\n                } /*:any*/;\n              } else {\n                cc = out[encode_cell(val[0])] = {\n                  t: \"z\"\n                } /*:any*/;\n              }\n\n              range.e.r = Math.max(range.e.r, val[0].r);\n              range.s.r = Math.min(range.s.r, val[0].r);\n              range.e.c = Math.max(range.e.c, val[0].c);\n              range.s.c = Math.min(range.s.c, val[0].c);\n            }\n            if (!cc.c) cc.c = [];\n            if (opts.biff <= 5 && opts.biff >= 2) cmnt = {\n              a: \"SheetJ5\",\n              t: val[1]\n            };else {\n              var noteobj = objects[val[2]];\n              cmnt = {\n                a: val[1],\n                t: noteobj.TxO.t\n              };\n              if (val[3] != null && !(val[3] & 0x02)) cc.c.hidden = true;\n            }\n            cc.c.push(cmnt);\n          }\n          break;\n        case 0x087d /* XFExt */:\n          update_xfext(XFs[val.ixfe], val.ext);\n          break;\n        case 0x007d /* ColInfo */:\n          {\n            if (!opts.cellStyles) break;\n            while (val.e >= val.s) {\n              colinfo[val.e--] = {\n                width: val.w / 256,\n                level: val.level || 0,\n                hidden: !!(val.flags & 1)\n              };\n              if (!seencol) {\n                seencol = true;\n                find_mdw_colw(val.w / 256);\n              }\n              process_col(colinfo[val.e + 1]);\n            }\n          }\n          break;\n        case 0x0208 /* Row */:\n          {\n            var rowobj = {};\n            if (val.level != null) {\n              rowinfo[val.r] = rowobj;\n              rowobj.level = val.level;\n            }\n            if (val.hidden) {\n              rowinfo[val.r] = rowobj;\n              rowobj.hidden = true;\n            }\n            if (val.hpt) {\n              rowinfo[val.r] = rowobj;\n              rowobj.hpt = val.hpt;\n              rowobj.hpx = pt2px(val.hpt);\n            }\n          }\n          break;\n        case 0x0026 /* LeftMargin */:\n        case 0x0027 /* RightMargin */:\n        case 0x0028 /* TopMargin */:\n        case 0x0029 /* BottomMargin */:\n          if (!out['!margins']) default_margins(out['!margins'] = {});\n          out['!margins'][{\n            0x26: \"left\",\n            0x27: \"right\",\n            0x28: \"top\",\n            0x29: \"bottom\"\n          }[RecordType]] = val;\n          break;\n        case 0x00a1 /* Setup */:\n          // TODO\n          if (!out['!margins']) default_margins(out['!margins'] = {});\n          out['!margins'].header = val.header;\n          out['!margins'].footer = val.footer;\n          break;\n        case 0x023e /* Window2 */:\n          // TODO\n          // $FlowIgnore\n          if (val.RTL) Workbook.Views[0].RTL = true;\n          break;\n        case 0x0092 /* Palette */:\n          palette = val;\n          break;\n        case 0x0896 /* Theme */:\n          themes = val;\n          break;\n        case 0x008c /* Country */:\n          country = val;\n          break;\n        case 0x01ba /* CodeName */:\n          {\n            /*:: if(!Workbook.WBProps) Workbook.WBProps = {}; */\n            if (!cur_sheet) Workbook.WBProps.CodeName = val || \"ThisWorkbook\";else wsprops.CodeName = val || wsprops.name;\n          }\n          break;\n      }\n    } else {\n      if (!R) console.error(\"Missing Info for XLS Record 0x\" + RecordType.toString(16));\n      blob.l += length;\n    }\n  }\n  wb.SheetNames = keys(Directory).sort(function (a, b) {\n    return Number(a) - Number(b);\n  }).map(function (x) {\n    return Directory[x].name;\n  });\n  if (!options.bookSheets) wb.Sheets = Sheets;\n  if (!wb.SheetNames.length && Preamble[\"!ref\"]) {\n    wb.SheetNames.push(\"Sheet1\");\n    /*jshint -W069 */\n    if (wb.Sheets) wb.Sheets[\"Sheet1\"] = Preamble;\n    /*jshint +W069 */\n  } else wb.Preamble = Preamble;\n  if (wb.Sheets) FilterDatabases.forEach(function (r, i) {\n    wb.Sheets[wb.SheetNames[i]]['!autofilter'] = r;\n  });\n  wb.Strings = sst;\n  wb.SSF = dup(table_fmt);\n  if (opts.enc) wb.Encryption = opts.enc;\n  if (themes) wb.Themes = themes;\n  wb.Metadata = {};\n  if (country !== undefined) wb.Metadata.Country = country;\n  if (supbooks.names.length > 0) Workbook.Names = supbooks.names;\n  wb.Workbook = Workbook;\n  return wb;\n}\n\n/* TODO: split props*/\nvar PSCLSID = {\n  SI: \"e0859ff2f94f6810ab9108002b27b3d9\",\n  DSI: \"02d5cdd59c2e1b10939708002b2cf9ae\",\n  UDI: \"05d5cdd59c2e1b10939708002b2cf9ae\"\n};\nfunction parse_xls_props(cfb /*:CFBContainer*/, props, o) {\n  /* [MS-OSHARED] 2.3.3.2.2 Document Summary Information Property Set */\n  var DSI = CFB.find(cfb, '/!DocumentSummaryInformation');\n  if (DSI && DSI.size > 0) try {\n    var DocSummary = parse_PropertySetStream(DSI, DocSummaryPIDDSI, PSCLSID.DSI);\n    for (var d in DocSummary) props[d] = DocSummary[d];\n  } catch (e) {\n    if (o.WTF) throw e; /* empty */\n  }\n\n  /* [MS-OSHARED] 2.3.3.2.1 Summary Information Property Set*/\n  var SI = CFB.find(cfb, '/!SummaryInformation');\n  if (SI && SI.size > 0) try {\n    var Summary = parse_PropertySetStream(SI, SummaryPIDSI, PSCLSID.SI);\n    for (var s in Summary) if (props[s] == null) props[s] = Summary[s];\n  } catch (e) {\n    if (o.WTF) throw e; /* empty */\n  }\n\n  if (props.HeadingPairs && props.TitlesOfParts) {\n    load_props_pairs(props.HeadingPairs, props.TitlesOfParts, props, o);\n    delete props.HeadingPairs;\n    delete props.TitlesOfParts;\n  }\n}\nfunction write_xls_props(wb /*:Workbook*/, cfb /*:CFBContainer*/) {\n  var DSEntries = [],\n    SEntries = [],\n    CEntries = [];\n  var i = 0,\n    Keys;\n  var DocSummaryRE /*:{[key:string]:string}*/ = evert_key(DocSummaryPIDDSI, \"n\");\n  var SummaryRE /*:{[key:string]:string}*/ = evert_key(SummaryPIDSI, \"n\");\n  if (wb.Props) {\n    Keys = keys(wb.Props);\n    // $FlowIgnore\n    for (i = 0; i < Keys.length; ++i) (Object.prototype.hasOwnProperty.call(DocSummaryRE, Keys[i]) ? DSEntries : Object.prototype.hasOwnProperty.call(SummaryRE, Keys[i]) ? SEntries : CEntries).push([Keys[i], wb.Props[Keys[i]]]);\n  }\n  if (wb.Custprops) {\n    Keys = keys(wb.Custprops);\n    // $FlowIgnore\n    for (i = 0; i < Keys.length; ++i) if (!Object.prototype.hasOwnProperty.call(wb.Props || {}, Keys[i])) (Object.prototype.hasOwnProperty.call(DocSummaryRE, Keys[i]) ? DSEntries : Object.prototype.hasOwnProperty.call(SummaryRE, Keys[i]) ? SEntries : CEntries).push([Keys[i], wb.Custprops[Keys[i]]]);\n  }\n  var CEntries2 = [];\n  for (i = 0; i < CEntries.length; ++i) {\n    if (XLSPSSkip.indexOf(CEntries[i][0]) > -1 || PseudoPropsPairs.indexOf(CEntries[i][0]) > -1) continue;\n    if (CEntries[i][1] == null) continue;\n    CEntries2.push(CEntries[i]);\n  }\n  if (SEntries.length) CFB.utils.cfb_add(cfb, \"/\\u0005SummaryInformation\", write_PropertySetStream(SEntries, PSCLSID.SI, SummaryRE, SummaryPIDSI));\n  if (DSEntries.length || CEntries2.length) CFB.utils.cfb_add(cfb, \"/\\u0005DocumentSummaryInformation\", write_PropertySetStream(DSEntries, PSCLSID.DSI, DocSummaryRE, DocSummaryPIDDSI, CEntries2.length ? CEntries2 : null, PSCLSID.UDI));\n}\nfunction parse_xlscfb(cfb /*:any*/, options /*:?ParseOpts*/) /*:Workbook*/{\n  if (!options) options = {};\n  fix_read_opts(options);\n  reset_cp();\n  if (options.codepage) set_ansi(options.codepage);\n  var CompObj /*:?CFBEntry*/, WB /*:?any*/;\n  if (cfb.FullPaths) {\n    if (CFB.find(cfb, '/encryption')) throw new Error(\"File is password-protected\");\n    CompObj = CFB.find(cfb, '!CompObj');\n    WB = CFB.find(cfb, '/Workbook') || CFB.find(cfb, '/Book');\n  } else {\n    switch (options.type) {\n      case 'base64':\n        cfb = s2a(Base64_decode(cfb));\n        break;\n      case 'binary':\n        cfb = s2a(cfb);\n        break;\n      case 'buffer':\n        break;\n      case 'array':\n        if (!Array.isArray(cfb)) cfb = Array.prototype.slice.call(cfb);\n        break;\n    }\n    prep_blob(cfb, 0);\n    WB = {\n      content: cfb\n    } /*:any*/;\n  }\n\n  var /*::CompObjP, */WorkbookP /*:: :Workbook = XLSX.utils.book_new(); */;\n\n  var _data /*:?any*/;\n  if (CompObj) /*::CompObjP = */parse_compobj(CompObj);\n  if (options.bookProps && !options.bookSheets) WorkbookP = {} /*:any*/;else /*:: if(cfb instanceof CFBContainer) */{\n      var T = has_buf ? 'buffer' : 'array';\n      if (WB && WB.content) WorkbookP = parse_workbook(WB.content, options);\n      /* Quattro Pro 7-8 */else if ((_data = CFB.find(cfb, 'PerfectOffice_MAIN')) && _data.content) WorkbookP = WK_.to_workbook(_data.content, (options.type = T, options));\n      /* Quattro Pro 9 */else if ((_data = CFB.find(cfb, 'NativeContent_MAIN')) && _data.content) WorkbookP = WK_.to_workbook(_data.content, (options.type = T, options));\n      /* Works 4 for Mac */else if ((_data = CFB.find(cfb, 'MN0')) && _data.content) throw new Error(\"Unsupported Works 4 for Mac file\");else throw new Error(\"Cannot find Workbook stream\");\n      if (options.bookVBA && cfb.FullPaths && CFB.find(cfb, '/_VBA_PROJECT_CUR/VBA/dir')) WorkbookP.vbaraw = make_vba_xls(cfb);\n    }\n  var props = {};\n  if (cfb.FullPaths) parse_xls_props( /*::((*/cfb /*:: :any):CFBContainer)*/, props, options);\n  WorkbookP.Props = WorkbookP.Custprops = props; /* TODO: split up properties */\n  if (options.bookFiles) WorkbookP.cfb = cfb;\n  /*WorkbookP.CompObjP = CompObjP; // TODO: storage? */\n  return WorkbookP;\n}\nfunction write_xlscfb(wb /*:Workbook*/, opts /*:WriteOpts*/) /*:CFBContainer*/{\n  var o = opts || {};\n  var cfb = CFB.utils.cfb_new({\n    root: \"R\"\n  });\n  var wbpath = \"/Workbook\";\n  switch (o.bookType || \"xls\") {\n    case \"xls\":\n      o.bookType = \"biff8\";\n    /* falls through */\n    case \"xla\":\n      if (!o.bookType) o.bookType = \"xla\";\n    /* falls through */\n    case \"biff8\":\n      wbpath = \"/Workbook\";\n      o.biff = 8;\n      break;\n    case \"biff5\":\n      wbpath = \"/Book\";\n      o.biff = 5;\n      break;\n    default:\n      throw new Error(\"invalid type \" + o.bookType + \" for XLS CFB\");\n  }\n  CFB.utils.cfb_add(cfb, wbpath, write_biff_buf(wb, o));\n  if (o.biff == 8 && (wb.Props || wb.Custprops)) write_xls_props(wb, cfb);\n  // TODO: SI, DSI, CO\n  if (o.biff == 8 && wb.vbaraw) fill_vba_xls(cfb, CFB.read(wb.vbaraw, {\n    type: typeof wb.vbaraw == \"string\" ? \"binary\" : \"buffer\"\n  }));\n  return cfb;\n}\n/* [MS-XLSB] 2.3 Record Enumeration */\nvar XLSBRecordEnum = {\n  /*::[*/0x0000 /*::]*/: {\n    /* n:\"BrtRowHdr\", */f: parse_BrtRowHdr\n  },\n  /*::[*/0x0001 /*::]*/: {\n    /* n:\"BrtCellBlank\", */f: parse_BrtCellBlank\n  },\n  /*::[*/0x0002 /*::]*/: {\n    /* n:\"BrtCellRk\", */f: parse_BrtCellRk\n  },\n  /*::[*/0x0003 /*::]*/: {\n    /* n:\"BrtCellError\", */f: parse_BrtCellError\n  },\n  /*::[*/0x0004 /*::]*/: {\n    /* n:\"BrtCellBool\", */f: parse_BrtCellBool\n  },\n  /*::[*/0x0005 /*::]*/: {\n    /* n:\"BrtCellReal\", */f: parse_BrtCellReal\n  },\n  /*::[*/0x0006 /*::]*/: {\n    /* n:\"BrtCellSt\", */f: parse_BrtCellSt\n  },\n  /*::[*/0x0007 /*::]*/: {\n    /* n:\"BrtCellIsst\", */f: parse_BrtCellIsst\n  },\n  /*::[*/0x0008 /*::]*/: {\n    /* n:\"BrtFmlaString\", */f: parse_BrtFmlaString\n  },\n  /*::[*/0x0009 /*::]*/: {\n    /* n:\"BrtFmlaNum\", */f: parse_BrtFmlaNum\n  },\n  /*::[*/0x000A /*::]*/: {\n    /* n:\"BrtFmlaBool\", */f: parse_BrtFmlaBool\n  },\n  /*::[*/0x000B /*::]*/: {\n    /* n:\"BrtFmlaError\", */f: parse_BrtFmlaError\n  },\n  /*::[*/0x000C /*::]*/: {\n    /* n:\"BrtShortBlank\", */f: parse_BrtShortBlank\n  },\n  /*::[*/0x000D /*::]*/: {\n    /* n:\"BrtShortRk\", */f: parse_BrtShortRk\n  },\n  /*::[*/0x000E /*::]*/: {\n    /* n:\"BrtShortError\", */f: parse_BrtShortError\n  },\n  /*::[*/0x000F /*::]*/: {\n    /* n:\"BrtShortBool\", */f: parse_BrtShortBool\n  },\n  /*::[*/0x0010 /*::]*/: {\n    /* n:\"BrtShortReal\", */f: parse_BrtShortReal\n  },\n  /*::[*/0x0011 /*::]*/: {\n    /* n:\"BrtShortSt\", */f: parse_BrtShortSt\n  },\n  /*::[*/0x0012 /*::]*/: {\n    /* n:\"BrtShortIsst\", */f: parse_BrtShortIsst\n  },\n  /*::[*/0x0013 /*::]*/: {\n    /* n:\"BrtSSTItem\", */f: parse_RichStr\n  },\n  /*::[*/0x0014 /*::]*/: {/* n:\"BrtPCDIMissing\" */},\n  /*::[*/0x0015 /*::]*/: {/* n:\"BrtPCDINumber\" */},\n  /*::[*/0x0016 /*::]*/: {/* n:\"BrtPCDIBoolean\" */},\n  /*::[*/0x0017 /*::]*/: {/* n:\"BrtPCDIError\" */},\n  /*::[*/0x0018 /*::]*/: {/* n:\"BrtPCDIString\" */},\n  /*::[*/0x0019 /*::]*/: {/* n:\"BrtPCDIDatetime\" */},\n  /*::[*/0x001A /*::]*/: {/* n:\"BrtPCDIIndex\" */},\n  /*::[*/0x001B /*::]*/: {/* n:\"BrtPCDIAMissing\" */},\n  /*::[*/0x001C /*::]*/: {/* n:\"BrtPCDIANumber\" */},\n  /*::[*/0x001D /*::]*/: {/* n:\"BrtPCDIABoolean\" */},\n  /*::[*/0x001E /*::]*/: {/* n:\"BrtPCDIAError\" */},\n  /*::[*/0x001F /*::]*/: {/* n:\"BrtPCDIAString\" */},\n  /*::[*/0x0020 /*::]*/: {/* n:\"BrtPCDIADatetime\" */},\n  /*::[*/0x0021 /*::]*/: {/* n:\"BrtPCRRecord\" */},\n  /*::[*/0x0022 /*::]*/: {/* n:\"BrtPCRRecordDt\" */},\n  /*::[*/0x0023 /*::]*/: {\n    /* n:\"BrtFRTBegin\", */T: 1\n  },\n  /*::[*/0x0024 /*::]*/: {\n    /* n:\"BrtFRTEnd\", */T: -1\n  },\n  /*::[*/0x0025 /*::]*/: {\n    /* n:\"BrtACBegin\", */T: 1\n  },\n  /*::[*/0x0026 /*::]*/: {\n    /* n:\"BrtACEnd\", */T: -1\n  },\n  /*::[*/0x0027 /*::]*/: {\n    /* n:\"BrtName\", */f: parse_BrtName\n  },\n  /*::[*/0x0028 /*::]*/: {/* n:\"BrtIndexRowBlock\" */},\n  /*::[*/0x002A /*::]*/: {/* n:\"BrtIndexBlock\" */},\n  /*::[*/0x002B /*::]*/: {\n    /* n:\"BrtFont\", */f: parse_BrtFont\n  },\n  /*::[*/0x002C /*::]*/: {\n    /* n:\"BrtFmt\", */f: parse_BrtFmt\n  },\n  /*::[*/0x002D /*::]*/: {\n    /* n:\"BrtFill\", */f: parse_BrtFill\n  },\n  /*::[*/0x002E /*::]*/: {\n    /* n:\"BrtBorder\", */f: parse_BrtBorder\n  },\n  /*::[*/0x002F /*::]*/: {\n    /* n:\"BrtXF\", */f: parse_BrtXF\n  },\n  /*::[*/0x0030 /*::]*/: {/* n:\"BrtStyle\" */},\n  /*::[*/0x0031 /*::]*/: {\n    /* n:\"BrtCellMeta\", */f: parse_Int32LE\n  },\n  /*::[*/0x0032 /*::]*/: {/* n:\"BrtValueMeta\" */},\n  /*::[*/0x0033 /*::]*/: {\n    /* n:\"BrtMdb\" */f: parse_BrtMdb\n  },\n  /*::[*/0x0034 /*::]*/: {\n    /* n:\"BrtBeginFmd\", */T: 1\n  },\n  /*::[*/0x0035 /*::]*/: {\n    /* n:\"BrtEndFmd\", */T: -1\n  },\n  /*::[*/0x0036 /*::]*/: {\n    /* n:\"BrtBeginMdx\", */T: 1\n  },\n  /*::[*/0x0037 /*::]*/: {\n    /* n:\"BrtEndMdx\", */T: -1\n  },\n  /*::[*/0x0038 /*::]*/: {\n    /* n:\"BrtBeginMdxTuple\", */T: 1\n  },\n  /*::[*/0x0039 /*::]*/: {\n    /* n:\"BrtEndMdxTuple\", */T: -1\n  },\n  /*::[*/0x003A /*::]*/: {/* n:\"BrtMdxMbrIstr\" */},\n  /*::[*/0x003B /*::]*/: {/* n:\"BrtStr\" */},\n  /*::[*/0x003C /*::]*/: {\n    /* n:\"BrtColInfo\", */f: parse_ColInfo\n  },\n  /*::[*/0x003E /*::]*/: {\n    /* n:\"BrtCellRString\", */f: parse_BrtCellRString\n  },\n  /*::[*/0x003F /*::]*/: {\n    /* n:\"BrtCalcChainItem$\", */f: parse_BrtCalcChainItem$\n  },\n  /*::[*/0x0040 /*::]*/: {\n    /* n:\"BrtDVal\", */f: parse_BrtDVal\n  },\n  /*::[*/0x0041 /*::]*/: {/* n:\"BrtSxvcellNum\" */},\n  /*::[*/0x0042 /*::]*/: {/* n:\"BrtSxvcellStr\" */},\n  /*::[*/0x0043 /*::]*/: {/* n:\"BrtSxvcellBool\" */},\n  /*::[*/0x0044 /*::]*/: {/* n:\"BrtSxvcellErr\" */},\n  /*::[*/0x0045 /*::]*/: {/* n:\"BrtSxvcellDate\" */},\n  /*::[*/0x0046 /*::]*/: {/* n:\"BrtSxvcellNil\" */},\n  /*::[*/0x0080 /*::]*/: {/* n:\"BrtFileVersion\" */},\n  /*::[*/0x0081 /*::]*/: {\n    /* n:\"BrtBeginSheet\", */T: 1\n  },\n  /*::[*/0x0082 /*::]*/: {\n    /* n:\"BrtEndSheet\", */T: -1\n  },\n  /*::[*/0x0083 /*::]*/: {\n    /* n:\"BrtBeginBook\", */T: 1,\n    f: parsenoop,\n    p: 0\n  },\n  /*::[*/0x0084 /*::]*/: {\n    /* n:\"BrtEndBook\", */T: -1\n  },\n  /*::[*/0x0085 /*::]*/: {\n    /* n:\"BrtBeginWsViews\", */T: 1\n  },\n  /*::[*/0x0086 /*::]*/: {\n    /* n:\"BrtEndWsViews\", */T: -1\n  },\n  /*::[*/0x0087 /*::]*/: {\n    /* n:\"BrtBeginBookViews\", */T: 1\n  },\n  /*::[*/0x0088 /*::]*/: {\n    /* n:\"BrtEndBookViews\", */T: -1\n  },\n  /*::[*/0x0089 /*::]*/: {\n    /* n:\"BrtBeginWsView\", */T: 1,\n    f: parse_BrtBeginWsView\n  },\n  /*::[*/0x008A /*::]*/: {\n    /* n:\"BrtEndWsView\", */T: -1\n  },\n  /*::[*/0x008B /*::]*/: {\n    /* n:\"BrtBeginCsViews\", */T: 1\n  },\n  /*::[*/0x008C /*::]*/: {\n    /* n:\"BrtEndCsViews\", */T: -1\n  },\n  /*::[*/0x008D /*::]*/: {\n    /* n:\"BrtBeginCsView\", */T: 1\n  },\n  /*::[*/0x008E /*::]*/: {\n    /* n:\"BrtEndCsView\", */T: -1\n  },\n  /*::[*/0x008F /*::]*/: {\n    /* n:\"BrtBeginBundleShs\", */T: 1\n  },\n  /*::[*/0x0090 /*::]*/: {\n    /* n:\"BrtEndBundleShs\", */T: -1\n  },\n  /*::[*/0x0091 /*::]*/: {\n    /* n:\"BrtBeginSheetData\", */T: 1\n  },\n  /*::[*/0x0092 /*::]*/: {\n    /* n:\"BrtEndSheetData\", */T: -1\n  },\n  /*::[*/0x0093 /*::]*/: {\n    /* n:\"BrtWsProp\", */f: parse_BrtWsProp\n  },\n  /*::[*/0x0094 /*::]*/: {\n    /* n:\"BrtWsDim\", */f: parse_BrtWsDim,\n    p: 16\n  },\n  /*::[*/0x0097 /*::]*/: {\n    /* n:\"BrtPane\", */f: parse_BrtPane\n  },\n  /*::[*/0x0098 /*::]*/: {/* n:\"BrtSel\" */},\n  /*::[*/0x0099 /*::]*/: {\n    /* n:\"BrtWbProp\", */f: parse_BrtWbProp\n  },\n  /*::[*/0x009A /*::]*/: {/* n:\"BrtWbFactoid\" */},\n  /*::[*/0x009B /*::]*/: {/* n:\"BrtFileRecover\" */},\n  /*::[*/0x009C /*::]*/: {\n    /* n:\"BrtBundleSh\", */f: parse_BrtBundleSh\n  },\n  /*::[*/0x009D /*::]*/: {/* n:\"BrtCalcProp\" */},\n  /*::[*/0x009E /*::]*/: {/* n:\"BrtBookView\" */},\n  /*::[*/0x009F /*::]*/: {\n    /* n:\"BrtBeginSst\", */T: 1,\n    f: parse_BrtBeginSst\n  },\n  /*::[*/0x00A0 /*::]*/: {\n    /* n:\"BrtEndSst\", */T: -1\n  },\n  /*::[*/0x00A1 /*::]*/: {\n    /* n:\"BrtBeginAFilter\", */T: 1,\n    f: parse_UncheckedRfX\n  },\n  /*::[*/0x00A2 /*::]*/: {\n    /* n:\"BrtEndAFilter\", */T: -1\n  },\n  /*::[*/0x00A3 /*::]*/: {\n    /* n:\"BrtBeginFilterColumn\", */T: 1\n  },\n  /*::[*/0x00A4 /*::]*/: {\n    /* n:\"BrtEndFilterColumn\", */T: -1\n  },\n  /*::[*/0x00A5 /*::]*/: {\n    /* n:\"BrtBeginFilters\", */T: 1\n  },\n  /*::[*/0x00A6 /*::]*/: {\n    /* n:\"BrtEndFilters\", */T: -1\n  },\n  /*::[*/0x00A7 /*::]*/: {/* n:\"BrtFilter\" */},\n  /*::[*/0x00A8 /*::]*/: {/* n:\"BrtColorFilter\" */},\n  /*::[*/0x00A9 /*::]*/: {/* n:\"BrtIconFilter\" */},\n  /*::[*/0x00AA /*::]*/: {/* n:\"BrtTop10Filter\" */},\n  /*::[*/0x00AB /*::]*/: {/* n:\"BrtDynamicFilter\" */},\n  /*::[*/0x00AC /*::]*/: {\n    /* n:\"BrtBeginCustomFilters\", */T: 1\n  },\n  /*::[*/0x00AD /*::]*/: {\n    /* n:\"BrtEndCustomFilters\", */T: -1\n  },\n  /*::[*/0x00AE /*::]*/: {/* n:\"BrtCustomFilter\" */},\n  /*::[*/0x00AF /*::]*/: {/* n:\"BrtAFilterDateGroupItem\" */},\n  /*::[*/0x00B0 /*::]*/: {\n    /* n:\"BrtMergeCell\", */f: parse_BrtMergeCell\n  },\n  /*::[*/0x00B1 /*::]*/: {\n    /* n:\"BrtBeginMergeCells\", */T: 1\n  },\n  /*::[*/0x00B2 /*::]*/: {\n    /* n:\"BrtEndMergeCells\", */T: -1\n  },\n  /*::[*/0x00B3 /*::]*/: {\n    /* n:\"BrtBeginPivotCacheDef\", */T: 1\n  },\n  /*::[*/0x00B4 /*::]*/: {\n    /* n:\"BrtEndPivotCacheDef\", */T: -1\n  },\n  /*::[*/0x00B5 /*::]*/: {\n    /* n:\"BrtBeginPCDFields\", */T: 1\n  },\n  /*::[*/0x00B6 /*::]*/: {\n    /* n:\"BrtEndPCDFields\", */T: -1\n  },\n  /*::[*/0x00B7 /*::]*/: {\n    /* n:\"BrtBeginPCDField\", */T: 1\n  },\n  /*::[*/0x00B8 /*::]*/: {\n    /* n:\"BrtEndPCDField\", */T: -1\n  },\n  /*::[*/0x00B9 /*::]*/: {\n    /* n:\"BrtBeginPCDSource\", */T: 1\n  },\n  /*::[*/0x00BA /*::]*/: {\n    /* n:\"BrtEndPCDSource\", */T: -1\n  },\n  /*::[*/0x00BB /*::]*/: {\n    /* n:\"BrtBeginPCDSRange\", */T: 1\n  },\n  /*::[*/0x00BC /*::]*/: {\n    /* n:\"BrtEndPCDSRange\", */T: -1\n  },\n  /*::[*/0x00BD /*::]*/: {\n    /* n:\"BrtBeginPCDFAtbl\", */T: 1\n  },\n  /*::[*/0x00BE /*::]*/: {\n    /* n:\"BrtEndPCDFAtbl\", */T: -1\n  },\n  /*::[*/0x00BF /*::]*/: {\n    /* n:\"BrtBeginPCDIRun\", */T: 1\n  },\n  /*::[*/0x00C0 /*::]*/: {\n    /* n:\"BrtEndPCDIRun\", */T: -1\n  },\n  /*::[*/0x00C1 /*::]*/: {\n    /* n:\"BrtBeginPivotCacheRecords\", */T: 1\n  },\n  /*::[*/0x00C2 /*::]*/: {\n    /* n:\"BrtEndPivotCacheRecords\", */T: -1\n  },\n  /*::[*/0x00C3 /*::]*/: {\n    /* n:\"BrtBeginPCDHierarchies\", */T: 1\n  },\n  /*::[*/0x00C4 /*::]*/: {\n    /* n:\"BrtEndPCDHierarchies\", */T: -1\n  },\n  /*::[*/0x00C5 /*::]*/: {\n    /* n:\"BrtBeginPCDHierarchy\", */T: 1\n  },\n  /*::[*/0x00C6 /*::]*/: {\n    /* n:\"BrtEndPCDHierarchy\", */T: -1\n  },\n  /*::[*/0x00C7 /*::]*/: {\n    /* n:\"BrtBeginPCDHFieldsUsage\", */T: 1\n  },\n  /*::[*/0x00C8 /*::]*/: {\n    /* n:\"BrtEndPCDHFieldsUsage\", */T: -1\n  },\n  /*::[*/0x00C9 /*::]*/: {\n    /* n:\"BrtBeginExtConnection\", */T: 1\n  },\n  /*::[*/0x00CA /*::]*/: {\n    /* n:\"BrtEndExtConnection\", */T: -1\n  },\n  /*::[*/0x00CB /*::]*/: {\n    /* n:\"BrtBeginECDbProps\", */T: 1\n  },\n  /*::[*/0x00CC /*::]*/: {\n    /* n:\"BrtEndECDbProps\", */T: -1\n  },\n  /*::[*/0x00CD /*::]*/: {\n    /* n:\"BrtBeginECOlapProps\", */T: 1\n  },\n  /*::[*/0x00CE /*::]*/: {\n    /* n:\"BrtEndECOlapProps\", */T: -1\n  },\n  /*::[*/0x00CF /*::]*/: {\n    /* n:\"BrtBeginPCDSConsol\", */T: 1\n  },\n  /*::[*/0x00D0 /*::]*/: {\n    /* n:\"BrtEndPCDSConsol\", */T: -1\n  },\n  /*::[*/0x00D1 /*::]*/: {\n    /* n:\"BrtBeginPCDSCPages\", */T: 1\n  },\n  /*::[*/0x00D2 /*::]*/: {\n    /* n:\"BrtEndPCDSCPages\", */T: -1\n  },\n  /*::[*/0x00D3 /*::]*/: {\n    /* n:\"BrtBeginPCDSCPage\", */T: 1\n  },\n  /*::[*/0x00D4 /*::]*/: {\n    /* n:\"BrtEndPCDSCPage\", */T: -1\n  },\n  /*::[*/0x00D5 /*::]*/: {\n    /* n:\"BrtBeginPCDSCPItem\", */T: 1\n  },\n  /*::[*/0x00D6 /*::]*/: {\n    /* n:\"BrtEndPCDSCPItem\", */T: -1\n  },\n  /*::[*/0x00D7 /*::]*/: {\n    /* n:\"BrtBeginPCDSCSets\", */T: 1\n  },\n  /*::[*/0x00D8 /*::]*/: {\n    /* n:\"BrtEndPCDSCSets\", */T: -1\n  },\n  /*::[*/0x00D9 /*::]*/: {\n    /* n:\"BrtBeginPCDSCSet\", */T: 1\n  },\n  /*::[*/0x00DA /*::]*/: {\n    /* n:\"BrtEndPCDSCSet\", */T: -1\n  },\n  /*::[*/0x00DB /*::]*/: {\n    /* n:\"BrtBeginPCDFGroup\", */T: 1\n  },\n  /*::[*/0x00DC /*::]*/: {\n    /* n:\"BrtEndPCDFGroup\", */T: -1\n  },\n  /*::[*/0x00DD /*::]*/: {\n    /* n:\"BrtBeginPCDFGItems\", */T: 1\n  },\n  /*::[*/0x00DE /*::]*/: {\n    /* n:\"BrtEndPCDFGItems\", */T: -1\n  },\n  /*::[*/0x00DF /*::]*/: {\n    /* n:\"BrtBeginPCDFGRange\", */T: 1\n  },\n  /*::[*/0x00E0 /*::]*/: {\n    /* n:\"BrtEndPCDFGRange\", */T: -1\n  },\n  /*::[*/0x00E1 /*::]*/: {\n    /* n:\"BrtBeginPCDFGDiscrete\", */T: 1\n  },\n  /*::[*/0x00E2 /*::]*/: {\n    /* n:\"BrtEndPCDFGDiscrete\", */T: -1\n  },\n  /*::[*/0x00E3 /*::]*/: {\n    /* n:\"BrtBeginPCDSDTupleCache\", */T: 1\n  },\n  /*::[*/0x00E4 /*::]*/: {\n    /* n:\"BrtEndPCDSDTupleCache\", */T: -1\n  },\n  /*::[*/0x00E5 /*::]*/: {\n    /* n:\"BrtBeginPCDSDTCEntries\", */T: 1\n  },\n  /*::[*/0x00E6 /*::]*/: {\n    /* n:\"BrtEndPCDSDTCEntries\", */T: -1\n  },\n  /*::[*/0x00E7 /*::]*/: {\n    /* n:\"BrtBeginPCDSDTCEMembers\", */T: 1\n  },\n  /*::[*/0x00E8 /*::]*/: {\n    /* n:\"BrtEndPCDSDTCEMembers\", */T: -1\n  },\n  /*::[*/0x00E9 /*::]*/: {\n    /* n:\"BrtBeginPCDSDTCEMember\", */T: 1\n  },\n  /*::[*/0x00EA /*::]*/: {\n    /* n:\"BrtEndPCDSDTCEMember\", */T: -1\n  },\n  /*::[*/0x00EB /*::]*/: {\n    /* n:\"BrtBeginPCDSDTCQueries\", */T: 1\n  },\n  /*::[*/0x00EC /*::]*/: {\n    /* n:\"BrtEndPCDSDTCQueries\", */T: -1\n  },\n  /*::[*/0x00ED /*::]*/: {\n    /* n:\"BrtBeginPCDSDTCQuery\", */T: 1\n  },\n  /*::[*/0x00EE /*::]*/: {\n    /* n:\"BrtEndPCDSDTCQuery\", */T: -1\n  },\n  /*::[*/0x00EF /*::]*/: {\n    /* n:\"BrtBeginPCDSDTCSets\", */T: 1\n  },\n  /*::[*/0x00F0 /*::]*/: {\n    /* n:\"BrtEndPCDSDTCSets\", */T: -1\n  },\n  /*::[*/0x00F1 /*::]*/: {\n    /* n:\"BrtBeginPCDSDTCSet\", */T: 1\n  },\n  /*::[*/0x00F2 /*::]*/: {\n    /* n:\"BrtEndPCDSDTCSet\", */T: -1\n  },\n  /*::[*/0x00F3 /*::]*/: {\n    /* n:\"BrtBeginPCDCalcItems\", */T: 1\n  },\n  /*::[*/0x00F4 /*::]*/: {\n    /* n:\"BrtEndPCDCalcItems\", */T: -1\n  },\n  /*::[*/0x00F5 /*::]*/: {\n    /* n:\"BrtBeginPCDCalcItem\", */T: 1\n  },\n  /*::[*/0x00F6 /*::]*/: {\n    /* n:\"BrtEndPCDCalcItem\", */T: -1\n  },\n  /*::[*/0x00F7 /*::]*/: {\n    /* n:\"BrtBeginPRule\", */T: 1\n  },\n  /*::[*/0x00F8 /*::]*/: {\n    /* n:\"BrtEndPRule\", */T: -1\n  },\n  /*::[*/0x00F9 /*::]*/: {\n    /* n:\"BrtBeginPRFilters\", */T: 1\n  },\n  /*::[*/0x00FA /*::]*/: {\n    /* n:\"BrtEndPRFilters\", */T: -1\n  },\n  /*::[*/0x00FB /*::]*/: {\n    /* n:\"BrtBeginPRFilter\", */T: 1\n  },\n  /*::[*/0x00FC /*::]*/: {\n    /* n:\"BrtEndPRFilter\", */T: -1\n  },\n  /*::[*/0x00FD /*::]*/: {\n    /* n:\"BrtBeginPNames\", */T: 1\n  },\n  /*::[*/0x00FE /*::]*/: {\n    /* n:\"BrtEndPNames\", */T: -1\n  },\n  /*::[*/0x00FF /*::]*/: {\n    /* n:\"BrtBeginPName\", */T: 1\n  },\n  /*::[*/0x0100 /*::]*/: {\n    /* n:\"BrtEndPName\", */T: -1\n  },\n  /*::[*/0x0101 /*::]*/: {\n    /* n:\"BrtBeginPNPairs\", */T: 1\n  },\n  /*::[*/0x0102 /*::]*/: {\n    /* n:\"BrtEndPNPairs\", */T: -1\n  },\n  /*::[*/0x0103 /*::]*/: {\n    /* n:\"BrtBeginPNPair\", */T: 1\n  },\n  /*::[*/0x0104 /*::]*/: {\n    /* n:\"BrtEndPNPair\", */T: -1\n  },\n  /*::[*/0x0105 /*::]*/: {\n    /* n:\"BrtBeginECWebProps\", */T: 1\n  },\n  /*::[*/0x0106 /*::]*/: {\n    /* n:\"BrtEndECWebProps\", */T: -1\n  },\n  /*::[*/0x0107 /*::]*/: {\n    /* n:\"BrtBeginEcWpTables\", */T: 1\n  },\n  /*::[*/0x0108 /*::]*/: {\n    /* n:\"BrtEndECWPTables\", */T: -1\n  },\n  /*::[*/0x0109 /*::]*/: {\n    /* n:\"BrtBeginECParams\", */T: 1\n  },\n  /*::[*/0x010A /*::]*/: {\n    /* n:\"BrtEndECParams\", */T: -1\n  },\n  /*::[*/0x010B /*::]*/: {\n    /* n:\"BrtBeginECParam\", */T: 1\n  },\n  /*::[*/0x010C /*::]*/: {\n    /* n:\"BrtEndECParam\", */T: -1\n  },\n  /*::[*/0x010D /*::]*/: {\n    /* n:\"BrtBeginPCDKPIs\", */T: 1\n  },\n  /*::[*/0x010E /*::]*/: {\n    /* n:\"BrtEndPCDKPIs\", */T: -1\n  },\n  /*::[*/0x010F /*::]*/: {\n    /* n:\"BrtBeginPCDKPI\", */T: 1\n  },\n  /*::[*/0x0110 /*::]*/: {\n    /* n:\"BrtEndPCDKPI\", */T: -1\n  },\n  /*::[*/0x0111 /*::]*/: {\n    /* n:\"BrtBeginDims\", */T: 1\n  },\n  /*::[*/0x0112 /*::]*/: {\n    /* n:\"BrtEndDims\", */T: -1\n  },\n  /*::[*/0x0113 /*::]*/: {\n    /* n:\"BrtBeginDim\", */T: 1\n  },\n  /*::[*/0x0114 /*::]*/: {\n    /* n:\"BrtEndDim\", */T: -1\n  },\n  /*::[*/0x0115 /*::]*/: {/* n:\"BrtIndexPartEnd\" */},\n  /*::[*/0x0116 /*::]*/: {\n    /* n:\"BrtBeginStyleSheet\", */T: 1\n  },\n  /*::[*/0x0117 /*::]*/: {\n    /* n:\"BrtEndStyleSheet\", */T: -1\n  },\n  /*::[*/0x0118 /*::]*/: {\n    /* n:\"BrtBeginSXView\", */T: 1\n  },\n  /*::[*/0x0119 /*::]*/: {\n    /* n:\"BrtEndSXVI\", */T: -1\n  },\n  /*::[*/0x011A /*::]*/: {\n    /* n:\"BrtBeginSXVI\", */T: 1\n  },\n  /*::[*/0x011B /*::]*/: {\n    /* n:\"BrtBeginSXVIs\", */T: 1\n  },\n  /*::[*/0x011C /*::]*/: {\n    /* n:\"BrtEndSXVIs\", */T: -1\n  },\n  /*::[*/0x011D /*::]*/: {\n    /* n:\"BrtBeginSXVD\", */T: 1\n  },\n  /*::[*/0x011E /*::]*/: {\n    /* n:\"BrtEndSXVD\", */T: -1\n  },\n  /*::[*/0x011F /*::]*/: {\n    /* n:\"BrtBeginSXVDs\", */T: 1\n  },\n  /*::[*/0x0120 /*::]*/: {\n    /* n:\"BrtEndSXVDs\", */T: -1\n  },\n  /*::[*/0x0121 /*::]*/: {\n    /* n:\"BrtBeginSXPI\", */T: 1\n  },\n  /*::[*/0x0122 /*::]*/: {\n    /* n:\"BrtEndSXPI\", */T: -1\n  },\n  /*::[*/0x0123 /*::]*/: {\n    /* n:\"BrtBeginSXPIs\", */T: 1\n  },\n  /*::[*/0x0124 /*::]*/: {\n    /* n:\"BrtEndSXPIs\", */T: -1\n  },\n  /*::[*/0x0125 /*::]*/: {\n    /* n:\"BrtBeginSXDI\", */T: 1\n  },\n  /*::[*/0x0126 /*::]*/: {\n    /* n:\"BrtEndSXDI\", */T: -1\n  },\n  /*::[*/0x0127 /*::]*/: {\n    /* n:\"BrtBeginSXDIs\", */T: 1\n  },\n  /*::[*/0x0128 /*::]*/: {\n    /* n:\"BrtEndSXDIs\", */T: -1\n  },\n  /*::[*/0x0129 /*::]*/: {\n    /* n:\"BrtBeginSXLI\", */T: 1\n  },\n  /*::[*/0x012A /*::]*/: {\n    /* n:\"BrtEndSXLI\", */T: -1\n  },\n  /*::[*/0x012B /*::]*/: {\n    /* n:\"BrtBeginSXLIRws\", */T: 1\n  },\n  /*::[*/0x012C /*::]*/: {\n    /* n:\"BrtEndSXLIRws\", */T: -1\n  },\n  /*::[*/0x012D /*::]*/: {\n    /* n:\"BrtBeginSXLICols\", */T: 1\n  },\n  /*::[*/0x012E /*::]*/: {\n    /* n:\"BrtEndSXLICols\", */T: -1\n  },\n  /*::[*/0x012F /*::]*/: {\n    /* n:\"BrtBeginSXFormat\", */T: 1\n  },\n  /*::[*/0x0130 /*::]*/: {\n    /* n:\"BrtEndSXFormat\", */T: -1\n  },\n  /*::[*/0x0131 /*::]*/: {\n    /* n:\"BrtBeginSXFormats\", */T: 1\n  },\n  /*::[*/0x0132 /*::]*/: {\n    /* n:\"BrtEndSxFormats\", */T: -1\n  },\n  /*::[*/0x0133 /*::]*/: {\n    /* n:\"BrtBeginSxSelect\", */T: 1\n  },\n  /*::[*/0x0134 /*::]*/: {\n    /* n:\"BrtEndSxSelect\", */T: -1\n  },\n  /*::[*/0x0135 /*::]*/: {\n    /* n:\"BrtBeginISXVDRws\", */T: 1\n  },\n  /*::[*/0x0136 /*::]*/: {\n    /* n:\"BrtEndISXVDRws\", */T: -1\n  },\n  /*::[*/0x0137 /*::]*/: {\n    /* n:\"BrtBeginISXVDCols\", */T: 1\n  },\n  /*::[*/0x0138 /*::]*/: {\n    /* n:\"BrtEndISXVDCols\", */T: -1\n  },\n  /*::[*/0x0139 /*::]*/: {\n    /* n:\"BrtEndSXLocation\", */T: -1\n  },\n  /*::[*/0x013A /*::]*/: {\n    /* n:\"BrtBeginSXLocation\", */T: 1\n  },\n  /*::[*/0x013B /*::]*/: {\n    /* n:\"BrtEndSXView\", */T: -1\n  },\n  /*::[*/0x013C /*::]*/: {\n    /* n:\"BrtBeginSXTHs\", */T: 1\n  },\n  /*::[*/0x013D /*::]*/: {\n    /* n:\"BrtEndSXTHs\", */T: -1\n  },\n  /*::[*/0x013E /*::]*/: {\n    /* n:\"BrtBeginSXTH\", */T: 1\n  },\n  /*::[*/0x013F /*::]*/: {\n    /* n:\"BrtEndSXTH\", */T: -1\n  },\n  /*::[*/0x0140 /*::]*/: {\n    /* n:\"BrtBeginISXTHRws\", */T: 1\n  },\n  /*::[*/0x0141 /*::]*/: {\n    /* n:\"BrtEndISXTHRws\", */T: -1\n  },\n  /*::[*/0x0142 /*::]*/: {\n    /* n:\"BrtBeginISXTHCols\", */T: 1\n  },\n  /*::[*/0x0143 /*::]*/: {\n    /* n:\"BrtEndISXTHCols\", */T: -1\n  },\n  /*::[*/0x0144 /*::]*/: {\n    /* n:\"BrtBeginSXTDMPS\", */T: 1\n  },\n  /*::[*/0x0145 /*::]*/: {\n    /* n:\"BrtEndSXTDMPs\", */T: -1\n  },\n  /*::[*/0x0146 /*::]*/: {\n    /* n:\"BrtBeginSXTDMP\", */T: 1\n  },\n  /*::[*/0x0147 /*::]*/: {\n    /* n:\"BrtEndSXTDMP\", */T: -1\n  },\n  /*::[*/0x0148 /*::]*/: {\n    /* n:\"BrtBeginSXTHItems\", */T: 1\n  },\n  /*::[*/0x0149 /*::]*/: {\n    /* n:\"BrtEndSXTHItems\", */T: -1\n  },\n  /*::[*/0x014A /*::]*/: {\n    /* n:\"BrtBeginSXTHItem\", */T: 1\n  },\n  /*::[*/0x014B /*::]*/: {\n    /* n:\"BrtEndSXTHItem\", */T: -1\n  },\n  /*::[*/0x014C /*::]*/: {\n    /* n:\"BrtBeginMetadata\", */T: 1\n  },\n  /*::[*/0x014D /*::]*/: {\n    /* n:\"BrtEndMetadata\", */T: -1\n  },\n  /*::[*/0x014E /*::]*/: {\n    /* n:\"BrtBeginEsmdtinfo\", */T: 1\n  },\n  /*::[*/0x014F /*::]*/: {\n    /* n:\"BrtMdtinfo\", */f: parse_BrtMdtinfo\n  },\n  /*::[*/0x0150 /*::]*/: {\n    /* n:\"BrtEndEsmdtinfo\", */T: -1\n  },\n  /*::[*/0x0151 /*::]*/: {\n    /* n:\"BrtBeginEsmdb\", */f: parse_BrtBeginEsmdb,\n    T: 1\n  },\n  /*::[*/0x0152 /*::]*/: {\n    /* n:\"BrtEndEsmdb\", */T: -1\n  },\n  /*::[*/0x0153 /*::]*/: {\n    /* n:\"BrtBeginEsfmd\", */T: 1\n  },\n  /*::[*/0x0154 /*::]*/: {\n    /* n:\"BrtEndEsfmd\", */T: -1\n  },\n  /*::[*/0x0155 /*::]*/: {\n    /* n:\"BrtBeginSingleCells\", */T: 1\n  },\n  /*::[*/0x0156 /*::]*/: {\n    /* n:\"BrtEndSingleCells\", */T: -1\n  },\n  /*::[*/0x0157 /*::]*/: {\n    /* n:\"BrtBeginList\", */T: 1\n  },\n  /*::[*/0x0158 /*::]*/: {\n    /* n:\"BrtEndList\", */T: -1\n  },\n  /*::[*/0x0159 /*::]*/: {\n    /* n:\"BrtBeginListCols\", */T: 1\n  },\n  /*::[*/0x015A /*::]*/: {\n    /* n:\"BrtEndListCols\", */T: -1\n  },\n  /*::[*/0x015B /*::]*/: {\n    /* n:\"BrtBeginListCol\", */T: 1\n  },\n  /*::[*/0x015C /*::]*/: {\n    /* n:\"BrtEndListCol\", */T: -1\n  },\n  /*::[*/0x015D /*::]*/: {\n    /* n:\"BrtBeginListXmlCPr\", */T: 1\n  },\n  /*::[*/0x015E /*::]*/: {\n    /* n:\"BrtEndListXmlCPr\", */T: -1\n  },\n  /*::[*/0x015F /*::]*/: {/* n:\"BrtListCCFmla\" */},\n  /*::[*/0x0160 /*::]*/: {/* n:\"BrtListTrFmla\" */},\n  /*::[*/0x0161 /*::]*/: {\n    /* n:\"BrtBeginExternals\", */T: 1\n  },\n  /*::[*/0x0162 /*::]*/: {\n    /* n:\"BrtEndExternals\", */T: -1\n  },\n  /*::[*/0x0163 /*::]*/: {\n    /* n:\"BrtSupBookSrc\", */f: parse_RelID\n  },\n  /*::[*/0x0165 /*::]*/: {/* n:\"BrtSupSelf\" */},\n  /*::[*/0x0166 /*::]*/: {/* n:\"BrtSupSame\" */},\n  /*::[*/0x0167 /*::]*/: {/* n:\"BrtSupTabs\" */},\n  /*::[*/0x0168 /*::]*/: {\n    /* n:\"BrtBeginSupBook\", */T: 1\n  },\n  /*::[*/0x0169 /*::]*/: {/* n:\"BrtPlaceholderName\" */},\n  /*::[*/0x016A /*::]*/: {\n    /* n:\"BrtExternSheet\", */f: parse_ExternSheet\n  },\n  /*::[*/0x016B /*::]*/: {/* n:\"BrtExternTableStart\" */},\n  /*::[*/0x016C /*::]*/: {/* n:\"BrtExternTableEnd\" */},\n  /*::[*/0x016E /*::]*/: {/* n:\"BrtExternRowHdr\" */},\n  /*::[*/0x016F /*::]*/: {/* n:\"BrtExternCellBlank\" */},\n  /*::[*/0x0170 /*::]*/: {/* n:\"BrtExternCellReal\" */},\n  /*::[*/0x0171 /*::]*/: {/* n:\"BrtExternCellBool\" */},\n  /*::[*/0x0172 /*::]*/: {/* n:\"BrtExternCellError\" */},\n  /*::[*/0x0173 /*::]*/: {/* n:\"BrtExternCellString\" */},\n  /*::[*/0x0174 /*::]*/: {\n    /* n:\"BrtBeginEsmdx\", */T: 1\n  },\n  /*::[*/0x0175 /*::]*/: {\n    /* n:\"BrtEndEsmdx\", */T: -1\n  },\n  /*::[*/0x0176 /*::]*/: {\n    /* n:\"BrtBeginMdxSet\", */T: 1\n  },\n  /*::[*/0x0177 /*::]*/: {\n    /* n:\"BrtEndMdxSet\", */T: -1\n  },\n  /*::[*/0x0178 /*::]*/: {\n    /* n:\"BrtBeginMdxMbrProp\", */T: 1\n  },\n  /*::[*/0x0179 /*::]*/: {\n    /* n:\"BrtEndMdxMbrProp\", */T: -1\n  },\n  /*::[*/0x017A /*::]*/: {\n    /* n:\"BrtBeginMdxKPI\", */T: 1\n  },\n  /*::[*/0x017B /*::]*/: {\n    /* n:\"BrtEndMdxKPI\", */T: -1\n  },\n  /*::[*/0x017C /*::]*/: {\n    /* n:\"BrtBeginEsstr\", */T: 1\n  },\n  /*::[*/0x017D /*::]*/: {\n    /* n:\"BrtEndEsstr\", */T: -1\n  },\n  /*::[*/0x017E /*::]*/: {\n    /* n:\"BrtBeginPRFItem\", */T: 1\n  },\n  /*::[*/0x017F /*::]*/: {\n    /* n:\"BrtEndPRFItem\", */T: -1\n  },\n  /*::[*/0x0180 /*::]*/: {\n    /* n:\"BrtBeginPivotCacheIDs\", */T: 1\n  },\n  /*::[*/0x0181 /*::]*/: {\n    /* n:\"BrtEndPivotCacheIDs\", */T: -1\n  },\n  /*::[*/0x0182 /*::]*/: {\n    /* n:\"BrtBeginPivotCacheID\", */T: 1\n  },\n  /*::[*/0x0183 /*::]*/: {\n    /* n:\"BrtEndPivotCacheID\", */T: -1\n  },\n  /*::[*/0x0184 /*::]*/: {\n    /* n:\"BrtBeginISXVIs\", */T: 1\n  },\n  /*::[*/0x0185 /*::]*/: {\n    /* n:\"BrtEndISXVIs\", */T: -1\n  },\n  /*::[*/0x0186 /*::]*/: {\n    /* n:\"BrtBeginColInfos\", */T: 1\n  },\n  /*::[*/0x0187 /*::]*/: {\n    /* n:\"BrtEndColInfos\", */T: -1\n  },\n  /*::[*/0x0188 /*::]*/: {\n    /* n:\"BrtBeginRwBrk\", */T: 1\n  },\n  /*::[*/0x0189 /*::]*/: {\n    /* n:\"BrtEndRwBrk\", */T: -1\n  },\n  /*::[*/0x018A /*::]*/: {\n    /* n:\"BrtBeginColBrk\", */T: 1\n  },\n  /*::[*/0x018B /*::]*/: {\n    /* n:\"BrtEndColBrk\", */T: -1\n  },\n  /*::[*/0x018C /*::]*/: {/* n:\"BrtBrk\" */},\n  /*::[*/0x018D /*::]*/: {/* n:\"BrtUserBookView\" */},\n  /*::[*/0x018E /*::]*/: {/* n:\"BrtInfo\" */},\n  /*::[*/0x018F /*::]*/: {/* n:\"BrtCUsr\" */},\n  /*::[*/0x0190 /*::]*/: {/* n:\"BrtUsr\" */},\n  /*::[*/0x0191 /*::]*/: {\n    /* n:\"BrtBeginUsers\", */T: 1\n  },\n  /*::[*/0x0193 /*::]*/: {/* n:\"BrtEOF\" */},\n  /*::[*/0x0194 /*::]*/: {/* n:\"BrtUCR\" */},\n  /*::[*/0x0195 /*::]*/: {/* n:\"BrtRRInsDel\" */},\n  /*::[*/0x0196 /*::]*/: {/* n:\"BrtRREndInsDel\" */},\n  /*::[*/0x0197 /*::]*/: {/* n:\"BrtRRMove\" */},\n  /*::[*/0x0198 /*::]*/: {/* n:\"BrtRREndMove\" */},\n  /*::[*/0x0199 /*::]*/: {/* n:\"BrtRRChgCell\" */},\n  /*::[*/0x019A /*::]*/: {/* n:\"BrtRREndChgCell\" */},\n  /*::[*/0x019B /*::]*/: {/* n:\"BrtRRHeader\" */},\n  /*::[*/0x019C /*::]*/: {/* n:\"BrtRRUserView\" */},\n  /*::[*/0x019D /*::]*/: {/* n:\"BrtRRRenSheet\" */},\n  /*::[*/0x019E /*::]*/: {/* n:\"BrtRRInsertSh\" */},\n  /*::[*/0x019F /*::]*/: {/* n:\"BrtRRDefName\" */},\n  /*::[*/0x01A0 /*::]*/: {/* n:\"BrtRRNote\" */},\n  /*::[*/0x01A1 /*::]*/: {/* n:\"BrtRRConflict\" */},\n  /*::[*/0x01A2 /*::]*/: {/* n:\"BrtRRTQSIF\" */},\n  /*::[*/0x01A3 /*::]*/: {/* n:\"BrtRRFormat\" */},\n  /*::[*/0x01A4 /*::]*/: {/* n:\"BrtRREndFormat\" */},\n  /*::[*/0x01A5 /*::]*/: {/* n:\"BrtRRAutoFmt\" */},\n  /*::[*/0x01A6 /*::]*/: {\n    /* n:\"BrtBeginUserShViews\", */T: 1\n  },\n  /*::[*/0x01A7 /*::]*/: {\n    /* n:\"BrtBeginUserShView\", */T: 1\n  },\n  /*::[*/0x01A8 /*::]*/: {\n    /* n:\"BrtEndUserShView\", */T: -1\n  },\n  /*::[*/0x01A9 /*::]*/: {\n    /* n:\"BrtEndUserShViews\", */T: -1\n  },\n  /*::[*/0x01AA /*::]*/: {\n    /* n:\"BrtArrFmla\", */f: parse_BrtArrFmla\n  },\n  /*::[*/0x01AB /*::]*/: {\n    /* n:\"BrtShrFmla\", */f: parse_BrtShrFmla\n  },\n  /*::[*/0x01AC /*::]*/: {/* n:\"BrtTable\" */},\n  /*::[*/0x01AD /*::]*/: {\n    /* n:\"BrtBeginExtConnections\", */T: 1\n  },\n  /*::[*/0x01AE /*::]*/: {\n    /* n:\"BrtEndExtConnections\", */T: -1\n  },\n  /*::[*/0x01AF /*::]*/: {\n    /* n:\"BrtBeginPCDCalcMems\", */T: 1\n  },\n  /*::[*/0x01B0 /*::]*/: {\n    /* n:\"BrtEndPCDCalcMems\", */T: -1\n  },\n  /*::[*/0x01B1 /*::]*/: {\n    /* n:\"BrtBeginPCDCalcMem\", */T: 1\n  },\n  /*::[*/0x01B2 /*::]*/: {\n    /* n:\"BrtEndPCDCalcMem\", */T: -1\n  },\n  /*::[*/0x01B3 /*::]*/: {\n    /* n:\"BrtBeginPCDHGLevels\", */T: 1\n  },\n  /*::[*/0x01B4 /*::]*/: {\n    /* n:\"BrtEndPCDHGLevels\", */T: -1\n  },\n  /*::[*/0x01B5 /*::]*/: {\n    /* n:\"BrtBeginPCDHGLevel\", */T: 1\n  },\n  /*::[*/0x01B6 /*::]*/: {\n    /* n:\"BrtEndPCDHGLevel\", */T: -1\n  },\n  /*::[*/0x01B7 /*::]*/: {\n    /* n:\"BrtBeginPCDHGLGroups\", */T: 1\n  },\n  /*::[*/0x01B8 /*::]*/: {\n    /* n:\"BrtEndPCDHGLGroups\", */T: -1\n  },\n  /*::[*/0x01B9 /*::]*/: {\n    /* n:\"BrtBeginPCDHGLGroup\", */T: 1\n  },\n  /*::[*/0x01BA /*::]*/: {\n    /* n:\"BrtEndPCDHGLGroup\", */T: -1\n  },\n  /*::[*/0x01BB /*::]*/: {\n    /* n:\"BrtBeginPCDHGLGMembers\", */T: 1\n  },\n  /*::[*/0x01BC /*::]*/: {\n    /* n:\"BrtEndPCDHGLGMembers\", */T: -1\n  },\n  /*::[*/0x01BD /*::]*/: {\n    /* n:\"BrtBeginPCDHGLGMember\", */T: 1\n  },\n  /*::[*/0x01BE /*::]*/: {\n    /* n:\"BrtEndPCDHGLGMember\", */T: -1\n  },\n  /*::[*/0x01BF /*::]*/: {\n    /* n:\"BrtBeginQSI\", */T: 1\n  },\n  /*::[*/0x01C0 /*::]*/: {\n    /* n:\"BrtEndQSI\", */T: -1\n  },\n  /*::[*/0x01C1 /*::]*/: {\n    /* n:\"BrtBeginQSIR\", */T: 1\n  },\n  /*::[*/0x01C2 /*::]*/: {\n    /* n:\"BrtEndQSIR\", */T: -1\n  },\n  /*::[*/0x01C3 /*::]*/: {\n    /* n:\"BrtBeginDeletedNames\", */T: 1\n  },\n  /*::[*/0x01C4 /*::]*/: {\n    /* n:\"BrtEndDeletedNames\", */T: -1\n  },\n  /*::[*/0x01C5 /*::]*/: {\n    /* n:\"BrtBeginDeletedName\", */T: 1\n  },\n  /*::[*/0x01C6 /*::]*/: {\n    /* n:\"BrtEndDeletedName\", */T: -1\n  },\n  /*::[*/0x01C7 /*::]*/: {\n    /* n:\"BrtBeginQSIFs\", */T: 1\n  },\n  /*::[*/0x01C8 /*::]*/: {\n    /* n:\"BrtEndQSIFs\", */T: -1\n  },\n  /*::[*/0x01C9 /*::]*/: {\n    /* n:\"BrtBeginQSIF\", */T: 1\n  },\n  /*::[*/0x01CA /*::]*/: {\n    /* n:\"BrtEndQSIF\", */T: -1\n  },\n  /*::[*/0x01CB /*::]*/: {\n    /* n:\"BrtBeginAutoSortScope\", */T: 1\n  },\n  /*::[*/0x01CC /*::]*/: {\n    /* n:\"BrtEndAutoSortScope\", */T: -1\n  },\n  /*::[*/0x01CD /*::]*/: {\n    /* n:\"BrtBeginConditionalFormatting\", */T: 1\n  },\n  /*::[*/0x01CE /*::]*/: {\n    /* n:\"BrtEndConditionalFormatting\", */T: -1\n  },\n  /*::[*/0x01CF /*::]*/: {\n    /* n:\"BrtBeginCFRule\", */T: 1\n  },\n  /*::[*/0x01D0 /*::]*/: {\n    /* n:\"BrtEndCFRule\", */T: -1\n  },\n  /*::[*/0x01D1 /*::]*/: {\n    /* n:\"BrtBeginIconSet\", */T: 1\n  },\n  /*::[*/0x01D2 /*::]*/: {\n    /* n:\"BrtEndIconSet\", */T: -1\n  },\n  /*::[*/0x01D3 /*::]*/: {\n    /* n:\"BrtBeginDatabar\", */T: 1\n  },\n  /*::[*/0x01D4 /*::]*/: {\n    /* n:\"BrtEndDatabar\", */T: -1\n  },\n  /*::[*/0x01D5 /*::]*/: {\n    /* n:\"BrtBeginColorScale\", */T: 1\n  },\n  /*::[*/0x01D6 /*::]*/: {\n    /* n:\"BrtEndColorScale\", */T: -1\n  },\n  /*::[*/0x01D7 /*::]*/: {/* n:\"BrtCFVO\" */},\n  /*::[*/0x01D8 /*::]*/: {/* n:\"BrtExternValueMeta\" */},\n  /*::[*/0x01D9 /*::]*/: {\n    /* n:\"BrtBeginColorPalette\", */T: 1\n  },\n  /*::[*/0x01DA /*::]*/: {\n    /* n:\"BrtEndColorPalette\", */T: -1\n  },\n  /*::[*/0x01DB /*::]*/: {/* n:\"BrtIndexedColor\" */},\n  /*::[*/0x01DC /*::]*/: {\n    /* n:\"BrtMargins\", */f: parse_BrtMargins\n  },\n  /*::[*/0x01DD /*::]*/: {/* n:\"BrtPrintOptions\" */},\n  /*::[*/0x01DE /*::]*/: {/* n:\"BrtPageSetup\" */},\n  /*::[*/0x01DF /*::]*/: {\n    /* n:\"BrtBeginHeaderFooter\", */T: 1\n  },\n  /*::[*/0x01E0 /*::]*/: {\n    /* n:\"BrtEndHeaderFooter\", */T: -1\n  },\n  /*::[*/0x01E1 /*::]*/: {\n    /* n:\"BrtBeginSXCrtFormat\", */T: 1\n  },\n  /*::[*/0x01E2 /*::]*/: {\n    /* n:\"BrtEndSXCrtFormat\", */T: -1\n  },\n  /*::[*/0x01E3 /*::]*/: {\n    /* n:\"BrtBeginSXCrtFormats\", */T: 1\n  },\n  /*::[*/0x01E4 /*::]*/: {\n    /* n:\"BrtEndSXCrtFormats\", */T: -1\n  },\n  /*::[*/0x01E5 /*::]*/: {\n    /* n:\"BrtWsFmtInfo\", */f: parse_BrtWsFmtInfo\n  },\n  /*::[*/0x01E6 /*::]*/: {\n    /* n:\"BrtBeginMgs\", */T: 1\n  },\n  /*::[*/0x01E7 /*::]*/: {\n    /* n:\"BrtEndMGs\", */T: -1\n  },\n  /*::[*/0x01E8 /*::]*/: {\n    /* n:\"BrtBeginMGMaps\", */T: 1\n  },\n  /*::[*/0x01E9 /*::]*/: {\n    /* n:\"BrtEndMGMaps\", */T: -1\n  },\n  /*::[*/0x01EA /*::]*/: {\n    /* n:\"BrtBeginMG\", */T: 1\n  },\n  /*::[*/0x01EB /*::]*/: {\n    /* n:\"BrtEndMG\", */T: -1\n  },\n  /*::[*/0x01EC /*::]*/: {\n    /* n:\"BrtBeginMap\", */T: 1\n  },\n  /*::[*/0x01ED /*::]*/: {\n    /* n:\"BrtEndMap\", */T: -1\n  },\n  /*::[*/0x01EE /*::]*/: {\n    /* n:\"BrtHLink\", */f: parse_BrtHLink\n  },\n  /*::[*/0x01EF /*::]*/: {\n    /* n:\"BrtBeginDCon\", */T: 1\n  },\n  /*::[*/0x01F0 /*::]*/: {\n    /* n:\"BrtEndDCon\", */T: -1\n  },\n  /*::[*/0x01F1 /*::]*/: {\n    /* n:\"BrtBeginDRefs\", */T: 1\n  },\n  /*::[*/0x01F2 /*::]*/: {\n    /* n:\"BrtEndDRefs\", */T: -1\n  },\n  /*::[*/0x01F3 /*::]*/: {/* n:\"BrtDRef\" */},\n  /*::[*/0x01F4 /*::]*/: {\n    /* n:\"BrtBeginScenMan\", */T: 1\n  },\n  /*::[*/0x01F5 /*::]*/: {\n    /* n:\"BrtEndScenMan\", */T: -1\n  },\n  /*::[*/0x01F6 /*::]*/: {\n    /* n:\"BrtBeginSct\", */T: 1\n  },\n  /*::[*/0x01F7 /*::]*/: {\n    /* n:\"BrtEndSct\", */T: -1\n  },\n  /*::[*/0x01F8 /*::]*/: {/* n:\"BrtSlc\" */},\n  /*::[*/0x01F9 /*::]*/: {\n    /* n:\"BrtBeginDXFs\", */T: 1\n  },\n  /*::[*/0x01FA /*::]*/: {\n    /* n:\"BrtEndDXFs\", */T: -1\n  },\n  /*::[*/0x01FB /*::]*/: {/* n:\"BrtDXF\" */},\n  /*::[*/0x01FC /*::]*/: {\n    /* n:\"BrtBeginTableStyles\", */T: 1\n  },\n  /*::[*/0x01FD /*::]*/: {\n    /* n:\"BrtEndTableStyles\", */T: -1\n  },\n  /*::[*/0x01FE /*::]*/: {\n    /* n:\"BrtBeginTableStyle\", */T: 1\n  },\n  /*::[*/0x01FF /*::]*/: {\n    /* n:\"BrtEndTableStyle\", */T: -1\n  },\n  /*::[*/0x0200 /*::]*/: {/* n:\"BrtTableStyleElement\" */},\n  /*::[*/0x0201 /*::]*/: {/* n:\"BrtTableStyleClient\" */},\n  /*::[*/0x0202 /*::]*/: {\n    /* n:\"BrtBeginVolDeps\", */T: 1\n  },\n  /*::[*/0x0203 /*::]*/: {\n    /* n:\"BrtEndVolDeps\", */T: -1\n  },\n  /*::[*/0x0204 /*::]*/: {\n    /* n:\"BrtBeginVolType\", */T: 1\n  },\n  /*::[*/0x0205 /*::]*/: {\n    /* n:\"BrtEndVolType\", */T: -1\n  },\n  /*::[*/0x0206 /*::]*/: {\n    /* n:\"BrtBeginVolMain\", */T: 1\n  },\n  /*::[*/0x0207 /*::]*/: {\n    /* n:\"BrtEndVolMain\", */T: -1\n  },\n  /*::[*/0x0208 /*::]*/: {\n    /* n:\"BrtBeginVolTopic\", */T: 1\n  },\n  /*::[*/0x0209 /*::]*/: {\n    /* n:\"BrtEndVolTopic\", */T: -1\n  },\n  /*::[*/0x020A /*::]*/: {/* n:\"BrtVolSubtopic\" */},\n  /*::[*/0x020B /*::]*/: {/* n:\"BrtVolRef\" */},\n  /*::[*/0x020C /*::]*/: {/* n:\"BrtVolNum\" */},\n  /*::[*/0x020D /*::]*/: {/* n:\"BrtVolErr\" */},\n  /*::[*/0x020E /*::]*/: {/* n:\"BrtVolStr\" */},\n  /*::[*/0x020F /*::]*/: {/* n:\"BrtVolBool\" */},\n  /*::[*/0x0210 /*::]*/: {\n    /* n:\"BrtBeginCalcChain$\", */T: 1\n  },\n  /*::[*/0x0211 /*::]*/: {\n    /* n:\"BrtEndCalcChain$\", */T: -1\n  },\n  /*::[*/0x0212 /*::]*/: {\n    /* n:\"BrtBeginSortState\", */T: 1\n  },\n  /*::[*/0x0213 /*::]*/: {\n    /* n:\"BrtEndSortState\", */T: -1\n  },\n  /*::[*/0x0214 /*::]*/: {\n    /* n:\"BrtBeginSortCond\", */T: 1\n  },\n  /*::[*/0x0215 /*::]*/: {\n    /* n:\"BrtEndSortCond\", */T: -1\n  },\n  /*::[*/0x0216 /*::]*/: {/* n:\"BrtBookProtection\" */},\n  /*::[*/0x0217 /*::]*/: {/* n:\"BrtSheetProtection\" */},\n  /*::[*/0x0218 /*::]*/: {/* n:\"BrtRangeProtection\" */},\n  /*::[*/0x0219 /*::]*/: {/* n:\"BrtPhoneticInfo\" */},\n  /*::[*/0x021A /*::]*/: {\n    /* n:\"BrtBeginECTxtWiz\", */T: 1\n  },\n  /*::[*/0x021B /*::]*/: {\n    /* n:\"BrtEndECTxtWiz\", */T: -1\n  },\n  /*::[*/0x021C /*::]*/: {\n    /* n:\"BrtBeginECTWFldInfoLst\", */T: 1\n  },\n  /*::[*/0x021D /*::]*/: {\n    /* n:\"BrtEndECTWFldInfoLst\", */T: -1\n  },\n  /*::[*/0x021E /*::]*/: {\n    /* n:\"BrtBeginECTwFldInfo\", */T: 1\n  },\n  /*::[*/0x0224 /*::]*/: {/* n:\"BrtFileSharing\" */},\n  /*::[*/0x0225 /*::]*/: {/* n:\"BrtOleSize\" */},\n  /*::[*/0x0226 /*::]*/: {\n    /* n:\"BrtDrawing\", */f: parse_RelID\n  },\n  /*::[*/0x0227 /*::]*/: {\n    /* n:\"BrtLegacyDrawing\", */f: parse_XLNullableWideString\n  },\n  /*::[*/0x0228 /*::]*/: {/* n:\"BrtLegacyDrawingHF\" */},\n  /*::[*/0x0229 /*::]*/: {/* n:\"BrtWebOpt\" */},\n  /*::[*/0x022A /*::]*/: {\n    /* n:\"BrtBeginWebPubItems\", */T: 1\n  },\n  /*::[*/0x022B /*::]*/: {\n    /* n:\"BrtEndWebPubItems\", */T: -1\n  },\n  /*::[*/0x022C /*::]*/: {\n    /* n:\"BrtBeginWebPubItem\", */T: 1\n  },\n  /*::[*/0x022D /*::]*/: {\n    /* n:\"BrtEndWebPubItem\", */T: -1\n  },\n  /*::[*/0x022E /*::]*/: {\n    /* n:\"BrtBeginSXCondFmt\", */T: 1\n  },\n  /*::[*/0x022F /*::]*/: {\n    /* n:\"BrtEndSXCondFmt\", */T: -1\n  },\n  /*::[*/0x0230 /*::]*/: {\n    /* n:\"BrtBeginSXCondFmts\", */T: 1\n  },\n  /*::[*/0x0231 /*::]*/: {\n    /* n:\"BrtEndSXCondFmts\", */T: -1\n  },\n  /*::[*/0x0232 /*::]*/: {/* n:\"BrtBkHim\" */},\n  /*::[*/0x0234 /*::]*/: {/* n:\"BrtColor\" */},\n  /*::[*/0x0235 /*::]*/: {\n    /* n:\"BrtBeginIndexedColors\", */T: 1\n  },\n  /*::[*/0x0236 /*::]*/: {\n    /* n:\"BrtEndIndexedColors\", */T: -1\n  },\n  /*::[*/0x0239 /*::]*/: {\n    /* n:\"BrtBeginMRUColors\", */T: 1\n  },\n  /*::[*/0x023A /*::]*/: {\n    /* n:\"BrtEndMRUColors\", */T: -1\n  },\n  /*::[*/0x023C /*::]*/: {/* n:\"BrtMRUColor\" */},\n  /*::[*/0x023D /*::]*/: {\n    /* n:\"BrtBeginDVals\", */T: 1\n  },\n  /*::[*/0x023E /*::]*/: {\n    /* n:\"BrtEndDVals\", */T: -1\n  },\n  /*::[*/0x0241 /*::]*/: {/* n:\"BrtSupNameStart\" */},\n  /*::[*/0x0242 /*::]*/: {/* n:\"BrtSupNameValueStart\" */},\n  /*::[*/0x0243 /*::]*/: {/* n:\"BrtSupNameValueEnd\" */},\n  /*::[*/0x0244 /*::]*/: {/* n:\"BrtSupNameNum\" */},\n  /*::[*/0x0245 /*::]*/: {/* n:\"BrtSupNameErr\" */},\n  /*::[*/0x0246 /*::]*/: {/* n:\"BrtSupNameSt\" */},\n  /*::[*/0x0247 /*::]*/: {/* n:\"BrtSupNameNil\" */},\n  /*::[*/0x0248 /*::]*/: {/* n:\"BrtSupNameBool\" */},\n  /*::[*/0x0249 /*::]*/: {/* n:\"BrtSupNameFmla\" */},\n  /*::[*/0x024A /*::]*/: {/* n:\"BrtSupNameBits\" */},\n  /*::[*/0x024B /*::]*/: {/* n:\"BrtSupNameEnd\" */},\n  /*::[*/0x024C /*::]*/: {\n    /* n:\"BrtEndSupBook\", */T: -1\n  },\n  /*::[*/0x024D /*::]*/: {/* n:\"BrtCellSmartTagProperty\" */},\n  /*::[*/0x024E /*::]*/: {\n    /* n:\"BrtBeginCellSmartTag\", */T: 1\n  },\n  /*::[*/0x024F /*::]*/: {\n    /* n:\"BrtEndCellSmartTag\", */T: -1\n  },\n  /*::[*/0x0250 /*::]*/: {\n    /* n:\"BrtBeginCellSmartTags\", */T: 1\n  },\n  /*::[*/0x0251 /*::]*/: {\n    /* n:\"BrtEndCellSmartTags\", */T: -1\n  },\n  /*::[*/0x0252 /*::]*/: {\n    /* n:\"BrtBeginSmartTags\", */T: 1\n  },\n  /*::[*/0x0253 /*::]*/: {\n    /* n:\"BrtEndSmartTags\", */T: -1\n  },\n  /*::[*/0x0254 /*::]*/: {/* n:\"BrtSmartTagType\" */},\n  /*::[*/0x0255 /*::]*/: {\n    /* n:\"BrtBeginSmartTagTypes\", */T: 1\n  },\n  /*::[*/0x0256 /*::]*/: {\n    /* n:\"BrtEndSmartTagTypes\", */T: -1\n  },\n  /*::[*/0x0257 /*::]*/: {\n    /* n:\"BrtBeginSXFilters\", */T: 1\n  },\n  /*::[*/0x0258 /*::]*/: {\n    /* n:\"BrtEndSXFilters\", */T: -1\n  },\n  /*::[*/0x0259 /*::]*/: {\n    /* n:\"BrtBeginSXFILTER\", */T: 1\n  },\n  /*::[*/0x025A /*::]*/: {\n    /* n:\"BrtEndSXFilter\", */T: -1\n  },\n  /*::[*/0x025B /*::]*/: {\n    /* n:\"BrtBeginFills\", */T: 1\n  },\n  /*::[*/0x025C /*::]*/: {\n    /* n:\"BrtEndFills\", */T: -1\n  },\n  /*::[*/0x025D /*::]*/: {\n    /* n:\"BrtBeginCellWatches\", */T: 1\n  },\n  /*::[*/0x025E /*::]*/: {\n    /* n:\"BrtEndCellWatches\", */T: -1\n  },\n  /*::[*/0x025F /*::]*/: {/* n:\"BrtCellWatch\" */},\n  /*::[*/0x0260 /*::]*/: {\n    /* n:\"BrtBeginCRErrs\", */T: 1\n  },\n  /*::[*/0x0261 /*::]*/: {\n    /* n:\"BrtEndCRErrs\", */T: -1\n  },\n  /*::[*/0x0262 /*::]*/: {/* n:\"BrtCrashRecErr\" */},\n  /*::[*/0x0263 /*::]*/: {\n    /* n:\"BrtBeginFonts\", */T: 1\n  },\n  /*::[*/0x0264 /*::]*/: {\n    /* n:\"BrtEndFonts\", */T: -1\n  },\n  /*::[*/0x0265 /*::]*/: {\n    /* n:\"BrtBeginBorders\", */T: 1\n  },\n  /*::[*/0x0266 /*::]*/: {\n    /* n:\"BrtEndBorders\", */T: -1\n  },\n  /*::[*/0x0267 /*::]*/: {\n    /* n:\"BrtBeginFmts\", */T: 1\n  },\n  /*::[*/0x0268 /*::]*/: {\n    /* n:\"BrtEndFmts\", */T: -1\n  },\n  /*::[*/0x0269 /*::]*/: {\n    /* n:\"BrtBeginCellXFs\", */T: 1\n  },\n  /*::[*/0x026A /*::]*/: {\n    /* n:\"BrtEndCellXFs\", */T: -1\n  },\n  /*::[*/0x026B /*::]*/: {\n    /* n:\"BrtBeginStyles\", */T: 1\n  },\n  /*::[*/0x026C /*::]*/: {\n    /* n:\"BrtEndStyles\", */T: -1\n  },\n  /*::[*/0x0271 /*::]*/: {/* n:\"BrtBigName\" */},\n  /*::[*/0x0272 /*::]*/: {\n    /* n:\"BrtBeginCellStyleXFs\", */T: 1\n  },\n  /*::[*/0x0273 /*::]*/: {\n    /* n:\"BrtEndCellStyleXFs\", */T: -1\n  },\n  /*::[*/0x0274 /*::]*/: {\n    /* n:\"BrtBeginComments\", */T: 1\n  },\n  /*::[*/0x0275 /*::]*/: {\n    /* n:\"BrtEndComments\", */T: -1\n  },\n  /*::[*/0x0276 /*::]*/: {\n    /* n:\"BrtBeginCommentAuthors\", */T: 1\n  },\n  /*::[*/0x0277 /*::]*/: {\n    /* n:\"BrtEndCommentAuthors\", */T: -1\n  },\n  /*::[*/0x0278 /*::]*/: {\n    /* n:\"BrtCommentAuthor\", */f: parse_BrtCommentAuthor\n  },\n  /*::[*/0x0279 /*::]*/: {\n    /* n:\"BrtBeginCommentList\", */T: 1\n  },\n  /*::[*/0x027A /*::]*/: {\n    /* n:\"BrtEndCommentList\", */T: -1\n  },\n  /*::[*/0x027B /*::]*/: {\n    /* n:\"BrtBeginComment\", */T: 1,\n    f: parse_BrtBeginComment\n  },\n  /*::[*/0x027C /*::]*/: {\n    /* n:\"BrtEndComment\", */T: -1\n  },\n  /*::[*/0x027D /*::]*/: {\n    /* n:\"BrtCommentText\", */f: parse_BrtCommentText\n  },\n  /*::[*/0x027E /*::]*/: {\n    /* n:\"BrtBeginOleObjects\", */T: 1\n  },\n  /*::[*/0x027F /*::]*/: {/* n:\"BrtOleObject\" */},\n  /*::[*/0x0280 /*::]*/: {\n    /* n:\"BrtEndOleObjects\", */T: -1\n  },\n  /*::[*/0x0281 /*::]*/: {\n    /* n:\"BrtBeginSxrules\", */T: 1\n  },\n  /*::[*/0x0282 /*::]*/: {\n    /* n:\"BrtEndSxRules\", */T: -1\n  },\n  /*::[*/0x0283 /*::]*/: {\n    /* n:\"BrtBeginActiveXControls\", */T: 1\n  },\n  /*::[*/0x0284 /*::]*/: {/* n:\"BrtActiveX\" */},\n  /*::[*/0x0285 /*::]*/: {\n    /* n:\"BrtEndActiveXControls\", */T: -1\n  },\n  /*::[*/0x0286 /*::]*/: {\n    /* n:\"BrtBeginPCDSDTCEMembersSortBy\", */T: 1\n  },\n  /*::[*/0x0288 /*::]*/: {\n    /* n:\"BrtBeginCellIgnoreECs\", */T: 1\n  },\n  /*::[*/0x0289 /*::]*/: {/* n:\"BrtCellIgnoreEC\" */},\n  /*::[*/0x028A /*::]*/: {\n    /* n:\"BrtEndCellIgnoreECs\", */T: -1\n  },\n  /*::[*/0x028B /*::]*/: {\n    /* n:\"BrtCsProp\", */f: parse_BrtCsProp\n  },\n  /*::[*/0x028C /*::]*/: {/* n:\"BrtCsPageSetup\" */},\n  /*::[*/0x028D /*::]*/: {\n    /* n:\"BrtBeginUserCsViews\", */T: 1\n  },\n  /*::[*/0x028E /*::]*/: {\n    /* n:\"BrtEndUserCsViews\", */T: -1\n  },\n  /*::[*/0x028F /*::]*/: {\n    /* n:\"BrtBeginUserCsView\", */T: 1\n  },\n  /*::[*/0x0290 /*::]*/: {\n    /* n:\"BrtEndUserCsView\", */T: -1\n  },\n  /*::[*/0x0291 /*::]*/: {\n    /* n:\"BrtBeginPcdSFCIEntries\", */T: 1\n  },\n  /*::[*/0x0292 /*::]*/: {\n    /* n:\"BrtEndPCDSFCIEntries\", */T: -1\n  },\n  /*::[*/0x0293 /*::]*/: {/* n:\"BrtPCDSFCIEntry\" */},\n  /*::[*/0x0294 /*::]*/: {\n    /* n:\"BrtBeginListParts\", */T: 1\n  },\n  /*::[*/0x0295 /*::]*/: {/* n:\"BrtListPart\" */},\n  /*::[*/0x0296 /*::]*/: {\n    /* n:\"BrtEndListParts\", */T: -1\n  },\n  /*::[*/0x0297 /*::]*/: {/* n:\"BrtSheetCalcProp\" */},\n  /*::[*/0x0298 /*::]*/: {\n    /* n:\"BrtBeginFnGroup\", */T: 1\n  },\n  /*::[*/0x0299 /*::]*/: {/* n:\"BrtFnGroup\" */},\n  /*::[*/0x029A /*::]*/: {\n    /* n:\"BrtEndFnGroup\", */T: -1\n  },\n  /*::[*/0x029B /*::]*/: {/* n:\"BrtSupAddin\" */},\n  /*::[*/0x029C /*::]*/: {/* n:\"BrtSXTDMPOrder\" */},\n  /*::[*/0x029D /*::]*/: {/* n:\"BrtCsProtection\" */},\n  /*::[*/0x029F /*::]*/: {\n    /* n:\"BrtBeginWsSortMap\", */T: 1\n  },\n  /*::[*/0x02A0 /*::]*/: {\n    /* n:\"BrtEndWsSortMap\", */T: -1\n  },\n  /*::[*/0x02A1 /*::]*/: {\n    /* n:\"BrtBeginRRSort\", */T: 1\n  },\n  /*::[*/0x02A2 /*::]*/: {\n    /* n:\"BrtEndRRSort\", */T: -1\n  },\n  /*::[*/0x02A3 /*::]*/: {/* n:\"BrtRRSortItem\" */},\n  /*::[*/0x02A4 /*::]*/: {/* n:\"BrtFileSharingIso\" */},\n  /*::[*/0x02A5 /*::]*/: {/* n:\"BrtBookProtectionIso\" */},\n  /*::[*/0x02A6 /*::]*/: {/* n:\"BrtSheetProtectionIso\" */},\n  /*::[*/0x02A7 /*::]*/: {/* n:\"BrtCsProtectionIso\" */},\n  /*::[*/0x02A8 /*::]*/: {/* n:\"BrtRangeProtectionIso\" */},\n  /*::[*/0x02A9 /*::]*/: {/* n:\"BrtDValList\" */},\n  /*::[*/0x0400 /*::]*/: {/* n:\"BrtRwDescent\" */},\n  /*::[*/0x0401 /*::]*/: {/* n:\"BrtKnownFonts\" */},\n  /*::[*/0x0402 /*::]*/: {\n    /* n:\"BrtBeginSXTupleSet\", */T: 1\n  },\n  /*::[*/0x0403 /*::]*/: {\n    /* n:\"BrtEndSXTupleSet\", */T: -1\n  },\n  /*::[*/0x0404 /*::]*/: {\n    /* n:\"BrtBeginSXTupleSetHeader\", */T: 1\n  },\n  /*::[*/0x0405 /*::]*/: {\n    /* n:\"BrtEndSXTupleSetHeader\", */T: -1\n  },\n  /*::[*/0x0406 /*::]*/: {/* n:\"BrtSXTupleSetHeaderItem\" */},\n  /*::[*/0x0407 /*::]*/: {\n    /* n:\"BrtBeginSXTupleSetData\", */T: 1\n  },\n  /*::[*/0x0408 /*::]*/: {\n    /* n:\"BrtEndSXTupleSetData\", */T: -1\n  },\n  /*::[*/0x0409 /*::]*/: {\n    /* n:\"BrtBeginSXTupleSetRow\", */T: 1\n  },\n  /*::[*/0x040A /*::]*/: {\n    /* n:\"BrtEndSXTupleSetRow\", */T: -1\n  },\n  /*::[*/0x040B /*::]*/: {/* n:\"BrtSXTupleSetRowItem\" */},\n  /*::[*/0x040C /*::]*/: {/* n:\"BrtNameExt\" */},\n  /*::[*/0x040D /*::]*/: {/* n:\"BrtPCDH14\" */},\n  /*::[*/0x040E /*::]*/: {\n    /* n:\"BrtBeginPCDCalcMem14\", */T: 1\n  },\n  /*::[*/0x040F /*::]*/: {\n    /* n:\"BrtEndPCDCalcMem14\", */T: -1\n  },\n  /*::[*/0x0410 /*::]*/: {/* n:\"BrtSXTH14\" */},\n  /*::[*/0x0411 /*::]*/: {\n    /* n:\"BrtBeginSparklineGroup\", */T: 1\n  },\n  /*::[*/0x0412 /*::]*/: {\n    /* n:\"BrtEndSparklineGroup\", */T: -1\n  },\n  /*::[*/0x0413 /*::]*/: {/* n:\"BrtSparkline\" */},\n  /*::[*/0x0414 /*::]*/: {/* n:\"BrtSXDI14\" */},\n  /*::[*/0x0415 /*::]*/: {/* n:\"BrtWsFmtInfoEx14\" */},\n  /*::[*/0x0416 /*::]*/: {\n    /* n:\"BrtBeginConditionalFormatting14\", */T: 1\n  },\n  /*::[*/0x0417 /*::]*/: {\n    /* n:\"BrtEndConditionalFormatting14\", */T: -1\n  },\n  /*::[*/0x0418 /*::]*/: {\n    /* n:\"BrtBeginCFRule14\", */T: 1\n  },\n  /*::[*/0x0419 /*::]*/: {\n    /* n:\"BrtEndCFRule14\", */T: -1\n  },\n  /*::[*/0x041A /*::]*/: {/* n:\"BrtCFVO14\" */},\n  /*::[*/0x041B /*::]*/: {\n    /* n:\"BrtBeginDatabar14\", */T: 1\n  },\n  /*::[*/0x041C /*::]*/: {\n    /* n:\"BrtBeginIconSet14\", */T: 1\n  },\n  /*::[*/0x041D /*::]*/: {\n    /* n:\"BrtDVal14\", */f: parse_BrtDVal14\n  },\n  /*::[*/0x041E /*::]*/: {\n    /* n:\"BrtBeginDVals14\", */T: 1\n  },\n  /*::[*/0x041F /*::]*/: {/* n:\"BrtColor14\" */},\n  /*::[*/0x0420 /*::]*/: {\n    /* n:\"BrtBeginSparklines\", */T: 1\n  },\n  /*::[*/0x0421 /*::]*/: {\n    /* n:\"BrtEndSparklines\", */T: -1\n  },\n  /*::[*/0x0422 /*::]*/: {\n    /* n:\"BrtBeginSparklineGroups\", */T: 1\n  },\n  /*::[*/0x0423 /*::]*/: {\n    /* n:\"BrtEndSparklineGroups\", */T: -1\n  },\n  /*::[*/0x0425 /*::]*/: {/* n:\"BrtSXVD14\" */},\n  /*::[*/0x0426 /*::]*/: {\n    /* n:\"BrtBeginSXView14\", */T: 1\n  },\n  /*::[*/0x0427 /*::]*/: {\n    /* n:\"BrtEndSXView14\", */T: -1\n  },\n  /*::[*/0x0428 /*::]*/: {\n    /* n:\"BrtBeginSXView16\", */T: 1\n  },\n  /*::[*/0x0429 /*::]*/: {\n    /* n:\"BrtEndSXView16\", */T: -1\n  },\n  /*::[*/0x042A /*::]*/: {\n    /* n:\"BrtBeginPCD14\", */T: 1\n  },\n  /*::[*/0x042B /*::]*/: {\n    /* n:\"BrtEndPCD14\", */T: -1\n  },\n  /*::[*/0x042C /*::]*/: {\n    /* n:\"BrtBeginExtConn14\", */T: 1\n  },\n  /*::[*/0x042D /*::]*/: {\n    /* n:\"BrtEndExtConn14\", */T: -1\n  },\n  /*::[*/0x042E /*::]*/: {\n    /* n:\"BrtBeginSlicerCacheIDs\", */T: 1\n  },\n  /*::[*/0x042F /*::]*/: {\n    /* n:\"BrtEndSlicerCacheIDs\", */T: -1\n  },\n  /*::[*/0x0430 /*::]*/: {\n    /* n:\"BrtBeginSlicerCacheID\", */T: 1\n  },\n  /*::[*/0x0431 /*::]*/: {\n    /* n:\"BrtEndSlicerCacheID\", */T: -1\n  },\n  /*::[*/0x0433 /*::]*/: {\n    /* n:\"BrtBeginSlicerCache\", */T: 1\n  },\n  /*::[*/0x0434 /*::]*/: {\n    /* n:\"BrtEndSlicerCache\", */T: -1\n  },\n  /*::[*/0x0435 /*::]*/: {\n    /* n:\"BrtBeginSlicerCacheDef\", */T: 1\n  },\n  /*::[*/0x0436 /*::]*/: {\n    /* n:\"BrtEndSlicerCacheDef\", */T: -1\n  },\n  /*::[*/0x0437 /*::]*/: {\n    /* n:\"BrtBeginSlicersEx\", */T: 1\n  },\n  /*::[*/0x0438 /*::]*/: {\n    /* n:\"BrtEndSlicersEx\", */T: -1\n  },\n  /*::[*/0x0439 /*::]*/: {\n    /* n:\"BrtBeginSlicerEx\", */T: 1\n  },\n  /*::[*/0x043A /*::]*/: {\n    /* n:\"BrtEndSlicerEx\", */T: -1\n  },\n  /*::[*/0x043B /*::]*/: {\n    /* n:\"BrtBeginSlicer\", */T: 1\n  },\n  /*::[*/0x043C /*::]*/: {\n    /* n:\"BrtEndSlicer\", */T: -1\n  },\n  /*::[*/0x043D /*::]*/: {/* n:\"BrtSlicerCachePivotTables\" */},\n  /*::[*/0x043E /*::]*/: {\n    /* n:\"BrtBeginSlicerCacheOlapImpl\", */T: 1\n  },\n  /*::[*/0x043F /*::]*/: {\n    /* n:\"BrtEndSlicerCacheOlapImpl\", */T: -1\n  },\n  /*::[*/0x0440 /*::]*/: {\n    /* n:\"BrtBeginSlicerCacheLevelsData\", */T: 1\n  },\n  /*::[*/0x0441 /*::]*/: {\n    /* n:\"BrtEndSlicerCacheLevelsData\", */T: -1\n  },\n  /*::[*/0x0442 /*::]*/: {\n    /* n:\"BrtBeginSlicerCacheLevelData\", */T: 1\n  },\n  /*::[*/0x0443 /*::]*/: {\n    /* n:\"BrtEndSlicerCacheLevelData\", */T: -1\n  },\n  /*::[*/0x0444 /*::]*/: {\n    /* n:\"BrtBeginSlicerCacheSiRanges\", */T: 1\n  },\n  /*::[*/0x0445 /*::]*/: {\n    /* n:\"BrtEndSlicerCacheSiRanges\", */T: -1\n  },\n  /*::[*/0x0446 /*::]*/: {\n    /* n:\"BrtBeginSlicerCacheSiRange\", */T: 1\n  },\n  /*::[*/0x0447 /*::]*/: {\n    /* n:\"BrtEndSlicerCacheSiRange\", */T: -1\n  },\n  /*::[*/0x0448 /*::]*/: {/* n:\"BrtSlicerCacheOlapItem\" */},\n  /*::[*/0x0449 /*::]*/: {\n    /* n:\"BrtBeginSlicerCacheSelections\", */T: 1\n  },\n  /*::[*/0x044A /*::]*/: {/* n:\"BrtSlicerCacheSelection\" */},\n  /*::[*/0x044B /*::]*/: {\n    /* n:\"BrtEndSlicerCacheSelections\", */T: -1\n  },\n  /*::[*/0x044C /*::]*/: {\n    /* n:\"BrtBeginSlicerCacheNative\", */T: 1\n  },\n  /*::[*/0x044D /*::]*/: {\n    /* n:\"BrtEndSlicerCacheNative\", */T: -1\n  },\n  /*::[*/0x044E /*::]*/: {/* n:\"BrtSlicerCacheNativeItem\" */},\n  /*::[*/0x044F /*::]*/: {/* n:\"BrtRangeProtection14\" */},\n  /*::[*/0x0450 /*::]*/: {/* n:\"BrtRangeProtectionIso14\" */},\n  /*::[*/0x0451 /*::]*/: {/* n:\"BrtCellIgnoreEC14\" */},\n  /*::[*/0x0457 /*::]*/: {/* n:\"BrtList14\" */},\n  /*::[*/0x0458 /*::]*/: {/* n:\"BrtCFIcon\" */},\n  /*::[*/0x0459 /*::]*/: {\n    /* n:\"BrtBeginSlicerCachesPivotCacheIDs\", */T: 1\n  },\n  /*::[*/0x045A /*::]*/: {\n    /* n:\"BrtEndSlicerCachesPivotCacheIDs\", */T: -1\n  },\n  /*::[*/0x045B /*::]*/: {\n    /* n:\"BrtBeginSlicers\", */T: 1\n  },\n  /*::[*/0x045C /*::]*/: {\n    /* n:\"BrtEndSlicers\", */T: -1\n  },\n  /*::[*/0x045D /*::]*/: {/* n:\"BrtWbProp14\" */},\n  /*::[*/0x045E /*::]*/: {\n    /* n:\"BrtBeginSXEdit\", */T: 1\n  },\n  /*::[*/0x045F /*::]*/: {\n    /* n:\"BrtEndSXEdit\", */T: -1\n  },\n  /*::[*/0x0460 /*::]*/: {\n    /* n:\"BrtBeginSXEdits\", */T: 1\n  },\n  /*::[*/0x0461 /*::]*/: {\n    /* n:\"BrtEndSXEdits\", */T: -1\n  },\n  /*::[*/0x0462 /*::]*/: {\n    /* n:\"BrtBeginSXChange\", */T: 1\n  },\n  /*::[*/0x0463 /*::]*/: {\n    /* n:\"BrtEndSXChange\", */T: -1\n  },\n  /*::[*/0x0464 /*::]*/: {\n    /* n:\"BrtBeginSXChanges\", */T: 1\n  },\n  /*::[*/0x0465 /*::]*/: {\n    /* n:\"BrtEndSXChanges\", */T: -1\n  },\n  /*::[*/0x0466 /*::]*/: {/* n:\"BrtSXTupleItems\" */},\n  /*::[*/0x0468 /*::]*/: {\n    /* n:\"BrtBeginSlicerStyle\", */T: 1\n  },\n  /*::[*/0x0469 /*::]*/: {\n    /* n:\"BrtEndSlicerStyle\", */T: -1\n  },\n  /*::[*/0x046A /*::]*/: {/* n:\"BrtSlicerStyleElement\" */},\n  /*::[*/0x046B /*::]*/: {\n    /* n:\"BrtBeginStyleSheetExt14\", */T: 1\n  },\n  /*::[*/0x046C /*::]*/: {\n    /* n:\"BrtEndStyleSheetExt14\", */T: -1\n  },\n  /*::[*/0x046D /*::]*/: {\n    /* n:\"BrtBeginSlicerCachesPivotCacheID\", */T: 1\n  },\n  /*::[*/0x046E /*::]*/: {\n    /* n:\"BrtEndSlicerCachesPivotCacheID\", */T: -1\n  },\n  /*::[*/0x046F /*::]*/: {\n    /* n:\"BrtBeginConditionalFormattings\", */T: 1\n  },\n  /*::[*/0x0470 /*::]*/: {\n    /* n:\"BrtEndConditionalFormattings\", */T: -1\n  },\n  /*::[*/0x0471 /*::]*/: {\n    /* n:\"BrtBeginPCDCalcMemExt\", */T: 1\n  },\n  /*::[*/0x0472 /*::]*/: {\n    /* n:\"BrtEndPCDCalcMemExt\", */T: -1\n  },\n  /*::[*/0x0473 /*::]*/: {\n    /* n:\"BrtBeginPCDCalcMemsExt\", */T: 1\n  },\n  /*::[*/0x0474 /*::]*/: {\n    /* n:\"BrtEndPCDCalcMemsExt\", */T: -1\n  },\n  /*::[*/0x0475 /*::]*/: {/* n:\"BrtPCDField14\" */},\n  /*::[*/0x0476 /*::]*/: {\n    /* n:\"BrtBeginSlicerStyles\", */T: 1\n  },\n  /*::[*/0x0477 /*::]*/: {\n    /* n:\"BrtEndSlicerStyles\", */T: -1\n  },\n  /*::[*/0x0478 /*::]*/: {\n    /* n:\"BrtBeginSlicerStyleElements\", */T: 1\n  },\n  /*::[*/0x0479 /*::]*/: {\n    /* n:\"BrtEndSlicerStyleElements\", */T: -1\n  },\n  /*::[*/0x047A /*::]*/: {/* n:\"BrtCFRuleExt\" */},\n  /*::[*/0x047B /*::]*/: {\n    /* n:\"BrtBeginSXCondFmt14\", */T: 1\n  },\n  /*::[*/0x047C /*::]*/: {\n    /* n:\"BrtEndSXCondFmt14\", */T: -1\n  },\n  /*::[*/0x047D /*::]*/: {\n    /* n:\"BrtBeginSXCondFmts14\", */T: 1\n  },\n  /*::[*/0x047E /*::]*/: {\n    /* n:\"BrtEndSXCondFmts14\", */T: -1\n  },\n  /*::[*/0x0480 /*::]*/: {\n    /* n:\"BrtBeginSortCond14\", */T: 1\n  },\n  /*::[*/0x0481 /*::]*/: {\n    /* n:\"BrtEndSortCond14\", */T: -1\n  },\n  /*::[*/0x0482 /*::]*/: {\n    /* n:\"BrtEndDVals14\", */T: -1\n  },\n  /*::[*/0x0483 /*::]*/: {\n    /* n:\"BrtEndIconSet14\", */T: -1\n  },\n  /*::[*/0x0484 /*::]*/: {\n    /* n:\"BrtEndDatabar14\", */T: -1\n  },\n  /*::[*/0x0485 /*::]*/: {\n    /* n:\"BrtBeginColorScale14\", */T: 1\n  },\n  /*::[*/0x0486 /*::]*/: {\n    /* n:\"BrtEndColorScale14\", */T: -1\n  },\n  /*::[*/0x0487 /*::]*/: {\n    /* n:\"BrtBeginSxrules14\", */T: 1\n  },\n  /*::[*/0x0488 /*::]*/: {\n    /* n:\"BrtEndSxrules14\", */T: -1\n  },\n  /*::[*/0x0489 /*::]*/: {\n    /* n:\"BrtBeginPRule14\", */T: 1\n  },\n  /*::[*/0x048A /*::]*/: {\n    /* n:\"BrtEndPRule14\", */T: -1\n  },\n  /*::[*/0x048B /*::]*/: {\n    /* n:\"BrtBeginPRFilters14\", */T: 1\n  },\n  /*::[*/0x048C /*::]*/: {\n    /* n:\"BrtEndPRFilters14\", */T: -1\n  },\n  /*::[*/0x048D /*::]*/: {\n    /* n:\"BrtBeginPRFilter14\", */T: 1\n  },\n  /*::[*/0x048E /*::]*/: {\n    /* n:\"BrtEndPRFilter14\", */T: -1\n  },\n  /*::[*/0x048F /*::]*/: {\n    /* n:\"BrtBeginPRFItem14\", */T: 1\n  },\n  /*::[*/0x0490 /*::]*/: {\n    /* n:\"BrtEndPRFItem14\", */T: -1\n  },\n  /*::[*/0x0491 /*::]*/: {\n    /* n:\"BrtBeginCellIgnoreECs14\", */T: 1\n  },\n  /*::[*/0x0492 /*::]*/: {\n    /* n:\"BrtEndCellIgnoreECs14\", */T: -1\n  },\n  /*::[*/0x0493 /*::]*/: {/* n:\"BrtDxf14\" */},\n  /*::[*/0x0494 /*::]*/: {\n    /* n:\"BrtBeginDxF14s\", */T: 1\n  },\n  /*::[*/0x0495 /*::]*/: {\n    /* n:\"BrtEndDxf14s\", */T: -1\n  },\n  /*::[*/0x0499 /*::]*/: {/* n:\"BrtFilter14\" */},\n  /*::[*/0x049A /*::]*/: {\n    /* n:\"BrtBeginCustomFilters14\", */T: 1\n  },\n  /*::[*/0x049C /*::]*/: {/* n:\"BrtCustomFilter14\" */},\n  /*::[*/0x049D /*::]*/: {/* n:\"BrtIconFilter14\" */},\n  /*::[*/0x049E /*::]*/: {/* n:\"BrtPivotCacheConnectionName\" */},\n  /*::[*/0x0800 /*::]*/: {\n    /* n:\"BrtBeginDecoupledPivotCacheIDs\", */T: 1\n  },\n  /*::[*/0x0801 /*::]*/: {\n    /* n:\"BrtEndDecoupledPivotCacheIDs\", */T: -1\n  },\n  /*::[*/0x0802 /*::]*/: {/* n:\"BrtDecoupledPivotCacheID\" */},\n  /*::[*/0x0803 /*::]*/: {\n    /* n:\"BrtBeginPivotTableRefs\", */T: 1\n  },\n  /*::[*/0x0804 /*::]*/: {\n    /* n:\"BrtEndPivotTableRefs\", */T: -1\n  },\n  /*::[*/0x0805 /*::]*/: {/* n:\"BrtPivotTableRef\" */},\n  /*::[*/0x0806 /*::]*/: {/* n:\"BrtSlicerCacheBookPivotTables\" */},\n  /*::[*/0x0807 /*::]*/: {\n    /* n:\"BrtBeginSxvcells\", */T: 1\n  },\n  /*::[*/0x0808 /*::]*/: {\n    /* n:\"BrtEndSxvcells\", */T: -1\n  },\n  /*::[*/0x0809 /*::]*/: {\n    /* n:\"BrtBeginSxRow\", */T: 1\n  },\n  /*::[*/0x080A /*::]*/: {\n    /* n:\"BrtEndSxRow\", */T: -1\n  },\n  /*::[*/0x080C /*::]*/: {/* n:\"BrtPcdCalcMem15\" */},\n  /*::[*/0x0813 /*::]*/: {/* n:\"BrtQsi15\" */},\n  /*::[*/0x0814 /*::]*/: {\n    /* n:\"BrtBeginWebExtensions\", */T: 1\n  },\n  /*::[*/0x0815 /*::]*/: {\n    /* n:\"BrtEndWebExtensions\", */T: -1\n  },\n  /*::[*/0x0816 /*::]*/: {/* n:\"BrtWebExtension\" */},\n  /*::[*/0x0817 /*::]*/: {/* n:\"BrtAbsPath15\" */},\n  /*::[*/0x0818 /*::]*/: {\n    /* n:\"BrtBeginPivotTableUISettings\", */T: 1\n  },\n  /*::[*/0x0819 /*::]*/: {\n    /* n:\"BrtEndPivotTableUISettings\", */T: -1\n  },\n  /*::[*/0x081B /*::]*/: {/* n:\"BrtTableSlicerCacheIDs\" */},\n  /*::[*/0x081C /*::]*/: {/* n:\"BrtTableSlicerCacheID\" */},\n  /*::[*/0x081D /*::]*/: {\n    /* n:\"BrtBeginTableSlicerCache\", */T: 1\n  },\n  /*::[*/0x081E /*::]*/: {\n    /* n:\"BrtEndTableSlicerCache\", */T: -1\n  },\n  /*::[*/0x081F /*::]*/: {/* n:\"BrtSxFilter15\" */},\n  /*::[*/0x0820 /*::]*/: {\n    /* n:\"BrtBeginTimelineCachePivotCacheIDs\", */T: 1\n  },\n  /*::[*/0x0821 /*::]*/: {\n    /* n:\"BrtEndTimelineCachePivotCacheIDs\", */T: -1\n  },\n  /*::[*/0x0822 /*::]*/: {/* n:\"BrtTimelineCachePivotCacheID\" */},\n  /*::[*/0x0823 /*::]*/: {\n    /* n:\"BrtBeginTimelineCacheIDs\", */T: 1\n  },\n  /*::[*/0x0824 /*::]*/: {\n    /* n:\"BrtEndTimelineCacheIDs\", */T: -1\n  },\n  /*::[*/0x0825 /*::]*/: {\n    /* n:\"BrtBeginTimelineCacheID\", */T: 1\n  },\n  /*::[*/0x0826 /*::]*/: {\n    /* n:\"BrtEndTimelineCacheID\", */T: -1\n  },\n  /*::[*/0x0827 /*::]*/: {\n    /* n:\"BrtBeginTimelinesEx\", */T: 1\n  },\n  /*::[*/0x0828 /*::]*/: {\n    /* n:\"BrtEndTimelinesEx\", */T: -1\n  },\n  /*::[*/0x0829 /*::]*/: {\n    /* n:\"BrtBeginTimelineEx\", */T: 1\n  },\n  /*::[*/0x082A /*::]*/: {\n    /* n:\"BrtEndTimelineEx\", */T: -1\n  },\n  /*::[*/0x082B /*::]*/: {/* n:\"BrtWorkBookPr15\" */},\n  /*::[*/0x082C /*::]*/: {/* n:\"BrtPCDH15\" */},\n  /*::[*/0x082D /*::]*/: {\n    /* n:\"BrtBeginTimelineStyle\", */T: 1\n  },\n  /*::[*/0x082E /*::]*/: {\n    /* n:\"BrtEndTimelineStyle\", */T: -1\n  },\n  /*::[*/0x082F /*::]*/: {/* n:\"BrtTimelineStyleElement\" */},\n  /*::[*/0x0830 /*::]*/: {\n    /* n:\"BrtBeginTimelineStylesheetExt15\", */T: 1\n  },\n  /*::[*/0x0831 /*::]*/: {\n    /* n:\"BrtEndTimelineStylesheetExt15\", */T: -1\n  },\n  /*::[*/0x0832 /*::]*/: {\n    /* n:\"BrtBeginTimelineStyles\", */T: 1\n  },\n  /*::[*/0x0833 /*::]*/: {\n    /* n:\"BrtEndTimelineStyles\", */T: -1\n  },\n  /*::[*/0x0834 /*::]*/: {\n    /* n:\"BrtBeginTimelineStyleElements\", */T: 1\n  },\n  /*::[*/0x0835 /*::]*/: {\n    /* n:\"BrtEndTimelineStyleElements\", */T: -1\n  },\n  /*::[*/0x0836 /*::]*/: {/* n:\"BrtDxf15\" */},\n  /*::[*/0x0837 /*::]*/: {\n    /* n:\"BrtBeginDxfs15\", */T: 1\n  },\n  /*::[*/0x0838 /*::]*/: {\n    /* n:\"BrtEndDxfs15\", */T: -1\n  },\n  /*::[*/0x0839 /*::]*/: {/* n:\"BrtSlicerCacheHideItemsWithNoData\" */},\n  /*::[*/0x083A /*::]*/: {\n    /* n:\"BrtBeginItemUniqueNames\", */T: 1\n  },\n  /*::[*/0x083B /*::]*/: {\n    /* n:\"BrtEndItemUniqueNames\", */T: -1\n  },\n  /*::[*/0x083C /*::]*/: {/* n:\"BrtItemUniqueName\" */},\n  /*::[*/0x083D /*::]*/: {\n    /* n:\"BrtBeginExtConn15\", */T: 1\n  },\n  /*::[*/0x083E /*::]*/: {\n    /* n:\"BrtEndExtConn15\", */T: -1\n  },\n  /*::[*/0x083F /*::]*/: {\n    /* n:\"BrtBeginOledbPr15\", */T: 1\n  },\n  /*::[*/0x0840 /*::]*/: {\n    /* n:\"BrtEndOledbPr15\", */T: -1\n  },\n  /*::[*/0x0841 /*::]*/: {\n    /* n:\"BrtBeginDataFeedPr15\", */T: 1\n  },\n  /*::[*/0x0842 /*::]*/: {\n    /* n:\"BrtEndDataFeedPr15\", */T: -1\n  },\n  /*::[*/0x0843 /*::]*/: {/* n:\"BrtTextPr15\" */},\n  /*::[*/0x0844 /*::]*/: {/* n:\"BrtRangePr15\" */},\n  /*::[*/0x0845 /*::]*/: {/* n:\"BrtDbCommand15\" */},\n  /*::[*/0x0846 /*::]*/: {\n    /* n:\"BrtBeginDbTables15\", */T: 1\n  },\n  /*::[*/0x0847 /*::]*/: {\n    /* n:\"BrtEndDbTables15\", */T: -1\n  },\n  /*::[*/0x0848 /*::]*/: {/* n:\"BrtDbTable15\" */},\n  /*::[*/0x0849 /*::]*/: {\n    /* n:\"BrtBeginDataModel\", */T: 1\n  },\n  /*::[*/0x084A /*::]*/: {\n    /* n:\"BrtEndDataModel\", */T: -1\n  },\n  /*::[*/0x084B /*::]*/: {\n    /* n:\"BrtBeginModelTables\", */T: 1\n  },\n  /*::[*/0x084C /*::]*/: {\n    /* n:\"BrtEndModelTables\", */T: -1\n  },\n  /*::[*/0x084D /*::]*/: {/* n:\"BrtModelTable\" */},\n  /*::[*/0x084E /*::]*/: {\n    /* n:\"BrtBeginModelRelationships\", */T: 1\n  },\n  /*::[*/0x084F /*::]*/: {\n    /* n:\"BrtEndModelRelationships\", */T: -1\n  },\n  /*::[*/0x0850 /*::]*/: {/* n:\"BrtModelRelationship\" */},\n  /*::[*/0x0851 /*::]*/: {\n    /* n:\"BrtBeginECTxtWiz15\", */T: 1\n  },\n  /*::[*/0x0852 /*::]*/: {\n    /* n:\"BrtEndECTxtWiz15\", */T: -1\n  },\n  /*::[*/0x0853 /*::]*/: {\n    /* n:\"BrtBeginECTWFldInfoLst15\", */T: 1\n  },\n  /*::[*/0x0854 /*::]*/: {\n    /* n:\"BrtEndECTWFldInfoLst15\", */T: -1\n  },\n  /*::[*/0x0855 /*::]*/: {\n    /* n:\"BrtBeginECTWFldInfo15\", */T: 1\n  },\n  /*::[*/0x0856 /*::]*/: {/* n:\"BrtFieldListActiveItem\" */},\n  /*::[*/0x0857 /*::]*/: {/* n:\"BrtPivotCacheIdVersion\" */},\n  /*::[*/0x0858 /*::]*/: {/* n:\"BrtSXDI15\" */},\n  /*::[*/0x0859 /*::]*/: {\n    /* n:\"BrtBeginModelTimeGroupings\", */T: 1\n  },\n  /*::[*/0x085A /*::]*/: {\n    /* n:\"BrtEndModelTimeGroupings\", */T: -1\n  },\n  /*::[*/0x085B /*::]*/: {\n    /* n:\"BrtBeginModelTimeGrouping\", */T: 1\n  },\n  /*::[*/0x085C /*::]*/: {\n    /* n:\"BrtEndModelTimeGrouping\", */T: -1\n  },\n  /*::[*/0x085D /*::]*/: {/* n:\"BrtModelTimeGroupingCalcCol\" */},\n  /*::[*/0x0C00 /*::]*/: {/* n:\"BrtUid\" */},\n  /*::[*/0x0C01 /*::]*/: {/* n:\"BrtRevisionPtr\" */},\n  /*::[*/0x1000 /*::]*/: {\n    /* n:\"BrtBeginDynamicArrayPr\", */T: 1\n  },\n  /*::[*/0x1001 /*::]*/: {\n    /* n:\"BrtEndDynamicArrayPr\", */T: -1\n  },\n  /*::[*/0x138A /*::]*/: {\n    /* n:\"BrtBeginRichValueBlock\", */T: 1\n  },\n  /*::[*/0x138B /*::]*/: {\n    /* n:\"BrtEndRichValueBlock\", */T: -1\n  },\n  /*::[*/0x13D9 /*::]*/: {\n    /* n:\"BrtBeginRichFilters\", */T: 1\n  },\n  /*::[*/0x13DA /*::]*/: {\n    /* n:\"BrtEndRichFilters\", */T: -1\n  },\n  /*::[*/0x13DB /*::]*/: {/* n:\"BrtRichFilter\" */},\n  /*::[*/0x13DC /*::]*/: {\n    /* n:\"BrtBeginRichFilterColumn\", */T: 1\n  },\n  /*::[*/0x13DD /*::]*/: {\n    /* n:\"BrtEndRichFilterColumn\", */T: -1\n  },\n  /*::[*/0x13DE /*::]*/: {\n    /* n:\"BrtBeginCustomRichFilters\", */T: 1\n  },\n  /*::[*/0x13DF /*::]*/: {\n    /* n:\"BrtEndCustomRichFilters\", */T: -1\n  },\n  /*::[*/0x13E0 /*::]*/: {/* n:\"BrtCustomRichFilter\" */},\n  /*::[*/0x13E1 /*::]*/: {/* n:\"BrtTop10RichFilter\" */},\n  /*::[*/0x13E2 /*::]*/: {/* n:\"BrtDynamicRichFilter\" */},\n  /*::[*/0x13E4 /*::]*/: {\n    /* n:\"BrtBeginRichSortCondition\", */T: 1\n  },\n  /*::[*/0x13E5 /*::]*/: {\n    /* n:\"BrtEndRichSortCondition\", */T: -1\n  },\n  /*::[*/0x13E6 /*::]*/: {/* n:\"BrtRichFilterDateGroupItem\" */},\n  /*::[*/0x13E7 /*::]*/: {\n    /* n:\"BrtBeginCalcFeatures\", */T: 1\n  },\n  /*::[*/0x13E8 /*::]*/: {\n    /* n:\"BrtEndCalcFeatures\", */T: -1\n  },\n  /*::[*/0x13E9 /*::]*/: {/* n:\"BrtCalcFeature\" */},\n  /*::[*/0x13EB /*::]*/: {/* n:\"BrtExternalLinksPr\" */},\n  /*::[*/0xFFFF /*::]*/: {\n    n: \"\"\n  }\n};\n\n/* [MS-XLS] 2.3 Record Enumeration (and other sources) */\nvar XLSRecordEnum = {\n  /* [MS-XLS] 2.3 Record Enumeration 2021-08-17 */\n  /*::[*/0x0006 /*::]*/: {\n    /* n:\"Formula\", */f: parse_Formula\n  },\n  /*::[*/0x000a /*::]*/: {\n    /* n:\"EOF\", */f: parsenoop2\n  },\n  /*::[*/0x000c /*::]*/: {\n    /* n:\"CalcCount\", */f: parseuint16\n  },\n  //\n  /*::[*/\n  0x000d /*::]*/: {\n    /* n:\"CalcMode\", */f: parseuint16\n  },\n  //\n  /*::[*/\n  0x000e /*::]*/: {\n    /* n:\"CalcPrecision\", */f: parsebool\n  },\n  //\n  /*::[*/\n  0x000f /*::]*/: {\n    /* n:\"CalcRefMode\", */f: parsebool\n  },\n  //\n  /*::[*/\n  0x0010 /*::]*/: {\n    /* n:\"CalcDelta\", */f: parse_Xnum\n  },\n  //\n  /*::[*/\n  0x0011 /*::]*/: {\n    /* n:\"CalcIter\", */f: parsebool\n  },\n  //\n  /*::[*/\n  0x0012 /*::]*/: {\n    /* n:\"Protect\", */f: parsebool\n  },\n  /*::[*/0x0013 /*::]*/: {\n    /* n:\"Password\", */f: parseuint16\n  },\n  /*::[*/0x0014 /*::]*/: {\n    /* n:\"Header\", */f: parse_XLHeaderFooter\n  },\n  /*::[*/0x0015 /*::]*/: {\n    /* n:\"Footer\", */f: parse_XLHeaderFooter\n  },\n  /*::[*/0x0017 /*::]*/: {\n    /* n:\"ExternSheet\", */f: parse_ExternSheet\n  },\n  /*::[*/0x0018 /*::]*/: {\n    /* n:\"Lbl\", */f: parse_Lbl\n  },\n  /*::[*/0x0019 /*::]*/: {\n    /* n:\"WinProtect\", */f: parsebool\n  },\n  /*::[*/0x001a /*::]*/: {/* n:\"VerticalPageBreaks\", */},\n  /*::[*/0x001b /*::]*/: {/* n:\"HorizontalPageBreaks\", */},\n  /*::[*/0x001c /*::]*/: {\n    /* n:\"Note\", */f: parse_Note\n  },\n  /*::[*/0x001d /*::]*/: {/* n:\"Selection\", */},\n  /*::[*/0x0022 /*::]*/: {\n    /* n:\"Date1904\", */f: parsebool\n  },\n  /*::[*/0x0023 /*::]*/: {\n    /* n:\"ExternName\", */f: parse_ExternName\n  },\n  /*::[*/0x0026 /*::]*/: {\n    /* n:\"LeftMargin\", */f: parse_Xnum\n  },\n  // *\n  /*::[*/\n  0x0027 /*::]*/: {\n    /* n:\"RightMargin\", */f: parse_Xnum\n  },\n  // *\n  /*::[*/\n  0x0028 /*::]*/: {\n    /* n:\"TopMargin\", */f: parse_Xnum\n  },\n  // *\n  /*::[*/\n  0x0029 /*::]*/: {\n    /* n:\"BottomMargin\", */f: parse_Xnum\n  },\n  // *\n  /*::[*/\n  0x002a /*::]*/: {\n    /* n:\"PrintRowCol\", */f: parsebool\n  },\n  /*::[*/0x002b /*::]*/: {\n    /* n:\"PrintGrid\", */f: parsebool\n  },\n  /*::[*/0x002f /*::]*/: {\n    /* n:\"FilePass\", */f: parse_FilePass\n  },\n  /*::[*/0x0031 /*::]*/: {\n    /* n:\"Font\", */f: parse_Font\n  },\n  /*::[*/0x0033 /*::]*/: {\n    /* n:\"PrintSize\", */f: parseuint16\n  },\n  /*::[*/0x003c /*::]*/: {/* n:\"Continue\", */},\n  /*::[*/0x003d /*::]*/: {\n    /* n:\"Window1\", */f: parse_Window1\n  },\n  /*::[*/0x0040 /*::]*/: {\n    /* n:\"Backup\", */f: parsebool\n  },\n  /*::[*/0x0041 /*::]*/: {\n    /* n:\"Pane\", */f: parse_Pane\n  },\n  /*::[*/0x0042 /*::]*/: {\n    /* n:\"CodePage\", */f: parseuint16\n  },\n  /*::[*/0x004d /*::]*/: {/* n:\"Pls\", */},\n  /*::[*/0x0050 /*::]*/: {/* n:\"DCon\", */},\n  /*::[*/0x0051 /*::]*/: {/* n:\"DConRef\", */},\n  /*::[*/0x0052 /*::]*/: {/* n:\"DConName\", */},\n  /*::[*/0x0055 /*::]*/: {\n    /* n:\"DefColWidth\", */f: parseuint16\n  },\n  /*::[*/0x0059 /*::]*/: {/* n:\"XCT\", */},\n  /*::[*/0x005a /*::]*/: {/* n:\"CRN\", */},\n  /*::[*/0x005b /*::]*/: {/* n:\"FileSharing\", */},\n  /*::[*/0x005c /*::]*/: {\n    /* n:\"WriteAccess\", */f: parse_WriteAccess\n  },\n  /*::[*/0x005d /*::]*/: {\n    /* n:\"Obj\", */f: parse_Obj\n  },\n  /*::[*/0x005e /*::]*/: {/* n:\"Uncalced\", */},\n  /*::[*/0x005f /*::]*/: {\n    /* n:\"CalcSaveRecalc\", */f: parsebool\n  },\n  //\n  /*::[*/\n  0x0060 /*::]*/: {/* n:\"Template\", */},\n  /*::[*/0x0061 /*::]*/: {/* n:\"Intl\", */},\n  /*::[*/0x0063 /*::]*/: {\n    /* n:\"ObjProtect\", */f: parsebool\n  },\n  /*::[*/0x007d /*::]*/: {\n    /* n:\"ColInfo\", */f: parse_ColInfo\n  },\n  /*::[*/0x0080 /*::]*/: {\n    /* n:\"Guts\", */f: parse_Guts\n  },\n  /*::[*/0x0081 /*::]*/: {\n    /* n:\"WsBool\", */f: parse_WsBool\n  },\n  /*::[*/0x0082 /*::]*/: {\n    /* n:\"GridSet\", */f: parseuint16\n  },\n  /*::[*/0x0083 /*::]*/: {\n    /* n:\"HCenter\", */f: parsebool\n  },\n  /*::[*/0x0084 /*::]*/: {\n    /* n:\"VCenter\", */f: parsebool\n  },\n  /*::[*/0x0085 /*::]*/: {\n    /* n:\"BoundSheet8\", */f: parse_BoundSheet8\n  },\n  /*::[*/0x0086 /*::]*/: {/* n:\"WriteProtect\", */},\n  /*::[*/0x008c /*::]*/: {\n    /* n:\"Country\", */f: parse_Country\n  },\n  /*::[*/0x008d /*::]*/: {\n    /* n:\"HideObj\", */f: parseuint16\n  },\n  /*::[*/0x0090 /*::]*/: {/* n:\"Sort\", */},\n  /*::[*/0x0092 /*::]*/: {\n    /* n:\"Palette\", */f: parse_Palette\n  },\n  /*::[*/0x0097 /*::]*/: {/* n:\"Sync\", */},\n  /*::[*/0x0098 /*::]*/: {/* n:\"LPr\", */},\n  /*::[*/0x0099 /*::]*/: {/* n:\"DxGCol\", */},\n  /*::[*/0x009a /*::]*/: {/* n:\"FnGroupName\", */},\n  /*::[*/0x009b /*::]*/: {/* n:\"FilterMode\", */},\n  /*::[*/0x009c /*::]*/: {\n    /* n:\"BuiltInFnGroupCount\", */f: parseuint16\n  },\n  /*::[*/0x009d /*::]*/: {/* n:\"AutoFilterInfo\", */},\n  /*::[*/0x009e /*::]*/: {/* n:\"AutoFilter\", */},\n  /*::[*/0x00a0 /*::]*/: {\n    /* n:\"Scl\", */f: parse_Scl\n  },\n  /*::[*/0x00a1 /*::]*/: {\n    /* n:\"Setup\", */f: parse_Setup\n  },\n  /*::[*/0x00ae /*::]*/: {/* n:\"ScenMan\", */},\n  /*::[*/0x00af /*::]*/: {/* n:\"SCENARIO\", */},\n  /*::[*/0x00b0 /*::]*/: {/* n:\"SxView\", */},\n  /*::[*/0x00b1 /*::]*/: {/* n:\"Sxvd\", */},\n  /*::[*/0x00b2 /*::]*/: {/* n:\"SXVI\", */},\n  /*::[*/0x00b4 /*::]*/: {/* n:\"SxIvd\", */},\n  /*::[*/0x00b5 /*::]*/: {/* n:\"SXLI\", */},\n  /*::[*/0x00b6 /*::]*/: {/* n:\"SXPI\", */},\n  /*::[*/0x00b8 /*::]*/: {/* n:\"DocRoute\", */},\n  /*::[*/0x00b9 /*::]*/: {/* n:\"RecipName\", */},\n  /*::[*/0x00bd /*::]*/: {\n    /* n:\"MulRk\", */f: parse_MulRk\n  },\n  /*::[*/0x00be /*::]*/: {\n    /* n:\"MulBlank\", */f: parse_MulBlank\n  },\n  /*::[*/0x00c1 /*::]*/: {\n    /* n:\"Mms\", */f: parsenoop2\n  },\n  /*::[*/0x00c5 /*::]*/: {/* n:\"SXDI\", */},\n  /*::[*/0x00c6 /*::]*/: {/* n:\"SXDB\", */},\n  /*::[*/0x00c7 /*::]*/: {/* n:\"SXFDB\", */},\n  /*::[*/0x00c8 /*::]*/: {/* n:\"SXDBB\", */},\n  /*::[*/0x00c9 /*::]*/: {/* n:\"SXNum\", */},\n  /*::[*/0x00ca /*::]*/: {\n    /* n:\"SxBool\", */f: parsebool\n  },\n  /*::[*/0x00cb /*::]*/: {/* n:\"SxErr\", */},\n  /*::[*/0x00cc /*::]*/: {/* n:\"SXInt\", */},\n  /*::[*/0x00cd /*::]*/: {/* n:\"SXString\", */},\n  /*::[*/0x00ce /*::]*/: {/* n:\"SXDtr\", */},\n  /*::[*/0x00cf /*::]*/: {/* n:\"SxNil\", */},\n  /*::[*/0x00d0 /*::]*/: {/* n:\"SXTbl\", */},\n  /*::[*/0x00d1 /*::]*/: {/* n:\"SXTBRGIITM\", */},\n  /*::[*/0x00d2 /*::]*/: {/* n:\"SxTbpg\", */},\n  /*::[*/0x00d3 /*::]*/: {/* n:\"ObProj\", */},\n  /*::[*/0x00d5 /*::]*/: {/* n:\"SXStreamID\", */},\n  /*::[*/0x00d7 /*::]*/: {/* n:\"DBCell\", */},\n  /*::[*/0x00d8 /*::]*/: {/* n:\"SXRng\", */},\n  /*::[*/0x00d9 /*::]*/: {/* n:\"SxIsxoper\", */},\n  /*::[*/0x00da /*::]*/: {\n    /* n:\"BookBool\", */f: parseuint16\n  },\n  /*::[*/0x00dc /*::]*/: {/* n:\"DbOrParamQry\", */},\n  /*::[*/0x00dd /*::]*/: {\n    /* n:\"ScenarioProtect\", */f: parsebool\n  },\n  /*::[*/0x00de /*::]*/: {/* n:\"OleObjectSize\", */},\n  /*::[*/0x00e0 /*::]*/: {\n    /* n:\"XF\", */f: parse_XF\n  },\n  /*::[*/0x00e1 /*::]*/: {\n    /* n:\"InterfaceHdr\", */f: parse_InterfaceHdr\n  },\n  /*::[*/0x00e2 /*::]*/: {\n    /* n:\"InterfaceEnd\", */f: parsenoop2\n  },\n  /*::[*/0x00e3 /*::]*/: {/* n:\"SXVS\", */},\n  /*::[*/0x00e5 /*::]*/: {\n    /* n:\"MergeCells\", */f: parse_MergeCells\n  },\n  /*::[*/0x00e9 /*::]*/: {/* n:\"BkHim\", */},\n  /*::[*/0x00eb /*::]*/: {/* n:\"MsoDrawingGroup\", */},\n  /*::[*/0x00ec /*::]*/: {/* n:\"MsoDrawing\", */},\n  /*::[*/0x00ed /*::]*/: {/* n:\"MsoDrawingSelection\", */},\n  /*::[*/0x00ef /*::]*/: {/* n:\"PhoneticInfo\", */},\n  /*::[*/0x00f0 /*::]*/: {/* n:\"SxRule\", */},\n  /*::[*/0x00f1 /*::]*/: {/* n:\"SXEx\", */},\n  /*::[*/0x00f2 /*::]*/: {/* n:\"SxFilt\", */},\n  /*::[*/0x00f4 /*::]*/: {/* n:\"SxDXF\", */},\n  /*::[*/0x00f5 /*::]*/: {/* n:\"SxItm\", */},\n  /*::[*/0x00f6 /*::]*/: {/* n:\"SxName\", */},\n  /*::[*/0x00f7 /*::]*/: {/* n:\"SxSelect\", */},\n  /*::[*/0x00f8 /*::]*/: {/* n:\"SXPair\", */},\n  /*::[*/0x00f9 /*::]*/: {/* n:\"SxFmla\", */},\n  /*::[*/0x00fb /*::]*/: {/* n:\"SxFormat\", */},\n  /*::[*/0x00fc /*::]*/: {\n    /* n:\"SST\", */f: parse_SST\n  },\n  /*::[*/0x00fd /*::]*/: {\n    /* n:\"LabelSst\", */f: parse_LabelSst\n  },\n  /*::[*/0x00ff /*::]*/: {\n    /* n:\"ExtSST\", */f: parse_ExtSST\n  },\n  /*::[*/0x0100 /*::]*/: {/* n:\"SXVDEx\", */},\n  /*::[*/0x0103 /*::]*/: {/* n:\"SXFormula\", */},\n  /*::[*/0x0122 /*::]*/: {/* n:\"SXDBEx\", */},\n  /*::[*/0x0137 /*::]*/: {/* n:\"RRDInsDel\", */},\n  /*::[*/0x0138 /*::]*/: {/* n:\"RRDHead\", */},\n  /*::[*/0x013b /*::]*/: {/* n:\"RRDChgCell\", */},\n  /*::[*/0x013d /*::]*/: {\n    /* n:\"RRTabId\", */f: parseuint16a\n  },\n  /*::[*/0x013e /*::]*/: {/* n:\"RRDRenSheet\", */},\n  /*::[*/0x013f /*::]*/: {/* n:\"RRSort\", */},\n  /*::[*/0x0140 /*::]*/: {/* n:\"RRDMove\", */},\n  /*::[*/0x014a /*::]*/: {/* n:\"RRFormat\", */},\n  /*::[*/0x014b /*::]*/: {/* n:\"RRAutoFmt\", */},\n  /*::[*/0x014d /*::]*/: {/* n:\"RRInsertSh\", */},\n  /*::[*/0x014e /*::]*/: {/* n:\"RRDMoveBegin\", */},\n  /*::[*/0x014f /*::]*/: {/* n:\"RRDMoveEnd\", */},\n  /*::[*/0x0150 /*::]*/: {/* n:\"RRDInsDelBegin\", */},\n  /*::[*/0x0151 /*::]*/: {/* n:\"RRDInsDelEnd\", */},\n  /*::[*/0x0152 /*::]*/: {/* n:\"RRDConflict\", */},\n  /*::[*/0x0153 /*::]*/: {/* n:\"RRDDefName\", */},\n  /*::[*/0x0154 /*::]*/: {/* n:\"RRDRstEtxp\", */},\n  /*::[*/0x015f /*::]*/: {/* n:\"LRng\", */},\n  /*::[*/0x0160 /*::]*/: {\n    /* n:\"UsesELFs\", */f: parsebool\n  },\n  /*::[*/0x0161 /*::]*/: {\n    /* n:\"DSF\", */f: parsenoop2\n  },\n  /*::[*/0x0191 /*::]*/: {/* n:\"CUsr\", */},\n  /*::[*/0x0192 /*::]*/: {/* n:\"CbUsr\", */},\n  /*::[*/0x0193 /*::]*/: {/* n:\"UsrInfo\", */},\n  /*::[*/0x0194 /*::]*/: {/* n:\"UsrExcl\", */},\n  /*::[*/0x0195 /*::]*/: {/* n:\"FileLock\", */},\n  /*::[*/0x0196 /*::]*/: {/* n:\"RRDInfo\", */},\n  /*::[*/0x0197 /*::]*/: {/* n:\"BCUsrs\", */},\n  /*::[*/0x0198 /*::]*/: {/* n:\"UsrChk\", */},\n  /*::[*/0x01a9 /*::]*/: {/* n:\"UserBView\", */},\n  /*::[*/0x01aa /*::]*/: {/* n:\"UserSViewBegin\", */},\n  /*::[*/0x01ab /*::]*/: {/* n:\"UserSViewEnd\", */},\n  /*::[*/0x01ac /*::]*/: {/* n:\"RRDUserView\", */},\n  /*::[*/0x01ad /*::]*/: {/* n:\"Qsi\", */},\n  /*::[*/0x01ae /*::]*/: {\n    /* n:\"SupBook\", */f: parse_SupBook\n  },\n  /*::[*/0x01af /*::]*/: {\n    /* n:\"Prot4Rev\", */f: parsebool\n  },\n  /*::[*/0x01b0 /*::]*/: {/* n:\"CondFmt\", */},\n  /*::[*/0x01b1 /*::]*/: {/* n:\"CF\", */},\n  /*::[*/0x01b2 /*::]*/: {/* n:\"DVal\", */},\n  /*::[*/0x01b5 /*::]*/: {/* n:\"DConBin\", */},\n  /*::[*/0x01b6 /*::]*/: {\n    /* n:\"TxO\", */f: parse_TxO\n  },\n  /*::[*/0x01b7 /*::]*/: {\n    /* n:\"RefreshAll\", */f: parsebool\n  },\n  //\n  /*::[*/\n  0x01b8 /*::]*/: {\n    /* n:\"HLink\", */f: parse_HLink\n  },\n  /*::[*/0x01b9 /*::]*/: {/* n:\"Lel\", */},\n  /*::[*/0x01ba /*::]*/: {\n    /* n:\"CodeName\", */f: parse_XLUnicodeString\n  },\n  /*::[*/0x01bb /*::]*/: {/* n:\"SXFDBType\", */},\n  /*::[*/0x01bc /*::]*/: {\n    /* n:\"Prot4RevPass\", */f: parseuint16\n  },\n  /*::[*/0x01bd /*::]*/: {/* n:\"ObNoMacros\", */},\n  /*::[*/0x01be /*::]*/: {/* n:\"Dv\", */},\n  /*::[*/0x01c0 /*::]*/: {\n    /* n:\"Excel9File\", */f: parsenoop2\n  },\n  /*::[*/0x01c1 /*::]*/: {\n    /* n:\"RecalcId\", */f: parse_RecalcId,\n    r: 2\n  },\n  /*::[*/0x01c2 /*::]*/: {\n    /* n:\"EntExU2\", */f: parsenoop2\n  },\n  /*::[*/0x0200 /*::]*/: {\n    /* n:\"Dimensions\", */f: parse_Dimensions\n  },\n  /*::[*/0x0201 /*::]*/: {\n    /* n:\"Blank\", */f: parse_Blank\n  },\n  /*::[*/0x0203 /*::]*/: {\n    /* n:\"Number\", */f: parse_Number\n  },\n  /*::[*/0x0204 /*::]*/: {\n    /* n:\"Label\", */f: parse_Label\n  },\n  /*::[*/0x0205 /*::]*/: {\n    /* n:\"BoolErr\", */f: parse_BoolErr\n  },\n  /*::[*/0x0207 /*::]*/: {\n    /* n:\"String\", */f: parse_String\n  },\n  /*::[*/0x0208 /*::]*/: {\n    /* n:\"Row\", */f: parse_Row\n  },\n  /*::[*/0x020b /*::]*/: {/* n:\"Index\", */},\n  /*::[*/0x0221 /*::]*/: {\n    /* n:\"Array\", */f: parse_Array\n  },\n  /*::[*/0x0225 /*::]*/: {\n    /* n:\"DefaultRowHeight\", */f: parse_DefaultRowHeight\n  },\n  /*::[*/0x0236 /*::]*/: {/* n:\"Table\", */},\n  /*::[*/0x023e /*::]*/: {\n    /* n:\"Window2\", */f: parse_Window2\n  },\n  /*::[*/0x027e /*::]*/: {\n    /* n:\"RK\", */f: parse_RK\n  },\n  /*::[*/0x0293 /*::]*/: {/* n:\"Style\", */},\n  /*::[*/0x0418 /*::]*/: {/* n:\"BigName\", */},\n  /*::[*/0x041e /*::]*/: {\n    /* n:\"Format\", */f: parse_Format\n  },\n  /*::[*/0x043c /*::]*/: {/* n:\"ContinueBigName\", */},\n  /*::[*/0x04bc /*::]*/: {\n    /* n:\"ShrFmla\", */f: parse_ShrFmla\n  },\n  /*::[*/0x0800 /*::]*/: {\n    /* n:\"HLinkTooltip\", */f: parse_HLinkTooltip\n  },\n  /*::[*/0x0801 /*::]*/: {/* n:\"WebPub\", */},\n  /*::[*/0x0802 /*::]*/: {/* n:\"QsiSXTag\", */},\n  /*::[*/0x0803 /*::]*/: {/* n:\"DBQueryExt\", */},\n  /*::[*/0x0804 /*::]*/: {/* n:\"ExtString\", */},\n  /*::[*/0x0805 /*::]*/: {/* n:\"TxtQry\", */},\n  /*::[*/0x0806 /*::]*/: {/* n:\"Qsir\", */},\n  /*::[*/0x0807 /*::]*/: {/* n:\"Qsif\", */},\n  /*::[*/0x0808 /*::]*/: {/* n:\"RRDTQSIF\", */},\n  /*::[*/0x0809 /*::]*/: {\n    /* n:\"BOF\", */f: parse_BOF\n  },\n  /*::[*/0x080a /*::]*/: {/* n:\"OleDbConn\", */},\n  /*::[*/0x080b /*::]*/: {/* n:\"WOpt\", */},\n  /*::[*/0x080c /*::]*/: {/* n:\"SXViewEx\", */},\n  /*::[*/0x080d /*::]*/: {/* n:\"SXTH\", */},\n  /*::[*/0x080e /*::]*/: {/* n:\"SXPIEx\", */},\n  /*::[*/0x080f /*::]*/: {/* n:\"SXVDTEx\", */},\n  /*::[*/0x0810 /*::]*/: {/* n:\"SXViewEx9\", */},\n  /*::[*/0x0812 /*::]*/: {/* n:\"ContinueFrt\", */},\n  /*::[*/0x0813 /*::]*/: {/* n:\"RealTimeData\", */},\n  /*::[*/0x0850 /*::]*/: {/* n:\"ChartFrtInfo\", */},\n  /*::[*/0x0851 /*::]*/: {/* n:\"FrtWrapper\", */},\n  /*::[*/0x0852 /*::]*/: {/* n:\"StartBlock\", */},\n  /*::[*/0x0853 /*::]*/: {/* n:\"EndBlock\", */},\n  /*::[*/0x0854 /*::]*/: {/* n:\"StartObject\", */},\n  /*::[*/0x0855 /*::]*/: {/* n:\"EndObject\", */},\n  /*::[*/0x0856 /*::]*/: {/* n:\"CatLab\", */},\n  /*::[*/0x0857 /*::]*/: {/* n:\"YMult\", */},\n  /*::[*/0x0858 /*::]*/: {/* n:\"SXViewLink\", */},\n  /*::[*/0x0859 /*::]*/: {/* n:\"PivotChartBits\", */},\n  /*::[*/0x085a /*::]*/: {/* n:\"FrtFontList\", */},\n  /*::[*/0x0862 /*::]*/: {/* n:\"SheetExt\", */},\n  /*::[*/0x0863 /*::]*/: {\n    /* n:\"BookExt\", */r: 12\n  },\n  /*::[*/0x0864 /*::]*/: {/* n:\"SXAddl\", */},\n  /*::[*/0x0865 /*::]*/: {/* n:\"CrErr\", */},\n  /*::[*/0x0866 /*::]*/: {/* n:\"HFPicture\", */},\n  /*::[*/0x0867 /*::]*/: {\n    /* n:\"FeatHdr\", */f: parsenoop2\n  },\n  /*::[*/0x0868 /*::]*/: {/* n:\"Feat\", */},\n  /*::[*/0x086a /*::]*/: {/* n:\"DataLabExt\", */},\n  /*::[*/0x086b /*::]*/: {/* n:\"DataLabExtContents\", */},\n  /*::[*/0x086c /*::]*/: {/* n:\"CellWatch\", */},\n  /*::[*/0x0871 /*::]*/: {/* n:\"FeatHdr11\", */},\n  /*::[*/0x0872 /*::]*/: {/* n:\"Feature11\", */},\n  /*::[*/0x0874 /*::]*/: {/* n:\"DropDownObjIds\", */},\n  /*::[*/0x0875 /*::]*/: {/* n:\"ContinueFrt11\", */},\n  /*::[*/0x0876 /*::]*/: {/* n:\"DConn\", */},\n  /*::[*/0x0877 /*::]*/: {/* n:\"List12\", */},\n  /*::[*/0x0878 /*::]*/: {/* n:\"Feature12\", */},\n  /*::[*/0x0879 /*::]*/: {/* n:\"CondFmt12\", */},\n  /*::[*/0x087a /*::]*/: {/* n:\"CF12\", */},\n  /*::[*/0x087b /*::]*/: {/* n:\"CFEx\", */},\n  /*::[*/0x087c /*::]*/: {\n    /* n:\"XFCRC\", */f: parse_XFCRC,\n    r: 12\n  },\n  /*::[*/0x087d /*::]*/: {\n    /* n:\"XFExt\", */f: parse_XFExt,\n    r: 12\n  },\n  /*::[*/0x087e /*::]*/: {/* n:\"AutoFilter12\", */},\n  /*::[*/0x087f /*::]*/: {/* n:\"ContinueFrt12\", */},\n  /*::[*/0x0884 /*::]*/: {/* n:\"MDTInfo\", */},\n  /*::[*/0x0885 /*::]*/: {/* n:\"MDXStr\", */},\n  /*::[*/0x0886 /*::]*/: {/* n:\"MDXTuple\", */},\n  /*::[*/0x0887 /*::]*/: {/* n:\"MDXSet\", */},\n  /*::[*/0x0888 /*::]*/: {/* n:\"MDXProp\", */},\n  /*::[*/0x0889 /*::]*/: {/* n:\"MDXKPI\", */},\n  /*::[*/0x088a /*::]*/: {/* n:\"MDB\", */},\n  /*::[*/0x088b /*::]*/: {/* n:\"PLV\", */},\n  /*::[*/0x088c /*::]*/: {\n    /* n:\"Compat12\", */f: parsebool,\n    r: 12\n  },\n  /*::[*/0x088d /*::]*/: {/* n:\"DXF\", */},\n  /*::[*/0x088e /*::]*/: {\n    /* n:\"TableStyles\", */r: 12\n  },\n  /*::[*/0x088f /*::]*/: {/* n:\"TableStyle\", */},\n  /*::[*/0x0890 /*::]*/: {/* n:\"TableStyleElement\", */},\n  /*::[*/0x0892 /*::]*/: {/* n:\"StyleExt\", */},\n  /*::[*/0x0893 /*::]*/: {/* n:\"NamePublish\", */},\n  /*::[*/0x0894 /*::]*/: {\n    /* n:\"NameCmt\", */f: parse_NameCmt,\n    r: 12\n  },\n  /*::[*/0x0895 /*::]*/: {/* n:\"SortData\", */},\n  /*::[*/0x0896 /*::]*/: {\n    /* n:\"Theme\", */f: parse_Theme,\n    r: 12\n  },\n  /*::[*/0x0897 /*::]*/: {/* n:\"GUIDTypeLib\", */},\n  /*::[*/0x0898 /*::]*/: {/* n:\"FnGrp12\", */},\n  /*::[*/0x0899 /*::]*/: {/* n:\"NameFnGrp12\", */},\n  /*::[*/0x089a /*::]*/: {\n    /* n:\"MTRSettings\", */f: parse_MTRSettings,\n    r: 12\n  },\n  /*::[*/0x089b /*::]*/: {\n    /* n:\"CompressPictures\", */f: parsenoop2\n  },\n  /*::[*/0x089c /*::]*/: {/* n:\"HeaderFooter\", */},\n  /*::[*/0x089d /*::]*/: {/* n:\"CrtLayout12\", */},\n  /*::[*/0x089e /*::]*/: {/* n:\"CrtMlFrt\", */},\n  /*::[*/0x089f /*::]*/: {/* n:\"CrtMlFrtContinue\", */},\n  /*::[*/0x08a3 /*::]*/: {\n    /* n:\"ForceFullCalculation\", */f: parse_ForceFullCalculation\n  },\n  /*::[*/0x08a4 /*::]*/: {/* n:\"ShapePropsStream\", */},\n  /*::[*/0x08a5 /*::]*/: {/* n:\"TextPropsStream\", */},\n  /*::[*/0x08a6 /*::]*/: {/* n:\"RichTextStream\", */},\n  /*::[*/0x08a7 /*::]*/: {/* n:\"CrtLayout12A\", */},\n  /*::[*/0x1001 /*::]*/: {/* n:\"Units\", */},\n  /*::[*/0x1002 /*::]*/: {/* n:\"Chart\", */},\n  /*::[*/0x1003 /*::]*/: {/* n:\"Series\", */},\n  /*::[*/0x1006 /*::]*/: {/* n:\"DataFormat\", */},\n  /*::[*/0x1007 /*::]*/: {/* n:\"LineFormat\", */},\n  /*::[*/0x1009 /*::]*/: {/* n:\"MarkerFormat\", */},\n  /*::[*/0x100a /*::]*/: {/* n:\"AreaFormat\", */},\n  /*::[*/0x100b /*::]*/: {/* n:\"PieFormat\", */},\n  /*::[*/0x100c /*::]*/: {/* n:\"AttachedLabel\", */},\n  /*::[*/0x100d /*::]*/: {/* n:\"SeriesText\", */},\n  /*::[*/0x1014 /*::]*/: {/* n:\"ChartFormat\", */},\n  /*::[*/0x1015 /*::]*/: {/* n:\"Legend\", */},\n  /*::[*/0x1016 /*::]*/: {/* n:\"SeriesList\", */},\n  /*::[*/0x1017 /*::]*/: {/* n:\"Bar\", */},\n  /*::[*/0x1018 /*::]*/: {/* n:\"Line\", */},\n  /*::[*/0x1019 /*::]*/: {/* n:\"Pie\", */},\n  /*::[*/0x101a /*::]*/: {/* n:\"Area\", */},\n  /*::[*/0x101b /*::]*/: {/* n:\"Scatter\", */},\n  /*::[*/0x101c /*::]*/: {/* n:\"CrtLine\", */},\n  /*::[*/0x101d /*::]*/: {/* n:\"Axis\", */},\n  /*::[*/0x101e /*::]*/: {/* n:\"Tick\", */},\n  /*::[*/0x101f /*::]*/: {/* n:\"ValueRange\", */},\n  /*::[*/0x1020 /*::]*/: {/* n:\"CatSerRange\", */},\n  /*::[*/0x1021 /*::]*/: {/* n:\"AxisLine\", */},\n  /*::[*/0x1022 /*::]*/: {/* n:\"CrtLink\", */},\n  /*::[*/0x1024 /*::]*/: {/* n:\"DefaultText\", */},\n  /*::[*/0x1025 /*::]*/: {/* n:\"Text\", */},\n  /*::[*/0x1026 /*::]*/: {\n    /* n:\"FontX\", */f: parseuint16\n  },\n  /*::[*/0x1027 /*::]*/: {/* n:\"ObjectLink\", */},\n  /*::[*/0x1032 /*::]*/: {/* n:\"Frame\", */},\n  /*::[*/0x1033 /*::]*/: {/* n:\"Begin\", */},\n  /*::[*/0x1034 /*::]*/: {/* n:\"End\", */},\n  /*::[*/0x1035 /*::]*/: {/* n:\"PlotArea\", */},\n  /*::[*/0x103a /*::]*/: {/* n:\"Chart3d\", */},\n  /*::[*/0x103c /*::]*/: {/* n:\"PicF\", */},\n  /*::[*/0x103d /*::]*/: {/* n:\"DropBar\", */},\n  /*::[*/0x103e /*::]*/: {/* n:\"Radar\", */},\n  /*::[*/0x103f /*::]*/: {/* n:\"Surf\", */},\n  /*::[*/0x1040 /*::]*/: {/* n:\"RadarArea\", */},\n  /*::[*/0x1041 /*::]*/: {/* n:\"AxisParent\", */},\n  /*::[*/0x1043 /*::]*/: {/* n:\"LegendException\", */},\n  /*::[*/0x1044 /*::]*/: {\n    /* n:\"ShtProps\", */f: parse_ShtProps\n  },\n  /*::[*/0x1045 /*::]*/: {/* n:\"SerToCrt\", */},\n  /*::[*/0x1046 /*::]*/: {/* n:\"AxesUsed\", */},\n  /*::[*/0x1048 /*::]*/: {/* n:\"SBaseRef\", */},\n  /*::[*/0x104a /*::]*/: {/* n:\"SerParent\", */},\n  /*::[*/0x104b /*::]*/: {/* n:\"SerAuxTrend\", */},\n  /*::[*/0x104e /*::]*/: {/* n:\"IFmtRecord\", */},\n  /*::[*/0x104f /*::]*/: {/* n:\"Pos\", */},\n  /*::[*/0x1050 /*::]*/: {/* n:\"AlRuns\", */},\n  /*::[*/0x1051 /*::]*/: {/* n:\"BRAI\", */},\n  /*::[*/0x105b /*::]*/: {/* n:\"SerAuxErrBar\", */},\n  /*::[*/0x105c /*::]*/: {\n    /* n:\"ClrtClient\", */f: parse_ClrtClient\n  },\n  /*::[*/0x105d /*::]*/: {/* n:\"SerFmt\", */},\n  /*::[*/0x105f /*::]*/: {/* n:\"Chart3DBarShape\", */},\n  /*::[*/0x1060 /*::]*/: {/* n:\"Fbi\", */},\n  /*::[*/0x1061 /*::]*/: {/* n:\"BopPop\", */},\n  /*::[*/0x1062 /*::]*/: {/* n:\"AxcExt\", */},\n  /*::[*/0x1063 /*::]*/: {/* n:\"Dat\", */},\n  /*::[*/0x1064 /*::]*/: {/* n:\"PlotGrowth\", */},\n  /*::[*/0x1065 /*::]*/: {/* n:\"SIIndex\", */},\n  /*::[*/0x1066 /*::]*/: {/* n:\"GelFrame\", */},\n  /*::[*/0x1067 /*::]*/: {/* n:\"BopPopCustom\", */},\n  /*::[*/0x1068 /*::]*/: {/* n:\"Fbi2\", */},\n  /*::[*/0x0000 /*::]*/: {\n    /* n:\"Dimensions\", */f: parse_Dimensions\n  },\n  /*::[*/0x0001 /*::]*/: {/* n:\"BIFF2BLANK\", */},\n  /*::[*/0x0002 /*::]*/: {\n    /* n:\"BIFF2INT\", */f: parse_BIFF2INT\n  },\n  /*::[*/0x0003 /*::]*/: {\n    /* n:\"BIFF2NUM\", */f: parse_BIFF2NUM\n  },\n  /*::[*/0x0004 /*::]*/: {\n    /* n:\"BIFF2STR\", */f: parse_BIFF2STR\n  },\n  /*::[*/0x0005 /*::]*/: {\n    /* n:\"BIFF2BOOLERR\", */f: parse_BIFF2BOOLERR\n  },\n  /*::[*/0x0007 /*::]*/: {\n    /* n:\"String\", */f: parse_BIFF2STRING\n  },\n  /*::[*/0x0008 /*::]*/: {/* n:\"BIFF2ROW\", */},\n  /*::[*/0x0009 /*::]*/: {\n    /* n:\"BOF\", */f: parse_BOF\n  },\n  /*::[*/0x000b /*::]*/: {/* n:\"Index\", */},\n  /*::[*/0x0016 /*::]*/: {\n    /* n:\"ExternCount\", */f: parseuint16\n  },\n  /*::[*/0x001e /*::]*/: {\n    /* n:\"BIFF2FORMAT\", */f: parse_BIFF2Format\n  },\n  /*::[*/0x001f /*::]*/: {/* n:\"BIFF2FMTCNT\", */},\n  /* 16-bit cnt of BIFF2FORMAT records */\n  /*::[*/0x0020 /*::]*/: {/* n:\"BIFF2COLINFO\", */},\n  /*::[*/0x0021 /*::]*/: {\n    /* n:\"Array\", */f: parse_Array\n  },\n  /*::[*/0x0024 /*::]*/: {/* n:\"COLWIDTH\", */},\n  /*::[*/0x0025 /*::]*/: {\n    /* n:\"DefaultRowHeight\", */f: parse_DefaultRowHeight\n  },\n  // 0x002c ??\n  // 0x002d ??\n  // 0x002e ??\n  // 0x0030 FONTCOUNT: number of fonts\n  /*::[*/\n  0x0032 /*::]*/: {\n    /* n:\"BIFF2FONTXTRA\", */f: parse_BIFF2FONTXTRA\n  },\n  // 0x0035: INFOOPTS\n  // 0x0036: TABLE (BIFF2 only)\n  // 0x0037: TABLE2 (BIFF2 only)\n  // 0x0038: WNDESK\n  // 0x0039 ??\n  // 0x003a: BEGINPREF\n  // 0x003b: ENDPREF\n  /*::[*/\n  0x003e /*::]*/: {/* n:\"BIFF2WINDOW2\", */},\n  // 0x003f ??\n  // 0x0046: SHOWSCROLL\n  // 0x0047: SHOWFORMULA\n  // 0x0048: STATUSBAR\n  // 0x0049: SHORTMENUS\n  // 0x004A:\n  // 0x004B:\n  // 0x004C:\n  // 0x004E:\n  // 0x004F:\n  // 0x0058: TOOLBAR (BIFF3)\n\n  /* - - - */\n  /*::[*/\n  0x0034 /*::]*/: {/* n:\"DDEObjName\", */},\n  /*::[*/0x0043 /*::]*/: {\n    /* n:\"BIFF2XF\", */f: parse_BIFF2XF\n  },\n  /*::[*/0x0044 /*::]*/: {\n    /* n:\"BIFF2XFINDEX\", */f: parseuint16\n  },\n  /*::[*/0x0045 /*::]*/: {/* n:\"BIFF2FONTCLR\", */},\n  /*::[*/0x0056 /*::]*/: {/* n:\"BIFF4FMTCNT\", */},\n  /* 16-bit cnt, similar to BIFF2 */\n  /*::[*/0x007e /*::]*/: {/* n:\"RK\", */},\n  /* Not necessarily same as 0x027e */\n  /*::[*/0x007f /*::]*/: {\n    /* n:\"ImData\", */f: parse_ImData\n  },\n  /*::[*/0x0087 /*::]*/: {/* n:\"Addin\", */},\n  /*::[*/0x0088 /*::]*/: {/* n:\"Edg\", */},\n  /*::[*/0x0089 /*::]*/: {/* n:\"Pub\", */},\n  // 0x8A\n  // 0x8B LH: alternate menu key flag (BIFF3/4)\n  // 0x8E\n  /*::[*/\n  0x008F /*::]*/: {\n    /* n:\"BIFF4SheetInfo\", */f: parse_BIFF4SheetInfo\n  },\n  /*::[*/0x0091 /*::]*/: {/* n:\"Sub\", */},\n  // 0x93 STYLE\n  /*::[*/\n  0x0094 /*::]*/: {/* n:\"LHRecord\", */},\n  /*::[*/0x0095 /*::]*/: {/* n:\"LHNGraph\", */},\n  /*::[*/0x0096 /*::]*/: {/* n:\"Sound\", */},\n  // 0xA2 FNPROTO: function prototypes (BIFF4)\n  // 0xA3\n  // 0xA8\n  /*::[*/\n  0x00a9 /*::]*/: {/* n:\"CoordList\", */},\n  /*::[*/0x00ab /*::]*/: {/* n:\"GCW\", */},\n  /*::[*/0x00bc /*::]*/: {/* n:\"ShrFmla\", */},\n  /* Not necessarily same as 0x04bc */\n  /*::[*/0x00bf /*::]*/: {/* n:\"ToolbarHdr\", */},\n  /*::[*/0x00c0 /*::]*/: {/* n:\"ToolbarEnd\", */},\n  /*::[*/0x00c2 /*::]*/: {/* n:\"AddMenu\", */},\n  /*::[*/0x00c3 /*::]*/: {/* n:\"DelMenu\", */},\n  /*::[*/0x00d6 /*::]*/: {\n    /* n:\"RString\", */f: parse_RString\n  },\n  /*::[*/0x00df /*::]*/: {/* n:\"UDDesc\", */},\n  /*::[*/0x00ea /*::]*/: {/* n:\"TabIdConf\", */},\n  /*::[*/0x0162 /*::]*/: {/* n:\"XL5Modify\", */},\n  /*::[*/0x01a5 /*::]*/: {/* n:\"FileSharing2\", */},\n  /*::[*/0x0206 /*::]*/: {\n    /* n:\"Formula\", */f: parse_Formula\n  },\n  /*::[*/0x0209 /*::]*/: {\n    /* n:\"BOF\", */f: parse_BOF\n  },\n  /*::[*/0x0218 /*::]*/: {\n    /* n:\"Lbl\", */f: parse_Lbl\n  },\n  /*::[*/0x0223 /*::]*/: {\n    /* n:\"ExternName\", */f: parse_ExternName\n  },\n  /*::[*/0x0231 /*::]*/: {/* n:\"Font\", */},\n  /*::[*/0x0243 /*::]*/: {\n    /* n:\"BIFF3XF\", */f: parse_BIFF3XF\n  },\n  /*::[*/0x0406 /*::]*/: {\n    /* n:\"Formula\", */f: parse_Formula\n  },\n  /*::[*/0x0409 /*::]*/: {\n    /* n:\"BOF\", */f: parse_BOF\n  },\n  /*::[*/0x0443 /*::]*/: {\n    /* n:\"BIFF4XF\", */f: parse_BIFF4XF\n  },\n  /*::[*/0x086d /*::]*/: {/* n:\"FeatInfo\", */},\n  /*::[*/0x0873 /*::]*/: {/* n:\"FeatInfo11\", */},\n  /*::[*/0x0881 /*::]*/: {/* n:\"SXAddl12\", */},\n  /*::[*/0x08c0 /*::]*/: {/* n:\"AutoWebPub\", */},\n  /*::[*/0x08c1 /*::]*/: {/* n:\"ListObj\", */},\n  /*::[*/0x08c2 /*::]*/: {/* n:\"ListField\", */},\n  /*::[*/0x08c3 /*::]*/: {/* n:\"ListDV\", */},\n  /*::[*/0x08c4 /*::]*/: {/* n:\"ListCondFmt\", */},\n  /*::[*/0x08c5 /*::]*/: {/* n:\"ListCF\", */},\n  /*::[*/0x08c6 /*::]*/: {/* n:\"FMQry\", */},\n  /*::[*/0x08c7 /*::]*/: {/* n:\"FMSQry\", */},\n  /*::[*/0x08c8 /*::]*/: {/* n:\"PLV\", */},\n  /*::[*/0x08c9 /*::]*/: {/* n:\"LnExt\", */},\n  /*::[*/0x08ca /*::]*/: {/* n:\"MkrExt\", */},\n  /*::[*/0x08cb /*::]*/: {/* n:\"CrtCoopt\", */},\n  /*::[*/0x08d6 /*::]*/: {\n    /* n:\"FRTArchId$\", */r: 12\n  },\n  /* --- multiplan 4 records --- */\n  /*::[*/0x0065 /*::]*/: {/* n:\"\", */},\n  // one per window\n  /*::[*/\n  0x0066 /*::]*/: {/* n:\"\", */},\n  // calc settings\n  /*::[*/\n  0x0069 /*::]*/: {/* n:\"\", */},\n  // print header\n  /*::[*/\n  0x006a /*::]*/: {/* n:\"\", */},\n  // print footer\n  /*::[*/\n  0x006b /*::]*/: {/* n:\"\", */},\n  // print settings\n  /*::[*/\n  0x006d /*::]*/: {/* n:\"\", */},\n  // one per window\n  /*::[*/\n  0x0070 /*::]*/: {/* n:\"\", */},\n  // includes default col width\n  /*::[*/\n  0x0072 /*::]*/: {/* n:\"\", */},\n  // includes selected cell\n\n  /*::[*/\n  0x7262 /*::]*/: {}\n};\nfunction write_biff_rec(ba /*:BufArray*/, type /*:number*/, payload, length /*:?number*/) /*:void*/{\n  var t /*:number*/ = type;\n  if (isNaN(t)) return;\n  var len = length || (payload || []).length || 0;\n  var o = ba.next(4);\n  o.write_shift(2, t);\n  o.write_shift(2, len);\n  if ( /*:: len != null &&*/len > 0 && is_buf(payload)) ba.push(payload);\n}\nfunction write_biff_continue(ba /*:BufArray*/, type /*:number*/, payload, length /*:?number*/) /*:void*/{\n  var len = length || (payload || []).length || 0;\n  if (len <= 8224) return write_biff_rec(ba, type, payload, len);\n  var t = type;\n  if (isNaN(t)) return;\n  var parts = payload.parts || [],\n    sidx = 0;\n  var i = 0,\n    w = 0;\n  while (w + (parts[sidx] || 8224) <= 8224) {\n    w += parts[sidx] || 8224;\n    sidx++;\n  }\n  var o = ba.next(4);\n  o.write_shift(2, t);\n  o.write_shift(2, w);\n  ba.push(payload.slice(i, i + w));\n  i += w;\n  while (i < len) {\n    o = ba.next(4);\n    o.write_shift(2, 0x3c); // TODO: figure out correct continue type\n    w = 0;\n    while (w + (parts[sidx] || 8224) <= 8224) {\n      w += parts[sidx] || 8224;\n      sidx++;\n    }\n    o.write_shift(2, w);\n    ba.push(payload.slice(i, i + w));\n    i += w;\n  }\n}\nfunction write_BIFF2BERR(r /*:number*/, c /*:number*/, val, t /*:string*/) {\n  var out = new_buf(9);\n  write_BIFF2Cell(out, r, c);\n  write_Bes(val, t || 'b', out);\n  return out;\n}\n\n/* TODO: codepage, large strings */\nfunction write_BIFF2LABEL(r /*:number*/, c /*:number*/, val) {\n  var out = new_buf(8 + 2 * val.length);\n  write_BIFF2Cell(out, r, c);\n  out.write_shift(1, val.length);\n  out.write_shift(val.length, val, 'sbcs');\n  return out.l < out.length ? out.slice(0, out.l) : out;\n}\nfunction write_comments_biff2(ba /*:BufArray*/, comments /*:Array<[Comment[], number, number]>*/) {\n  comments.forEach(function (data) {\n    var text = data[0].map(function (cc) {\n      return cc.t;\n    }).join(\"\");\n    // TODO: should '\\n' be translated to '\\r' to correct for Excel 5.0 bug when exporting to BIFF2/3 ?\n    if (text.length <= 2048) return write_biff_rec(ba, 0x001C, write_NOTE_BIFF2(text, data[1], data[2]));\n    write_biff_rec(ba, 0x001C, write_NOTE_BIFF2(text.slice(0, 2048), data[1], data[2], text.length));\n    for (var i = 2048; i < text.length; i += 2048) write_biff_rec(ba, 0x001C, write_NOTE_BIFF2(text.slice(i, Math.min(i + 2048, text.length)), -1, -1, Math.min(2048, text.length - i)));\n  });\n}\n\n/* TODO: BIFF3/4 use different records -- see comments*/\nfunction write_ws_biff2_cell(ba /*:BufArray*/, cell /*:Cell*/, R /*:number*/, C /*:number*/, opts, date1904 /*:boolean*/) {\n  var ifmt = 0;\n  if (cell.z != null) {\n    ifmt = opts._BIFF2FmtTable.indexOf(cell.z);\n    if (ifmt == -1) {\n      opts._BIFF2FmtTable.push(cell.z);\n      ifmt = opts._BIFF2FmtTable.length - 1;\n    }\n  }\n  var ixfe = 0;\n  if (cell.z != null) {\n    for (; ixfe < opts.cellXfs.length; ++ixfe) if (opts.cellXfs[ixfe].numFmtId == ifmt) break;\n    if (ixfe == opts.cellXfs.length) opts.cellXfs.push({\n      numFmtId: ifmt\n    });\n  }\n  if (cell.v != null) switch (cell.t) {\n    case 'd':\n    case 'n':\n      var v = cell.t == 'd' ? datenum(parseDate$1(cell.v, date1904), date1904) : cell.v;\n      if (opts.biff == 2 && v == (v | 0) && v >= 0 && v < 65536)\n        // 0x027E (RK) in BIFF3/4\n        write_biff_rec(ba, 0x0002, write_BIFF2INT(R, C, v, ixfe, ifmt));else if (isNaN(v))\n        // 0x0205 in BIFF3/4\n        write_biff_rec(ba, 0x0005, write_BIFF2BERR(R, C, 0x24, \"e\")); // #NUM!\n      else if (!isFinite(v))\n        // 0x0205 in BIFF3/4\n        write_biff_rec(ba, 0x0005, write_BIFF2BERR(R, C, 0x07, \"e\")); // #DIV/0!\n      else\n        // 0x0203 in BIFF3/4\n        write_biff_rec(ba, 0x0003, write_BIFF2NUM(R, C, v, ixfe, ifmt));\n      return;\n    case 'b':\n    case 'e':\n      // 0x0205 in BIFF3/4\n      write_biff_rec(ba, 0x0005, write_BIFF2BERR(R, C, cell.v, cell.t));\n      return;\n    /* TODO: codepage, sst */\n    case 's':\n    case 'str':\n      // 0x0204 in BIFF3/4\n      write_biff_rec(ba, 0x0004, write_BIFF2LABEL(R, C, cell.v == null ? \"\" : String(cell.v).slice(0, 255)));\n      return;\n  }\n  // 0x0201 in BIFF3/4\n  write_biff_rec(ba, 0x0001, write_BIFF2Cell(null, R, C));\n}\nfunction write_ws_biff2(ba /*:BufArray*/, ws /*:Worksheet*/, idx /*:number*/, opts, wb /*:Workbook*/) {\n  var dense = ws[\"!data\"] != null;\n  var range = safe_decode_range(ws['!ref'] || \"A1\"),\n    rr = \"\",\n    cols /*:Array<string>*/ = [];\n  if (range.e.c > 0xFF || range.e.r > 0x3FFF) {\n    if (opts.WTF) throw new Error(\"Range \" + (ws['!ref'] || \"A1\") + \" exceeds format limit A1:IV16384\");\n    range.e.c = Math.min(range.e.c, 0xFF);\n    range.e.r = Math.min(range.e.c, 0x3FFF);\n  }\n  var date1904 = (((wb || {}).Workbook || {}).WBProps || {}).date1904;\n  var row = [],\n    comments = [];\n  /* TODO: 0x0000 / 0x0200 dimensions? */\n  for (var C = range.s.c; C <= range.e.c; ++C) cols[C] = encode_col(C);\n  for (var R = range.s.r; R <= range.e.r; ++R) {\n    if (dense) row = ws[\"!data\"][R] || [];\n    rr = encode_row(R);\n    for (C = range.s.c; C <= range.e.c; ++C) {\n      var cell = dense ? row[C] : ws[cols[C] + rr];\n      if (!cell) continue;\n      /* write cell */\n      write_ws_biff2_cell(ba, cell, R, C, opts, date1904);\n      if (cell.c) comments.push([cell.c, R, C]);\n    }\n  }\n\n  /* ... 0x12 0x19 0x13 (Password) */\n  write_comments_biff2(ba, comments);\n  /* 0x3d (Window1) ... */\n}\n\n/* Based on test files */\nfunction write_biff2_buf(wb /*:Workbook*/, opts /*:WriteOpts*/) {\n  var o = opts || {};\n  var ba = buf_array();\n  var idx = 0;\n  for (var i = 0; i < wb.SheetNames.length; ++i) if (wb.SheetNames[i] == o.sheet) idx = i;\n  if (idx == 0 && !!o.sheet && wb.SheetNames[0] != o.sheet) throw new Error(\"Sheet not found: \" + o.sheet);\n  write_biff_rec(ba, o.biff == 4 ? 0x0409 : o.biff == 3 ? 0x0209 : 0x0009, write_BOF(wb, 0x10, o));\n  if (((wb.Workbook || {}).WBProps || {}).date1904) write_biff_rec(ba, 0x0022, writebool(true));\n  o.cellXfs = [{\n    numFmtId: 0\n  }];\n  o._BIFF2FmtTable /*:Array<string>*/ = [\"General\"];\n  o._Fonts = [];\n  var body = buf_array();\n  write_ws_biff2(body, wb.Sheets[wb.SheetNames[idx]], idx, o, wb);\n  o._BIFF2FmtTable.forEach(function (f) {\n    if (o.biff <= 3) write_biff_rec(ba, 0x001E, write_BIFF2Format(f));else write_biff_rec(ba, 0x041E, write_BIFF4Format(f));\n  });\n  o.cellXfs.forEach(function (xf) {\n    switch (o.biff) {\n      case 2:\n        write_biff_rec(ba, 0x0043, write_BIFF2XF(xf));\n        break;\n      case 3:\n        write_biff_rec(ba, 0x0243, write_BIFF3XF(xf));\n        break;\n      case 4:\n        write_biff_rec(ba, 0x0443, write_BIFF4XF(xf));\n        break;\n    }\n  });\n  delete o._BIFF2FmtTable;\n  delete o.cellXfs;\n  delete o._Fonts;\n  ba.push(body.end());\n  write_biff_rec(ba, 0x000A);\n  return ba.end();\n}\nvar b8oid = 1,\n  b8ocnts /*:Array<[number, number, number]>*/ = [];\nfunction write_MsoDrawingGroup() {\n  var buf = new_buf(82 + 8 * b8ocnts.length);\n  /* [MS-ODRAW] 2.2.12 OfficeArtDggContainer */\n  buf.write_shift(2, 0x0F);\n  buf.write_shift(2, 0xF000);\n  buf.write_shift(4, 74 + 8 * b8ocnts.length);\n  /* 2.2.48 OfficeArtFDGGBlock */\n  {\n    buf.write_shift(2, 0);\n    buf.write_shift(2, 0xF006);\n    buf.write_shift(4, 16 + 8 * b8ocnts.length);\n    /* 2.2.47 OfficeArtFDGG */\n    {\n      buf.write_shift(4, b8oid);\n      buf.write_shift(4, b8ocnts.length + 1);\n      var acc = 0;\n      for (var i = 0; i < b8ocnts.length; ++i) acc += b8ocnts[i] && b8ocnts[i][1] || 0;\n      buf.write_shift(4, acc);\n      buf.write_shift(4, b8ocnts.length);\n    }\n    /* 2.2.46 OfficeArtIDCL + */\n    b8ocnts.forEach(function (b8) {\n      buf.write_shift(4, b8[0]);\n      buf.write_shift(4, b8[2]);\n    });\n  }\n  /* 2.2.9 OfficeArtFOPT */\n  {\n    buf.write_shift(2, 0x33); // 0x03 | (3 << 4)\n    buf.write_shift(2, 0xF00B);\n    buf.write_shift(4, 0x12); // 3 * 6\n    /* 2.3.21.15 Text Boolean Properties */\n    buf.write_shift(2, 0xBF);\n    buf.write_shift(4, 0x00080008);\n    /* 2.3.7.2 fillColor */\n    buf.write_shift(2, 0x0181);\n    buf.write_shift(4, 0x08000041);\n    /* 2.3.8.1 lineColor */\n    buf.write_shift(2, 0x01C0);\n    buf.write_shift(4, 0x08000040);\n  }\n  /* 2.2.45 OfficeArtSplitMenuColorContainer */\n  {\n    buf.write_shift(2, 0x40);\n    buf.write_shift(2, 0xF11E);\n    buf.write_shift(4, 16);\n    buf.write_shift(4, 0x0800000D);\n    buf.write_shift(4, 0x0800000C);\n    buf.write_shift(4, 0x08000017);\n    buf.write_shift(4, 0x100000F7);\n  }\n  return buf;\n}\nfunction write_comments_biff8(ba /*:BufArray*/, comments /*:Array<[Comment[], number, number]>*/) {\n  var notes /*:Array<RawData>*/ = [],\n    sz = 0,\n    pl = buf_array(),\n    baseid = b8oid;\n  var _oasc;\n  comments.forEach(function (c, ci) {\n    var author = \"\";\n    var text = c[0].map(function (t) {\n      if (t.a && !author) author = t.a;\n      return t.t;\n    }).join(\"\");\n    ++b8oid;\n\n    /* 2.2.14 OfficeArtSpContainer */\n    {\n      var oasc = new_buf(0x96);\n      oasc.write_shift(2, 0x0F);\n      oasc.write_shift(2, 0xF004);\n      oasc.write_shift(4, 0x96);\n      /* 2.2.40 OfficeArtFSP */\n      {\n        oasc.write_shift(2, 0xca2); // 0x02 | (0xca << 4)\n        oasc.write_shift(2, 0xF00A);\n        oasc.write_shift(4, 8);\n        oasc.write_shift(4, b8oid);\n        oasc.write_shift(4, 0xA00);\n      }\n      /* 2.2.9 OfficeArtFOPT */\n      {\n        oasc.write_shift(2, 0xE3); // 0x03 | (14 << 4)\n        oasc.write_shift(2, 0xF00B);\n        oasc.write_shift(4, 0x54); // 14 * 6\n        /* 2.3.21.1 ITxid */\n        oasc.write_shift(2, 0x80);\n        oasc.write_shift(4, 0);\n        /* 2.3.21.12 txdir */\n        oasc.write_shift(2, 0x8B);\n        oasc.write_shift(4, 0x02);\n        /* 2.3.21.15 Text Boolean Properties */\n        oasc.write_shift(2, 0xBF);\n        oasc.write_shift(4, 0x00080008);\n        /* 2.3.6.30 cxk */\n        oasc.write_shift(2, 0x0158);\n        oasc.l += 4;\n        /* 2.3.7.2 fillColor */\n        oasc.write_shift(2, 0x0181);\n        oasc.write_shift(4, 0x08000050);\n        /* 2.3.7.4 fillBackColor */\n        oasc.write_shift(2, 0x0183);\n        oasc.write_shift(4, 0x08000050);\n        /* 2.3.7.6 fillCrMod */\n        oasc.write_shift(2, 0x0185);\n        oasc.write_shift(4, 0x100000F4);\n        /* 2.3.7.43 Fill Style Boolean Properties */\n        oasc.write_shift(2, 0x01BF);\n        oasc.write_shift(4, 0x00100010);\n        /* 2.3.8.1 lineColor */\n        oasc.write_shift(2, 0x01C0);\n        oasc.write_shift(4, 0x08000051);\n        /* 2.3.8.4 lineCrMod */\n        oasc.write_shift(2, 0x01C3);\n        oasc.write_shift(4, 0x100000F4);\n        /* 2.3.13.2 shadowColor */\n        oasc.write_shift(2, 0x0201);\n        oasc.write_shift(4, 0x08000051);\n        /* 2.3.13.4 shadowCrMod */\n        oasc.write_shift(2, 0x0203);\n        oasc.write_shift(4, 0x100000F4);\n        /* 2.3.13.23 Shadow Style Boolean Properties */\n        oasc.write_shift(2, 0x023F);\n        oasc.write_shift(4, 0x00030001);\n        /* 2.3.4.44 Group Shape Boolean Properties */\n        oasc.write_shift(2, 0x03BF);\n        oasc.write_shift(4, 0x00020000 | (c[0].hidden ? 2 : 0));\n      }\n      /* [MS-XLS] 2.5.193 OfficeArtClientAnchorSheet */\n      {\n        oasc.l += 2;\n        oasc.write_shift(2, 0xF010);\n        oasc.write_shift(4, 0x12);\n        oasc.write_shift(2, 0x3); // do not move or size with cells\n        oasc.write_shift(2, c[2] + 2);\n        oasc.l += 2;\n        oasc.write_shift(2, c[1] + 1);\n        oasc.l += 2;\n        oasc.write_shift(2, c[2] + 4);\n        oasc.l += 2;\n        oasc.write_shift(2, c[1] + 5);\n        oasc.l += 2;\n      }\n      /* [MS-XLS] 2.5.194 OfficeArtClientData */\n      {\n        oasc.l += 2;\n        oasc.write_shift(2, 0xF011);\n        oasc.l += 4;\n      }\n      oasc.l = 0x96;\n      if (ci == 0) /* write_biff_rec(pl, 0x003C, oasc); */_oasc = oasc;else write_biff_rec(pl, 0x00EC, oasc);\n    }\n    sz += 0x96;\n\n    /* [MS-XLS] 2.4.181 Obj */\n    {\n      var obj = new_buf(52); // 22 + 26 + 4\n      /* [MS-XLS] 2.5.143 FtCmo */\n      obj.write_shift(2, 0x15);\n      obj.write_shift(2, 0x12);\n      obj.write_shift(2, 0x19);\n      obj.write_shift(2, b8oid);\n      obj.write_shift(2, 0);\n      obj.l = 22;\n      /* [MS-XLS] 2.5.149 FtNts */\n      obj.write_shift(2, 0x0D);\n      obj.write_shift(2, 0x16);\n      obj.write_shift(4, 0x62726272);\n      obj.write_shift(4, 0x95374305);\n      obj.write_shift(4, 0x80301328);\n      obj.write_shift(4, 0x69696904 + b8oid * 256);\n      obj.write_shift(2, 0);\n      obj.write_shift(4, 0);\n      // reserved\n      obj.l += 4;\n      write_biff_rec(pl, 0x005D, obj);\n    }\n\n    /* [MS-XLS] 2.5.195 OfficeArtClientTextbox */\n    {\n      var oact = new_buf(8);\n      oact.l += 2;\n      oact.write_shift(2, 0xF00D);\n      oact.l += 4;\n      write_biff_rec(pl, 0x00EC, oact);\n    }\n    sz += 8;\n\n    /* [MS-XLS] 2.4.329 TxO */\n    {\n      var txo = new_buf(18);\n      txo.write_shift(2, 0x12);\n      txo.l += 8;\n      txo.write_shift(2, text.length);\n      txo.write_shift(2, 0x10);\n      txo.l += 4;\n      write_biff_rec(pl, 0x01b6, txo);\n      /* text continue record TODO: switch to wide strings */\n      {\n        var cont = new_buf(1 + text.length);\n        cont.write_shift(1, 0);\n        cont.write_shift(text.length, text, \"sbcs\");\n        write_biff_rec(pl, 0x003C, cont);\n      }\n      /* formatting continue records */\n      {\n        var conf = new_buf(0x10);\n        conf.l += 8;\n        conf.write_shift(2, text.length);\n        conf.l += 6;\n        write_biff_rec(pl, 0x003C, conf);\n      }\n    }\n\n    /* 2.4.179 Note */\n    {\n      var notesh = new_buf(12 + author.length);\n      notesh.write_shift(2, c[1]);\n      notesh.write_shift(2, c[2]);\n      notesh.write_shift(2, 0 | (c[0].hidden ? 0 : 2));\n      notesh.write_shift(2, b8oid);\n      notesh.write_shift(2, author.length);\n      notesh.write_shift(1, 0);\n      notesh.write_shift(author.length, author, \"sbcs\");\n      notesh.l++;\n      notes.push(notesh);\n    }\n  });\n  /* [MS-ODRAW] 2.2.13 OfficeArtDgContainer */\n  {\n    var hdr = new_buf(80);\n    hdr.write_shift(2, 0x0F);\n    hdr.write_shift(2, 0xF002);\n    hdr.write_shift(4, sz + hdr.length - 8);\n    /* [MS-ODRAW] 2.2.49 OfficeArtFDG */\n    {\n      hdr.write_shift(2, 0x10);\n      hdr.write_shift(2, 0xF008);\n      hdr.write_shift(4, 0x08);\n      hdr.write_shift(4, comments.length + 1);\n      hdr.write_shift(4, b8oid);\n    }\n    /* [MS-ODRAW] 2.2.16 OfficeArtSpgrContainer */\n    {\n      hdr.write_shift(2, 0x0f);\n      hdr.write_shift(2, 0xF003);\n      hdr.write_shift(4, sz + 0x30);\n      /* [MS-ODRAW] 2.2.14 OfficeArtSpContainer */\n      {\n        hdr.write_shift(2, 0x0f);\n        hdr.write_shift(2, 0xF004);\n        hdr.write_shift(4, 0x28);\n        /* [MS-ODRAW] 2.2.38 OfficeArtFSPGR */\n        {\n          hdr.write_shift(2, 0x01);\n          hdr.write_shift(2, 0xF009);\n          hdr.write_shift(4, 0x10);\n          hdr.l += 16;\n        }\n        /* [MS-ODRAW] 2.2.40 OfficeArtFSP */\n        {\n          hdr.write_shift(2, 0x02);\n          hdr.write_shift(2, 0xF00A);\n          hdr.write_shift(4, 0x08);\n          hdr.write_shift(4, baseid);\n          hdr.write_shift(4, 0x05);\n        }\n      }\n    }\n    write_biff_rec(ba, 0x00EC, /* hdr */_oasc ? bconcat([hdr, _oasc]) : hdr);\n  }\n  ba.push(pl.end());\n  notes.forEach(function (n) {\n    write_biff_rec(ba, 0x001C, n);\n  });\n  b8ocnts.push([baseid, comments.length + 1, b8oid]);\n  ++b8oid;\n}\nfunction write_FONTS_biff8(ba, data, opts) {\n  write_biff_rec(ba, 0x0031 /* Font */, write_Font({\n    sz: 12,\n    color: {\n      theme: 1\n    },\n    name: \"Arial\",\n    family: 2,\n    scheme: \"minor\"\n  }, opts));\n}\nfunction write_FMTS_biff8(ba, NF /*:?SSFTable*/, opts) {\n  if (!NF) return;\n  [[5, 8], [23, 26], [41, 44], [/*63*/50, /*66],[164,*/392]].forEach(function (r) {\n    /*:: if(!NF) return; */\n    for (var i = r[0]; i <= r[1]; ++i) if (NF[i] != null) write_biff_rec(ba, 0x041E /* Format */, write_Format(i, NF[i], opts));\n  });\n}\nfunction write_FEAT(ba, ws) {\n  /* [MS-XLS] 2.4.112 */\n  var o = new_buf(19);\n  o.write_shift(4, 0x867);\n  o.write_shift(4, 0);\n  o.write_shift(4, 0);\n  o.write_shift(2, 3);\n  o.write_shift(1, 1);\n  o.write_shift(4, 0);\n  write_biff_rec(ba, 0x0867 /* FeatHdr */, o);\n  /* [MS-XLS] 2.4.111 */\n  o = new_buf(39);\n  o.write_shift(4, 0x868);\n  o.write_shift(4, 0);\n  o.write_shift(4, 0);\n  o.write_shift(2, 3);\n  o.write_shift(1, 0);\n  o.write_shift(4, 0);\n  o.write_shift(2, 1);\n  o.write_shift(4, 4);\n  o.write_shift(2, 0);\n  write_Ref8U(safe_decode_range(ws['!ref'] || \"A1\"), o);\n  o.write_shift(4, 4);\n  write_biff_rec(ba, 0x0868 /* Feat */, o);\n}\nfunction write_CELLXFS_biff8(ba, opts) {\n  for (var i = 0; i < 16; ++i) write_biff_rec(ba, 0x00e0 /* XF */, write_XF({\n    numFmtId: 0,\n    style: true\n  }, 0, opts));\n  opts.cellXfs.forEach(function (c) {\n    write_biff_rec(ba, 0x00e0 /* XF */, write_XF(c, 0, opts));\n  });\n}\nfunction write_ws_biff8_hlinks(ba /*:BufArray*/, ws) {\n  for (var R = 0; R < ws['!links'].length; ++R) {\n    var HL = ws['!links'][R];\n    write_biff_rec(ba, 0x01b8 /* HLink */, write_HLink(HL));\n    if (HL[1].Tooltip) write_biff_rec(ba, 0x0800 /* HLinkTooltip */, write_HLinkTooltip(HL));\n  }\n  delete ws['!links'];\n}\nfunction write_ws_cols_biff8(ba, cols) {\n  if (!cols) return;\n  var cnt = 0;\n  cols.forEach(function (col, idx) {\n    if (++cnt <= 256 && col) {\n      write_biff_rec(ba, 0x007d /* ColInfo */, write_ColInfo(col_obj_w(idx, col), idx));\n    }\n  });\n}\nfunction write_ws_biff8_cell(ba /*:BufArray*/, cell /*:Cell*/, R /*:number*/, C /*:number*/, opts, date1904 /*:boolean*/) {\n  var os = 16 + get_cell_style(opts.cellXfs, cell, opts);\n  if (cell.v == null && !cell.bf) {\n    write_biff_rec(ba, 0x0201 /* Blank */, write_XLSCell(R, C, os));\n    return;\n  }\n  if (cell.bf) write_biff_rec(ba, 0x0006 /* Formula */, write_Formula(cell, R, C, opts, os));else switch (cell.t) {\n    case 'd':\n    case 'n':\n      var v = cell.t == 'd' ? datenum(parseDate$1(cell.v, date1904), date1904) : cell.v;\n      if (isNaN(v)) write_biff_rec(ba, 0x0205 /* BoolErr */, write_BoolErr(R, C, 0x24, os, opts, \"e\")); // #NUM!\n      else if (!isFinite(v)) write_biff_rec(ba, 0x0205 /* BoolErr */, write_BoolErr(R, C, 0x07, os, opts, \"e\")); // #DIV/0!\n      /* TODO: emit RK as appropriate */else write_biff_rec(ba, 0x0203 /* Number */, write_Number(R, C, v, os));\n      break;\n    case 'b':\n    case 'e':\n      write_biff_rec(ba, 0x0205 /* BoolErr */, write_BoolErr(R, C, cell.v, os, opts, cell.t));\n      break;\n    /* TODO: codepage, sst */\n    case 's':\n    case 'str':\n      if (opts.bookSST) {\n        var isst = get_sst_id(opts.Strings, cell.v == null ? \"\" : String(cell.v), opts.revStrings);\n        write_biff_rec(ba, 0x00fd /* LabelSst */, write_LabelSst(R, C, isst, os));\n      } else write_biff_rec(ba, 0x0204 /* Label */, write_Label(R, C, (cell.v == null ? \"\" : String(cell.v)).slice(0, 255), os, opts));\n      break;\n    default:\n      write_biff_rec(ba, 0x0201 /* Blank */, write_XLSCell(R, C, os));\n  }\n}\n\n/* [MS-XLS] 2.1.7.20.5 */\nfunction write_ws_biff8(idx /*:number*/, opts, wb /*:Workbook*/) {\n  var ba = buf_array();\n  var s = wb.SheetNames[idx],\n    ws = wb.Sheets[s] || {};\n  var _WB /*:WBWBProps*/ = (wb || {}).Workbook || {} /*:any*/;\n  var _sheet /*:WBWSProp*/ = (_WB.Sheets || [])[idx] || {} /*:any*/;\n  var dense = ws[\"!data\"] != null;\n  var b8 = opts.biff == 8;\n  var ref /*:string*/,\n    rr = \"\",\n    cols /*:Array<string>*/ = [];\n  var range = safe_decode_range(ws['!ref'] || \"A1\");\n  var MAX_ROWS = b8 ? 65536 : 16384;\n  if (range.e.c > 0xFF || range.e.r >= MAX_ROWS) {\n    if (opts.WTF) throw new Error(\"Range \" + (ws['!ref'] || \"A1\") + \" exceeds format limit A1:IV16384\");\n    range.e.c = Math.min(range.e.c, 0xFF);\n    range.e.r = Math.min(range.e.c, MAX_ROWS - 1);\n  }\n  write_biff_rec(ba, 0x0809, write_BOF(wb, 0x10, opts));\n  /* [Uncalced] Index */\n  write_biff_rec(ba, 0x000d /* CalcMode */, writeuint16(1));\n  write_biff_rec(ba, 0x000c /* CalcCount */, writeuint16(100));\n  write_biff_rec(ba, 0x000f /* CalcRefMode */, writebool(true));\n  write_biff_rec(ba, 0x0011 /* CalcIter */, writebool(false));\n  write_biff_rec(ba, 0x0010 /* CalcDelta */, write_Xnum(0.001));\n  write_biff_rec(ba, 0x005f /* CalcSaveRecalc */, writebool(true));\n  write_biff_rec(ba, 0x002a /* PrintRowCol */, writebool(false));\n  write_biff_rec(ba, 0x002b /* PrintGrid */, writebool(false));\n  write_biff_rec(ba, 0x0082 /* GridSet */, writeuint16(1));\n  write_biff_rec(ba, 0x0080 /* Guts */, write_Guts([0, 0]));\n  /* DefaultRowHeight WsBool [Sync] [LPr] [HorizontalPageBreaks] [VerticalPageBreaks] */\n  /* Header (string) */\n  /* Footer (string) */\n  write_biff_rec(ba, 0x0083 /* HCenter */, writebool(false));\n  write_biff_rec(ba, 0x0084 /* VCenter */, writebool(false));\n  /* ... */\n  if (b8) write_ws_cols_biff8(ba, ws[\"!cols\"]);\n  /* ... */\n  write_biff_rec(ba, 0x0200 /* Dimensions */, write_Dimensions(range, opts));\n  /* ... */\n\n  var date1904 = (((wb || {}).Workbook || {}).WBProps || {}).date1904;\n  if (b8) ws['!links'] = [];\n  var comments = [];\n  var row = [];\n  for (var C = range.s.c; C <= range.e.c; ++C) cols[C] = encode_col(C);\n  for (var R = range.s.r; R <= range.e.r; ++R) {\n    if (dense) row = ws[\"!data\"][R] || [];\n    rr = encode_row(R);\n    for (C = range.s.c; C <= range.e.c; ++C) {\n      ref = cols[C] + rr;\n      var cell = dense ? row[C] : ws[ref];\n      if (!cell) continue;\n      /* write cell */\n      write_ws_biff8_cell(ba, cell, R, C, opts, date1904);\n      if (b8 && cell.l) ws['!links'].push([ref, cell.l]);\n      if (cell.c) comments.push([cell.c, R, C]);\n    }\n  }\n  var cname /*:string*/ = _sheet.CodeName || _sheet.name || s;\n  /* ... */\n  if (b8) write_comments_biff8(ba, comments);else write_comments_biff2(ba, comments);\n  /* ... */\n  if (b8) write_biff_rec(ba, 0x023e /* Window2 */, write_Window2((_WB.Views || [])[0]));\n  /* ... */\n  if (b8 && (ws['!merges'] || []).length) write_biff_rec(ba, 0x00e5 /* MergeCells */, write_MergeCells(ws['!merges']));\n  /* [LRng] *QUERYTABLE [PHONETICINFO] CONDFMTS */\n  if (b8) write_ws_biff8_hlinks(ba, ws);\n  /* [DVAL] */\n  write_biff_rec(ba, 0x01ba /* CodeName */, write_XLUnicodeString(cname));\n  /* *WebPub *CellWatch [SheetExt] */\n  if (b8) write_FEAT(ba, ws);\n  /* *FEAT11 *RECORD12 */\n  write_biff_rec(ba, 0x000a /* EOF */);\n  return ba.end();\n}\n\n/* [MS-XLS] 2.1.7.20.3 */\nfunction write_biff8_global(wb /*:Workbook*/, bufs, opts /*:WriteOpts*/) {\n  var A = buf_array();\n  var _WB /*:WBWBProps*/ = (wb || {}).Workbook || {} /*:any*/;\n  var _sheets /*:Array<WBWSProp>*/ = _WB.Sheets || [];\n  var _wb /*:WBProps*/ = /*::((*/_WB.WBProps || {/*::CodeName:\"ThisWorkbook\"*/} /*:: ):any)*/;\n  var b8 = opts.biff == 8,\n    b5 = opts.biff == 5;\n  write_biff_rec(A, 0x0809, write_BOF(wb, 0x05, opts));\n  if (opts.bookType == \"xla\") write_biff_rec(A, 0x0087 /* Addin */);\n  write_biff_rec(A, 0x00e1 /* InterfaceHdr */, b8 ? writeuint16(0x04b0) : null);\n  write_biff_rec(A, 0x00c1 /* Mms */, writezeroes(2));\n  if (b5) write_biff_rec(A, 0x00bf /* ToolbarHdr */);\n  if (b5) write_biff_rec(A, 0x00c0 /* ToolbarEnd */);\n  write_biff_rec(A, 0x00e2 /* InterfaceEnd */);\n  write_biff_rec(A, 0x005c /* WriteAccess */, write_WriteAccess(\"SheetJS\", opts));\n  /* [FileSharing] */\n  write_biff_rec(A, 0x0042 /* CodePage */, writeuint16(b8 ? 0x04b0 : 0x04E4));\n  /* *2047 Lel */\n  if (b8) write_biff_rec(A, 0x0161 /* DSF */, writeuint16(0));\n  if (b8) write_biff_rec(A, 0x01c0 /* Excel9File */);\n  write_biff_rec(A, 0x013d /* RRTabId */, write_RRTabId(wb.SheetNames.length));\n  if (b8 && wb.vbaraw) write_biff_rec(A, 0x00d3 /* ObProj */);\n  /* [ObNoMacros] */\n  if (b8 && wb.vbaraw) {\n    var cname /*:string*/ = _wb.CodeName || \"ThisWorkbook\";\n    write_biff_rec(A, 0x01ba /* CodeName */, write_XLUnicodeString(cname));\n  }\n  write_biff_rec(A, 0x009c /* BuiltInFnGroupCount */, writeuint16(0x11));\n  /* *FnGroupName *FnGrp12 */\n  /* *Lbl */\n  /* [OleObjectSize] */\n  write_biff_rec(A, 0x0019 /* WinProtect */, writebool(false));\n  write_biff_rec(A, 0x0012 /* Protect */, writebool(false));\n  write_biff_rec(A, 0x0013 /* Password */, writeuint16(0));\n  if (b8) write_biff_rec(A, 0x01af /* Prot4Rev */, writebool(false));\n  if (b8) write_biff_rec(A, 0x01bc /* Prot4RevPass */, writeuint16(0));\n  write_biff_rec(A, 0x003d /* Window1 */, write_Window1());\n  write_biff_rec(A, 0x0040 /* Backup */, writebool(false));\n  write_biff_rec(A, 0x008d /* HideObj */, writeuint16(0));\n  write_biff_rec(A, 0x0022 /* Date1904 */, writebool(safe1904(wb) == \"true\"));\n  write_biff_rec(A, 0x000e /* CalcPrecision */, writebool(true));\n  if (b8) write_biff_rec(A, 0x01b7 /* RefreshAll */, writebool(false));\n  write_biff_rec(A, 0x00DA /* BookBool */, writeuint16(0));\n  /* ... */\n  write_FONTS_biff8(A, wb, opts);\n  write_FMTS_biff8(A, wb.SSF, opts);\n  write_CELLXFS_biff8(A, opts);\n  /* ... */\n  if (b8) write_biff_rec(A, 0x0160 /* UsesELFs */, writebool(false));\n  var a = A.end();\n  var C = buf_array();\n  /* METADATA [MTRSettings] [ForceFullCalculation] */\n  if (b8) write_biff_rec(C, 0x008C /* Country */, write_Country());\n  /* *SUPBOOK *LBL *RTD [RecalcId] *HFPicture */\n\n  /* BIFF8: MsoDrawingGroup [*Continue] */\n  if (b8 && b8ocnts.length) write_biff_rec(C, 0x00EB /* MsoDrawingGroup */, write_MsoDrawingGroup());\n  /* BIFF8: [SST *Continue] ExtSST */\n  if (b8 && opts.Strings) write_biff_continue(C, 0x00FC /* SST */, write_SST(opts.Strings));\n\n  /* *WebPub [WOpt] [CrErr] [BookExt] *FeatHdr *DConn [THEME] [CompressPictures] [Compat12] [GUIDTypeLib] */\n  write_biff_rec(C, 0x000A /* EOF */);\n  var c = C.end();\n  var B = buf_array();\n  var blen = 0,\n    j = 0;\n  for (j = 0; j < wb.SheetNames.length; ++j) blen += (b8 ? 12 : 11) + (b8 ? 2 : 1) * wb.SheetNames[j].length;\n  var start = a.length + blen + c.length;\n  for (j = 0; j < wb.SheetNames.length; ++j) {\n    var _sheet /*:WBWSProp*/ = _sheets[j] || {} /*:any*/;\n    write_biff_rec(B, 0x0085 /* BoundSheet8 */, write_BoundSheet8({\n      pos: start,\n      hs: _sheet.Hidden || 0,\n      dt: 0,\n      name: wb.SheetNames[j]\n    }, opts));\n    start += bufs[j].length;\n  }\n  /* 1*BoundSheet8 */\n  var b = B.end();\n  if (blen != b.length) throw new Error(\"BS8 \" + blen + \" != \" + b.length);\n  var out = [];\n  if (a.length) out.push(a);\n  if (b.length) out.push(b);\n  if (c.length) out.push(c);\n  return bconcat(out);\n}\n\n/* [MS-XLS] 2.1.7.20 Workbook Stream */\nfunction write_biff8_buf(wb /*:Workbook*/, opts /*:WriteOpts*/) {\n  var o = opts || {};\n  var bufs = [];\n  if (wb && !wb.SSF) {\n    wb.SSF = dup(table_fmt);\n  }\n  if (wb && wb.SSF) {\n    make_ssf();\n    SSF_load_table(wb.SSF);\n    // $FlowIgnore\n    o.revssf = evert_num(wb.SSF);\n    o.revssf[wb.SSF[65535]] = 0;\n    o.ssf = wb.SSF;\n  }\n  b8oid = 1;\n  b8ocnts = [];\n  o.Strings = /*::((*/[] /*:: :any):SST)*/;\n  o.Strings.Count = 0;\n  o.Strings.Unique = 0;\n  fix_write_opts(o);\n  o.cellXfs = [];\n  get_cell_style(o.cellXfs, {}, {\n    revssf: {\n      \"General\": 0\n    }\n  });\n  if (!wb.Props) wb.Props = {};\n  for (var i = 0; i < wb.SheetNames.length; ++i) bufs[bufs.length] = write_ws_biff8(i, o, wb);\n  bufs.unshift(write_biff8_global(wb, bufs, o));\n  return bconcat(bufs);\n}\nfunction write_biff_buf(wb /*:Workbook*/, opts /*:WriteOpts*/) {\n  for (var i = 0; i <= wb.SheetNames.length; ++i) {\n    var ws = wb.Sheets[wb.SheetNames[i]];\n    if (!ws || !ws[\"!ref\"]) continue;\n    var range = decode_range(ws[\"!ref\"]);\n    if (range.e.c > 255) {\n      // note: 255 is IV\n      if (typeof console != \"undefined\" && console.error) console.error(\"Worksheet '\" + wb.SheetNames[i] + \"' extends beyond column IV (255).  Data may be lost.\");\n    }\n  }\n  var o = opts || {};\n  switch (o.biff || 2) {\n    case 8:\n    case 5:\n      return write_biff8_buf(wb, opts);\n    case 4:\n    case 3:\n    case 2:\n      return write_biff2_buf(wb, opts);\n  }\n  throw new Error(\"invalid type \" + o.bookType + \" for BIFF\");\n}\n/* note: browser DOM element cannot see mso- style attrs, must parse */\nfunction html_to_sheet(str /*:string*/, _opts) /*:Workbook*/{\n  var opts = _opts || {};\n  var dense = opts.dense != null ? opts.dense : DENSE;\n  var ws /*:Worksheet*/ = {} /*:any*/;\n  if (dense) ws[\"!data\"] = [];\n  str = str.replace(/<!--.*?-->/g, \"\");\n  var mtch /*:any*/ = str.match(/<table/i);\n  if (!mtch) throw new Error(\"Invalid HTML: could not find <table>\");\n  var mtch2 /*:any*/ = str.match(/<\\/table/i);\n  var i /*:number*/ = mtch.index,\n    j /*:number*/ = mtch2 && mtch2.index || str.length;\n  var rows = split_regex(str.slice(i, j), /(:?<tr[^>]*>)/i, \"<tr>\");\n  var R = -1,\n    C = 0,\n    RS = 0,\n    CS = 0;\n  var range /*:Range*/ = {\n    s: {\n      r: 10000000,\n      c: 10000000\n    },\n    e: {\n      r: 0,\n      c: 0\n    }\n  };\n  var merges /*:Array<Range>*/ = [];\n  for (i = 0; i < rows.length; ++i) {\n    var row = rows[i].trim();\n    var hd = row.slice(0, 3).toLowerCase();\n    if (hd == \"<tr\") {\n      ++R;\n      if (opts.sheetRows && opts.sheetRows <= R) {\n        --R;\n        break;\n      }\n      C = 0;\n      continue;\n    }\n    if (hd != \"<td\" && hd != \"<th\") continue;\n    var cells = row.split(/<\\/t[dh]>/i);\n    for (j = 0; j < cells.length; ++j) {\n      var cell = cells[j].trim();\n      if (!cell.match(/<t[dh]/i)) continue;\n      var m = cell,\n        cc = 0;\n      /* TODO: parse styles etc */\n      while (m.charAt(0) == \"<\" && (cc = m.indexOf(\">\")) > -1) m = m.slice(cc + 1);\n      for (var midx = 0; midx < merges.length; ++midx) {\n        var _merge /*:Range*/ = merges[midx];\n        if (_merge.s.c == C && _merge.s.r < R && R <= _merge.e.r) {\n          C = _merge.e.c + 1;\n          midx = -1;\n        }\n      }\n      var tag = parsexmltag(cell.slice(0, cell.indexOf(\">\")));\n      CS = tag.colspan ? +tag.colspan : 1;\n      if ((RS = +tag.rowspan) > 1 || CS > 1) merges.push({\n        s: {\n          r: R,\n          c: C\n        },\n        e: {\n          r: R + (RS || 1) - 1,\n          c: C + CS - 1\n        }\n      });\n      var _t /*:string*/ = tag.t || tag[\"data-t\"] || \"\";\n      /* TODO: generate stub cells */\n      if (!m.length) {\n        C += CS;\n        continue;\n      }\n      m = htmldecode(m);\n      if (range.s.r > R) range.s.r = R;\n      if (range.e.r < R) range.e.r = R;\n      if (range.s.c > C) range.s.c = C;\n      if (range.e.c < C) range.e.c = C;\n      if (!m.length) {\n        C += CS;\n        continue;\n      }\n      var o /*:Cell*/ = {\n        t: 's',\n        v: m\n      };\n      if (opts.raw || !m.trim().length || _t == 's') ;else if (m === 'TRUE') o = {\n        t: 'b',\n        v: true\n      };else if (m === 'FALSE') o = {\n        t: 'b',\n        v: false\n      };else if (!isNaN(fuzzynum(m))) o = {\n        t: 'n',\n        v: fuzzynum(m)\n      };else if (!isNaN(fuzzydate(m).getDate())) {\n        o = {\n          t: 'd',\n          v: parseDate$1(m)\n        } /*:any*/;\n        if (opts.UTC === false) o.v = utc_to_local(o.v);\n        if (!opts.cellDates) o = {\n          t: 'n',\n          v: datenum(o.v)\n        } /*:any*/;\n        o.z = opts.dateNF || table_fmt[14];\n      }\n      if (o.cellText !== false) o.w = m;\n      if (dense) {\n        if (!ws[\"!data\"][R]) ws[\"!data\"][R] = [];\n        ws[\"!data\"][R][C] = o;\n      } else ws[encode_cell({\n        r: R,\n        c: C\n      })] = o;\n      C += CS;\n    }\n  }\n  ws['!ref'] = encode_range(range);\n  if (merges.length) ws[\"!merges\"] = merges;\n  return ws;\n}\nfunction make_html_row(ws /*:Worksheet*/, r /*:Range*/, R /*:number*/, o /*:Sheet2HTMLOpts*/) /*:string*/{\n  var M /*:Array<Range>*/ = ws['!merges'] || [];\n  var oo /*:Array<string>*/ = [];\n  var sp = {} /*:any*/;\n  var dense = ws[\"!data\"] != null;\n  for (var C = r.s.c; C <= r.e.c; ++C) {\n    var RS = 0,\n      CS = 0;\n    for (var j = 0; j < M.length; ++j) {\n      if (M[j].s.r > R || M[j].s.c > C) continue;\n      if (M[j].e.r < R || M[j].e.c < C) continue;\n      if (M[j].s.r < R || M[j].s.c < C) {\n        RS = -1;\n        break;\n      }\n      RS = M[j].e.r - M[j].s.r + 1;\n      CS = M[j].e.c - M[j].s.c + 1;\n      break;\n    }\n    if (RS < 0) continue;\n    var coord = encode_col(C) + encode_row(R);\n    var cell = dense ? (ws[\"!data\"][R] || [])[C] : ws[coord];\n    /* TODO: html entities */\n    var w = cell && cell.v != null && (cell.h || escapehtml(cell.w || (format_cell(cell), cell.w) || \"\")) || \"\";\n    sp = {} /*:any*/;\n    if (RS > 1) sp.rowspan = RS;\n    if (CS > 1) sp.colspan = CS;\n    if (o.editable) w = '<span contenteditable=\"true\">' + w + '</span>';else if (cell) {\n      sp[\"data-t\"] = cell && cell.t || 'z';\n      // note: data-v is unaffected by the timezone interpretation\n      if (cell.v != null) sp[\"data-v\"] = cell.v instanceof Date ? cell.v.toISOString() : cell.v;\n      if (cell.z != null) sp[\"data-z\"] = cell.z;\n      if (cell.l && (cell.l.Target || \"#\").charAt(0) != \"#\") w = '<a href=\"' + escapehtml(cell.l.Target) + '\">' + w + '</a>';\n    }\n    sp.id = (o.id || \"sjs\") + \"-\" + coord;\n    oo.push(writextag('td', w, sp));\n  }\n  var preamble = \"<tr>\";\n  return preamble + oo.join(\"\") + \"</tr>\";\n}\nvar HTML_BEGIN = '<html><head><meta charset=\"utf-8\"/><title>SheetJS Table Export</title></head><body>';\nvar HTML_END = '</body></html>';\nfunction html_to_workbook(str /*:string*/, opts) /*:Workbook*/{\n  var mtch = str.match(/<table[\\s\\S]*?>[\\s\\S]*?<\\/table>/gi);\n  if (!mtch || mtch.length == 0) throw new Error(\"Invalid HTML: could not find <table>\");\n  if (mtch.length == 1) {\n    var w = sheet_to_workbook(html_to_sheet(mtch[0], opts), opts);\n    w.bookType = \"html\";\n    return w;\n  }\n  var wb = book_new();\n  mtch.forEach(function (s, idx) {\n    book_append_sheet(wb, html_to_sheet(s, opts), \"Sheet\" + (idx + 1));\n  });\n  wb.bookType = \"html\";\n  return wb;\n}\nfunction make_html_preamble(ws /*:Worksheet*/, R /*:Range*/, o /*:Sheet2HTMLOpts*/) /*:string*/{\n  var out /*:Array<string>*/ = [];\n  return out.join(\"\") + '<table' + (o && o.id ? ' id=\"' + o.id + '\"' : \"\") + '>';\n}\nfunction sheet_to_html(ws /*:Worksheet*/, opts /*:?Sheet2HTMLOpts*/ /*, wb:?Workbook*/) /*:string*/{\n  var o = opts || {};\n  var header = o.header != null ? o.header : HTML_BEGIN;\n  var footer = o.footer != null ? o.footer : HTML_END;\n  var out /*:Array<string>*/ = [header];\n  var r = decode_range(ws['!ref']);\n  out.push(make_html_preamble(ws, r, o));\n  for (var R = r.s.r; R <= r.e.r; ++R) out.push(make_html_row(ws, r, R, o));\n  out.push(\"</table>\" + footer);\n  return out.join(\"\");\n}\nfunction sheet_add_dom(ws /*:Worksheet*/, table /*:HTMLElement*/, _opts /*:?any*/) /*:Worksheet*/{\n  var rows /*:HTMLCollection<HTMLTableRowElement>*/ = table.rows;\n  if (!rows) {\n    /* not an HTML TABLE */\n    throw \"Unsupported origin when \" + table.tagName + \" is not a TABLE\";\n  }\n  var opts = _opts || {};\n  var dense = ws[\"!data\"] != null;\n  var or_R = 0,\n    or_C = 0;\n  if (opts.origin != null) {\n    if (typeof opts.origin == 'number') or_R = opts.origin;else {\n      var _origin /*:CellAddress*/ = typeof opts.origin == \"string\" ? decode_cell(opts.origin) : opts.origin;\n      or_R = _origin.r;\n      or_C = _origin.c;\n    }\n  }\n  var sheetRows = Math.min(opts.sheetRows || 10000000, rows.length);\n  var range /*:Range*/ = {\n    s: {\n      r: 0,\n      c: 0\n    },\n    e: {\n      r: or_R,\n      c: or_C\n    }\n  };\n  if (ws[\"!ref\"]) {\n    var _range /*:Range*/ = decode_range(ws[\"!ref\"]);\n    range.s.r = Math.min(range.s.r, _range.s.r);\n    range.s.c = Math.min(range.s.c, _range.s.c);\n    range.e.r = Math.max(range.e.r, _range.e.r);\n    range.e.c = Math.max(range.e.c, _range.e.c);\n    if (or_R == -1) range.e.r = or_R = _range.e.r + 1;\n  }\n  var merges /*:Array<Range>*/ = [],\n    midx = 0;\n  var rowinfo /*:Array<RowInfo>*/ = ws[\"!rows\"] || (ws[\"!rows\"] = []);\n  var _R = 0,\n    R = 0,\n    _C = 0,\n    C = 0,\n    RS = 0,\n    CS = 0;\n  if (!ws[\"!cols\"]) ws['!cols'] = [];\n  for (; _R < rows.length && R < sheetRows; ++_R) {\n    var row /*:HTMLTableRowElement*/ = rows[_R];\n    if (is_dom_element_hidden(row)) {\n      if (opts.display) continue;\n      rowinfo[R] = {\n        hidden: true\n      };\n    }\n    var elts /*:HTMLCollection<HTMLTableCellElement>*/ = row.cells;\n    for (_C = C = 0; _C < elts.length; ++_C) {\n      var elt /*:HTMLTableCellElement*/ = elts[_C];\n      if (opts.display && is_dom_element_hidden(elt)) continue;\n      var v /*:?string*/ = elt.hasAttribute('data-v') ? elt.getAttribute('data-v') : elt.hasAttribute('v') ? elt.getAttribute('v') : htmldecode(elt.innerHTML);\n      var z /*:?string*/ = elt.getAttribute('data-z') || elt.getAttribute('z');\n      for (midx = 0; midx < merges.length; ++midx) {\n        var m /*:Range*/ = merges[midx];\n        if (m.s.c == C + or_C && m.s.r < R + or_R && R + or_R <= m.e.r) {\n          C = m.e.c + 1 - or_C;\n          midx = -1;\n        }\n      }\n      /* TODO: figure out how to extract nonstandard mso- style */\n      CS = +elt.getAttribute(\"colspan\") || 1;\n      if ((RS = +elt.getAttribute(\"rowspan\") || 1) > 1 || CS > 1) merges.push({\n        s: {\n          r: R + or_R,\n          c: C + or_C\n        },\n        e: {\n          r: R + or_R + (RS || 1) - 1,\n          c: C + or_C + (CS || 1) - 1\n        }\n      });\n      var o /*:Cell*/ = {\n        t: 's',\n        v: v\n      };\n      var _t /*:string*/ = elt.getAttribute(\"data-t\") || elt.getAttribute(\"t\") || \"\";\n      if (v != null) {\n        if (v.length == 0) o.t = _t || 'z';else if (opts.raw || v.trim().length == 0 || _t == \"s\") ;else if (v === 'TRUE') o = {\n          t: 'b',\n          v: true\n        };else if (v === 'FALSE') o = {\n          t: 'b',\n          v: false\n        };else if (!isNaN(fuzzynum(v))) o = {\n          t: 'n',\n          v: fuzzynum(v)\n        };else if (!isNaN(fuzzydate(v).getDate())) {\n          o = {\n            t: 'd',\n            v: parseDate$1(v)\n          } /*:any*/;\n          if (opts.UTC) o.v = local_to_utc(o.v);\n          if (!opts.cellDates) o = {\n            t: 'n',\n            v: datenum(o.v)\n          } /*:any*/;\n          o.z = opts.dateNF || table_fmt[14];\n        }\n      }\n      if (o.z === undefined && z != null) o.z = z;\n      /* The first link is used.  Links are assumed to be fully specified.\n       * TODO: The right way to process relative links is to make a new <a> */\n      var l = \"\",\n        Aelts = elt.getElementsByTagName(\"A\");\n      if (Aelts && Aelts.length) for (var Aelti = 0; Aelti < Aelts.length; ++Aelti) if (Aelts[Aelti].hasAttribute(\"href\")) {\n        l = Aelts[Aelti].getAttribute(\"href\");\n        if (l.charAt(0) != \"#\") break;\n      }\n      if (l && l.charAt(0) != \"#\" && l.slice(0, 11).toLowerCase() != 'javascript:') o.l = {\n        Target: l\n      };\n      if (dense) {\n        if (!ws[\"!data\"][R + or_R]) ws[\"!data\"][R + or_R] = [];\n        ws[\"!data\"][R + or_R][C + or_C] = o;\n      } else ws[encode_cell({\n        c: C + or_C,\n        r: R + or_R\n      })] = o;\n      if (range.e.c < C + or_C) range.e.c = C + or_C;\n      C += CS;\n    }\n    ++R;\n  }\n  if (merges.length) ws['!merges'] = (ws[\"!merges\"] || []).concat(merges);\n  range.e.r = Math.max(range.e.r, R - 1 + or_R);\n  ws['!ref'] = encode_range(range);\n  if (R >= sheetRows) ws['!fullref'] = encode_range((range.e.r = rows.length - _R + R - 1 + or_R, range)); // We can count the real number of rows to parse but we don't to improve the performance\n  return ws;\n}\nfunction parse_dom_table(table /*:HTMLElement*/, _opts /*:?any*/) /*:Worksheet*/{\n  var opts = _opts || {};\n  var ws /*:Worksheet*/ = {} /*:any*/;\n  if (opts.dense) ws[\"!data\"] = [];\n  return sheet_add_dom(ws, table, _opts);\n}\nfunction table_to_book(table /*:HTMLElement*/, opts /*:?any*/) /*:Workbook*/{\n  var o = sheet_to_workbook(parse_dom_table(table, opts), opts);\n  //o.bookType = \"dom\"; // TODO: define a type for this\n  return o;\n}\nfunction is_dom_element_hidden(element /*:HTMLElement*/) /*:boolean*/{\n  var display /*:string*/ = '';\n  var get_computed_style /*:?function*/ = get_get_computed_style_function(element);\n  if (get_computed_style) display = get_computed_style(element).getPropertyValue('display');\n  if (!display) display = element.style && element.style.display;\n  return display === 'none';\n}\n\n/* global getComputedStyle */\nfunction get_get_computed_style_function(element /*:HTMLElement*/) /*:?function*/{\n  // The proper getComputedStyle implementation is the one defined in the element window\n  if (element.ownerDocument.defaultView && typeof element.ownerDocument.defaultView.getComputedStyle === 'function') return element.ownerDocument.defaultView.getComputedStyle;\n  // If it is not available, try to get one from the global namespace\n  if (typeof getComputedStyle === 'function') return getComputedStyle;\n  return null;\n}\n/* OpenDocument */\nfunction parse_text_p(text /*:string*/ /*::, tag*/) /*:Array<any>*/{\n  /* 6.1.2 White Space Characters */\n  var fixed = text.replace(/[\\t\\r\\n]/g, \" \").trim().replace(/ +/g, \" \").replace(/<text:s\\/>/g, \" \").replace(/<text:s text:c=\"(\\d+)\"\\/>/g, function ($$, $1) {\n    return Array(parseInt($1, 10) + 1).join(\" \");\n  }).replace(/<text:tab[^>]*\\/>/g, \"\\t\").replace(/<text:line-break\\/>/g, \"\\n\");\n  var v = unescapexml(fixed.replace(/<[^>]*>/g, \"\"));\n  return [v];\n}\n\n/* Note: ODS can stick styles in content.xml or styles.xml, FODS blurs lines */\nfunction parse_ods_styles(d /*:string*/, _opts, _nfm) {\n  var number_format_map = _nfm || {};\n  var str = xlml_normalize(d);\n  xlmlregex.lastIndex = 0;\n  str = str.replace(/<!--([\\s\\S]*?)-->/mg, \"\").replace(/<!DOCTYPE[^\\[]*\\[[^\\]]*\\]>/gm, \"\");\n  var Rn,\n    NFtag,\n    NF = \"\",\n    tNF = \"\",\n    y,\n    etpos = 0,\n    tidx = -1,\n    payload = \"\";\n  while (Rn = xlmlregex.exec(str)) {\n    switch (Rn[3] = Rn[3].replace(/_.*$/, \"\")) {\n      /* Number Format Definitions */\n      case 'number-style': // <number:number-style> 16.29.2\n      case 'currency-style': // <number:currency-style> 16.29.8\n      case 'percentage-style': // <number:percentage-style> 16.29.10\n      case 'date-style': // <number:date-style> 16.29.11\n      case 'time-style': // <number:time-style> 16.29.19\n      case 'text-style':\n        // <number:text-style> 16.29.26\n        if (Rn[1] === '/') {\n          if (NFtag['truncate-on-overflow'] == \"false\") {\n            if (NF.match(/h/)) NF = NF.replace(/h+/, \"[$&]\");else if (NF.match(/m/)) NF = NF.replace(/m+/, \"[$&]\");else if (NF.match(/s/)) NF = NF.replace(/s+/, \"[$&]\");\n          }\n          number_format_map[NFtag.name] = NF;\n          NF = \"\";\n        } else if (Rn[0].charAt(Rn[0].length - 2) !== '/') {\n          NF = \"\";\n          NFtag = parsexmltag(Rn[0], false);\n        }\n        break;\n\n      // LibreOffice bug https://bugs.documentfoundation.org/show_bug.cgi?id=149484\n      case 'boolean-style':\n        // <number:boolean-style> 16.29.24\n        if (Rn[1] === '/') {\n          number_format_map[NFtag.name] = \"General\";\n          NF = \"\";\n        } else if (Rn[0].charAt(Rn[0].length - 2) !== '/') {\n          NF = \"\";\n          NFtag = parsexmltag(Rn[0], false);\n        }\n        break;\n\n      /* Number Format Elements */\n      case 'boolean':\n        // <number:boolean> 16.29.25\n        NF += \"General\"; // ODF spec is unfortunately underspecified here\n        break;\n      case 'text':\n        // <number:text> 16.29.27\n        if (Rn[1] === '/') {\n          payload = str.slice(tidx, xlmlregex.lastIndex - Rn[0].length);\n          // NOTE: Excel has a different interpretation of \"%%\" and friends\n          if (payload == \"%\" && NFtag[0] == '<number:percentage-style') NF += \"%\";else NF += '\"' + payload.replace(/\"/g, '\"\"') + '\"';\n        } else if (Rn[0].charAt(Rn[0].length - 2) !== '/') {\n          tidx = xlmlregex.lastIndex;\n        }\n        break;\n      case 'day':\n        {\n          // <number:day> 16.29.12\n          y = parsexmltag(Rn[0], false);\n          switch (y[\"style\"]) {\n            case \"short\":\n              NF += \"d\";\n              break;\n            case \"long\":\n              NF += \"dd\";\n              break;\n            default:\n              NF += \"dd\";\n              break;\n            // TODO: error condition\n          }\n        }\n\n        break;\n      case 'day-of-week':\n        {\n          // <number:day-of-week> 16.29.16\n          y = parsexmltag(Rn[0], false);\n          switch (y[\"style\"]) {\n            case \"short\":\n              NF += \"ddd\";\n              break;\n            case \"long\":\n              NF += \"dddd\";\n              break;\n            default:\n              NF += \"ddd\";\n              break;\n          }\n        }\n        break;\n      case 'era':\n        {\n          // <number:era> 16.29.15 TODO: proper mapping\n          y = parsexmltag(Rn[0], false);\n          switch (y[\"style\"]) {\n            case \"short\":\n              NF += \"ee\";\n              break;\n            case \"long\":\n              NF += \"eeee\";\n              break;\n            default:\n              NF += \"eeee\";\n              break;\n            // TODO: error condition\n          }\n        }\n\n        break;\n      case 'hours':\n        {\n          // <number:hours> 16.29.20\n          y = parsexmltag(Rn[0], false);\n          switch (y[\"style\"]) {\n            case \"short\":\n              NF += \"h\";\n              break;\n            case \"long\":\n              NF += \"hh\";\n              break;\n            default:\n              NF += \"hh\";\n              break;\n            // TODO: error condition\n          }\n        }\n\n        break;\n      case 'minutes':\n        {\n          // <number:minutes> 16.29.21\n          y = parsexmltag(Rn[0], false);\n          switch (y[\"style\"]) {\n            case \"short\":\n              NF += \"m\";\n              break;\n            case \"long\":\n              NF += \"mm\";\n              break;\n            default:\n              NF += \"mm\";\n              break;\n            // TODO: error condition\n          }\n        }\n\n        break;\n      case 'month':\n        {\n          // <number:month> 16.29.13\n          y = parsexmltag(Rn[0], false);\n          if (y[\"textual\"]) NF += \"mm\";\n          switch (y[\"style\"]) {\n            case \"short\":\n              NF += \"m\";\n              break;\n            case \"long\":\n              NF += \"mm\";\n              break;\n            default:\n              NF += \"m\";\n              break;\n          }\n        }\n        break;\n      case 'seconds':\n        {\n          // <number:seconds> 16.29.22\n          y = parsexmltag(Rn[0], false);\n          switch (y[\"style\"]) {\n            case \"short\":\n              NF += \"s\";\n              break;\n            case \"long\":\n              NF += \"ss\";\n              break;\n            default:\n              NF += \"ss\";\n              break;\n            // TODO: error condition\n          }\n\n          if (y[\"decimal-places\"]) NF += \".\" + fill(\"0\", +y[\"decimal-places\"]);\n        }\n        break;\n      case 'year':\n        {\n          // <number:year> 16.29.14\n          y = parsexmltag(Rn[0], false);\n          switch (y[\"style\"]) {\n            case \"short\":\n              NF += \"yy\";\n              break;\n            case \"long\":\n              NF += \"yyyy\";\n              break;\n            default:\n              NF += \"yy\";\n              break;\n            // TODO: error condition\n          }\n        }\n\n        break;\n      case 'am-pm':\n        // <number:am-pm> 16.29.23\n        NF += \"AM/PM\"; // LO autocorrects A/P -> AM/PM\n        break;\n      case 'week-of-year': // <number:week-of-year> 16.29.17\n      case 'quarter':\n        // <number:quarter> 16.29.18\n        console.error(\"Excel does not support ODS format token \" + Rn[3]);\n        break;\n      case 'fill-character':\n        // <number:fill-character> 16.29.5\n        if (Rn[1] === '/') {\n          payload = str.slice(tidx, xlmlregex.lastIndex - Rn[0].length);\n          // NOTE: Excel has a different interpretation of \"%%\" and friends\n          NF += '\"' + payload.replace(/\"/g, '\"\"') + '\"*';\n        } else if (Rn[0].charAt(Rn[0].length - 2) !== '/') {\n          tidx = xlmlregex.lastIndex;\n        }\n        break;\n      case 'scientific-number':\n        // <number:scientific-number> 16.29.6\n        // TODO: find a mapping for all parameters\n        y = parsexmltag(Rn[0], false);\n        NF += \"0.\" + fill(\"0\", +y[\"min-decimal-places\"] || +y[\"decimal-places\"] || 2) + fill(\"?\", +y[\"decimal-places\"] - +y[\"min-decimal-places\"] || 0) + \"E\" + (parsexmlbool(y[\"forced-exponent-sign\"]) ? \"+\" : \"\") + fill(\"0\", +y[\"min-exponent-digits\"] || 2);\n        break;\n      case 'fraction':\n        // <number:fraction> 16.29.7\n        // TODO: find a mapping for all parameters\n        y = parsexmltag(Rn[0], false);\n        if (!+y[\"min-integer-digits\"]) NF += \"#\";else NF += fill(\"0\", +y[\"min-integer-digits\"]);\n        NF += \" \";\n        NF += fill(\"?\", +y[\"min-numerator-digits\"] || 1);\n        NF += \"/\";\n        if (+y[\"denominator-value\"]) NF += y[\"denominator-value\"];else NF += fill(\"?\", +y[\"min-denominator-digits\"] || 1);\n        break;\n      case 'currency-symbol':\n        // <number:currency-symbol> 16.29.9\n        // TODO: localization with [$-...]\n        if (Rn[1] === '/') {\n          NF += '\"' + str.slice(tidx, xlmlregex.lastIndex - Rn[0].length).replace(/\"/g, '\"\"') + '\"';\n        } else if (Rn[0].charAt(Rn[0].length - 2) !== '/') {\n          tidx = xlmlregex.lastIndex;\n        } else NF += \"$\";\n        break;\n      case 'text-properties':\n        // <style:text-properties> 16.29.29\n        y = parsexmltag(Rn[0], false);\n        switch ((y[\"color\"] || \"\").toLowerCase().replace(\"#\", \"\")) {\n          case \"ff0000\":\n          case \"red\":\n            NF = \"[Red]\" + NF;\n            break;\n        }\n        break;\n      case 'text-content':\n        // <number:text-content> 16.29.28\n        NF += \"@\";\n        break;\n      case 'map':\n        // <style:map> 16.3\n        // TODO: handle more complex maps\n        y = parsexmltag(Rn[0], false);\n        if (unescapexml(y[\"condition\"]) == \"value()>=0\") NF = number_format_map[y[\"apply-style-name\"]] + \";\" + NF;else console.error(\"ODS number format may be incorrect: \" + y[\"condition\"]);\n        break;\n      case 'number':\n        // <number:number> 16.29.3\n        // TODO: handle all the attributes\n        if (Rn[1] === '/') break;\n        y = parsexmltag(Rn[0], false);\n        tNF = \"\";\n        tNF += fill(\"0\", +y[\"min-integer-digits\"] || 1);\n        if (parsexmlbool(y[\"grouping\"])) tNF = commaify(fill(\"#\", Math.max(0, 4 - tNF.length)) + tNF);\n        if (+y[\"min-decimal-places\"] || +y[\"decimal-places\"]) tNF += \".\";\n        if (+y[\"min-decimal-places\"]) tNF += fill(\"0\", +y[\"min-decimal-places\"] || 1);\n        if (+y[\"decimal-places\"] - (+y[\"min-decimal-places\"] || 0)) tNF += fill(\"0\", +y[\"decimal-places\"] - (+y[\"min-decimal-places\"] || 0)); // TODO: should this be \"#\" ?\n        NF += tNF;\n        break;\n      case 'embedded-text':\n        // <number:embedded-text> 16.29.4\n        // TODO: verify interplay with grouping et al\n        if (Rn[1] === '/') {\n          if (etpos == 0) NF += '\"' + str.slice(tidx, xlmlregex.lastIndex - Rn[0].length).replace(/\"/g, '\"\"') + '\"';else NF = NF.slice(0, etpos) + '\"' + str.slice(tidx, xlmlregex.lastIndex - Rn[0].length).replace(/\"/g, '\"\"') + '\"' + NF.slice(etpos);\n        } else if (Rn[0].charAt(Rn[0].length - 2) !== '/') {\n          tidx = xlmlregex.lastIndex;\n          etpos = -+parsexmltag(Rn[0], false)[\"position\"] || 0;\n        }\n        break;\n    }\n  }\n  return number_format_map;\n}\nfunction parse_content_xml(d /*:string*/, _opts, _nfm) /*:Workbook*/{\n  var opts = _opts || {};\n  var str = xlml_normalize(d);\n  var state /*:Array<any>*/ = [],\n    tmp;\n  var tag /*:: = {}*/;\n  var nfidx,\n    NF = \"\",\n    pidx = 0;\n  var sheetag /*:: = {name:\"\", '名称':\"\"}*/;\n  var rowtag /*:: = {'行号':\"\"}*/;\n  var Sheets = {},\n    SheetNames /*:Array<string>*/ = [];\n  var ws = {} /*:any*/;\n  if (opts.dense) ws[\"!data\"] = [];\n  var Rn, q /*:: :any = ({t:\"\", v:null, z:null, w:\"\",c:[],}:any)*/;\n  var ctag = {\n    value: \"\"\n  } /*:any*/;\n  var textp = \"\",\n    textpidx = 0,\n    oldtextp = \"\",\n    oldtextpidx = 0;\n  var textR = [],\n    oldtextR = [];\n  var R = -1,\n    C = -1,\n    range = {\n      s: {\n        r: 1000000,\n        c: 10000000\n      },\n      e: {\n        r: 0,\n        c: 0\n      }\n    };\n  var row_ol = 0;\n  var number_format_map = _nfm || {},\n    styles = {};\n  var merges /*:Array<Range>*/ = [],\n    mrange = {},\n    mR = 0,\n    mC = 0;\n  var rowinfo /*:Array<RowInfo>*/ = [],\n    rowpeat = 1,\n    colpeat = 1;\n  var arrayf /*:Array<[Range, string]>*/ = [];\n  var WB = {\n    Names: [],\n    WBProps: {}\n  };\n  var atag = {} /*:any*/;\n  var _Ref /*:[string, string]*/ = [\"\", \"\"];\n  var comments /*:Array<Comment>*/ = [],\n    comment /*:Comment*/ = {} /*:any*/;\n  var creator = \"\",\n    creatoridx = 0;\n  var isstub = false,\n    intable = false;\n  var i = 0;\n  xlmlregex.lastIndex = 0;\n  str = str.replace(/<!--([\\s\\S]*?)-->/mg, \"\").replace(/<!DOCTYPE[^\\[]*\\[[^\\]]*\\]>/gm, \"\");\n  while (Rn = xlmlregex.exec(str)) switch (Rn[3] = Rn[3].replace(/_.*$/, \"\")) {\n    case 'table':\n    case '工作表':\n      // 9.1.2 <table:table>\n      if (Rn[1] === '/') {\n        if (range.e.c >= range.s.c && range.e.r >= range.s.r) ws['!ref'] = encode_range(range);else ws['!ref'] = \"A1:A1\";\n        if (opts.sheetRows > 0 && opts.sheetRows <= range.e.r) {\n          ws['!fullref'] = ws['!ref'];\n          range.e.r = opts.sheetRows - 1;\n          ws['!ref'] = encode_range(range);\n        }\n        if (merges.length) ws['!merges'] = merges;\n        if (rowinfo.length) ws[\"!rows\"] = rowinfo;\n        sheetag.name = sheetag['名称'] || sheetag.name;\n        if (typeof JSON !== 'undefined') JSON.stringify(sheetag);\n        SheetNames.push(sheetag.name);\n        Sheets[sheetag.name] = ws;\n        intable = false;\n      } else if (Rn[0].charAt(Rn[0].length - 2) !== '/') {\n        sheetag = parsexmltag(Rn[0], false);\n        R = C = -1;\n        range.s.r = range.s.c = 10000000;\n        range.e.r = range.e.c = 0;\n        ws = {} /*:any*/;\n        if (opts.dense) ws[\"!data\"] = [];\n        merges = [];\n        rowinfo = [];\n        intable = true;\n      }\n      break;\n    case 'table-row-group':\n      // 9.1.9 <table:table-row-group>\n      if (Rn[1] === \"/\") --row_ol;else ++row_ol;\n      break;\n    case 'table-row':\n    case '行':\n      // 9.1.3 <table:table-row>\n      if (Rn[1] === '/') {\n        R += rowpeat;\n        rowpeat = 1;\n        break;\n      }\n      rowtag = parsexmltag(Rn[0], false);\n      if (rowtag['行号']) R = rowtag['行号'] - 1;else if (R == -1) R = 0;\n      rowpeat = +rowtag['number-rows-repeated'] || 1;\n      /* TODO: remove magic */\n      if (rowpeat < 10) for (i = 0; i < rowpeat; ++i) if (row_ol > 0) rowinfo[R + i] = {\n        level: row_ol\n      };\n      C = -1;\n      break;\n    case 'covered-table-cell':\n      // 9.1.5 <table:covered-table-cell>\n      if (Rn[1] !== '/') ++C;\n      if (opts.sheetStubs) {\n        if (opts.dense) {\n          if (!ws[\"!data\"][R]) ws[\"!data\"][R] = [];\n          ws[\"!data\"][R][C] = {\n            t: 'z'\n          };\n        } else ws[encode_cell({\n          r: R,\n          c: C\n        })] = {\n          t: 'z'\n        };\n      }\n      textp = \"\";\n      textR = [];\n      break;\n    /* stub */\n    case 'table-cell':\n    case '数据':\n      if (Rn[0].charAt(Rn[0].length - 2) === '/') {\n        ++C;\n        ctag = parsexmltag(Rn[0], false);\n        colpeat = parseInt(ctag['number-columns-repeated'] || \"1\", 10);\n        q = {\n          t: 'z',\n          v: null /*:: , z:null, w:\"\",c:[]*/\n        } /*:any*/;\n        if (ctag.formula && opts.cellFormula != false) q.f = ods_to_csf_formula(unescapexml(ctag.formula));\n        if (ctag[\"style-name\"] && styles[ctag[\"style-name\"]]) q.z = styles[ctag[\"style-name\"]];\n        if ((ctag['数据类型'] || ctag['value-type']) == \"string\") {\n          q.t = \"s\";\n          q.v = unescapexml(ctag['string-value'] || \"\");\n          if (opts.dense) {\n            if (!ws[\"!data\"][R]) ws[\"!data\"][R] = [];\n            ws[\"!data\"][R][C] = q;\n          } else {\n            ws[encode_col(C) + encode_row(R)] = q;\n          }\n        }\n        C += colpeat - 1;\n      } else if (Rn[1] !== '/') {\n        ++C;\n        textp = oldtextp = \"\";\n        textpidx = oldtextpidx = 0;\n        textR = [];\n        oldtextR = [];\n        colpeat = 1;\n        var rptR = rowpeat ? R + rowpeat - 1 : R;\n        if (C > range.e.c) range.e.c = C;\n        if (C < range.s.c) range.s.c = C;\n        if (R < range.s.r) range.s.r = R;\n        if (rptR > range.e.r) range.e.r = rptR;\n        ctag = parsexmltag(Rn[0], false);\n        comments = [];\n        comment = {} /*:any*/;\n        q = {\n          t: ctag['数据类型'] || ctag['value-type'],\n          v: null /*:: , z:null, w:\"\",c:[]*/\n        } /*:any*/;\n        if (ctag[\"style-name\"] && styles[ctag[\"style-name\"]]) q.z = styles[ctag[\"style-name\"]];\n        if (opts.cellFormula) {\n          if (ctag.formula) ctag.formula = unescapexml(ctag.formula);\n          if (ctag['number-matrix-columns-spanned'] && ctag['number-matrix-rows-spanned']) {\n            mR = parseInt(ctag['number-matrix-rows-spanned'], 10) || 0;\n            mC = parseInt(ctag['number-matrix-columns-spanned'], 10) || 0;\n            mrange = {\n              s: {\n                r: R,\n                c: C\n              },\n              e: {\n                r: R + mR - 1,\n                c: C + mC - 1\n              }\n            };\n            q.F = encode_range(mrange);\n            arrayf.push([mrange, q.F]);\n          }\n          if (ctag.formula) q.f = ods_to_csf_formula(ctag.formula);else for (i = 0; i < arrayf.length; ++i) if (R >= arrayf[i][0].s.r && R <= arrayf[i][0].e.r) if (C >= arrayf[i][0].s.c && C <= arrayf[i][0].e.c) q.F = arrayf[i][1];\n        }\n        if (ctag['number-columns-spanned'] || ctag['number-rows-spanned']) {\n          mR = parseInt(ctag['number-rows-spanned'], 10) || 0;\n          mC = parseInt(ctag['number-columns-spanned'], 10) || 0;\n          mrange = {\n            s: {\n              r: R,\n              c: C\n            },\n            e: {\n              r: R + mR - 1,\n              c: C + mC - 1\n            }\n          };\n          merges.push(mrange);\n        }\n\n        /* 19.675.2 table:number-columns-repeated */\n        if (ctag['number-columns-repeated']) colpeat = parseInt(ctag['number-columns-repeated'], 10);\n\n        /* 19.385 office:value-type TODO: verify ODS and UOS */\n        switch (q.t) {\n          case 'boolean':\n            q.t = 'b';\n            q.v = parsexmlbool(ctag['boolean-value']) || +ctag['boolean-value'] >= 1;\n            break;\n          case 'float':\n            q.t = 'n';\n            q.v = parseFloat(ctag.value);\n            if (opts.cellDates && q.z && fmt_is_date(q.z)) {\n              q.v = numdate(q.v + (WB.WBProps.date1904 ? 1462 : 0));\n              q.t = typeof q.v == \"number\" ? 'n' : 'd';\n            }\n            break;\n          case 'percentage':\n            q.t = 'n';\n            q.v = parseFloat(ctag.value);\n            break;\n          case 'currency':\n            q.t = 'n';\n            q.v = parseFloat(ctag.value);\n            break;\n          case 'date':\n            q.t = 'd';\n            q.v = parseDate$1(ctag['date-value'], WB.WBProps.date1904);\n            if (!opts.cellDates) {\n              q.t = 'n';\n              q.v = datenum(q.v, WB.WBProps.date1904);\n            }\n            if (!q.z) q.z = 'm/d/yy';\n            break;\n          /* NOTE: for `time`, Excel ODS export incorrectly uses durations relative to 1900 epoch even if 1904 is specified */\n          case 'time':\n            q.t = 'n';\n            q.v = parse_isodur(ctag['time-value']) / 86400;\n            if (opts.cellDates) {\n              q.v = numdate(q.v);\n              q.t = typeof q.v == \"number\" ? 'n' : 'd';\n            }\n            if (!q.z) q.z = 'HH:MM:SS';\n            break;\n          case 'number':\n            q.t = 'n';\n            q.v = parseFloat(ctag['数据数值']);\n            break;\n          default:\n            if (q.t === 'string' || q.t === 'text' || !q.t) {\n              q.t = 's';\n              if (ctag['string-value'] != null) {\n                textp = unescapexml(ctag['string-value']);\n                textR = [];\n              }\n            } else throw new Error('Unsupported value type ' + q.t);\n        }\n      } else {\n        isstub = false;\n        if (q.t === 's') {\n          q.v = textp || '';\n          if (textR.length) q.R = textR;\n          isstub = textpidx == 0;\n        }\n        if (atag.Target) q.l = atag;\n        if (comments.length > 0) {\n          q.c = comments;\n          comments = [];\n        }\n        if (textp && opts.cellText !== false) q.w = textp;\n        if (isstub) {\n          q.t = \"z\";\n          delete q.v;\n        }\n        if (!isstub || opts.sheetStubs) {\n          if (!(opts.sheetRows && opts.sheetRows <= R)) {\n            for (var rpt = 0; rpt < rowpeat; ++rpt) {\n              colpeat = parseInt(ctag['number-columns-repeated'] || \"1\", 10);\n              if (opts.dense) {\n                if (!ws[\"!data\"][R + rpt]) ws[\"!data\"][R + rpt] = [];\n                ws[\"!data\"][R + rpt][C] = rpt == 0 ? q : dup(q);\n                while (--colpeat > 0) ws[\"!data\"][R + rpt][C + colpeat] = dup(q);\n              } else {\n                ws[encode_cell({\n                  r: R + rpt,\n                  c: C\n                })] = q;\n                while (--colpeat > 0) ws[encode_cell({\n                  r: R + rpt,\n                  c: C + colpeat\n                })] = dup(q);\n              }\n              if (range.e.c <= C) range.e.c = C;\n            }\n          }\n        }\n        colpeat = parseInt(ctag['number-columns-repeated'] || \"1\", 10);\n        C += colpeat - 1;\n        colpeat = 0;\n        q = {/*:: t:\"\", v:null, z:null, w:\"\",c:[]*/};\n        textp = \"\";\n        textR = [];\n      }\n      atag = {} /*:any*/;\n      break;\n    // 9.1.4 <table:table-cell>\n\n    /* pure state */\n    case 'document': // TODO: <office:document> is the root for FODS\n    case 'document-content':\n    case '电子表格文档': // 3.1.3.2 <office:document-content>\n    case 'spreadsheet':\n    case '主体': // 3.7 <office:spreadsheet>\n    case 'scripts': // 3.12 <office:scripts>\n    case 'styles': // TODO <office:styles>\n    case 'font-face-decls': // 3.14 <office:font-face-decls>\n    case 'master-styles':\n      // 3.15.4 <office:master-styles> -- relevant for FODS\n      if (Rn[1] === '/') {\n        if ((tmp = state.pop())[0] !== Rn[3]) throw \"Bad state: \" + tmp;\n      } else if (Rn[0].charAt(Rn[0].length - 2) !== '/') state.push([Rn[3], true]);\n      break;\n    case 'annotation':\n      // 14.1 <office:annotation>\n      if (Rn[1] === '/') {\n        if ((tmp = state.pop())[0] !== Rn[3]) throw \"Bad state: \" + tmp;\n        comment.t = textp;\n        if (textR.length) /*::(*/comment /*:: :any)*/.R = textR;\n        comment.a = creator;\n        comments.push(comment);\n        textp = oldtextp;\n        textpidx = oldtextpidx;\n        textR = oldtextR;\n      } else if (Rn[0].charAt(Rn[0].length - 2) !== '/') {\n        state.push([Rn[3], false]);\n        var annotag = parsexmltag(Rn[0], true);\n        /* office:display TODO: check if there is a global override */\n        if (!(annotag[\"display\"] && parsexmlbool(annotag[\"display\"]))) comments.hidden = true;\n        oldtextp = textp;\n        oldtextpidx = textpidx;\n        oldtextR = textR;\n        textp = \"\";\n        textpidx = 0;\n        textR = [];\n      }\n      creator = \"\";\n      creatoridx = 0;\n      break;\n    case 'creator':\n      // 4.3.2.7 <dc:creator>\n      if (Rn[1] === '/') {\n        creator = str.slice(creatoridx, Rn.index);\n      } else creatoridx = Rn.index + Rn[0].length;\n      break;\n\n    /* ignore state */\n    case 'meta':\n    case '元数据': // TODO: <office:meta> <uof:元数据> FODS/UOF\n    case 'settings': // TODO: <office:settings>\n    case 'config-item-set': // TODO: <office:config-item-set>\n    case 'config-item-map-indexed': // TODO: <office:config-item-map-indexed>\n    case 'config-item-map-entry': // TODO: <office:config-item-map-entry>\n    case 'config-item-map-named': // TODO: <office:config-item-map-entry>\n    case 'shapes': // 9.2.8 <table:shapes>\n    case 'frame': // 10.4.2 <draw:frame>\n    case 'text-box': // 10.4.3 <draw:text-box>\n    case 'image': // 10.4.4 <draw:image>\n    case 'data-pilot-tables': // 9.6.2 <table:data-pilot-tables>\n    case 'list-style': // 16.30 <text:list-style>\n    case 'form': // 13.13 <form:form>\n    case 'dde-links': // 9.8 <table:dde-links>\n    case 'event-listeners': // TODO\n    case 'chart':\n      // TODO\n      if (Rn[1] === '/') {\n        if ((tmp = state.pop())[0] !== Rn[3]) throw \"Bad state: \" + tmp;\n      } else if (Rn[0].charAt(Rn[0].length - 2) !== '/') state.push([Rn[3], false]);\n      textp = \"\";\n      textpidx = 0;\n      textR = [];\n      break;\n    case 'scientific-number': // <number:scientific-number>\n    case 'currency-symbol': // <number:currency-symbol>\n    case 'fill-character':\n      // 16.29.5 <number:fill-character>\n      break;\n    case 'text-style': // 16.27.25 <number:text-style>\n    case 'boolean-style': // 16.27.23 <number:boolean-style>\n    case 'number-style': // 16.27.2 <number:number-style>\n    case 'currency-style': // 16.29.8 <number:currency-style>\n    case 'percentage-style': // 16.27.9 <number:percentage-style>\n    case 'date-style': // 16.27.10 <number:date-style>\n    case 'time-style':\n      // 16.27.18 <number:time-style>\n      if (Rn[1] === '/') {\n        var xlmlidx = xlmlregex.lastIndex;\n        parse_ods_styles(str.slice(nfidx, xlmlregex.lastIndex), _opts, number_format_map);\n        xlmlregex.lastIndex = xlmlidx;\n      } else if (Rn[0].charAt(Rn[0].length - 2) !== '/') {\n        nfidx = xlmlregex.lastIndex - Rn[0].length;\n      }\n      break;\n    case 'script':\n      break;\n    // 3.13 <office:script>\n    case 'libraries':\n      break;\n    // TODO: <ooo:libraries>\n    case 'automatic-styles':\n      break;\n    // 3.15.3 <office:automatic-styles>\n\n    case 'default-style': // TODO: <style:default-style>\n    case 'page-layout':\n      break;\n    // TODO: <style:page-layout>\n    case 'style':\n      {\n        // 16.2 <style:style>\n        var styletag = parsexmltag(Rn[0], false);\n        if (styletag[\"family\"] == \"table-cell\" && number_format_map[styletag[\"data-style-name\"]]) styles[styletag[\"name\"]] = number_format_map[styletag[\"data-style-name\"]];\n      }\n      break;\n    case 'map':\n      break;\n    // 16.3 <style:map>\n    case 'font-face':\n      break;\n    // 16.21 <style:font-face>\n\n    case 'paragraph-properties':\n      break;\n    // 17.6 <style:paragraph-properties>\n    case 'table-properties':\n      break;\n    // 17.15 <style:table-properties>\n    case 'table-column-properties':\n      break;\n    // 17.16 <style:table-column-properties>\n    case 'table-row-properties':\n      break;\n    // 17.17 <style:table-row-properties>\n    case 'table-cell-properties':\n      break;\n    // 17.18 <style:table-cell-properties>\n\n    case 'number':\n      // 16.27.3 <number:number>\n      break;\n    case 'fraction':\n      break;\n    // TODO 16.27.6 <number:fraction>\n\n    case 'day': // 16.27.11 <number:day>\n    case 'month': // 16.27.12 <number:month>\n    case 'year': // 16.27.13 <number:year>\n    case 'era': // 16.27.14 <number:era>\n    case 'day-of-week': // 16.27.15 <number:day-of-week>\n    case 'week-of-year': // 16.27.16 <number:week-of-year>\n    case 'quarter': // 16.27.17 <number:quarter>\n    case 'hours': // 16.27.19 <number:hours>\n    case 'minutes': // 16.27.20 <number:minutes>\n    case 'seconds': // 16.27.21 <number:seconds>\n    case 'am-pm':\n      // 16.27.22 <number:am-pm>\n      break;\n    case 'boolean':\n      break;\n    // 16.27.24 <number:boolean>\n    case 'text':\n      // 16.27.26 <number:text>\n      if (Rn[0].slice(-2) === \"/>\") break;else if (Rn[1] === \"/\") switch (state[state.length - 1][0]) {\n        case 'number-style':\n        case 'date-style':\n        case 'time-style':\n          NF += str.slice(pidx, Rn.index);\n          break;\n      } else pidx = Rn.index + Rn[0].length;\n      break;\n    case 'named-range':\n      // 9.4.12 <table:named-range>\n      tag = parsexmltag(Rn[0], false);\n      _Ref = ods_to_csf_3D(tag['cell-range-address']);\n      var nrange = {\n        Name: tag.name,\n        Ref: _Ref[0] + '!' + _Ref[1]\n      } /*:any*/;\n      if (intable) nrange.Sheet = SheetNames.length;\n      WB.Names.push(nrange);\n      break;\n    case 'text-content':\n      break;\n    // 16.27.27 <number:text-content>\n    case 'text-properties':\n      break;\n    // 16.27.27 <style:text-properties>\n    case 'embedded-text':\n      break;\n    // 16.27.4 <number:embedded-text>\n\n    case 'body':\n    case '电子表格':\n      break;\n    // 3.3 16.9.6 19.726.3\n\n    case 'forms':\n      break;\n    // 12.25.2 13.2\n    case 'table-column':\n      break;\n    // 9.1.6 <table:table-column>\n    case 'table-header-rows':\n      break;\n    // 9.1.7 <table:table-header-rows>\n    case 'table-rows':\n      break;\n    // 9.1.12 <table:table-rows>\n    /* TODO: outline levels */\n    case 'table-column-group':\n      break;\n    // 9.1.10 <table:table-column-group>\n    case 'table-header-columns':\n      break;\n    // 9.1.11 <table:table-header-columns>\n    case 'table-columns':\n      break;\n    // 9.1.12 <table:table-columns>\n\n    case 'null-date':\n      // 9.4.2 <table:null-date>\n      tag = parsexmltag(Rn[0], false);\n      switch (tag[\"date-value\"]) {\n        case \"1904-01-01\":\n          WB.WBProps.date1904 = true;\n          break;\n      }\n      break;\n    case 'graphic-properties':\n      break;\n    // 17.21 <style:graphic-properties>\n    case 'calculation-settings':\n      break;\n    // 9.4.1 <table:calculation-settings>\n    case 'named-expressions':\n      break;\n    // 9.4.11 <table:named-expressions>\n    case 'label-range':\n      break;\n    // 9.4.9 <table:label-range>\n    case 'label-ranges':\n      break;\n    // 9.4.10 <table:label-ranges>\n    case 'named-expression':\n      break;\n    // 9.4.13 <table:named-expression>\n    case 'sort':\n      break;\n    // 9.4.19 <table:sort>\n    case 'sort-by':\n      break;\n    // 9.4.20 <table:sort-by>\n    case 'sort-groups':\n      break;\n    // 9.4.22 <table:sort-groups>\n\n    case 'tab':\n      break;\n    // 6.1.4 <text:tab>\n    case 'line-break':\n      break;\n    // 6.1.5 <text:line-break>\n    case 'span':\n      break;\n    // 6.1.7 <text:span>\n    case 'p':\n    case '文本串':\n      // 5.1.3 <text:p>\n      if (['master-styles'].indexOf(state[state.length - 1][0]) > -1) break;\n      if (Rn[1] === '/' && (!ctag || !ctag['string-value'])) {\n        var ptp = parse_text_p(str.slice(textpidx, Rn.index));\n        textp = (textp.length > 0 ? textp + \"\\n\" : \"\") + ptp[0];\n      } else if (Rn[0].slice(-2) == \"/>\") {\n        /* TODO: is self-closing 文本串 valid? */\n        textp += \"\\n\";\n      } else {\n        parsexmltag(Rn[0], false);\n        textpidx = Rn.index + Rn[0].length;\n      }\n      break;\n    // <text:p>\n    case 's':\n      break;\n    // <text:s>\n\n    case 'database-range':\n      // 9.4.15 <table:database-range>\n      if (Rn[1] === '/') break;\n      try {\n        _Ref = ods_to_csf_3D(parsexmltag(Rn[0])['target-range-address']);\n        Sheets[_Ref[0]]['!autofilter'] = {\n          ref: _Ref[1]\n        };\n      } catch (e) {/* empty */}\n      break;\n    case 'date':\n      break;\n    // <*:date>\n\n    case 'object':\n      break;\n    // 10.4.6.2 <draw:object>\n    case 'title':\n    case '标题':\n      break;\n    // <*:title> OR <uof:标题>\n    case 'desc':\n      break;\n    // <*:desc>\n    case 'binary-data':\n      break;\n    // 10.4.5 TODO: b64 blob\n\n    /* 9.2 Advanced Tables */\n    case 'table-source':\n      break;\n    // 9.2.6\n    case 'scenario':\n      break;\n    // 9.2.6\n\n    case 'iteration':\n      break;\n    // 9.4.3 <table:iteration>\n    case 'content-validations':\n      break;\n    // 9.4.4 <table:\n    case 'content-validation':\n      break;\n    // 9.4.5 <table:\n    case 'help-message':\n      break;\n    // 9.4.6 <table:\n    case 'error-message':\n      break;\n    // 9.4.7 <table:\n    case 'database-ranges':\n      break;\n    // 9.4.14 <table:database-ranges>\n    case 'filter':\n      break;\n    // 9.5.2 <table:filter>\n    case 'filter-and':\n      break;\n    // 9.5.3 <table:filter-and>\n    case 'filter-or':\n      break;\n    // 9.5.4 <table:filter-or>\n    case 'filter-condition':\n      break;\n    // 9.5.5 <table:filter-condition>\n\n    case 'list-level-style-bullet':\n      break;\n    // 16.31 <text:\n    case 'list-level-style-number':\n      break;\n    // 16.32 <text:\n    case 'list-level-properties':\n      break;\n    // 17.19 <style:\n\n    /* 7.3 Document Fields */\n    case 'sender-firstname': // 7.3.6.2\n    case 'sender-lastname': // 7.3.6.3\n    case 'sender-initials': // 7.3.6.4\n    case 'sender-title': // 7.3.6.5\n    case 'sender-position': // 7.3.6.6\n    case 'sender-email': // 7.3.6.7\n    case 'sender-phone-private': // 7.3.6.8\n    case 'sender-fax': // 7.3.6.9\n    case 'sender-company': // 7.3.6.10\n    case 'sender-phone-work': // 7.3.6.11\n    case 'sender-street': // 7.3.6.12\n    case 'sender-city': // 7.3.6.13\n    case 'sender-postal-code': // 7.3.6.14\n    case 'sender-country': // 7.3.6.15\n    case 'sender-state-or-province': // 7.3.6.16\n    case 'author-name': // 7.3.7.1\n    case 'author-initials': // 7.3.7.2\n    case 'chapter': // 7.3.8\n    case 'file-name': // 7.3.9\n    case 'template-name': // 7.3.9\n    case 'sheet-name':\n      // 7.3.9\n      break;\n    case 'event-listener':\n      break;\n    /* TODO: FODS Properties */\n    case 'initial-creator':\n    case 'creation-date':\n    case 'print-date':\n    case 'generator':\n    case 'document-statistic':\n    case 'user-defined':\n    case 'editing-duration':\n    case 'editing-cycles':\n      break;\n\n    /* TODO: FODS Config */\n    case 'config-item':\n      break;\n\n    /* TODO: style tokens */\n    case 'page-number':\n      break;\n    // TODO <text:page-number>\n    case 'page-count':\n      break;\n    // TODO <text:page-count>\n    case 'time':\n      break;\n    // TODO <text:time>\n\n    /* 9.3 Advanced Table Cells */\n    case 'cell-range-source':\n      break;\n    // 9.3.1 <table:\n    case 'detective':\n      break;\n    // 9.3.2 <table:\n    case 'operation':\n      break;\n    // 9.3.3 <table:\n    case 'highlighted-range':\n      break;\n    // 9.3.4 <table:\n\n    /* 9.6 Data Pilot Tables <table: */\n    case 'data-pilot-table': // 9.6.3\n    case 'source-cell-range': // 9.6.5\n    case 'source-service': // 9.6.6\n    case 'data-pilot-field': // 9.6.7\n    case 'data-pilot-level': // 9.6.8\n    case 'data-pilot-subtotals': // 9.6.9\n    case 'data-pilot-subtotal': // 9.6.10\n    case 'data-pilot-members': // 9.6.11\n    case 'data-pilot-member': // 9.6.12\n    case 'data-pilot-display-info': // 9.6.13\n    case 'data-pilot-sort-info': // 9.6.14\n    case 'data-pilot-layout-info': // 9.6.15\n    case 'data-pilot-field-reference': // 9.6.16\n    case 'data-pilot-groups': // 9.6.17\n    case 'data-pilot-group': // 9.6.18\n    case 'data-pilot-group-member':\n      // 9.6.19\n      break;\n\n    /* 10.3 Drawing Shapes */\n    case 'rect':\n      // 10.3.2\n      break;\n\n    /* 14.6 DDE Connections */\n    case 'dde-connection-decls': // 14.6.2 <text:\n    case 'dde-connection-decl': // 14.6.3 <text:\n    case 'dde-link': // 14.6.4 <table:\n    case 'dde-source':\n      // 14.6.5 <office:\n      break;\n    case 'properties':\n      break;\n    // 13.7 <form:properties>\n    case 'property':\n      break;\n    // 13.8 <form:property>\n\n    case 'a':\n      // 6.1.8 hyperlink\n      if (Rn[1] !== '/') {\n        atag = parsexmltag(Rn[0], false);\n        if (!atag.href) break;\n        atag.Target = unescapexml(atag.href);\n        delete atag.href;\n        if (atag.Target.charAt(0) == \"#\" && atag.Target.indexOf(\".\") > -1) {\n          _Ref = ods_to_csf_3D(atag.Target.slice(1));\n          atag.Target = \"#\" + _Ref[0] + \"!\" + _Ref[1];\n        } else if (atag.Target.match(/^\\.\\.[\\\\\\/]/)) atag.Target = atag.Target.slice(3);\n      }\n      break;\n\n    /* non-standard */\n    case 'table-protection':\n      break;\n    case 'data-pilot-grand-total':\n      break;\n    // <table:\n    case 'office-document-common-attrs':\n      break;\n    // bare\n    default:\n      switch (Rn[2]) {\n        case 'dc:': // TODO: properties\n        case 'calcext:': // ignore undocumented extensions\n        case 'loext:': // ignore undocumented extensions\n        case 'ooo:': // ignore undocumented extensions\n        case 'chartooo:': // ignore undocumented extensions\n        case 'draw:': // TODO: drawing\n        case 'style:': // TODO: styles\n        case 'chart:': // TODO: charts\n        case 'form:': // TODO: forms\n        case 'uof:': // TODO: uof\n        case '表:': // TODO: uof\n        case '字:':\n          // TODO: uof\n          break;\n        default:\n          if (opts.WTF) throw new Error(Rn);\n      }\n  }\n  var out /*:Workbook*/ = {\n    Sheets: Sheets,\n    SheetNames: SheetNames,\n    Workbook: WB\n  } /*:any*/;\n  if (opts.bookSheets) delete /*::(*/out /*:: :any)*/.Sheets;\n  return out;\n}\nfunction parse_ods(zip /*:ZIPFile*/, opts /*:?ParseOpts*/) /*:Workbook*/{\n  opts = opts || {} /*:any*/;\n  if (safegetzipfile(zip, 'META-INF/manifest.xml')) parse_manifest(getzipdata(zip, 'META-INF/manifest.xml'), opts);\n  var styles = getzipstr(zip, 'styles.xml');\n  var Styles = styles && parse_ods_styles(utf8read(styles));\n  var content = getzipstr(zip, 'content.xml');\n  if (!content) throw new Error(\"Missing content.xml in ODS / UOF file\");\n  var wb = parse_content_xml(utf8read(content), opts, Styles);\n  if (safegetzipfile(zip, 'meta.xml')) wb.Props = parse_core_props(getzipdata(zip, 'meta.xml'));\n  wb.bookType = \"ods\";\n  return wb;\n}\nfunction parse_fods(data /*:string*/, opts /*:?ParseOpts*/) /*:Workbook*/{\n  var wb = parse_content_xml(data, opts);\n  wb.bookType = \"fods\";\n  return wb;\n}\n\n/* OpenDocument */\nvar write_styles_ods /*:{(wb:any, opts:any):string}*/ = /* @__PURE__ */function () {\n  var master_styles = ['<office:master-styles>', '<style:master-page style:name=\"mp1\" style:page-layout-name=\"mp1\">', '<style:header/>', '<style:header-left style:display=\"false\"/>', '<style:footer/>', '<style:footer-left style:display=\"false\"/>', '</style:master-page>', '</office:master-styles>'].join(\"\");\n  var payload = '<office:document-styles ' + wxt_helper({\n    'xmlns:office': \"urn:oasis:names:tc:opendocument:xmlns:office:1.0\",\n    'xmlns:table': \"urn:oasis:names:tc:opendocument:xmlns:table:1.0\",\n    'xmlns:style': \"urn:oasis:names:tc:opendocument:xmlns:style:1.0\",\n    'xmlns:text': \"urn:oasis:names:tc:opendocument:xmlns:text:1.0\",\n    'xmlns:draw': \"urn:oasis:names:tc:opendocument:xmlns:drawing:1.0\",\n    'xmlns:fo': \"urn:oasis:names:tc:opendocument:xmlns:xsl-fo-compatible:1.0\",\n    'xmlns:xlink': \"http://www.w3.org/1999/xlink\",\n    'xmlns:dc': \"http://purl.org/dc/elements/1.1/\",\n    'xmlns:number': \"urn:oasis:names:tc:opendocument:xmlns:datastyle:1.0\",\n    'xmlns:svg': \"urn:oasis:names:tc:opendocument:xmlns:svg-compatible:1.0\",\n    'xmlns:of': \"urn:oasis:names:tc:opendocument:xmlns:of:1.2\",\n    'office:version': \"1.2\"\n  }) + '>' + master_styles + '</office:document-styles>';\n  return function wso( /*::wb, opts*/\n  ) {\n    return XML_HEADER + payload;\n  };\n}();\n\n// TODO: find out if anyone actually read the spec.  LO has some wild errors\nfunction write_number_format_ods(nf /*:string*/, nfidx /*:string*/) /*:string*/{\n  var type = \"number\",\n    payload = \"\",\n    nopts = {\n      \"style:name\": nfidx\n    },\n    c = \"\",\n    i = 0;\n  nf = nf.replace(/\"[$]\"/g, \"$\");\n  /* TODO: replace with an actual parser based on a real grammar */\n  j: {\n    // TODO: support style maps\n    if (nf.indexOf(\";\") > -1) {\n      console.error(\"Unsupported ODS Style Map exported.  Using first branch of \" + nf);\n      nf = nf.slice(0, nf.indexOf(\";\"));\n    }\n    if (nf == \"@\") {\n      type = \"text\";\n      payload = \"<number:text-content/>\";\n      break j;\n    }\n\n    /* currency flag */\n    if (nf.indexOf(/\\$/) > -1) {\n      type = \"currency\";\n    }\n\n    /* opening string literal */\n    if (nf[i] == '\"') {\n      c = \"\";\n      while (nf[++i] != '\"' || nf[++i] == '\"') c += nf[i];\n      --i;\n      if (nf[i + 1] == \"*\") {\n        i++;\n        payload += '<number:fill-character>' + escapexml(c.replace(/\"\"/g, '\"')) + '</number:fill-character>';\n      } else {\n        payload += '<number:text>' + escapexml(c.replace(/\"\"/g, '\"')) + '</number:text>';\n      }\n      nf = nf.slice(i + 1);\n      i = 0;\n    }\n\n    /* fractions */\n    var t = nf.match(/# (\\?+)\\/(\\?+)/);\n    if (t) {\n      payload += writextag(\"number:fraction\", null, {\n        \"number:min-integer-digits\": 0,\n        \"number:min-numerator-digits\": t[1].length,\n        \"number:max-denominator-value\": Math.max(+t[1].replace(/./g, \"9\"), +t[2].replace(/./g, \"9\"))\n      });\n      break j;\n    }\n    if (t = nf.match(/# (\\?+)\\/(\\d+)/)) {\n      payload += writextag(\"number:fraction\", null, {\n        \"number:min-integer-digits\": 0,\n        \"number:min-numerator-digits\": t[1].length,\n        \"number:denominator-value\": +t[2]\n      });\n      break j;\n    }\n\n    /* percentages */\n    if (t = nf.match(/(\\d+)(|\\.\\d+)%/)) {\n      type = \"percentage\";\n      payload += writextag(\"number:number\", null, {\n        \"number:decimal-places\": t[2] && t.length - 1 || 0,\n        \"number:min-decimal-places\": t[2] && t.length - 1 || 0,\n        \"number:min-integer-digits\": t[1].length\n      }) + \"<number:text>%</number:text>\";\n      break j;\n    }\n\n    /* datetime */\n    var has_time = false;\n    if ([\"y\", \"m\", \"d\"].indexOf(nf[0]) > -1) {\n      type = \"date\";\n      k: for (; i < nf.length; ++i) switch (c = nf[i].toLowerCase()) {\n        case \"h\":\n        case \"s\":\n          has_time = true;\n          --i;\n          break k;\n        case \"m\":\n          l: for (var h = i + 1; h < nf.length; ++h) switch (nf[h]) {\n            case \"y\":\n            case \"d\":\n              break l;\n            case \"h\":\n            case \"s\":\n              has_time = true;\n              --i;\n              break k;\n          }\n        /* falls through */\n        case \"y\":\n        case \"d\":\n          while ((nf[++i] || \"\").toLowerCase() == c[0]) c += c[0];\n          --i;\n          switch (c) {\n            case \"y\":\n            case \"yy\":\n              payload += \"<number:year/>\";\n              break;\n            case \"yyy\":\n            case \"yyyy\":\n              payload += '<number:year number:style=\"long\"/>';\n              break;\n            case \"mmmmm\":\n              console.error(\"ODS has no equivalent of format |mmmmm|\");\n            /* falls through */\n            case \"m\":\n            case \"mm\":\n            case \"mmm\":\n            case \"mmmm\":\n              payload += '<number:month number:style=\"' + (c.length % 2 ? \"short\" : \"long\") + '\" number:textual=\"' + (c.length >= 3 ? \"true\" : \"false\") + '\"/>';\n              break;\n            case \"d\":\n            case \"dd\":\n              payload += '<number:day number:style=\"' + (c.length % 2 ? \"short\" : \"long\") + '\"/>';\n              break;\n            case \"ddd\":\n            case \"dddd\":\n              payload += '<number:day-of-week number:style=\"' + (c.length % 2 ? \"short\" : \"long\") + '\"/>';\n              break;\n          }\n          break;\n        case '\"':\n          while (nf[++i] != '\"' || nf[++i] == '\"') c += nf[i];\n          --i;\n          payload += '<number:text>' + escapexml(c.slice(1).replace(/\"\"/g, '\"')) + '</number:text>';\n          break;\n        case '\\\\':\n          c = nf[++i];\n          payload += '<number:text>' + escapexml(c) + '</number:text>';\n          break;\n        case '/':\n        case ':':\n          payload += '<number:text>' + escapexml(c) + '</number:text>';\n          break;\n        default:\n          console.error(\"unrecognized character \" + c + \" in ODF format \" + nf);\n      }\n      if (!has_time) break j;\n      nf = nf.slice(i + 1);\n      i = 0;\n    }\n    if (nf.match(/^\\[?[hms]/)) {\n      if (type == \"number\") type = \"time\";\n      if (nf.match(/\\[/)) {\n        nf = nf.replace(/[\\[\\]]/g, \"\");\n        nopts['number:truncate-on-overflow'] = \"false\";\n      }\n      for (; i < nf.length; ++i) switch (c = nf[i].toLowerCase()) {\n        case \"h\":\n        case \"m\":\n        case \"s\":\n          while ((nf[++i] || \"\").toLowerCase() == c[0]) c += c[0];\n          --i;\n          switch (c) {\n            case \"h\":\n            case \"hh\":\n              payload += '<number:hours number:style=\"' + (c.length % 2 ? \"short\" : \"long\") + '\"/>';\n              break;\n            case \"m\":\n            case \"mm\":\n              payload += '<number:minutes number:style=\"' + (c.length % 2 ? \"short\" : \"long\") + '\"/>';\n              break;\n            case \"s\":\n            case \"ss\":\n              if (nf[i + 1] == \".\") do {\n                c += nf[i + 1];\n                ++i;\n              } while (nf[i + 1] == \"0\");\n              payload += '<number:seconds number:style=\"' + (c.match(\"ss\") ? \"long\" : \"short\") + '\"' + (c.match(/\\./) ? ' number:decimal-places=\"' + (c.match(/0+/) || [\"\"])[0].length + '\"' : \"\") + '/>';\n              break;\n          }\n          break;\n        case '\"':\n          while (nf[++i] != '\"' || nf[++i] == '\"') c += nf[i];\n          --i;\n          payload += '<number:text>' + escapexml(c.slice(1).replace(/\"\"/g, '\"')) + '</number:text>';\n          break;\n        case '/':\n        case ':':\n          payload += '<number:text>' + escapexml(c) + '</number:text>';\n          break;\n        case \"a\":\n          if (nf.slice(i, i + 3).toLowerCase() == \"a/p\") {\n            payload += '<number:am-pm/>';\n            i += 2;\n            break;\n          } // Note: ODF does not support A/P\n          if (nf.slice(i, i + 5).toLowerCase() == \"am/pm\") {\n            payload += '<number:am-pm/>';\n            i += 4;\n            break;\n          }\n        /* falls through */\n        default:\n          console.error(\"unrecognized character \" + c + \" in ODF format \" + nf);\n      }\n      break j;\n    }\n\n    /* currency flag */\n    if (nf.indexOf(/\\$/) > -1) {\n      type = \"currency\";\n    }\n\n    /* should be in a char loop */\n    if (nf[0] == \"$\") {\n      payload += '<number:currency-symbol number:language=\"en\" number:country=\"US\">$</number:currency-symbol>';\n      nf = nf.slice(1);\n      i = 0;\n    }\n    i = 0;\n    if (nf[i] == '\"') {\n      while (nf[++i] != '\"' || nf[++i] == '\"') c += nf[i];\n      --i;\n      if (nf[i + 1] == \"*\") {\n        i++;\n        payload += '<number:fill-character>' + escapexml(c.replace(/\"\"/g, '\"')) + '</number:fill-character>';\n      } else {\n        payload += '<number:text>' + escapexml(c.replace(/\"\"/g, '\"')) + '</number:text>';\n      }\n      nf = nf.slice(i + 1);\n      i = 0;\n    }\n\n    /* number TODO: interstitial text e.g. 000)000-0000 */\n    var np = nf.match(/([#0][0#,]*)(\\.[0#]*|)(E[+]?0*|)/i);\n    if (!np || !np[0]) console.error(\"Could not find numeric part of \" + nf);else {\n      var base = np[1].replace(/,/g, \"\");\n      payload += '<number:' + (np[3] ? \"scientific-\" : \"\") + 'number' + ' number:min-integer-digits=\"' + (base.indexOf(\"0\") == -1 ? \"0\" : base.length - base.indexOf(\"0\")) + '\"' + (np[0].indexOf(\",\") > -1 ? ' number:grouping=\"true\"' : \"\") + (np[2] && ' number:decimal-places=\"' + (np[2].length - 1) + '\"' || ' number:decimal-places=\"0\"') + (np[3] && np[3].indexOf(\"+\") > -1 ? ' number:forced-exponent-sign=\"true\"' : \"\") + (np[3] ? ' number:min-exponent-digits=\"' + np[3].match(/0+/)[0].length + '\"' : \"\") + '>' + /* TODO: interstitial text placeholders */\n      '</number:' + (np[3] ? \"scientific-\" : \"\") + 'number>';\n      i = np.index + np[0].length;\n    }\n\n    /* residual text */\n    if (nf[i] == '\"') {\n      c = \"\";\n      while (nf[++i] != '\"' || nf[++i] == '\"') c += nf[i];\n      --i;\n      payload += '<number:text>' + escapexml(c.replace(/\"\"/g, '\"')) + '</number:text>';\n    }\n  }\n  if (!payload) {\n    console.error(\"Could not generate ODS number format for |\" + nf + \"|\");\n    return \"\";\n  }\n  return writextag(\"number:\" + type + \"-style\", payload, nopts);\n}\nfunction write_names_ods(Names, SheetNames, idx) {\n  //var scoped = Names.filter(function(name) { return name.Sheet == (idx == -1 ? null : idx); });\n  var scoped = [];\n  for (var namei = 0; namei < Names.length; ++namei) {\n    var name = Names[namei];\n    if (!name) continue;\n    if (name.Sheet == (idx == -1 ? null : idx)) scoped.push(name);\n  }\n  if (!scoped.length) return \"\";\n  return \"      <table:named-expressions>\\n\" + scoped.map(function (name) {\n    var odsref = (idx == -1 ? \"$\" : \"\") + csf_to_ods_3D(name.Ref);\n    return \"        \" + writextag(\"table:named-range\", null, {\n      \"table:name\": name.Name,\n      \"table:cell-range-address\": odsref,\n      \"table:base-cell-address\": odsref.replace(/[\\.]?[^\\.]*$/, \".$A$1\")\n    });\n  }).join(\"\\n\") + \"\\n      </table:named-expressions>\\n\";\n}\nvar write_content_ods /*:{(wb:any, opts:any):string}*/ = /* @__PURE__ */function () {\n  /* 6.1.2 White Space Characters */\n  var write_text_p = function (text /*:string*/) /*:string*/{\n    return escapexml(text).replace(/  +/g, function ($$) {\n      return '<text:s text:c=\"' + $$.length + '\"/>';\n    }).replace(/\\t/g, \"<text:tab/>\").replace(/\\n/g, \"</text:p><text:p>\").replace(/^ /, \"<text:s/>\").replace(/ $/, \"<text:s/>\");\n  };\n  var null_cell_xml = '          <table:table-cell />\\n';\n  var write_ws = function (ws, wb /*:Workbook*/, i /*:number*/, opts, nfs, date1904) /*:string*/{\n    /* Section 9 Tables */\n    var o /*:Array<string>*/ = [];\n    o.push('      <table:table table:name=\"' + escapexml(wb.SheetNames[i]) + '\" table:style-name=\"ta1\">\\n');\n    var R = 0,\n      C = 0,\n      range = decode_range(ws['!ref'] || \"A1\");\n    var marr /*:Array<Range>*/ = ws['!merges'] || [],\n      mi = 0;\n    var dense = ws[\"!data\"] != null;\n    if (ws[\"!cols\"]) {\n      for (C = 0; C <= range.e.c; ++C) o.push('        <table:table-column' + (ws[\"!cols\"][C] ? ' table:style-name=\"co' + ws[\"!cols\"][C].ods + '\"' : '') + '></table:table-column>\\n');\n    }\n    var H = \"\",\n      ROWS = ws[\"!rows\"] || [];\n    for (R = 0; R < range.s.r; ++R) {\n      H = ROWS[R] ? ' table:style-name=\"ro' + ROWS[R].ods + '\"' : \"\";\n      o.push('        <table:table-row' + H + '></table:table-row>\\n');\n    }\n    for (; R <= range.e.r; ++R) {\n      H = ROWS[R] ? ' table:style-name=\"ro' + ROWS[R].ods + '\"' : \"\";\n      o.push('        <table:table-row' + H + '>\\n');\n      for (C = 0; C < range.s.c; ++C) o.push(null_cell_xml);\n      for (; C <= range.e.c; ++C) {\n        var skip = false,\n          ct = {},\n          textp = \"\";\n        for (mi = 0; mi != marr.length; ++mi) {\n          if (marr[mi].s.c > C) continue;\n          if (marr[mi].s.r > R) continue;\n          if (marr[mi].e.c < C) continue;\n          if (marr[mi].e.r < R) continue;\n          if (marr[mi].s.c != C || marr[mi].s.r != R) skip = true;\n          ct['table:number-columns-spanned'] = marr[mi].e.c - marr[mi].s.c + 1;\n          ct['table:number-rows-spanned'] = marr[mi].e.r - marr[mi].s.r + 1;\n          break;\n        }\n        if (skip) {\n          o.push('          <table:covered-table-cell/>\\n');\n          continue;\n        }\n        var ref = encode_cell({\n            r: R,\n            c: C\n          }),\n          cell = dense ? (ws[\"!data\"][R] || [])[C] : ws[ref];\n        if (cell && cell.f) {\n          ct['table:formula'] = escapexml(csf_to_ods_formula(cell.f));\n          if (cell.F) {\n            if (cell.F.slice(0, ref.length) == ref) {\n              var _Fref = decode_range(cell.F);\n              ct['table:number-matrix-columns-spanned'] = _Fref.e.c - _Fref.s.c + 1;\n              ct['table:number-matrix-rows-spanned'] = _Fref.e.r - _Fref.s.r + 1;\n            }\n          }\n        }\n        if (!cell) {\n          o.push(null_cell_xml);\n          continue;\n        }\n        switch (cell.t) {\n          case 'b':\n            textp = cell.v ? 'TRUE' : 'FALSE';\n            ct['office:value-type'] = \"boolean\";\n            ct['office:boolean-value'] = cell.v ? 'true' : 'false';\n            break;\n          case 'n':\n            textp = cell.w || String(cell.v || 0);\n            ct['office:value-type'] = \"float\";\n            ct['office:value'] = cell.v || 0;\n            break;\n          case 's':\n          case 'str':\n            textp = cell.v == null ? \"\" : cell.v;\n            ct['office:value-type'] = \"string\";\n            break;\n          case 'd':\n            textp = cell.w || parseDate$1(cell.v, date1904).toISOString();\n            ct['office:value-type'] = \"date\";\n            ct['office:date-value'] = parseDate$1(cell.v, date1904).toISOString();\n            ct['table:style-name'] = \"ce1\";\n            break;\n          //case 'e': // TODO: translate to ODS errors\n          default:\n            o.push(null_cell_xml);\n            continue;\n          // TODO: empty cell with comments\n        }\n\n        var text_p = write_text_p(textp);\n        if (cell.l && cell.l.Target) {\n          var _tgt = cell.l.Target;\n          _tgt = _tgt.charAt(0) == \"#\" ? \"#\" + csf_to_ods_3D(_tgt.slice(1)) : _tgt;\n          // TODO: choose correct parent path format based on link delimiters\n          if (_tgt.charAt(0) != \"#\" && !_tgt.match(/^\\w+:/)) _tgt = '../' + _tgt;\n          text_p = writextag('text:a', text_p, {\n            'xlink:href': _tgt.replace(/&/g, \"&amp;\")\n          });\n        }\n        if (nfs[cell.z]) ct[\"table:style-name\"] = \"ce\" + nfs[cell.z].slice(1);\n        var payload = writextag('text:p', text_p, {});\n        if (cell.c) {\n          var acreator = \"\",\n            apayload = \"\",\n            aprops = {};\n          for (var ci = 0; ci < cell.c.length; ++ci) {\n            if (!acreator && cell.c[ci].a) acreator = cell.c[ci].a;\n            apayload += \"<text:p>\" + write_text_p(cell.c[ci].t) + \"</text:p>\";\n          }\n          if (!cell.c.hidden) aprops[\"office:display\"] = true;\n          payload = writextag('office:annotation', apayload, aprops) + payload;\n        }\n        o.push('          ' + writextag('table:table-cell', payload, ct) + '\\n');\n      }\n      o.push('        </table:table-row>\\n');\n    }\n    if ((wb.Workbook || {}).Names) o.push(write_names_ods(wb.Workbook.Names, wb.SheetNames, i));\n    o.push('      </table:table>\\n');\n    return o.join(\"\");\n  };\n  var write_automatic_styles_ods = function (o /*:Array<string>*/, wb) {\n    o.push(' <office:automatic-styles>\\n');\n\n    /* column styles */\n    var cidx = 0;\n    wb.SheetNames.map(function (n) {\n      return wb.Sheets[n];\n    }).forEach(function (ws) {\n      if (!ws) return;\n      if (ws[\"!cols\"]) {\n        for (var C = 0; C < ws[\"!cols\"].length; ++C) if (ws[\"!cols\"][C]) {\n          var colobj = ws[\"!cols\"][C];\n          if (colobj.width == null && colobj.wpx == null && colobj.wch == null) continue;\n          process_col(colobj);\n          colobj.ods = cidx;\n          var w = ws[\"!cols\"][C].wpx + \"px\";\n          o.push('  <style:style style:name=\"co' + cidx + '\" style:family=\"table-column\">\\n');\n          o.push('   <style:table-column-properties fo:break-before=\"auto\" style:column-width=\"' + w + '\"/>\\n');\n          o.push('  </style:style>\\n');\n          ++cidx;\n        }\n      }\n    });\n\n    /* row styles */\n    var ridx = 0;\n    wb.SheetNames.map(function (n) {\n      return wb.Sheets[n];\n    }).forEach(function (ws) {\n      if (!ws) return;\n      if (ws[\"!rows\"]) {\n        for (var R = 0; R < ws[\"!rows\"].length; ++R) if (ws[\"!rows\"][R]) {\n          ws[\"!rows\"][R].ods = ridx;\n          var h = ws[\"!rows\"][R].hpx + \"px\";\n          o.push('  <style:style style:name=\"ro' + ridx + '\" style:family=\"table-row\">\\n');\n          o.push('   <style:table-row-properties fo:break-before=\"auto\" style:row-height=\"' + h + '\"/>\\n');\n          o.push('  </style:style>\\n');\n          ++ridx;\n        }\n      }\n    });\n\n    /* table */\n    o.push('  <style:style style:name=\"ta1\" style:family=\"table\" style:master-page-name=\"mp1\">\\n');\n    o.push('   <style:table-properties table:display=\"true\" style:writing-mode=\"lr-tb\"/>\\n');\n    o.push('  </style:style>\\n');\n    o.push('  <number:date-style style:name=\"N37\" number:automatic-order=\"true\">\\n');\n    o.push('   <number:month number:style=\"long\"/>\\n');\n    o.push('   <number:text>/</number:text>\\n');\n    o.push('   <number:day number:style=\"long\"/>\\n');\n    o.push('   <number:text>/</number:text>\\n');\n    o.push('   <number:year/>\\n');\n    o.push('  </number:date-style>\\n');\n\n    /* number formats, table cells, text */\n    var nfs = {};\n    var nfi = 69;\n    wb.SheetNames.map(function (n) {\n      return wb.Sheets[n];\n    }).forEach(function (ws) {\n      if (!ws) return;\n      var dense = ws[\"!data\"] != null;\n      var range = decode_range(ws[\"!ref\"]);\n      for (var R = 0; R <= range.e.r; ++R) for (var C = 0; C <= range.e.c; ++C) {\n        var c = dense ? (ws[\"!data\"][R] || [])[C] : ws[encode_cell({\n          r: R,\n          c: C\n        })];\n        if (!c || !c.z || c.z.toLowerCase() == \"general\") continue;\n        if (!nfs[c.z]) {\n          var out = write_number_format_ods(c.z, \"N\" + nfi);\n          if (out) {\n            nfs[c.z] = \"N\" + nfi;\n            ++nfi;\n            o.push(out + \"\\n\");\n          }\n        }\n      }\n    });\n    o.push('  <style:style style:name=\"ce1\" style:family=\"table-cell\" style:parent-style-name=\"Default\" style:data-style-name=\"N37\"/>\\n');\n    keys(nfs).forEach(function (nf) {\n      o.push('<style:style style:name=\"ce' + nfs[nf].slice(1) + '\" style:family=\"table-cell\" style:parent-style-name=\"Default\" style:data-style-name=\"' + nfs[nf] + '\"/>\\n');\n    });\n\n    /* page-layout */\n\n    o.push(' </office:automatic-styles>\\n');\n    return nfs;\n  };\n  return function wcx(wb, opts) {\n    var o = [XML_HEADER];\n    /* 3.1.3.2 */\n    var attr = wxt_helper({\n      'xmlns:office': \"urn:oasis:names:tc:opendocument:xmlns:office:1.0\",\n      'xmlns:table': \"urn:oasis:names:tc:opendocument:xmlns:table:1.0\",\n      'xmlns:style': \"urn:oasis:names:tc:opendocument:xmlns:style:1.0\",\n      'xmlns:text': \"urn:oasis:names:tc:opendocument:xmlns:text:1.0\",\n      'xmlns:draw': \"urn:oasis:names:tc:opendocument:xmlns:drawing:1.0\",\n      'xmlns:fo': \"urn:oasis:names:tc:opendocument:xmlns:xsl-fo-compatible:1.0\",\n      'xmlns:xlink': \"http://www.w3.org/1999/xlink\",\n      'xmlns:dc': \"http://purl.org/dc/elements/1.1/\",\n      'xmlns:meta': \"urn:oasis:names:tc:opendocument:xmlns:meta:1.0\",\n      'xmlns:number': \"urn:oasis:names:tc:opendocument:xmlns:datastyle:1.0\",\n      'xmlns:presentation': \"urn:oasis:names:tc:opendocument:xmlns:presentation:1.0\",\n      'xmlns:svg': \"urn:oasis:names:tc:opendocument:xmlns:svg-compatible:1.0\",\n      'xmlns:chart': \"urn:oasis:names:tc:opendocument:xmlns:chart:1.0\",\n      'xmlns:dr3d': \"urn:oasis:names:tc:opendocument:xmlns:dr3d:1.0\",\n      'xmlns:math': \"http://www.w3.org/1998/Math/MathML\",\n      'xmlns:form': \"urn:oasis:names:tc:opendocument:xmlns:form:1.0\",\n      'xmlns:script': \"urn:oasis:names:tc:opendocument:xmlns:script:1.0\",\n      'xmlns:ooo': \"http://openoffice.org/2004/office\",\n      'xmlns:ooow': \"http://openoffice.org/2004/writer\",\n      'xmlns:oooc': \"http://openoffice.org/2004/calc\",\n      'xmlns:dom': \"http://www.w3.org/2001/xml-events\",\n      'xmlns:xforms': \"http://www.w3.org/2002/xforms\",\n      'xmlns:xsd': \"http://www.w3.org/2001/XMLSchema\",\n      'xmlns:xsi': \"http://www.w3.org/2001/XMLSchema-instance\",\n      'xmlns:sheet': \"urn:oasis:names:tc:opendocument:sh33tjs:1.0\",\n      'xmlns:rpt': \"http://openoffice.org/2005/report\",\n      'xmlns:of': \"urn:oasis:names:tc:opendocument:xmlns:of:1.2\",\n      'xmlns:xhtml': \"http://www.w3.org/1999/xhtml\",\n      'xmlns:grddl': \"http://www.w3.org/2003/g/data-view#\",\n      'xmlns:tableooo': \"http://openoffice.org/2009/table\",\n      'xmlns:drawooo': \"http://openoffice.org/2010/draw\",\n      'xmlns:calcext': \"urn:org:documentfoundation:names:experimental:calc:xmlns:calcext:1.0\",\n      'xmlns:loext': \"urn:org:documentfoundation:names:experimental:office:xmlns:loext:1.0\",\n      'xmlns:field': \"urn:openoffice:names:experimental:ooo-ms-interop:xmlns:field:1.0\",\n      'xmlns:formx': \"urn:openoffice:names:experimental:ooxml-odf-interop:xmlns:form:1.0\",\n      'xmlns:css3t': \"http://www.w3.org/TR/css3-text/\",\n      'office:version': \"1.2\"\n    });\n    var fods = wxt_helper({\n      'xmlns:config': \"urn:oasis:names:tc:opendocument:xmlns:config:1.0\",\n      'office:mimetype': \"application/vnd.oasis.opendocument.spreadsheet\"\n    });\n    if (opts.bookType == \"fods\") {\n      o.push('<office:document' + attr + fods + '>\\n');\n      o.push(write_meta_ods().replace(/<office:document-meta.*?>/, \"\").replace(/<\\/office:document-meta>/, \"\") + \"\\n\");\n      // TODO: settings (equiv of settings.xml for ODS)\n    } else o.push('<office:document-content' + attr + '>\\n');\n    // o.push('  <office:scripts/>\\n');\n    var nfs = write_automatic_styles_ods(o, wb);\n    o.push('  <office:body>\\n');\n    o.push('    <office:spreadsheet>\\n');\n    if (((wb.Workbook || {}).WBProps || {}).date1904) o.push('      <table:calculation-settings table:case-sensitive=\"false\" table:search-criteria-must-apply-to-whole-cell=\"true\" table:use-wildcards=\"true\" table:use-regular-expressions=\"false\" table:automatic-find-labels=\"false\">\\n        <table:null-date table:date-value=\"1904-01-01\"/>\\n      </table:calculation-settings>\\n');\n    for (var i = 0; i != wb.SheetNames.length; ++i) o.push(write_ws(wb.Sheets[wb.SheetNames[i]], wb, i, opts, nfs, ((wb.Workbook || {}).WBProps || {}).date1904));\n    if ((wb.Workbook || {}).Names) o.push(write_names_ods(wb.Workbook.Names, wb.SheetNames, -1));\n    o.push('    </office:spreadsheet>\\n');\n    o.push('  </office:body>\\n');\n    if (opts.bookType == \"fods\") o.push('</office:document>');else o.push('</office:document-content>');\n    return o.join(\"\");\n  };\n}();\nfunction write_ods(wb /*:any*/, opts /*:any*/) {\n  if (opts.bookType == \"fods\") return write_content_ods(wb, opts);\n  var zip = zip_new();\n  var f = \"\";\n  var manifest /*:Array<Array<string> >*/ = [];\n  var rdf /*:Array<[string, string]>*/ = [];\n\n  /* Part 3 Section 3.3 MIME Media Type */\n  f = \"mimetype\";\n  zip_add_file(zip, f, \"application/vnd.oasis.opendocument.spreadsheet\");\n\n  /* Part 1 Section 2.2 Documents */\n  f = \"content.xml\";\n  zip_add_file(zip, f, write_content_ods(wb, opts));\n  manifest.push([f, \"text/xml\"]);\n  rdf.push([f, \"ContentFile\"]);\n\n  /* TODO: these are hard-coded styles to satiate excel */\n  f = \"styles.xml\";\n  zip_add_file(zip, f, write_styles_ods(wb, opts));\n  manifest.push([f, \"text/xml\"]);\n  rdf.push([f, \"StylesFile\"]);\n\n  /* TODO: this is hard-coded to satiate excel */\n  f = \"meta.xml\";\n  zip_add_file(zip, f, XML_HEADER + write_meta_ods( /*::wb, opts*/));\n  manifest.push([f, \"text/xml\"]);\n  rdf.push([f, \"MetadataFile\"]);\n\n  /* Part 3 Section 6 Metadata Manifest File */\n  f = \"manifest.rdf\";\n  zip_add_file(zip, f, write_rdf(rdf /*, opts*/));\n  manifest.push([f, \"application/rdf+xml\"]);\n\n  /* Part 3 Section 4 Manifest File */\n  f = \"META-INF/manifest.xml\";\n  zip_add_file(zip, f, write_manifest(manifest /*, opts*/));\n\n  return zip;\n}\n\n/*! sheetjs (C) 2013-present SheetJS -- http://sheetjs.com */\nvar subarray = function () {\n  try {\n    if (typeof Uint8Array == \"undefined\") return \"slice\";\n    if (typeof Uint8Array.prototype.subarray == \"undefined\") return \"slice\";\n    if (typeof Buffer !== \"undefined\") {\n      if (typeof Buffer.prototype.subarray == \"undefined\") return \"slice\";\n      if ((typeof Buffer.from == \"function\" ? Buffer.from([72, 62]) : new Buffer([72, 62])) instanceof Uint8Array) return \"subarray\";\n      return \"slice\";\n    }\n    return \"subarray\";\n  } catch (e) {\n    return \"slice\";\n  }\n}();\nfunction u8_to_dataview(array) {\n  return new DataView(array.buffer, array.byteOffset, array.byteLength);\n}\nfunction u8str(u8) {\n  return typeof TextDecoder != \"undefined\" ? new TextDecoder().decode(u8) : utf8read(a2s(u8));\n}\nfunction stru8(str) {\n  return typeof TextEncoder != \"undefined\" ? new TextEncoder().encode(str) : s2a(utf8write(str));\n}\nfunction u8concat(u8a) {\n  var len = 0;\n  for (var i = 0; i < u8a.length; ++i) len += u8a[i].length;\n  var out = new Uint8Array(len);\n  var off = 0;\n  for (i = 0; i < u8a.length; ++i) {\n    var u8 = u8a[i],\n      L = u8.length;\n    if (L < 250) {\n      for (var j = 0; j < L; ++j) out[off++] = u8[j];\n    } else {\n      out.set(u8, off);\n      off += L;\n    }\n  }\n  return out;\n}\nfunction popcnt(x) {\n  x -= x >> 1 & 1431655765;\n  x = (x & 858993459) + (x >> 2 & 858993459);\n  return (x + (x >> 4) & 252645135) * 16843009 >>> 24;\n}\nfunction readDecimal128LE(buf, offset) {\n  var exp = (buf[offset + 15] & 127) << 7 | buf[offset + 14] >> 1;\n  var mantissa = buf[offset + 14] & 1;\n  for (var j = offset + 13; j >= offset; --j) mantissa = mantissa * 256 + buf[j];\n  return (buf[offset + 15] & 128 ? -mantissa : mantissa) * Math.pow(10, exp - 6176);\n}\nfunction writeDecimal128LE(buf, offset, value) {\n  var exp = Math.floor(value == 0 ? 0 : Math.LOG10E * Math.log(Math.abs(value))) + 6176 - 16;\n  var mantissa = value / Math.pow(10, exp - 6176);\n  buf[offset + 15] |= exp >> 7;\n  buf[offset + 14] |= (exp & 127) << 1;\n  for (var i = 0; mantissa >= 1; ++i, mantissa /= 256) buf[offset + i] = mantissa & 255;\n  buf[offset + 15] |= value >= 0 ? 0 : 128;\n}\nfunction parse_varint49(buf, ptr) {\n  var l = ptr.l;\n  var usz = buf[l] & 127;\n  varint: if (buf[l++] >= 128) {\n    usz |= (buf[l] & 127) << 7;\n    if (buf[l++] < 128) break varint;\n    usz |= (buf[l] & 127) << 14;\n    if (buf[l++] < 128) break varint;\n    usz |= (buf[l] & 127) << 21;\n    if (buf[l++] < 128) break varint;\n    usz += (buf[l] & 127) * Math.pow(2, 28);\n    ++l;\n    if (buf[l++] < 128) break varint;\n    usz += (buf[l] & 127) * Math.pow(2, 35);\n    ++l;\n    if (buf[l++] < 128) break varint;\n    usz += (buf[l] & 127) * Math.pow(2, 42);\n    ++l;\n    if (buf[l++] < 128) break varint;\n  }\n  ptr.l = l;\n  return usz;\n}\nfunction write_varint49(v) {\n  var usz = new Uint8Array(7);\n  usz[0] = v & 127;\n  var L = 1;\n  sz: if (v > 127) {\n    usz[L - 1] |= 128;\n    usz[L] = v >> 7 & 127;\n    ++L;\n    if (v <= 16383) break sz;\n    usz[L - 1] |= 128;\n    usz[L] = v >> 14 & 127;\n    ++L;\n    if (v <= 2097151) break sz;\n    usz[L - 1] |= 128;\n    usz[L] = v >> 21 & 127;\n    ++L;\n    if (v <= 268435455) break sz;\n    usz[L - 1] |= 128;\n    usz[L] = v / 256 >>> 21 & 127;\n    ++L;\n    if (v <= 34359738367) break sz;\n    usz[L - 1] |= 128;\n    usz[L] = v / 65536 >>> 21 & 127;\n    ++L;\n    if (v <= 4398046511103) break sz;\n    usz[L - 1] |= 128;\n    usz[L] = v / 16777216 >>> 21 & 127;\n    ++L;\n  }\n  return usz[subarray](0, L);\n}\nfunction parse_packed_varints(buf) {\n  var ptr = {\n    l: 0\n  };\n  var out = [];\n  while (ptr.l < buf.length) out.push(parse_varint49(buf, ptr));\n  return out;\n}\nfunction write_packed_varints(nums) {\n  return u8concat(nums.map(function (x) {\n    return write_varint49(x);\n  }));\n}\nfunction varint_to_i32(buf) {\n  var l = 0,\n    i32 = buf[l] & 127;\n  if (buf[l++] < 128) return i32;\n  i32 |= (buf[l] & 127) << 7;\n  if (buf[l++] < 128) return i32;\n  i32 |= (buf[l] & 127) << 14;\n  if (buf[l++] < 128) return i32;\n  i32 |= (buf[l] & 127) << 21;\n  if (buf[l++] < 128) return i32;\n  i32 |= (buf[l] & 15) << 28;\n  return i32;\n}\nfunction parse_shallow(buf) {\n  var out = [],\n    ptr = {\n      l: 0\n    };\n  while (ptr.l < buf.length) {\n    var off = ptr.l;\n    var num = parse_varint49(buf, ptr);\n    var type = num & 7;\n    num = num / 8 | 0;\n    var data;\n    var l = ptr.l;\n    switch (type) {\n      case 0:\n        {\n          while (buf[l++] >= 128);\n          data = buf[subarray](ptr.l, l);\n          ptr.l = l;\n        }\n        break;\n      case 1:\n        {\n          data = buf[subarray](l, l + 8);\n          ptr.l = l + 8;\n        }\n        break;\n      case 2:\n        {\n          var len = parse_varint49(buf, ptr);\n          data = buf[subarray](ptr.l, ptr.l + len);\n          ptr.l += len;\n        }\n        break;\n      case 5:\n        {\n          data = buf[subarray](l, l + 4);\n          ptr.l = l + 4;\n        }\n        break;\n      default:\n        throw new Error(\"PB Type \".concat(type, \" for Field \").concat(num, \" at offset \").concat(off));\n    }\n    var v = {\n      data: data,\n      type: type\n    };\n    if (out[num] == null) out[num] = [];\n    out[num].push(v);\n  }\n  return out;\n}\nfunction write_shallow(proto) {\n  var out = [];\n  proto.forEach(function (field, idx) {\n    if (idx == 0) return;\n    field.forEach(function (item) {\n      if (!item.data) return;\n      out.push(write_varint49(idx * 8 + item.type));\n      if (item.type == 2) out.push(write_varint49(item.data.length));\n      out.push(item.data);\n    });\n  });\n  return u8concat(out);\n}\nfunction mappa(data, cb) {\n  return (data == null ? void 0 : data.map(function (d) {\n    return cb(d.data);\n  })) || [];\n}\nfunction parse_iwa_file(buf) {\n  var _a;\n  var out = [],\n    ptr = {\n      l: 0\n    };\n  while (ptr.l < buf.length) {\n    var len = parse_varint49(buf, ptr);\n    var ai = parse_shallow(buf[subarray](ptr.l, ptr.l + len));\n    ptr.l += len;\n    var res = {\n      id: varint_to_i32(ai[1][0].data),\n      messages: []\n    };\n    ai[2].forEach(function (b) {\n      var mi = parse_shallow(b.data);\n      var fl = varint_to_i32(mi[3][0].data);\n      res.messages.push({\n        meta: mi,\n        data: buf[subarray](ptr.l, ptr.l + fl)\n      });\n      ptr.l += fl;\n    });\n    if ((_a = ai[3]) == null ? void 0 : _a[0]) res.merge = varint_to_i32(ai[3][0].data) >>> 0 > 0;\n    out.push(res);\n  }\n  return out;\n}\nfunction write_iwa_file(ias) {\n  var bufs = [];\n  ias.forEach(function (ia) {\n    var ai = [[], [{\n      data: write_varint49(ia.id),\n      type: 0\n    }], []];\n    if (ia.merge != null) ai[3] = [{\n      data: write_varint49(+!!ia.merge),\n      type: 0\n    }];\n    var midata = [];\n    ia.messages.forEach(function (mi) {\n      midata.push(mi.data);\n      mi.meta[3] = [{\n        type: 0,\n        data: write_varint49(mi.data.length)\n      }];\n      ai[2].push({\n        data: write_shallow(mi.meta),\n        type: 2\n      });\n    });\n    var aipayload = write_shallow(ai);\n    bufs.push(write_varint49(aipayload.length));\n    bufs.push(aipayload);\n    midata.forEach(function (mid) {\n      return bufs.push(mid);\n    });\n  });\n  return u8concat(bufs);\n}\nfunction parse_snappy_chunk(type, buf) {\n  if (type != 0) throw new Error(\"Unexpected Snappy chunk type \".concat(type));\n  var ptr = {\n    l: 0\n  };\n  var usz = parse_varint49(buf, ptr);\n  var chunks = [];\n  var l = ptr.l;\n  while (l < buf.length) {\n    var tag = buf[l] & 3;\n    if (tag == 0) {\n      var len = buf[l++] >> 2;\n      if (len < 60) ++len;else {\n        var c = len - 59;\n        len = buf[l];\n        if (c > 1) len |= buf[l + 1] << 8;\n        if (c > 2) len |= buf[l + 2] << 16;\n        if (c > 3) len |= buf[l + 3] << 24;\n        len >>>= 0;\n        len++;\n        l += c;\n      }\n      chunks.push(buf[subarray](l, l + len));\n      l += len;\n      continue;\n    } else {\n      var offset = 0,\n        length = 0;\n      if (tag == 1) {\n        length = (buf[l] >> 2 & 7) + 4;\n        offset = (buf[l++] & 224) << 3;\n        offset |= buf[l++];\n      } else {\n        length = (buf[l++] >> 2) + 1;\n        if (tag == 2) {\n          offset = buf[l] | buf[l + 1] << 8;\n          l += 2;\n        } else {\n          offset = (buf[l] | buf[l + 1] << 8 | buf[l + 2] << 16 | buf[l + 3] << 24) >>> 0;\n          l += 4;\n        }\n      }\n      if (offset == 0) throw new Error(\"Invalid offset 0\");\n      var j = chunks.length - 1,\n        off = offset;\n      while (j >= 0 && off >= chunks[j].length) {\n        off -= chunks[j].length;\n        --j;\n      }\n      if (j < 0) {\n        if (off == 0) off = chunks[j = 0].length;else throw new Error(\"Invalid offset beyond length\");\n      }\n      if (length < off) chunks.push(chunks[j][subarray](chunks[j].length - off, chunks[j].length - off + length));else {\n        if (off > 0) {\n          chunks.push(chunks[j][subarray](chunks[j].length - off));\n          length -= off;\n        }\n        ++j;\n        while (length >= chunks[j].length) {\n          chunks.push(chunks[j]);\n          length -= chunks[j].length;\n          ++j;\n        }\n        if (length) chunks.push(chunks[j][subarray](0, length));\n      }\n      if (chunks.length > 25) chunks = [u8concat(chunks)];\n    }\n  }\n  var clen = 0;\n  for (var u8i = 0; u8i < chunks.length; ++u8i) clen += chunks[u8i].length;\n  if (clen != usz) throw new Error(\"Unexpected length: \".concat(clen, \" != \").concat(usz));\n  return chunks;\n}\nfunction decompress_iwa_file(buf) {\n  if (Array.isArray(buf)) buf = new Uint8Array(buf);\n  var out = [];\n  var l = 0;\n  while (l < buf.length) {\n    var t = buf[l++];\n    var len = buf[l] | buf[l + 1] << 8 | buf[l + 2] << 16;\n    l += 3;\n    out.push.apply(out, parse_snappy_chunk(t, buf[subarray](l, l + len)));\n    l += len;\n  }\n  if (l !== buf.length) throw new Error(\"data is not a valid framed stream!\");\n  return out.length == 1 ? out[0] : u8concat(out);\n}\nfunction compress_iwa_file(buf) {\n  var out = [];\n  var l = 0;\n  while (l < buf.length) {\n    var c = Math.min(buf.length - l, 268435455);\n    var frame = new Uint8Array(4);\n    out.push(frame);\n    var usz = write_varint49(c);\n    var L = usz.length;\n    out.push(usz);\n    if (c <= 60) {\n      L++;\n      out.push(new Uint8Array([c - 1 << 2]));\n    } else if (c <= 256) {\n      L += 2;\n      out.push(new Uint8Array([240, c - 1 & 255]));\n    } else if (c <= 65536) {\n      L += 3;\n      out.push(new Uint8Array([244, c - 1 & 255, c - 1 >> 8 & 255]));\n    } else if (c <= 16777216) {\n      L += 4;\n      out.push(new Uint8Array([248, c - 1 & 255, c - 1 >> 8 & 255, c - 1 >> 16 & 255]));\n    } else if (c <= 4294967296) {\n      L += 5;\n      out.push(new Uint8Array([252, c - 1 & 255, c - 1 >> 8 & 255, c - 1 >> 16 & 255, c - 1 >>> 24 & 255]));\n    }\n    out.push(buf[subarray](l, l + c));\n    L += c;\n    frame[0] = 0;\n    frame[1] = L & 255;\n    frame[2] = L >> 8 & 255;\n    frame[3] = L >> 16 & 255;\n    l += c;\n  }\n  return u8concat(out);\n}\nvar numbers_lut_new = function () {\n  return {\n    sst: [],\n    rsst: [],\n    ofmt: [],\n    nfmt: [],\n    fmla: [],\n    ferr: [],\n    cmnt: []\n  };\n};\nfunction numbers_format_cell(cell, t, flags, ofmt, nfmt) {\n  var _a, _b, _c, _d;\n  var ctype = t & 255,\n    ver = t >> 8;\n  var fmt = ver >= 5 ? nfmt : ofmt;\n  dur: if (flags & (ver > 4 ? 8 : 4) && cell.t == \"n\" && ctype == 7) {\n    var dstyle = ((_a = fmt[7]) == null ? void 0 : _a[0]) ? varint_to_i32(fmt[7][0].data) : -1;\n    if (dstyle == -1) break dur;\n    var dmin = ((_b = fmt[15]) == null ? void 0 : _b[0]) ? varint_to_i32(fmt[15][0].data) : -1;\n    var dmax = ((_c = fmt[16]) == null ? void 0 : _c[0]) ? varint_to_i32(fmt[16][0].data) : -1;\n    var auto = ((_d = fmt[40]) == null ? void 0 : _d[0]) ? varint_to_i32(fmt[40][0].data) : -1;\n    var d = cell.v,\n      dd = d;\n    autodur: if (auto) {\n      if (d == 0) {\n        dmin = dmax = 2;\n        break autodur;\n      }\n      if (d >= 604800) dmin = 1;else if (d >= 86400) dmin = 2;else if (d >= 3600) dmin = 4;else if (d >= 60) dmin = 8;else if (d >= 1) dmin = 16;else dmin = 32;\n      if (Math.floor(d) != d) dmax = 32;else if (d % 60) dmax = 16;else if (d % 3600) dmax = 8;else if (d % 86400) dmax = 4;else if (d % 604800) dmax = 2;\n      if (dmax < dmin) dmax = dmin;\n    }\n    if (dmin == -1 || dmax == -1) break dur;\n    var dstr = [],\n      zstr = [];\n    if (dmin == 1) {\n      dd = d / 604800;\n      if (dmax == 1) {\n        zstr.push('d\"d\"');\n      } else {\n        dd |= 0;\n        d -= 604800 * dd;\n      }\n      dstr.push(dd + (dstyle == 2 ? \" week\" + (dd == 1 ? \"\" : \"s\") : dstyle == 1 ? \"w\" : \"\"));\n    }\n    if (dmin <= 2 && dmax >= 2) {\n      dd = d / 86400;\n      if (dmax > 2) {\n        dd |= 0;\n        d -= 86400 * dd;\n      }\n      zstr.push('d\"d\"');\n      dstr.push(dd + (dstyle == 2 ? \" day\" + (dd == 1 ? \"\" : \"s\") : dstyle == 1 ? \"d\" : \"\"));\n    }\n    if (dmin <= 4 && dmax >= 4) {\n      dd = d / 3600;\n      if (dmax > 4) {\n        dd |= 0;\n        d -= 3600 * dd;\n      }\n      zstr.push((dmin >= 4 ? \"[h]\" : \"h\") + '\"h\"');\n      dstr.push(dd + (dstyle == 2 ? \" hour\" + (dd == 1 ? \"\" : \"s\") : dstyle == 1 ? \"h\" : \"\"));\n    }\n    if (dmin <= 8 && dmax >= 8) {\n      dd = d / 60;\n      if (dmax > 8) {\n        dd |= 0;\n        d -= 60 * dd;\n      }\n      zstr.push((dmin >= 8 ? \"[m]\" : \"m\") + '\"m\"');\n      if (dstyle == 0) dstr.push((dmin == 8 && dmax == 8 || dd >= 10 ? \"\" : \"0\") + dd);else dstr.push(dd + (dstyle == 2 ? \" minute\" + (dd == 1 ? \"\" : \"s\") : dstyle == 1 ? \"m\" : \"\"));\n    }\n    if (dmin <= 16 && dmax >= 16) {\n      dd = d;\n      if (dmax > 16) {\n        dd |= 0;\n        d -= dd;\n      }\n      zstr.push((dmin >= 16 ? \"[s]\" : \"s\") + '\"s\"');\n      if (dstyle == 0) dstr.push((dmax == 16 && dmin == 16 || dd >= 10 ? \"\" : \"0\") + dd);else dstr.push(dd + (dstyle == 2 ? \" second\" + (dd == 1 ? \"\" : \"s\") : dstyle == 1 ? \"s\" : \"\"));\n    }\n    if (dmax >= 32) {\n      dd = Math.round(1e3 * d);\n      if (dmin < 32) zstr.push('.000\"ms\"');\n      if (dstyle == 0) dstr.push((dd >= 100 ? \"\" : dd >= 10 ? \"0\" : \"00\") + dd);else dstr.push(dd + (dstyle == 2 ? \" millisecond\" + (dd == 1 ? \"\" : \"s\") : dstyle == 1 ? \"ms\" : \"\"));\n    }\n    cell.w = dstr.join(dstyle == 0 ? \":\" : \" \");\n    cell.z = zstr.join(dstyle == 0 ? '\":\"' : \" \");\n    if (dstyle == 0) cell.w = cell.w.replace(/:(\\d\\d\\d)$/, \".$1\");\n  }\n}\nfunction parse_old_storage(buf, lut, v, opts) {\n  var dv = u8_to_dataview(buf);\n  var flags = dv.getUint32(4, true);\n  var ridx = -1,\n    sidx = -1,\n    zidx = -1,\n    ieee = NaN,\n    dc = 0,\n    dt = new Date(Date.UTC(2001, 0, 1));\n  var doff = v > 1 ? 12 : 8;\n  if (flags & 2) {\n    zidx = dv.getUint32(doff, true);\n    doff += 4;\n  }\n  doff += popcnt(flags & (v > 1 ? 3468 : 396)) * 4;\n  if (flags & 512) {\n    ridx = dv.getUint32(doff, true);\n    doff += 4;\n  }\n  doff += popcnt(flags & (v > 1 ? 12288 : 4096)) * 4;\n  if (flags & 16) {\n    sidx = dv.getUint32(doff, true);\n    doff += 4;\n  }\n  if (flags & 32) {\n    ieee = dv.getFloat64(doff, true);\n    doff += 8;\n  }\n  if (flags & 64) {\n    dt.setTime(dt.getTime() + (dc = dv.getFloat64(doff, true)) * 1e3);\n    doff += 8;\n  }\n  if (v > 1) {\n    flags = dv.getUint32(8, true) >>> 16;\n    if (flags & 255) {\n      if (zidx == -1) zidx = dv.getUint32(doff, true);\n      doff += 4;\n    }\n  }\n  var ret;\n  var t = buf[v >= 4 ? 1 : 2];\n  switch (t) {\n    case 0:\n      return void 0;\n    case 2:\n      ret = {\n        t: \"n\",\n        v: ieee\n      };\n      break;\n    case 3:\n      ret = {\n        t: \"s\",\n        v: lut.sst[sidx]\n      };\n      break;\n    case 5:\n      {\n        if (opts == null ? void 0 : opts.cellDates) ret = {\n          t: \"d\",\n          v: dt\n        };else ret = {\n          t: \"n\",\n          v: dc / 86400 + 35430,\n          z: table_fmt[14]\n        };\n      }\n      break;\n    case 6:\n      ret = {\n        t: \"b\",\n        v: ieee > 0\n      };\n      break;\n    case 7:\n      ret = {\n        t: \"n\",\n        v: ieee\n      };\n      break;\n    case 8:\n      ret = {\n        t: \"e\",\n        v: 0\n      };\n      break;\n    case 9:\n      {\n        if (ridx > -1) {\n          var rts = lut.rsst[ridx];\n          ret = {\n            t: \"s\",\n            v: rts.v\n          };\n          if (rts.l) ret.l = {\n            Target: rts.l\n          };\n        } else throw new Error(\"Unsupported cell type \".concat(buf[subarray](0, 4)));\n      }\n      break;\n    default:\n      throw new Error(\"Unsupported cell type \".concat(buf[subarray](0, 4)));\n  }\n  if (zidx > -1) numbers_format_cell(ret, t | v << 8, flags, lut.ofmt[zidx], lut.nfmt[zidx]);\n  if (t == 7) ret.v /= 86400;\n  return ret;\n}\nfunction parse_new_storage(buf, lut, opts) {\n  var dv = u8_to_dataview(buf);\n  dv.getUint32(4, true);\n  var fields = dv.getUint32(8, true);\n  var doff = 12;\n  var ridx = -1,\n    sidx = -1,\n    zidx = -1,\n    d128 = NaN,\n    ieee = NaN,\n    dc = 0,\n    dt = new Date(Date.UTC(2001, 0, 1));\n  if (fields & 1) {\n    d128 = readDecimal128LE(buf, doff);\n    doff += 16;\n  }\n  if (fields & 2) {\n    ieee = dv.getFloat64(doff, true);\n    doff += 8;\n  }\n  if (fields & 4) {\n    dt.setTime(dt.getTime() + (dc = dv.getFloat64(doff, true)) * 1e3);\n    doff += 8;\n  }\n  if (fields & 8) {\n    sidx = dv.getUint32(doff, true);\n    doff += 4;\n  }\n  if (fields & 16) {\n    ridx = dv.getUint32(doff, true);\n    doff += 4;\n  }\n  doff += popcnt(fields & 480) * 4;\n  if (fields & 512) {\n    dv.getUint32(doff, true);\n    doff += 4;\n  }\n  doff += popcnt(fields & 1024) * 4;\n  if (fields & 2048) {\n    dv.getUint32(doff, true);\n    doff += 4;\n  }\n  var ret;\n  var t = buf[1];\n  switch (t) {\n    case 0:\n      ret = {\n        t: \"z\"\n      };\n      break;\n    case 2:\n      ret = {\n        t: \"n\",\n        v: d128\n      };\n      break;\n    case 3:\n      ret = {\n        t: \"s\",\n        v: lut.sst[sidx]\n      };\n      break;\n    case 5:\n      {\n        if (opts == null ? void 0 : opts.cellDates) ret = {\n          t: \"d\",\n          v: dt\n        };else ret = {\n          t: \"n\",\n          v: dc / 86400 + 35430,\n          z: table_fmt[14]\n        };\n      }\n      break;\n    case 6:\n      ret = {\n        t: \"b\",\n        v: ieee > 0\n      };\n      break;\n    case 7:\n      ret = {\n        t: \"n\",\n        v: ieee\n      };\n      break;\n    case 8:\n      ret = {\n        t: \"e\",\n        v: 0\n      };\n      break;\n    case 9:\n      {\n        if (ridx > -1) {\n          var rts = lut.rsst[ridx];\n          ret = {\n            t: \"s\",\n            v: rts.v\n          };\n          if (rts.l) ret.l = {\n            Target: rts.l\n          };\n        } else throw new Error(\"Unsupported cell type \".concat(buf[1], \" : \").concat(fields & 31, \" : \").concat(buf[subarray](0, 4)));\n      }\n      break;\n    case 10:\n      ret = {\n        t: \"n\",\n        v: d128\n      };\n      break;\n    default:\n      throw new Error(\"Unsupported cell type \".concat(buf[1], \" : \").concat(fields & 31, \" : \").concat(buf[subarray](0, 4)));\n  }\n  doff += popcnt(fields & 4096) * 4;\n  if (fields & 516096) {\n    if (zidx == -1) zidx = dv.getUint32(doff, true);\n    doff += 4;\n  }\n  if (fields & 524288) {\n    var cmntidx = dv.getUint32(doff, true);\n    doff += 4;\n    if (lut.cmnt[cmntidx]) ret.c = iwa_to_s5s_comment(lut.cmnt[cmntidx]);\n  }\n  if (zidx > -1) numbers_format_cell(ret, t | 5 << 8, fields >> 13, lut.ofmt[zidx], lut.nfmt[zidx]);\n  if (t == 7) ret.v /= 86400;\n  return ret;\n}\nfunction write_new_storage(cell, lut) {\n  var out = new Uint8Array(32),\n    dv = u8_to_dataview(out),\n    l = 12,\n    fields = 0;\n  out[0] = 5;\n  switch (cell.t) {\n    case \"n\":\n      if (cell.z && fmt_is_date(cell.z)) {\n        out[1] = 5;\n        dv.setFloat64(l, (numdate(cell.v + 1462).getTime() - Date.UTC(2001, 0, 1)) / 1e3, true);\n        fields |= 4;\n        l += 8;\n        break;\n      } else {\n        out[1] = 2;\n        writeDecimal128LE(out, l, cell.v);\n        fields |= 1;\n        l += 16;\n      }\n      break;\n    case \"b\":\n      out[1] = 6;\n      dv.setFloat64(l, cell.v ? 1 : 0, true);\n      fields |= 2;\n      l += 8;\n      break;\n    case \"s\":\n      {\n        var s = cell.v == null ? \"\" : String(cell.v);\n        if (cell.l) {\n          var irsst = lut.rsst.findIndex(function (v) {\n            var _a;\n            return v.v == s && v.l == ((_a = cell.l) == null ? void 0 : _a.Target);\n          });\n          if (irsst == -1) lut.rsst[irsst = lut.rsst.length] = {\n            v: s,\n            l: cell.l.Target\n          };\n          out[1] = 9;\n          dv.setUint32(l, irsst, true);\n          fields |= 16;\n          l += 4;\n        } else {\n          var isst = lut.sst.indexOf(s);\n          if (isst == -1) lut.sst[isst = lut.sst.length] = s;\n          out[1] = 3;\n          dv.setUint32(l, isst, true);\n          fields |= 8;\n          l += 4;\n        }\n      }\n      break;\n    case \"d\":\n      out[1] = 5;\n      dv.setFloat64(l, (cell.v.getTime() - Date.UTC(2001, 0, 1)) / 1e3, true);\n      fields |= 4;\n      l += 8;\n      break;\n    case \"z\":\n      out[1] = 0;\n      break;\n    default:\n      throw \"unsupported cell type \" + cell.t;\n  }\n  if (cell.c) {\n    lut.cmnt.push(s5s_to_iwa_comment(cell.c));\n    dv.setUint32(l, lut.cmnt.length - 1, true);\n    fields |= 524288;\n    l += 4;\n  }\n  dv.setUint32(8, fields, true);\n  return out[subarray](0, l);\n}\nfunction write_old_storage(cell, lut) {\n  var out = new Uint8Array(32),\n    dv = u8_to_dataview(out),\n    l = 12,\n    fields = 0,\n    s = \"\";\n  out[0] = 4;\n  switch (cell.t) {\n    case \"n\":\n      break;\n    case \"b\":\n      break;\n    case \"s\":\n      {\n        s = cell.v == null ? \"\" : String(cell.v);\n        if (cell.l) {\n          var irsst = lut.rsst.findIndex(function (v) {\n            var _a;\n            return v.v == s && v.l == ((_a = cell.l) == null ? void 0 : _a.Target);\n          });\n          if (irsst == -1) lut.rsst[irsst = lut.rsst.length] = {\n            v: s,\n            l: cell.l.Target\n          };\n          out[1] = 9;\n          dv.setUint32(l, irsst, true);\n          fields |= 512;\n          l += 4;\n        }\n      }\n      break;\n    case \"d\":\n      break;\n    case \"e\":\n      break;\n    case \"z\":\n      break;\n    default:\n      throw \"unsupported cell type \" + cell.t;\n  }\n  if (cell.c) {\n    dv.setUint32(l, lut.cmnt.length - 1, true);\n    fields |= 4096;\n    l += 4;\n  }\n  switch (cell.t) {\n    case \"n\":\n      out[1] = 2;\n      dv.setFloat64(l, cell.v, true);\n      fields |= 32;\n      l += 8;\n      break;\n    case \"b\":\n      out[1] = 6;\n      dv.setFloat64(l, cell.v ? 1 : 0, true);\n      fields |= 32;\n      l += 8;\n      break;\n    case \"s\":\n      {\n        s = cell.v == null ? \"\" : String(cell.v);\n        if (cell.l) ;else {\n          var isst = lut.sst.indexOf(s);\n          if (isst == -1) lut.sst[isst = lut.sst.length] = s;\n          out[1] = 3;\n          dv.setUint32(l, isst, true);\n          fields |= 16;\n          l += 4;\n        }\n      }\n      break;\n    case \"d\":\n      out[1] = 5;\n      dv.setFloat64(l, (cell.v.getTime() - Date.UTC(2001, 0, 1)) / 1e3, true);\n      fields |= 64;\n      l += 8;\n      break;\n    case \"z\":\n      out[1] = 0;\n      break;\n    default:\n      throw \"unsupported cell type \" + cell.t;\n  }\n  dv.setUint32(8, fields, true);\n  return out[subarray](0, l);\n}\nfunction parse_cell_storage(buf, lut, opts) {\n  switch (buf[0]) {\n    case 0:\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n      return parse_old_storage(buf, lut, buf[0], opts);\n    case 5:\n      return parse_new_storage(buf, lut, opts);\n    default:\n      throw new Error(\"Unsupported payload version \".concat(buf[0]));\n  }\n}\nfunction parse_TSP_Reference(buf) {\n  var pb = parse_shallow(buf);\n  return varint_to_i32(pb[1][0].data);\n}\nfunction write_TSP_Reference(idx) {\n  return write_shallow([[], [{\n    type: 0,\n    data: write_varint49(idx)\n  }]]);\n}\nfunction numbers_add_oref(iwa, ref) {\n  var _a;\n  var orefs = ((_a = iwa.messages[0].meta[5]) == null ? void 0 : _a[0]) ? parse_packed_varints(iwa.messages[0].meta[5][0].data) : [];\n  var orefidx = orefs.indexOf(ref);\n  if (orefidx == -1) {\n    orefs.push(ref);\n    iwa.messages[0].meta[5] = [{\n      type: 2,\n      data: write_packed_varints(orefs)\n    }];\n  }\n}\nfunction numbers_del_oref(iwa, ref) {\n  var _a;\n  var orefs = ((_a = iwa.messages[0].meta[5]) == null ? void 0 : _a[0]) ? parse_packed_varints(iwa.messages[0].meta[5][0].data) : [];\n  iwa.messages[0].meta[5] = [{\n    type: 2,\n    data: write_packed_varints(orefs.filter(function (r) {\n      return r != ref;\n    }))\n  }];\n}\nfunction parse_TST_TableDataList(M, root) {\n  var pb = parse_shallow(root.data);\n  var type = varint_to_i32(pb[1][0].data);\n  var entries = pb[3];\n  var data = [];\n  (entries || []).forEach(function (entry) {\n    var _a, _b;\n    var le = parse_shallow(entry.data);\n    if (!le[1]) return;\n    var key = varint_to_i32(le[1][0].data) >>> 0;\n    switch (type) {\n      case 1:\n        data[key] = u8str(le[3][0].data);\n        break;\n      case 8:\n        {\n          var rt = M[parse_TSP_Reference(le[9][0].data)][0];\n          var rtp = parse_shallow(rt.data);\n          var rtpref = M[parse_TSP_Reference(rtp[1][0].data)][0];\n          var mtype = varint_to_i32(rtpref.meta[1][0].data);\n          if (mtype != 2001) throw new Error(\"2000 unexpected reference to \".concat(mtype));\n          var tswpsa = parse_shallow(rtpref.data);\n          var richtext = {\n            v: tswpsa[3].map(function (x) {\n              return u8str(x.data);\n            }).join(\"\")\n          };\n          data[key] = richtext;\n          sfields: if ((_a = tswpsa == null ? void 0 : tswpsa[11]) == null ? void 0 : _a[0]) {\n            var smartfields = (_b = parse_shallow(tswpsa[11][0].data)) == null ? void 0 : _b[1];\n            if (!smartfields) break sfields;\n            smartfields.forEach(function (sf) {\n              var _a2, _b2, _c;\n              var attr = parse_shallow(sf.data);\n              if ((_a2 = attr[2]) == null ? void 0 : _a2[0]) {\n                var obj = M[parse_TSP_Reference((_b2 = attr[2]) == null ? void 0 : _b2[0].data)][0];\n                var objtype = varint_to_i32(obj.meta[1][0].data);\n                switch (objtype) {\n                  case 2032:\n                    var hlink = parse_shallow(obj.data);\n                    if (((_c = hlink == null ? void 0 : hlink[2]) == null ? void 0 : _c[0]) && !richtext.l) richtext.l = u8str(hlink[2][0].data);\n                    break;\n                  case 2039:\n                    break;\n                  default:\n                    console.log(\"unrecognized ObjectAttribute type \".concat(objtype));\n                }\n              }\n            });\n          }\n        }\n        break;\n      case 2:\n        data[key] = parse_shallow(le[6][0].data);\n        break;\n      case 3:\n        data[key] = parse_shallow(le[5][0].data);\n        break;\n      case 10:\n        {\n          var cs = M[parse_TSP_Reference(le[10][0].data)][0];\n          data[key] = parse_TSD_CommentStorageArchive(M, cs.data);\n        }\n        break;\n      default:\n        throw type;\n    }\n  });\n  return data;\n}\nfunction parse_TST_TileRowInfo(u8, type) {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m, _n;\n  var pb = parse_shallow(u8);\n  var R = varint_to_i32(pb[1][0].data) >>> 0;\n  var cnt = varint_to_i32(pb[2][0].data) >>> 0;\n  var wide_offsets = ((_b = (_a = pb[8]) == null ? void 0 : _a[0]) == null ? void 0 : _b.data) && varint_to_i32(pb[8][0].data) > 0 || false;\n  var used_storage_u8, used_storage;\n  if (((_d = (_c = pb[7]) == null ? void 0 : _c[0]) == null ? void 0 : _d.data) && type != 0) {\n    used_storage_u8 = (_f = (_e = pb[7]) == null ? void 0 : _e[0]) == null ? void 0 : _f.data;\n    used_storage = (_h = (_g = pb[6]) == null ? void 0 : _g[0]) == null ? void 0 : _h.data;\n  } else if (((_j = (_i = pb[4]) == null ? void 0 : _i[0]) == null ? void 0 : _j.data) && type != 1) {\n    used_storage_u8 = (_l = (_k = pb[4]) == null ? void 0 : _k[0]) == null ? void 0 : _l.data;\n    used_storage = (_n = (_m = pb[3]) == null ? void 0 : _m[0]) == null ? void 0 : _n.data;\n  } else throw \"NUMBERS Tile missing \".concat(type, \" cell storage\");\n  var width = wide_offsets ? 4 : 1;\n  var used_storage_offsets = u8_to_dataview(used_storage_u8);\n  var offsets = [];\n  for (var C = 0; C < used_storage_u8.length / 2; ++C) {\n    var off = used_storage_offsets.getUint16(C * 2, true);\n    if (off < 65535) offsets.push([C, off]);\n  }\n  if (offsets.length != cnt) throw \"Expected \".concat(cnt, \" cells, found \").concat(offsets.length);\n  var cells = [];\n  for (C = 0; C < offsets.length - 1; ++C) cells[offsets[C][0]] = used_storage[subarray](offsets[C][1] * width, offsets[C + 1][1] * width);\n  if (offsets.length >= 1) cells[offsets[offsets.length - 1][0]] = used_storage[subarray](offsets[offsets.length - 1][1] * width);\n  return {\n    R: R,\n    cells: cells\n  };\n}\nfunction parse_TST_Tile(M, root) {\n  var _a;\n  var pb = parse_shallow(root.data);\n  var storage = -1;\n  if ((_a = pb == null ? void 0 : pb[7]) == null ? void 0 : _a[0]) {\n    if (varint_to_i32(pb[7][0].data) >>> 0) storage = 1;else storage = 0;\n  }\n  var ri = mappa(pb[5], function (u8) {\n    return parse_TST_TileRowInfo(u8, storage);\n  });\n  return {\n    nrows: varint_to_i32(pb[4][0].data) >>> 0,\n    data: ri.reduce(function (acc, x) {\n      if (!acc[x.R]) acc[x.R] = [];\n      x.cells.forEach(function (cell, C) {\n        if (acc[x.R][C]) throw new Error(\"Duplicate cell r=\".concat(x.R, \" c=\").concat(C));\n        acc[x.R][C] = cell;\n      });\n      return acc;\n    }, [])\n  };\n}\nfunction parse_TSD_CommentStorageArchive(M, data) {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j;\n  var out = {\n    t: \"\",\n    a: \"\"\n  };\n  var csp = parse_shallow(data);\n  if ((_b = (_a = csp == null ? void 0 : csp[1]) == null ? void 0 : _a[0]) == null ? void 0 : _b.data) out.t = u8str((_d = (_c = csp == null ? void 0 : csp[1]) == null ? void 0 : _c[0]) == null ? void 0 : _d.data) || \"\";\n  if ((_f = (_e = csp == null ? void 0 : csp[3]) == null ? void 0 : _e[0]) == null ? void 0 : _f.data) {\n    var as = M[parse_TSP_Reference((_h = (_g = csp == null ? void 0 : csp[3]) == null ? void 0 : _g[0]) == null ? void 0 : _h.data)][0];\n    var asp = parse_shallow(as.data);\n    if ((_j = (_i = asp[1]) == null ? void 0 : _i[0]) == null ? void 0 : _j.data) out.a = u8str(asp[1][0].data);\n  }\n  if (csp == null ? void 0 : csp[4]) {\n    out.replies = [];\n    csp[4].forEach(function (pi) {\n      var cs = M[parse_TSP_Reference(pi.data)][0];\n      out.replies.push(parse_TSD_CommentStorageArchive(M, cs.data));\n    });\n  }\n  return out;\n}\nfunction iwa_to_s5s_comment(iwa) {\n  var out = [];\n  out.push({\n    t: iwa.t || \"\",\n    a: iwa.a,\n    T: iwa.replies && iwa.replies.length > 0\n  });\n  if (iwa.replies) iwa.replies.forEach(function (reply) {\n    out.push({\n      t: reply.t || \"\",\n      a: reply.a,\n      T: true\n    });\n  });\n  return out;\n}\nfunction s5s_to_iwa_comment(s5s) {\n  var out = {\n    a: \"\",\n    t: \"\",\n    replies: []\n  };\n  for (var i = 0; i < s5s.length; ++i) {\n    if (i == 0) {\n      out.a = s5s[i].a;\n      out.t = s5s[i].t;\n    } else {\n      out.replies.push({\n        a: s5s[i].a,\n        t: s5s[i].t\n      });\n    }\n  }\n  return out;\n}\nfunction parse_TST_TableModelArchive(M, root, ws, opts) {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _i;\n  var pb = parse_shallow(root.data);\n  var range = {\n    s: {\n      r: 0,\n      c: 0\n    },\n    e: {\n      r: 0,\n      c: 0\n    }\n  };\n  range.e.r = (varint_to_i32(pb[6][0].data) >>> 0) - 1;\n  if (range.e.r < 0) throw new Error(\"Invalid row varint \".concat(pb[6][0].data));\n  range.e.c = (varint_to_i32(pb[7][0].data) >>> 0) - 1;\n  if (range.e.c < 0) throw new Error(\"Invalid col varint \".concat(pb[7][0].data));\n  ws[\"!ref\"] = encode_range(range);\n  var dense = ws[\"!data\"] != null,\n    dws = ws;\n  var store = parse_shallow(pb[4][0].data);\n  var lut = numbers_lut_new();\n  if ((_a = store[4]) == null ? void 0 : _a[0]) lut.sst = parse_TST_TableDataList(M, M[parse_TSP_Reference(store[4][0].data)][0]);\n  if ((_b = store[6]) == null ? void 0 : _b[0]) lut.fmla = parse_TST_TableDataList(M, M[parse_TSP_Reference(store[6][0].data)][0]);\n  if ((_c = store[11]) == null ? void 0 : _c[0]) lut.ofmt = parse_TST_TableDataList(M, M[parse_TSP_Reference(store[11][0].data)][0]);\n  if ((_d = store[12]) == null ? void 0 : _d[0]) lut.ferr = parse_TST_TableDataList(M, M[parse_TSP_Reference(store[12][0].data)][0]);\n  if ((_e = store[17]) == null ? void 0 : _e[0]) lut.rsst = parse_TST_TableDataList(M, M[parse_TSP_Reference(store[17][0].data)][0]);\n  if ((_f = store[19]) == null ? void 0 : _f[0]) lut.cmnt = parse_TST_TableDataList(M, M[parse_TSP_Reference(store[19][0].data)][0]);\n  if ((_g = store[22]) == null ? void 0 : _g[0]) lut.nfmt = parse_TST_TableDataList(M, M[parse_TSP_Reference(store[22][0].data)][0]);\n  var tile = parse_shallow(store[3][0].data);\n  var _R = 0;\n  tile[1].forEach(function (t) {\n    var tl = parse_shallow(t.data);\n    var ref2 = M[parse_TSP_Reference(tl[2][0].data)][0];\n    var mtype2 = varint_to_i32(ref2.meta[1][0].data);\n    if (mtype2 != 6002) throw new Error(\"6001 unexpected reference to \".concat(mtype2));\n    var _tile = parse_TST_Tile(M, ref2);\n    _tile.data.forEach(function (row, R) {\n      row.forEach(function (buf, C) {\n        var res = parse_cell_storage(buf, lut, opts);\n        if (res) {\n          if (dense) {\n            if (!dws[\"!data\"][_R + R]) dws[\"!data\"][_R + R] = [];\n            dws[\"!data\"][_R + R][C] = res;\n          } else {\n            ws[encode_col(C) + encode_row(_R + R)] = res;\n          }\n        }\n      });\n    });\n    _R += _tile.nrows;\n  });\n  if ((_h = store[13]) == null ? void 0 : _h[0]) {\n    var ref = M[parse_TSP_Reference(store[13][0].data)][0];\n    var mtype = varint_to_i32(ref.meta[1][0].data);\n    if (mtype != 6144) throw new Error(\"Expected merge type 6144, found \".concat(mtype));\n    ws[\"!merges\"] = (_i = parse_shallow(ref.data)) == null ? void 0 : _i[1].map(function (pi) {\n      var merge = parse_shallow(pi.data);\n      var origin = u8_to_dataview(parse_shallow(merge[1][0].data)[1][0].data),\n        size = u8_to_dataview(parse_shallow(merge[2][0].data)[1][0].data);\n      return {\n        s: {\n          r: origin.getUint16(0, true),\n          c: origin.getUint16(2, true)\n        },\n        e: {\n          r: origin.getUint16(0, true) + size.getUint16(0, true) - 1,\n          c: origin.getUint16(2, true) + size.getUint16(2, true) - 1\n        }\n      };\n    });\n  }\n}\nfunction parse_TST_TableInfoArchive(M, root, opts) {\n  var pb = parse_shallow(root.data);\n  var out = {\n    \"!ref\": \"A1\"\n  };\n  if (opts == null ? void 0 : opts.dense) out[\"!data\"] = [];\n  var tableref = M[parse_TSP_Reference(pb[2][0].data)];\n  var mtype = varint_to_i32(tableref[0].meta[1][0].data);\n  if (mtype != 6001) throw new Error(\"6000 unexpected reference to \".concat(mtype));\n  parse_TST_TableModelArchive(M, tableref[0], out, opts);\n  return out;\n}\nfunction parse_TN_SheetArchive(M, root, opts) {\n  var _a;\n  var pb = parse_shallow(root.data);\n  var out = {\n    name: ((_a = pb[1]) == null ? void 0 : _a[0]) ? u8str(pb[1][0].data) : \"\",\n    sheets: []\n  };\n  var shapeoffs = mappa(pb[2], parse_TSP_Reference);\n  shapeoffs.forEach(function (off) {\n    M[off].forEach(function (m) {\n      var mtype = varint_to_i32(m.meta[1][0].data);\n      if (mtype == 6e3) out.sheets.push(parse_TST_TableInfoArchive(M, m, opts));\n    });\n  });\n  return out;\n}\nfunction parse_TN_DocumentArchive(M, root, opts) {\n  var _a;\n  var out = book_new();\n  out.Workbook = {\n    WBProps: {\n      date1904: true\n    }\n  };\n  var pb = parse_shallow(root.data);\n  if ((_a = pb[2]) == null ? void 0 : _a[0]) throw new Error(\"Keynote presentations are not supported\");\n  var sheetoffs = mappa(pb[1], parse_TSP_Reference);\n  sheetoffs.forEach(function (off) {\n    M[off].forEach(function (m) {\n      var mtype = varint_to_i32(m.meta[1][0].data);\n      if (mtype == 2) {\n        var root2 = parse_TN_SheetArchive(M, m, opts);\n        root2.sheets.forEach(function (sheet, idx) {\n          book_append_sheet(out, sheet, idx == 0 ? root2.name : root2.name + \"_\" + idx, true);\n        });\n      }\n    });\n  });\n  if (out.SheetNames.length == 0) throw new Error(\"Empty NUMBERS file\");\n  out.bookType = \"numbers\";\n  return out;\n}\nfunction parse_numbers_iwa(cfb, opts) {\n  var _a, _b, _c, _d, _e, _f, _g;\n  var M = {},\n    indices = [];\n  cfb.FullPaths.forEach(function (p) {\n    if (p.match(/\\.iwpv2/)) throw new Error(\"Unsupported password protection\");\n  });\n  cfb.FileIndex.forEach(function (s) {\n    if (!s.name.match(/\\.iwa$/)) return;\n    if (s.content[0] != 0) return;\n    var o;\n    try {\n      o = decompress_iwa_file(s.content);\n    } catch (e) {\n      return console.log(\"?? \" + s.content.length + \" \" + (e.message || e));\n    }\n    var packets;\n    try {\n      packets = parse_iwa_file(o);\n    } catch (e) {\n      return console.log(\"## \" + (e.message || e));\n    }\n    packets.forEach(function (packet) {\n      M[packet.id] = packet.messages;\n      indices.push(packet.id);\n    });\n  });\n  if (!indices.length) throw new Error(\"File has no messages\");\n  if (((_c = (_b = (_a = M == null ? void 0 : M[1]) == null ? void 0 : _a[0].meta) == null ? void 0 : _b[1]) == null ? void 0 : _c[0].data) && varint_to_i32(M[1][0].meta[1][0].data) == 1e4) throw new Error(\"Pages documents are not supported\");\n  var docroot = ((_g = (_f = (_e = (_d = M == null ? void 0 : M[1]) == null ? void 0 : _d[0]) == null ? void 0 : _e.meta) == null ? void 0 : _f[1]) == null ? void 0 : _g[0].data) && varint_to_i32(M[1][0].meta[1][0].data) == 1 && M[1][0];\n  if (!docroot) indices.forEach(function (idx) {\n    M[idx].forEach(function (iwam) {\n      var mtype = varint_to_i32(iwam.meta[1][0].data) >>> 0;\n      if (mtype == 1) {\n        if (!docroot) docroot = iwam;else throw new Error(\"Document has multiple roots\");\n      }\n    });\n  });\n  if (!docroot) throw new Error(\"Cannot find Document root\");\n  return parse_TN_DocumentArchive(M, docroot, opts);\n}\nfunction write_TST_TileRowInfo(data, lut, wide) {\n  var _a, _b, _c;\n  var tri = [[], [{\n    type: 0,\n    data: write_varint49(0)\n  }], [{\n    type: 0,\n    data: write_varint49(0)\n  }], [{\n    type: 2,\n    data: new Uint8Array([])\n  }], [{\n    type: 2,\n    data: new Uint8Array(Array.from({\n      length: 510\n    }, function () {\n      return 255;\n    }))\n  }], [{\n    type: 0,\n    data: write_varint49(5)\n  }], [{\n    type: 2,\n    data: new Uint8Array([])\n  }], [{\n    type: 2,\n    data: new Uint8Array(Array.from({\n      length: 510\n    }, function () {\n      return 255;\n    }))\n  }], [{\n    type: 0,\n    data: write_varint49(1)\n  }]];\n  if (!((_a = tri[6]) == null ? void 0 : _a[0]) || !((_b = tri[7]) == null ? void 0 : _b[0])) throw \"Mutation only works on post-BNC storages!\";\n  var cnt = 0;\n  if (tri[7][0].data.length < 2 * data.length) {\n    var new_7 = new Uint8Array(2 * data.length);\n    new_7.set(tri[7][0].data);\n    tri[7][0].data = new_7;\n  }\n  if (tri[4][0].data.length < 2 * data.length) {\n    var new_4 = new Uint8Array(2 * data.length);\n    new_4.set(tri[4][0].data);\n    tri[4][0].data = new_4;\n  }\n  var dv = u8_to_dataview(tri[7][0].data),\n    last_offset = 0,\n    cell_storage = [];\n  var _dv = u8_to_dataview(tri[4][0].data),\n    _last_offset = 0,\n    _cell_storage = [];\n  var width = wide ? 4 : 1;\n  for (var C = 0; C < data.length; ++C) {\n    if (data[C] == null || data[C].t == \"z\" && !((_c = data[C].c) == null ? void 0 : _c.length) || data[C].t == \"e\") {\n      dv.setUint16(C * 2, 65535, true);\n      _dv.setUint16(C * 2, 65535);\n      continue;\n    }\n    dv.setUint16(C * 2, last_offset / width, true);\n    _dv.setUint16(C * 2, _last_offset / width, true);\n    var celload, _celload;\n    switch (data[C].t) {\n      case \"d\":\n        if (data[C].v instanceof Date) {\n          celload = write_new_storage(data[C], lut);\n          _celload = write_old_storage(data[C], lut);\n          break;\n        }\n        celload = write_new_storage(data[C], lut);\n        _celload = write_old_storage(data[C], lut);\n        break;\n      case \"s\":\n      case \"n\":\n      case \"b\":\n      case \"z\":\n        celload = write_new_storage(data[C], lut);\n        _celload = write_old_storage(data[C], lut);\n        break;\n      default:\n        throw new Error(\"Unsupported value \" + data[C]);\n    }\n    cell_storage.push(celload);\n    last_offset += celload.length;\n    {\n      _cell_storage.push(_celload);\n      _last_offset += _celload.length;\n    }\n    ++cnt;\n  }\n  tri[2][0].data = write_varint49(cnt);\n  tri[5][0].data = write_varint49(5);\n  for (; C < tri[7][0].data.length / 2; ++C) {\n    dv.setUint16(C * 2, 65535, true);\n    _dv.setUint16(C * 2, 65535, true);\n  }\n  tri[6][0].data = u8concat(cell_storage);\n  tri[3][0].data = u8concat(_cell_storage);\n  tri[8] = [{\n    type: 0,\n    data: write_varint49(wide ? 1 : 0)\n  }];\n  return tri;\n}\nfunction write_iwam(type, payload) {\n  return {\n    meta: [[], [{\n      type: 0,\n      data: write_varint49(type)\n    }]],\n    data: payload\n  };\n}\nfunction get_unique_msgid(dep, dependents) {\n  if (!dependents.last) dependents.last = 927262;\n  for (var i = dependents.last; i < 2e6; ++i) if (!dependents[i]) {\n    dependents[dependents.last = i] = dep;\n    return i;\n  }\n  throw new Error(\"Too many messages\");\n}\nfunction build_numbers_deps(cfb) {\n  var dependents = {};\n  var indices = [];\n  cfb.FileIndex.map(function (fi, idx) {\n    return [fi, cfb.FullPaths[idx]];\n  }).forEach(function (row) {\n    var fi = row[0],\n      fp = row[1];\n    if (fi.type != 2) return;\n    if (!fi.name.match(/\\.iwa/)) return;\n    if (fi.content[0] != 0) return;\n    parse_iwa_file(decompress_iwa_file(fi.content)).forEach(function (packet) {\n      indices.push(packet.id);\n      dependents[packet.id] = {\n        deps: [],\n        location: fp,\n        type: varint_to_i32(packet.messages[0].meta[1][0].data)\n      };\n    });\n  });\n  cfb.FileIndex.forEach(function (fi) {\n    if (!fi.name.match(/\\.iwa/)) return;\n    if (fi.content[0] != 0) return;\n    parse_iwa_file(decompress_iwa_file(fi.content)).forEach(function (ia) {\n      ia.messages.forEach(function (mess) {\n        [5, 6].forEach(function (f) {\n          if (!mess.meta[f]) return;\n          mess.meta[f].forEach(function (x) {\n            dependents[ia.id].deps.push(varint_to_i32(x.data));\n          });\n        });\n      });\n    });\n  });\n  return dependents;\n}\nfunction write_TSP_Color_RGB(r, g, b) {\n  return write_shallow([[], [{\n    type: 0,\n    data: write_varint49(1)\n  }], [], [{\n    type: 5,\n    data: new Uint8Array(Float32Array.from([r / 255]).buffer)\n  }], [{\n    type: 5,\n    data: new Uint8Array(Float32Array.from([g / 255]).buffer)\n  }], [{\n    type: 5,\n    data: new Uint8Array(Float32Array.from([b / 255]).buffer)\n  }], [{\n    type: 5,\n    data: new Uint8Array(Float32Array.from([1]).buffer)\n  }], [], [], [], [], [], [{\n    type: 0,\n    data: write_varint49(1)\n  }]]);\n}\nfunction get_author_color(n) {\n  switch (n) {\n    case 0:\n      return write_TSP_Color_RGB(99, 222, 171);\n    case 1:\n      return write_TSP_Color_RGB(162, 197, 240);\n    case 2:\n      return write_TSP_Color_RGB(255, 189, 189);\n  }\n  return write_TSP_Color_RGB(Math.random() * 255, Math.random() * 255, Math.random() * 255);\n}\nfunction write_numbers_iwa(wb, opts) {\n  if (!opts || !opts.numbers) throw new Error(\"Must pass a `numbers` option -- check the README\");\n  var cfb = CFB.read(opts.numbers, {\n    type: \"base64\"\n  });\n  var deps = build_numbers_deps(cfb);\n  var docroot = numbers_iwa_find(cfb, deps, 1);\n  if (docroot == null) throw \"Could not find message \".concat(1, \" in Numbers template\");\n  var sheetrefs = mappa(parse_shallow(docroot.messages[0].data)[1], parse_TSP_Reference);\n  if (sheetrefs.length > 1) throw new Error(\"Template NUMBERS file must have exactly one sheet\");\n  wb.SheetNames.forEach(function (name, idx) {\n    if (idx >= 1) {\n      numbers_add_ws(cfb, deps, idx + 1);\n      docroot = numbers_iwa_find(cfb, deps, 1);\n      sheetrefs = mappa(parse_shallow(docroot.messages[0].data)[1], parse_TSP_Reference);\n    }\n    write_numbers_ws(cfb, deps, wb.Sheets[name], name, idx, sheetrefs[idx]);\n  });\n  return cfb;\n}\nfunction numbers_iwa_doit(cfb, deps, id, cb) {\n  var entry = CFB.find(cfb, deps[id].location);\n  if (!entry) throw \"Could not find \".concat(deps[id].location, \" in Numbers template\");\n  var x = parse_iwa_file(decompress_iwa_file(entry.content));\n  var ainfo = x.find(function (packet) {\n    return packet.id == id;\n  });\n  cb(ainfo, x);\n  entry.content = compress_iwa_file(write_iwa_file(x));\n  entry.size = entry.content.length;\n}\nfunction numbers_iwa_find(cfb, deps, id) {\n  var entry = CFB.find(cfb, deps[id].location);\n  if (!entry) throw \"Could not find \".concat(deps[id].location, \" in Numbers template\");\n  var x = parse_iwa_file(decompress_iwa_file(entry.content));\n  var ainfo = x.find(function (packet) {\n    return packet.id == id;\n  });\n  return ainfo;\n}\nfunction numbers_add_meta(mlist, newid, newloc) {\n  mlist[3].push({\n    type: 2,\n    data: write_shallow([[], [{\n      type: 0,\n      data: write_varint49(newid)\n    }], [{\n      type: 2,\n      data: stru8(newloc.replace(/-.*$/, \"\"))\n    }], [{\n      type: 2,\n      data: stru8(newloc)\n    }], [{\n      type: 2,\n      data: new Uint8Array([2, 0, 0])\n    }], [{\n      type: 2,\n      data: new Uint8Array([2, 0, 0])\n    }], [], [], [], [], [{\n      type: 0,\n      data: write_varint49(0)\n    }], [], [{\n      type: 0,\n      data: write_varint49(0)\n    }]])\n  });\n  mlist[1] = [{\n    type: 0,\n    data: write_varint49(Math.max(newid + 1, varint_to_i32(mlist[1][0].data)))\n  }];\n}\nfunction numbers_add_msg(cfb, type, msg, path, deps, id) {\n  if (!id) id = get_unique_msgid({\n    deps: [],\n    location: \"\",\n    type: type\n  }, deps);\n  var loc = \"\".concat(path, \"-\").concat(id, \".iwa\");\n  deps[id].location = \"Root Entry\" + loc;\n  CFB.utils.cfb_add(cfb, loc, compress_iwa_file(write_iwa_file([{\n    id: id,\n    messages: [write_iwam(type, write_shallow(msg))]\n  }])));\n  var newloc = loc.replace(/^[\\/]/, \"\").replace(/^Index\\//, \"\").replace(/\\.iwa$/, \"\");\n  numbers_iwa_doit(cfb, deps, 2, function (ai) {\n    var mlist = parse_shallow(ai.messages[0].data);\n    numbers_add_meta(mlist, id || 0, newloc);\n    ai.messages[0].data = write_shallow(mlist);\n  });\n  return id;\n}\nfunction numbers_meta_add_dep(mlist, deps, id, dep) {\n  var loc = deps[id].location.replace(/^Root Entry\\//, \"\").replace(/^Index\\//, \"\").replace(/\\.iwa$/, \"\");\n  var parentidx = mlist[3].findIndex(function (m) {\n    var _a, _b;\n    var mm = parse_shallow(m.data);\n    if ((_a = mm[3]) == null ? void 0 : _a[0]) return u8str(mm[3][0].data) == loc;\n    if (((_b = mm[2]) == null ? void 0 : _b[0]) && u8str(mm[2][0].data) == loc) return true;\n    return false;\n  });\n  var parent = parse_shallow(mlist[3][parentidx].data);\n  if (!parent[6]) parent[6] = [];\n  (Array.isArray(dep) ? dep : [dep]).forEach(function (dep2) {\n    parent[6].push({\n      type: 2,\n      data: write_shallow([[], [{\n        type: 0,\n        data: write_varint49(dep2)\n      }]])\n    });\n  });\n  mlist[3][parentidx].data = write_shallow(parent);\n}\nfunction numbers_meta_del_dep(mlist, deps, id, dep) {\n  var loc = deps[id].location.replace(/^Root Entry\\//, \"\").replace(/^Index\\//, \"\").replace(/\\.iwa$/, \"\");\n  var parentidx = mlist[3].findIndex(function (m) {\n    var _a, _b;\n    var mm = parse_shallow(m.data);\n    if ((_a = mm[3]) == null ? void 0 : _a[0]) return u8str(mm[3][0].data) == loc;\n    if (((_b = mm[2]) == null ? void 0 : _b[0]) && u8str(mm[2][0].data) == loc) return true;\n    return false;\n  });\n  var parent = parse_shallow(mlist[3][parentidx].data);\n  if (!parent[6]) parent[6] = [];\n  parent[6] = parent[6].filter(function (m) {\n    return varint_to_i32(parse_shallow(m.data)[1][0].data) != dep;\n  });\n  mlist[3][parentidx].data = write_shallow(parent);\n}\nfunction numbers_add_ws(cfb, deps, wsidx) {\n  var sheetref = -1,\n    newsheetref = -1;\n  var remap = {};\n  numbers_iwa_doit(cfb, deps, 1, function (docroot, arch) {\n    var doc = parse_shallow(docroot.messages[0].data);\n    sheetref = parse_TSP_Reference(parse_shallow(docroot.messages[0].data)[1][0].data);\n    newsheetref = get_unique_msgid({\n      deps: [1],\n      location: deps[sheetref].location,\n      type: 2\n    }, deps);\n    remap[sheetref] = newsheetref;\n    numbers_add_oref(docroot, newsheetref);\n    doc[1].push({\n      type: 2,\n      data: write_TSP_Reference(newsheetref)\n    });\n    var sheet = numbers_iwa_find(cfb, deps, sheetref);\n    sheet.id = newsheetref;\n    if (deps[1].location == deps[newsheetref].location) arch.push(sheet);else numbers_iwa_doit(cfb, deps, newsheetref, function (_, x) {\n      return x.push(sheet);\n    });\n    docroot.messages[0].data = write_shallow(doc);\n  });\n  var tiaref = -1;\n  numbers_iwa_doit(cfb, deps, newsheetref, function (sheetroot, arch) {\n    var sa = parse_shallow(sheetroot.messages[0].data);\n    for (var i = 3; i <= 69; ++i) delete sa[i];\n    var drawables = mappa(sa[2], parse_TSP_Reference);\n    drawables.forEach(function (n) {\n      return numbers_del_oref(sheetroot, n);\n    });\n    tiaref = get_unique_msgid({\n      deps: [newsheetref],\n      location: deps[drawables[0]].location,\n      type: deps[drawables[0]].type\n    }, deps);\n    numbers_add_oref(sheetroot, tiaref);\n    remap[drawables[0]] = tiaref;\n    sa[2] = [{\n      type: 2,\n      data: write_TSP_Reference(tiaref)\n    }];\n    var tia = numbers_iwa_find(cfb, deps, drawables[0]);\n    tia.id = tiaref;\n    if (deps[drawables[0]].location == deps[newsheetref].location) arch.push(tia);else {\n      numbers_iwa_doit(cfb, deps, 2, function (ai) {\n        var mlist = parse_shallow(ai.messages[0].data);\n        numbers_meta_add_dep(mlist, deps, newsheetref, tiaref);\n        ai.messages[0].data = write_shallow(mlist);\n      });\n      numbers_iwa_doit(cfb, deps, tiaref, function (_, x) {\n        return x.push(tia);\n      });\n    }\n    sheetroot.messages[0].data = write_shallow(sa);\n  });\n  var tmaref = -1;\n  numbers_iwa_doit(cfb, deps, tiaref, function (tiaroot, arch) {\n    var tia = parse_shallow(tiaroot.messages[0].data);\n    var da = parse_shallow(tia[1][0].data);\n    for (var i = 3; i <= 69; ++i) delete da[i];\n    var dap = parse_TSP_Reference(da[2][0].data);\n    da[2][0].data = write_TSP_Reference(remap[dap]);\n    tia[1][0].data = write_shallow(da);\n    var oldtmaref = parse_TSP_Reference(tia[2][0].data);\n    numbers_del_oref(tiaroot, oldtmaref);\n    tmaref = get_unique_msgid({\n      deps: [tiaref],\n      location: deps[oldtmaref].location,\n      type: deps[oldtmaref].type\n    }, deps);\n    numbers_add_oref(tiaroot, tmaref);\n    remap[oldtmaref] = tmaref;\n    tia[2][0].data = write_TSP_Reference(tmaref);\n    var tma = numbers_iwa_find(cfb, deps, oldtmaref);\n    tma.id = tmaref;\n    if (deps[tiaref].location == deps[tmaref].location) arch.push(tma);else numbers_iwa_doit(cfb, deps, tmaref, function (_, x) {\n      return x.push(tma);\n    });\n    tiaroot.messages[0].data = write_shallow(tia);\n  });\n  numbers_iwa_doit(cfb, deps, tmaref, function (tmaroot, arch) {\n    var _a, _b;\n    var tma = parse_shallow(tmaroot.messages[0].data);\n    var uuid = u8str(tma[1][0].data),\n      new_uuid = uuid.replace(/-[A-Z0-9]*/, \"-\".concat((\"0000\" + wsidx.toString(16)).slice(-4)));\n    tma[1][0].data = stru8(new_uuid);\n    [12, 13, 29, 31, 32, 33, 39, 44, 47, 81, 82, 84].forEach(function (n) {\n      return delete tma[n];\n    });\n    if (tma[45]) {\n      var srrta = parse_shallow(tma[45][0].data);\n      var ref = parse_TSP_Reference(srrta[1][0].data);\n      numbers_del_oref(tmaroot, ref);\n      delete tma[45];\n    }\n    if (tma[70]) {\n      var hsoa = parse_shallow(tma[70][0].data);\n      (_a = hsoa[2]) == null ? void 0 : _a.forEach(function (item) {\n        var hsa = parse_shallow(item.data);\n        [2, 3].map(function (n) {\n          return hsa[n][0];\n        }).forEach(function (hseadata) {\n          var hsea = parse_shallow(hseadata.data);\n          if (!hsea[8]) return;\n          var ref2 = parse_TSP_Reference(hsea[8][0].data);\n          numbers_del_oref(tmaroot, ref2);\n        });\n      });\n      delete tma[70];\n    }\n    [46, 30, 34, 35, 36, 38, 48, 49, 60, 61, 62, 63, 64, 71, 72, 73, 74, 75, 85, 86, 87, 88, 89].forEach(function (n) {\n      if (!tma[n]) return;\n      var ref2 = parse_TSP_Reference(tma[n][0].data);\n      delete tma[n];\n      numbers_del_oref(tmaroot, ref2);\n    });\n    var store = parse_shallow(tma[4][0].data);\n    {\n      [2, 4, 5, 6, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22].forEach(function (n) {\n        var _a2;\n        if (!((_a2 = store[n]) == null ? void 0 : _a2[0])) return;\n        var oldref = parse_TSP_Reference(store[n][0].data);\n        var newref = get_unique_msgid({\n          deps: [tmaref],\n          location: deps[oldref].location,\n          type: deps[oldref].type\n        }, deps);\n        numbers_del_oref(tmaroot, oldref);\n        numbers_add_oref(tmaroot, newref);\n        remap[oldref] = newref;\n        var msg = numbers_iwa_find(cfb, deps, oldref);\n        msg.id = newref;\n        if (deps[oldref].location == deps[tmaref].location) arch.push(msg);else {\n          deps[newref].location = deps[oldref].location.replace(oldref.toString(), newref.toString());\n          if (deps[newref].location == deps[oldref].location) deps[newref].location = deps[newref].location.replace(/\\.iwa/, \"-\".concat(newref, \".iwa\"));\n          CFB.utils.cfb_add(cfb, deps[newref].location, compress_iwa_file(write_iwa_file([msg])));\n          var newloc = deps[newref].location.replace(/^Root Entry\\//, \"\").replace(/^Index\\//, \"\").replace(/\\.iwa$/, \"\");\n          numbers_iwa_doit(cfb, deps, 2, function (ai) {\n            var mlist = parse_shallow(ai.messages[0].data);\n            numbers_add_meta(mlist, newref, newloc);\n            numbers_meta_add_dep(mlist, deps, tmaref, newref);\n            ai.messages[0].data = write_shallow(mlist);\n          });\n        }\n        store[n][0].data = write_TSP_Reference(newref);\n      });\n      var row_headers = parse_shallow(store[1][0].data);\n      {\n        (_b = row_headers[2]) == null ? void 0 : _b.forEach(function (tspref) {\n          var oldref = parse_TSP_Reference(tspref.data);\n          var newref = get_unique_msgid({\n            deps: [tmaref],\n            location: deps[oldref].location,\n            type: deps[oldref].type\n          }, deps);\n          numbers_del_oref(tmaroot, oldref);\n          numbers_add_oref(tmaroot, newref);\n          remap[oldref] = newref;\n          var msg = numbers_iwa_find(cfb, deps, oldref);\n          msg.id = newref;\n          if (deps[oldref].location == deps[tmaref].location) {\n            arch.push(msg);\n          } else {\n            deps[newref].location = deps[oldref].location.replace(oldref.toString(), newref.toString());\n            if (deps[newref].location == deps[oldref].location) deps[newref].location = deps[newref].location.replace(/\\.iwa/, \"-\".concat(newref, \".iwa\"));\n            CFB.utils.cfb_add(cfb, deps[newref].location, compress_iwa_file(write_iwa_file([msg])));\n            var newloc = deps[newref].location.replace(/^Root Entry\\//, \"\").replace(/^Index\\//, \"\").replace(/\\.iwa$/, \"\");\n            numbers_iwa_doit(cfb, deps, 2, function (ai) {\n              var mlist = parse_shallow(ai.messages[0].data);\n              numbers_add_meta(mlist, newref, newloc);\n              numbers_meta_add_dep(mlist, deps, tmaref, newref);\n              ai.messages[0].data = write_shallow(mlist);\n            });\n          }\n          tspref.data = write_TSP_Reference(newref);\n        });\n      }\n      store[1][0].data = write_shallow(row_headers);\n      var tiles = parse_shallow(store[3][0].data);\n      {\n        tiles[1].forEach(function (t) {\n          var tst = parse_shallow(t.data);\n          var oldtileref = parse_TSP_Reference(tst[2][0].data);\n          var newtileref = remap[oldtileref];\n          if (!remap[oldtileref]) {\n            newtileref = get_unique_msgid({\n              deps: [tmaref],\n              location: \"\",\n              type: deps[oldtileref].type\n            }, deps);\n            deps[newtileref].location = \"Root Entry/Index/Tables/Tile-\".concat(newtileref, \".iwa\");\n            remap[oldtileref] = newtileref;\n            var oldtile = numbers_iwa_find(cfb, deps, oldtileref);\n            oldtile.id = newtileref;\n            numbers_del_oref(tmaroot, oldtileref);\n            numbers_add_oref(tmaroot, newtileref);\n            CFB.utils.cfb_add(cfb, \"/Index/Tables/Tile-\".concat(newtileref, \".iwa\"), compress_iwa_file(write_iwa_file([oldtile])));\n            numbers_iwa_doit(cfb, deps, 2, function (ai) {\n              var mlist = parse_shallow(ai.messages[0].data);\n              mlist[3].push({\n                type: 2,\n                data: write_shallow([[], [{\n                  type: 0,\n                  data: write_varint49(newtileref)\n                }], [{\n                  type: 2,\n                  data: stru8(\"Tables/Tile\")\n                }], [{\n                  type: 2,\n                  data: stru8(\"Tables/Tile-\".concat(newtileref))\n                }], [{\n                  type: 2,\n                  data: new Uint8Array([2, 0, 0])\n                }], [{\n                  type: 2,\n                  data: new Uint8Array([2, 0, 0])\n                }], [], [], [], [], [{\n                  type: 0,\n                  data: write_varint49(0)\n                }], [], [{\n                  type: 0,\n                  data: write_varint49(0)\n                }]])\n              });\n              mlist[1] = [{\n                type: 0,\n                data: write_varint49(Math.max(newtileref + 1, varint_to_i32(mlist[1][0].data)))\n              }];\n              numbers_meta_add_dep(mlist, deps, tmaref, newtileref);\n              ai.messages[0].data = write_shallow(mlist);\n            });\n          }\n          tst[2][0].data = write_TSP_Reference(newtileref);\n          t.data = write_shallow(tst);\n        });\n      }\n      store[3][0].data = write_shallow(tiles);\n    }\n    tma[4][0].data = write_shallow(store);\n    tmaroot.messages[0].data = write_shallow(tma);\n  });\n}\nfunction write_numbers_ws(cfb, deps, ws, wsname, sheetidx, rootref) {\n  var drawables = [];\n  numbers_iwa_doit(cfb, deps, rootref, function (docroot) {\n    var sheetref = parse_shallow(docroot.messages[0].data);\n    {\n      sheetref[1] = [{\n        type: 2,\n        data: stru8(wsname)\n      }];\n      drawables = mappa(sheetref[2], parse_TSP_Reference);\n    }\n    docroot.messages[0].data = write_shallow(sheetref);\n  });\n  var tia = numbers_iwa_find(cfb, deps, drawables[0]);\n  var tmaref = parse_TSP_Reference(parse_shallow(tia.messages[0].data)[2][0].data);\n  numbers_iwa_doit(cfb, deps, tmaref, function (docroot, x) {\n    return write_numbers_tma(cfb, deps, ws, docroot, x, tmaref);\n  });\n}\nvar USE_WIDE_ROWS = true;\nfunction write_numbers_tma(cfb, deps, ws, tmaroot, tmafile, tmaref) {\n  var range = decode_range(ws[\"!ref\"]);\n  range.s.r = range.s.c = 0;\n  var trunc = false;\n  if (range.e.c > 999) {\n    trunc = true;\n    range.e.c = 999;\n  }\n  if (range.e.r > 999999) {\n    trunc = true;\n    range.e.r = 999999;\n  }\n  if (trunc) console.error(\"Truncating to \".concat(encode_range(range)));\n  var data = [];\n  if (ws[\"!data\"]) data = ws[\"!data\"];else {\n    var colstr = [];\n    for (var _C = 0; _C <= range.e.c; ++_C) colstr[_C] = encode_col(_C);\n    for (var R_ = 0; R_ <= range.e.r; ++R_) {\n      data[R_] = [];\n      var _R = \"\" + (R_ + 1);\n      for (_C = 0; _C <= range.e.c; ++_C) {\n        var _cell = ws[colstr[_C] + _R];\n        if (!_cell) continue;\n        data[R_][_C] = _cell;\n      }\n    }\n  }\n  var LUT = {\n    cmnt: [{\n      a: \"~54ee77S~\",\n      t: \"... the people who are crazy enough to think they can change the world, are the ones who do.\"\n    }],\n    ferr: [],\n    fmla: [],\n    nfmt: [],\n    ofmt: [],\n    rsst: [{\n      v: \"~54ee77S~\",\n      l: \"https://sheetjs.com/\"\n    }],\n    sst: [\"~Sh33tJ5~\"]\n  };\n  var pb = parse_shallow(tmaroot.messages[0].data);\n  {\n    pb[6][0].data = write_varint49(range.e.r + 1);\n    pb[7][0].data = write_varint49(range.e.c + 1);\n    delete pb[46];\n    var store = parse_shallow(pb[4][0].data);\n    {\n      var row_header_ref = parse_TSP_Reference(parse_shallow(store[1][0].data)[2][0].data);\n      numbers_iwa_doit(cfb, deps, row_header_ref, function (rowhead, _x) {\n        var _a;\n        var base_bucket = parse_shallow(rowhead.messages[0].data);\n        if ((_a = base_bucket == null ? void 0 : base_bucket[2]) == null ? void 0 : _a[0]) for (var R2 = 0; R2 < data.length; ++R2) {\n          var _bucket = parse_shallow(base_bucket[2][0].data);\n          _bucket[1][0].data = write_varint49(R2);\n          _bucket[4][0].data = write_varint49(data[R2].length);\n          base_bucket[2][R2] = {\n            type: base_bucket[2][0].type,\n            data: write_shallow(_bucket)\n          };\n        }\n        rowhead.messages[0].data = write_shallow(base_bucket);\n      });\n      var col_header_ref = parse_TSP_Reference(store[2][0].data);\n      numbers_iwa_doit(cfb, deps, col_header_ref, function (colhead, _x) {\n        var base_bucket = parse_shallow(colhead.messages[0].data);\n        for (var C = 0; C <= range.e.c; ++C) {\n          var _bucket = parse_shallow(base_bucket[2][0].data);\n          _bucket[1][0].data = write_varint49(C);\n          _bucket[4][0].data = write_varint49(range.e.r + 1);\n          base_bucket[2][C] = {\n            type: base_bucket[2][0].type,\n            data: write_shallow(_bucket)\n          };\n        }\n        colhead.messages[0].data = write_shallow(base_bucket);\n      });\n      var rbtree = parse_shallow(store[9][0].data);\n      rbtree[1] = [];\n      var tilestore = parse_shallow(store[3][0].data);\n      {\n        var tstride = 256;\n        tilestore[2] = [{\n          type: 0,\n          data: write_varint49(tstride)\n        }];\n        var tileref = parse_TSP_Reference(parse_shallow(tilestore[1][0].data)[2][0].data);\n        var save_token = function () {\n          var metadata = numbers_iwa_find(cfb, deps, 2);\n          var mlist = parse_shallow(metadata.messages[0].data);\n          var mlst = mlist[3].filter(function (m) {\n            return varint_to_i32(parse_shallow(m.data)[1][0].data) == tileref;\n          });\n          return (mlst == null ? void 0 : mlst.length) ? varint_to_i32(parse_shallow(mlst[0].data)[12][0].data) : 0;\n        }();\n        {\n          CFB.utils.cfb_del(cfb, deps[tileref].location);\n          numbers_iwa_doit(cfb, deps, 2, function (ai) {\n            var mlist = parse_shallow(ai.messages[0].data);\n            mlist[3] = mlist[3].filter(function (m) {\n              return varint_to_i32(parse_shallow(m.data)[1][0].data) != tileref;\n            });\n            numbers_meta_del_dep(mlist, deps, tmaref, tileref);\n            ai.messages[0].data = write_shallow(mlist);\n          });\n          numbers_del_oref(tmaroot, tileref);\n        }\n        tilestore[1] = [];\n        var ntiles = Math.ceil((range.e.r + 1) / tstride);\n        for (var tidx = 0; tidx < ntiles; ++tidx) {\n          var newtileid = get_unique_msgid({\n            deps: [],\n            location: \"\",\n            type: 6002\n          }, deps);\n          deps[newtileid].location = \"Root Entry/Index/Tables/Tile-\".concat(newtileid, \".iwa\");\n          var tiledata = [[], [{\n            type: 0,\n            data: write_varint49(0)\n          }], [{\n            type: 0,\n            data: write_varint49(Math.min(range.e.r + 1, (tidx + 1) * tstride))\n          }], [{\n            type: 0,\n            data: write_varint49(0)\n          }], [{\n            type: 0,\n            data: write_varint49(Math.min((tidx + 1) * tstride, range.e.r + 1) - tidx * tstride)\n          }], [], [{\n            type: 0,\n            data: write_varint49(5)\n          }], [{\n            type: 0,\n            data: write_varint49(1)\n          }], [{\n            type: 0,\n            data: write_varint49(1)\n          }]];\n          for (var R = tidx * tstride; R <= Math.min(range.e.r, (tidx + 1) * tstride - 1); ++R) {\n            var tilerow = write_TST_TileRowInfo(data[R], LUT, USE_WIDE_ROWS);\n            tilerow[1][0].data = write_varint49(R - tidx * tstride);\n            tiledata[5].push({\n              data: write_shallow(tilerow),\n              type: 2\n            });\n          }\n          tilestore[1].push({\n            type: 2,\n            data: write_shallow([[], [{\n              type: 0,\n              data: write_varint49(tidx)\n            }], [{\n              type: 2,\n              data: write_TSP_Reference(newtileid)\n            }]])\n          });\n          var newtile = {\n            id: newtileid,\n            messages: [write_iwam(6002, write_shallow(tiledata))]\n          };\n          var tilecontent = compress_iwa_file(write_iwa_file([newtile]));\n          CFB.utils.cfb_add(cfb, \"/Index/Tables/Tile-\".concat(newtileid, \".iwa\"), tilecontent);\n          numbers_iwa_doit(cfb, deps, 2, function (ai) {\n            var mlist = parse_shallow(ai.messages[0].data);\n            mlist[3].push({\n              type: 2,\n              data: write_shallow([[], [{\n                type: 0,\n                data: write_varint49(newtileid)\n              }], [{\n                type: 2,\n                data: stru8(\"Tables/Tile\")\n              }], [{\n                type: 2,\n                data: stru8(\"Tables/Tile-\".concat(newtileid))\n              }], [{\n                type: 2,\n                data: new Uint8Array([2, 0, 0])\n              }], [{\n                type: 2,\n                data: new Uint8Array([2, 0, 0])\n              }], [], [], [], [], [{\n                type: 0,\n                data: write_varint49(0)\n              }], [], [{\n                type: 0,\n                data: write_varint49(save_token)\n              }]])\n            });\n            mlist[1] = [{\n              type: 0,\n              data: write_varint49(Math.max(newtileid + 1, varint_to_i32(mlist[1][0].data)))\n            }];\n            numbers_meta_add_dep(mlist, deps, tmaref, newtileid);\n            ai.messages[0].data = write_shallow(mlist);\n          });\n          numbers_add_oref(tmaroot, newtileid);\n          rbtree[1].push({\n            type: 2,\n            data: write_shallow([[], [{\n              type: 0,\n              data: write_varint49(tidx * tstride)\n            }], [{\n              type: 0,\n              data: write_varint49(tidx)\n            }]])\n          });\n        }\n      }\n      store[3][0].data = write_shallow(tilestore);\n      store[9][0].data = write_shallow(rbtree);\n      store[10] = [{\n        type: 2,\n        data: new Uint8Array([])\n      }];\n      if (ws[\"!merges\"]) {\n        var mergeid = get_unique_msgid({\n          type: 6144,\n          deps: [tmaref],\n          location: deps[tmaref].location\n        }, deps);\n        tmafile.push({\n          id: mergeid,\n          messages: [write_iwam(6144, write_shallow([[], ws[\"!merges\"].map(function (m) {\n            return {\n              type: 2,\n              data: write_shallow([[], [{\n                type: 2,\n                data: write_shallow([[], [{\n                  type: 5,\n                  data: new Uint8Array(new Uint16Array([m.s.r, m.s.c]).buffer)\n                }]])\n              }], [{\n                type: 2,\n                data: write_shallow([[], [{\n                  type: 5,\n                  data: new Uint8Array(new Uint16Array([m.e.r - m.s.r + 1, m.e.c - m.s.c + 1]).buffer)\n                }]])\n              }]])\n            };\n          })]))]\n        });\n        store[13] = [{\n          type: 2,\n          data: write_TSP_Reference(mergeid)\n        }];\n        numbers_iwa_doit(cfb, deps, 2, function (ai) {\n          var mlist = parse_shallow(ai.messages[0].data);\n          numbers_meta_add_dep(mlist, deps, tmaref, mergeid);\n          ai.messages[0].data = write_shallow(mlist);\n        });\n        numbers_add_oref(tmaroot, mergeid);\n      } else delete store[13];\n      var sstref = parse_TSP_Reference(store[4][0].data);\n      numbers_iwa_doit(cfb, deps, sstref, function (sstroot) {\n        var sstdata = parse_shallow(sstroot.messages[0].data);\n        {\n          sstdata[3] = [];\n          LUT.sst.forEach(function (str, i) {\n            if (i == 0) return;\n            sstdata[3].push({\n              type: 2,\n              data: write_shallow([[], [{\n                type: 0,\n                data: write_varint49(i)\n              }], [{\n                type: 0,\n                data: write_varint49(1)\n              }], [{\n                type: 2,\n                data: stru8(str)\n              }]])\n            });\n          });\n        }\n        sstroot.messages[0].data = write_shallow(sstdata);\n      });\n      var rsstref = parse_TSP_Reference(store[17][0].data);\n      numbers_iwa_doit(cfb, deps, rsstref, function (rsstroot) {\n        var rsstdata = parse_shallow(rsstroot.messages[0].data);\n        rsstdata[3] = [];\n        var style_indices = [904980, 903835, 903815, 903845];\n        LUT.rsst.forEach(function (rsst, i) {\n          if (i == 0) return;\n          var tswpsa = [[], [{\n            type: 0,\n            data: new Uint8Array([5])\n          }], [], [{\n            type: 2,\n            data: stru8(rsst.v)\n          }]];\n          tswpsa[10] = [{\n            type: 0,\n            data: new Uint8Array([1])\n          }];\n          tswpsa[19] = [{\n            type: 2,\n            data: new Uint8Array([10, 6, 8, 0, 18, 2, 101, 110])\n          }];\n          tswpsa[5] = [{\n            type: 2,\n            data: new Uint8Array([10, 8, 8, 0, 18, 4, 8, 155, 149, 55])\n          }];\n          tswpsa[2] = [{\n            type: 2,\n            data: new Uint8Array([8, 148, 158, 55])\n          }];\n          tswpsa[6] = [{\n            type: 2,\n            data: new Uint8Array([10, 6, 8, 0, 16, 0, 24, 0])\n          }];\n          tswpsa[7] = [{\n            type: 2,\n            data: new Uint8Array([10, 8, 8, 0, 18, 4, 8, 135, 149, 55])\n          }];\n          tswpsa[8] = [{\n            type: 2,\n            data: new Uint8Array([10, 8, 8, 0, 18, 4, 8, 165, 149, 55])\n          }];\n          tswpsa[14] = [{\n            type: 2,\n            data: new Uint8Array([10, 6, 8, 0, 16, 0, 24, 0])\n          }];\n          tswpsa[24] = [{\n            type: 2,\n            data: new Uint8Array([10, 6, 8, 0, 16, 0, 24, 0])\n          }];\n          var tswpsaid = get_unique_msgid({\n            deps: [],\n            location: \"\",\n            type: 2001\n          }, deps);\n          var tswpsarefs = [];\n          if (rsst.l) {\n            var newhlinkid = numbers_add_msg(cfb, 2032, [[], [], [{\n              type: 2,\n              data: stru8(rsst.l)\n            }]], \"/Index/Tables/DataList\", deps);\n            tswpsa[11] = [];\n            var smartfield = [[], []];\n            if (!smartfield[1]) smartfield[1] = [];\n            smartfield[1].push({\n              type: 2,\n              data: write_shallow([[], [{\n                type: 0,\n                data: write_varint49(0)\n              }], [{\n                type: 2,\n                data: write_TSP_Reference(newhlinkid)\n              }]])\n            });\n            tswpsa[11][0] = {\n              type: 2,\n              data: write_shallow(smartfield)\n            };\n            tswpsarefs.push(newhlinkid);\n          }\n          numbers_add_msg(cfb, 2001, tswpsa, \"/Index/Tables/DataList\", deps, tswpsaid);\n          numbers_iwa_doit(cfb, deps, tswpsaid, function (iwa) {\n            style_indices.forEach(function (ref) {\n              return numbers_add_oref(iwa, ref);\n            });\n            tswpsarefs.forEach(function (ref) {\n              return numbers_add_oref(iwa, ref);\n            });\n          });\n          var rtpaid = numbers_add_msg(cfb, 6218, [[], [{\n            type: 2,\n            data: write_TSP_Reference(tswpsaid)\n          }], [], [{\n            type: 2,\n            data: new Uint8Array([13, 255, 255, 255, 0, 18, 10, 16, 255, 255, 1, 24, 255, 255, 255, 255, 7])\n          }]], \"/Index/Tables/DataList\", deps);\n          numbers_iwa_doit(cfb, deps, rtpaid, function (iwa) {\n            return numbers_add_oref(iwa, tswpsaid);\n          });\n          rsstdata[3].push({\n            type: 2,\n            data: write_shallow([[], [{\n              type: 0,\n              data: write_varint49(i)\n            }], [{\n              type: 0,\n              data: write_varint49(1)\n            }], [], [], [], [], [], [], [{\n              type: 2,\n              data: write_TSP_Reference(rtpaid)\n            }]])\n          });\n          numbers_add_oref(rsstroot, rtpaid);\n          numbers_iwa_doit(cfb, deps, 2, function (ai) {\n            var mlist = parse_shallow(ai.messages[0].data);\n            numbers_meta_add_dep(mlist, deps, rsstref, rtpaid);\n            numbers_meta_add_dep(mlist, deps, rtpaid, tswpsaid);\n            numbers_meta_add_dep(mlist, deps, tswpsaid, tswpsarefs);\n            numbers_meta_add_dep(mlist, deps, tswpsaid, style_indices);\n            ai.messages[0].data = write_shallow(mlist);\n          });\n        });\n        rsstroot.messages[0].data = write_shallow(rsstdata);\n      });\n      if (LUT.cmnt.length > 1) {\n        var cmntref = parse_TSP_Reference(store[19][0].data);\n        var authors = {},\n          iauthor = 0;\n        numbers_iwa_doit(cfb, deps, cmntref, function (cmntroot) {\n          var cmntdata = parse_shallow(cmntroot.messages[0].data);\n          {\n            cmntdata[3] = [];\n            LUT.cmnt.forEach(function (cc, i) {\n              if (i == 0) return;\n              var replies = [];\n              if (cc.replies) cc.replies.forEach(function (c) {\n                if (!authors[c.a || \"\"]) authors[c.a || \"\"] = numbers_add_msg(cfb, 212, [[], [{\n                  type: 2,\n                  data: stru8(c.a || \"\")\n                }], [{\n                  type: 2,\n                  data: get_author_color(++iauthor)\n                }], [], [{\n                  type: 0,\n                  data: write_varint49(0)\n                }]], \"/Index/Tables/DataList\", deps);\n                var aaaid2 = authors[c.a || \"\"];\n                var csaid2 = numbers_add_msg(cfb, 3056, [[], [{\n                  type: 2,\n                  data: stru8(c.t || \"\")\n                }], [{\n                  type: 2,\n                  data: write_shallow([[], [{\n                    type: 1,\n                    data: new Uint8Array([0, 0, 0, 128, 116, 109, 182, 65])\n                  }]])\n                }], [{\n                  type: 2,\n                  data: write_TSP_Reference(aaaid2)\n                }]], \"/Index/Tables/DataList\", deps);\n                numbers_iwa_doit(cfb, deps, csaid2, function (iwa) {\n                  return numbers_add_oref(iwa, aaaid2);\n                });\n                replies.push(csaid2);\n                numbers_iwa_doit(cfb, deps, 2, function (ai) {\n                  var mlist = parse_shallow(ai.messages[0].data);\n                  numbers_meta_add_dep(mlist, deps, csaid2, aaaid2);\n                  ai.messages[0].data = write_shallow(mlist);\n                });\n              });\n              if (!authors[cc.a || \"\"]) authors[cc.a || \"\"] = numbers_add_msg(cfb, 212, [[], [{\n                type: 2,\n                data: stru8(cc.a || \"\")\n              }], [{\n                type: 2,\n                data: get_author_color(++iauthor)\n              }], [], [{\n                type: 0,\n                data: write_varint49(0)\n              }]], \"/Index/Tables/DataList\", deps);\n              var aaaid = authors[cc.a || \"\"];\n              var csaid = numbers_add_msg(cfb, 3056, [[], [{\n                type: 2,\n                data: stru8(cc.t || \"\")\n              }], [{\n                type: 2,\n                data: write_shallow([[], [{\n                  type: 1,\n                  data: new Uint8Array([0, 0, 0, 128, 116, 109, 182, 65])\n                }]])\n              }], [{\n                type: 2,\n                data: write_TSP_Reference(aaaid)\n              }], replies.map(function (r) {\n                return {\n                  type: 2,\n                  data: write_TSP_Reference(r)\n                };\n              }), [{\n                type: 2,\n                data: write_shallow([[], [{\n                  type: 0,\n                  data: write_varint49(i)\n                }], [{\n                  type: 0,\n                  data: write_varint49(0)\n                }]])\n              }]], \"/Index/Tables/DataList\", deps);\n              numbers_iwa_doit(cfb, deps, csaid, function (iwa) {\n                numbers_add_oref(iwa, aaaid);\n                replies.forEach(function (r) {\n                  return numbers_add_oref(iwa, r);\n                });\n              });\n              cmntdata[3].push({\n                type: 2,\n                data: write_shallow([[], [{\n                  type: 0,\n                  data: write_varint49(i)\n                }], [{\n                  type: 0,\n                  data: write_varint49(1)\n                }], [], [], [], [], [], [], [], [{\n                  type: 2,\n                  data: write_TSP_Reference(csaid)\n                }]])\n              });\n              numbers_add_oref(cmntroot, csaid);\n              numbers_iwa_doit(cfb, deps, 2, function (ai) {\n                var mlist = parse_shallow(ai.messages[0].data);\n                numbers_meta_add_dep(mlist, deps, cmntref, csaid);\n                numbers_meta_add_dep(mlist, deps, csaid, aaaid);\n                if (replies.length) numbers_meta_add_dep(mlist, deps, csaid, replies);\n                ai.messages[0].data = write_shallow(mlist);\n              });\n            });\n          }\n          cmntdata[2][0].data = write_varint49(LUT.cmnt.length + 1);\n          cmntroot.messages[0].data = write_shallow(cmntdata);\n        });\n      }\n    }\n    pb[4][0].data = write_shallow(store);\n  }\n  tmaroot.messages[0].data = write_shallow(pb);\n}\nfunction fix_opts_func(defaults /*:Array<Array<any> >*/) /*:{(o:any):void}*/{\n  return function fix_opts(opts) {\n    for (var i = 0; i != defaults.length; ++i) {\n      var d = defaults[i];\n      if (opts[d[0]] === undefined) opts[d[0]] = d[1];\n      if (d[2] === 'n') opts[d[0]] = Number(opts[d[0]]);\n    }\n  };\n}\nfunction fix_read_opts(opts) {\n  fix_opts_func([['cellNF', false], /* emit cell number format string as .z */\n  ['cellHTML', true], /* emit html string as .h */\n  ['cellFormula', true], /* emit formulae as .f */\n  ['cellStyles', false], /* emits style/theme as .s */\n  ['cellText', true], /* emit formatted text as .w */\n  ['cellDates', false], /* emit date cells with type `d` */\n\n  ['sheetStubs', false], /* emit empty cells */\n  ['sheetRows', 0, 'n'], /* read n rows (0 = read all rows) */\n\n  ['bookDeps', false], /* parse calculation chains */\n  ['bookSheets', false], /* only try to get sheet names (no Sheets) */\n  ['bookProps', false], /* only try to get properties (no Sheets) */\n  ['bookFiles', false], /* include raw file structure (keys, files, cfb) */\n  ['bookVBA', false], /* include vba raw data (vbaraw) */\n\n  ['password', ''], /* password */\n  ['WTF', false] /* WTF mode (throws errors) */])(opts);\n}\nfunction fix_write_opts(opts) {\n  fix_opts_func([['cellDates', false], /* write date cells with type `d` */\n\n  ['bookSST', false], /* Generate Shared String Table */\n\n  ['bookType', 'xlsx'], /* Type of workbook (xlsx/m/b) */\n\n  ['compression', false], /* Use file compression */\n\n  ['WTF', false] /* WTF mode (throws errors) */])(opts);\n}\nfunction get_sheet_type(n /*:string*/) /*:string*/{\n  if (RELS.WS.indexOf(n) > -1) return \"sheet\";\n  if (n == RELS.CS) return \"chart\";\n  if (n == RELS.DS) return \"dialog\";\n  if (n == RELS.MS) return \"macro\";\n  return n && n.length ? n : \"sheet\";\n}\nfunction safe_parse_wbrels(wbrels, sheets) {\n  if (!wbrels) return 0;\n  try {\n    wbrels = sheets.map(function pwbr(w) {\n      if (!w.id) w.id = w.strRelID;\n      return [w.name, wbrels['!id'][w.id].Target, get_sheet_type(wbrels['!id'][w.id].Type)];\n    });\n  } catch (e) {\n    return null;\n  }\n  return !wbrels || wbrels.length === 0 ? null : wbrels;\n}\nfunction parse_sheet_legacy_drawing(sheet, type, zip, path, idx, opts, wb, comments) {\n  if (!sheet || !sheet['!legdrawel']) return;\n  var dfile = resolve_path(sheet['!legdrawel'].Target, path);\n  var draw = getzipstr(zip, dfile, true);\n  if (draw) parse_vml(utf8read(draw), sheet, comments || []);\n}\nfunction safe_parse_sheet(zip, path /*:string*/, relsPath /*:string*/, sheet, idx /*:number*/, sheetRels, sheets, stype /*:string*/, opts, wb, themes, styles) {\n  try {\n    sheetRels[sheet] = parse_rels(getzipstr(zip, relsPath, true), path);\n    var data = getzipdata(zip, path);\n    var _ws;\n    switch (stype) {\n      case 'sheet':\n        _ws = parse_ws(data, path, idx, opts, sheetRels[sheet], wb, themes, styles);\n        break;\n      case 'chart':\n        _ws = parse_cs(data, path, idx, opts, sheetRels[sheet], wb, themes, styles);\n        if (!_ws || !_ws['!drawel']) break;\n        var dfile = resolve_path(_ws['!drawel'].Target, path);\n        var drelsp = get_rels_path(dfile);\n        var draw = parse_drawing(getzipstr(zip, dfile, true), parse_rels(getzipstr(zip, drelsp, true), dfile));\n        var chartp = resolve_path(draw, dfile);\n        var crelsp = get_rels_path(chartp);\n        _ws = parse_chart(getzipstr(zip, chartp, true), chartp, opts, parse_rels(getzipstr(zip, crelsp, true), chartp), wb, _ws);\n        break;\n      case 'macro':\n        _ws = parse_ms(data, path, idx, opts, sheetRels[sheet], wb, themes, styles);\n        break;\n      case 'dialog':\n        _ws = parse_ds(data, path, idx, opts, sheetRels[sheet], wb, themes, styles);\n        break;\n      default:\n        throw new Error(\"Unrecognized sheet type \" + stype);\n    }\n    sheets[sheet] = _ws;\n\n    /* scan rels for comments and threaded comments */\n    var comments = [],\n      tcomments = [];\n    if (sheetRels && sheetRels[sheet]) keys(sheetRels[sheet]).forEach(function (n) {\n      var dfile = \"\";\n      if (sheetRels[sheet][n].Type == RELS.CMNT) {\n        dfile = resolve_path(sheetRels[sheet][n].Target, path);\n        comments = parse_cmnt(getzipdata(zip, dfile, true), dfile, opts);\n        if (!comments || !comments.length) return;\n        sheet_insert_comments(_ws, comments, false);\n      }\n      if (sheetRels[sheet][n].Type == RELS.TCMNT) {\n        dfile = resolve_path(sheetRels[sheet][n].Target, path);\n        tcomments = tcomments.concat(parse_tcmnt_xml(getzipdata(zip, dfile, true), opts));\n      }\n    });\n    if (tcomments && tcomments.length) sheet_insert_comments(_ws, tcomments, true, opts.people || []);\n    parse_sheet_legacy_drawing(_ws, stype, zip, path, idx, opts, wb, comments);\n  } catch (e) {\n    if (opts.WTF) throw e;\n  }\n}\nfunction strip_front_slash(x /*:string*/) /*:string*/{\n  return x.charAt(0) == '/' ? x.slice(1) : x;\n}\nfunction parse_zip(zip /*:ZIP*/, opts /*:?ParseOpts*/) /*:Workbook*/{\n  make_ssf();\n  opts = opts || {};\n  fix_read_opts(opts);\n\n  /* OpenDocument Part 3 Section 2.2.1 OpenDocument Package */\n  if (safegetzipfile(zip, 'META-INF/manifest.xml')) return parse_ods(zip, opts);\n  /* UOC */\n  if (safegetzipfile(zip, 'objectdata.xml')) return parse_ods(zip, opts);\n  /* Numbers */\n  if (safegetzipfile(zip, 'Index/Document.iwa')) {\n    if (typeof Uint8Array == \"undefined\") throw new Error('NUMBERS file parsing requires Uint8Array support');\n    if (typeof parse_numbers_iwa != \"undefined\") {\n      if (zip.FileIndex) return parse_numbers_iwa(zip, opts);\n      var _zip = CFB.utils.cfb_new();\n      zipentries(zip).forEach(function (e) {\n        zip_add_file(_zip, e, getzipbin(zip, e));\n      });\n      return parse_numbers_iwa(_zip, opts);\n    }\n    throw new Error('Unsupported NUMBERS file');\n  }\n  if (!safegetzipfile(zip, '[Content_Types].xml')) {\n    if (safegetzipfile(zip, 'index.xml.gz')) throw new Error('Unsupported NUMBERS 08 file');\n    if (safegetzipfile(zip, 'index.xml')) throw new Error('Unsupported NUMBERS 09 file');\n    var index_zip = CFB.find(zip, 'Index.zip');\n    if (index_zip) {\n      opts = dup(opts);\n      delete opts.type;\n      if (typeof index_zip.content == \"string\") opts.type = \"binary\";\n      // TODO: Bun buffer bug\n      if (typeof Bun !== \"undefined\" && Buffer.isBuffer(index_zip.content)) return readSync(new Uint8Array(index_zip.content), opts);\n      return readSync(index_zip.content, opts);\n    }\n    throw new Error('Unsupported ZIP file');\n  }\n  var entries = zipentries(zip);\n  var dir = parse_ct(getzipstr(zip, '[Content_Types].xml') /*:?any*/);\n  var xlsb = false;\n  var sheets, binname;\n  if (dir.workbooks.length === 0) {\n    binname = \"xl/workbook.xml\";\n    if (getzipdata(zip, binname, true)) dir.workbooks.push(binname);\n  }\n  if (dir.workbooks.length === 0) {\n    binname = \"xl/workbook.bin\";\n    if (!getzipdata(zip, binname, true)) throw new Error(\"Could not find workbook\");\n    dir.workbooks.push(binname);\n    xlsb = true;\n  }\n  if (dir.workbooks[0].slice(-3) == \"bin\") xlsb = true;\n  var themes = {} /*:any*/;\n  var styles = {} /*:any*/;\n  if (!opts.bookSheets && !opts.bookProps) {\n    strs = [];\n    if (dir.sst) try {\n      strs = parse_sst(getzipdata(zip, strip_front_slash(dir.sst)), dir.sst, opts);\n    } catch (e) {\n      if (opts.WTF) throw e;\n    }\n    if (opts.cellStyles && dir.themes.length) themes = parse_theme_xml(getzipstr(zip, dir.themes[0].replace(/^\\//, ''), true) || \"\", opts);\n    if (dir.style) styles = parse_sty(getzipdata(zip, strip_front_slash(dir.style)), dir.style, themes, opts);\n  }\n\n  /*var externbooks = */\n  dir.links.map(function (link) {\n    try {\n      var rels = parse_rels(getzipstr(zip, get_rels_path(strip_front_slash(link))), link);\n      return parse_xlink(getzipdata(zip, strip_front_slash(link)), rels, link, opts);\n    } catch (e) {}\n  });\n  var wb = parse_wb(getzipdata(zip, strip_front_slash(dir.workbooks[0])), dir.workbooks[0], opts);\n  var props = {},\n    propdata = \"\";\n  if (dir.coreprops.length) {\n    propdata = getzipdata(zip, strip_front_slash(dir.coreprops[0]), true);\n    if (propdata) props = parse_core_props(propdata);\n    if (dir.extprops.length !== 0) {\n      propdata = getzipdata(zip, strip_front_slash(dir.extprops[0]), true);\n      if (propdata) parse_ext_props(propdata, props, opts);\n    }\n  }\n  var custprops = {};\n  if (!opts.bookSheets || opts.bookProps) {\n    if (dir.custprops.length !== 0) {\n      propdata = getzipstr(zip, strip_front_slash(dir.custprops[0]), true);\n      if (propdata) custprops = parse_cust_props(propdata, opts);\n    }\n  }\n  var out = {} /*:any*/;\n  if (opts.bookSheets || opts.bookProps) {\n    if (wb.Sheets) sheets = wb.Sheets.map(function pluck(x) {\n      return x.name;\n    });else if (props.Worksheets && props.SheetNames.length > 0) sheets = props.SheetNames;\n    if (opts.bookProps) {\n      out.Props = props;\n      out.Custprops = custprops;\n    }\n    if (opts.bookSheets && typeof sheets !== 'undefined') out.SheetNames = sheets;\n    if (opts.bookSheets ? out.SheetNames : opts.bookProps) return out;\n  }\n  sheets = {};\n  var deps = {};\n  if (opts.bookDeps && dir.calcchain) deps = parse_cc(getzipdata(zip, strip_front_slash(dir.calcchain)), dir.calcchain);\n  var i = 0;\n  var sheetRels = {} /*:any*/;\n  var path, relsPath;\n  {\n    var wbsheets = wb.Sheets;\n    props.Worksheets = wbsheets.length;\n    props.SheetNames = [];\n    for (var j = 0; j != wbsheets.length; ++j) {\n      props.SheetNames[j] = wbsheets[j].name;\n    }\n  }\n  var wbext = xlsb ? \"bin\" : \"xml\";\n  var wbrelsi = dir.workbooks[0].lastIndexOf(\"/\");\n  var wbrelsfile = (dir.workbooks[0].slice(0, wbrelsi + 1) + \"_rels/\" + dir.workbooks[0].slice(wbrelsi + 1) + \".rels\").replace(/^\\//, \"\");\n  if (!safegetzipfile(zip, wbrelsfile)) wbrelsfile = 'xl/_rels/workbook.' + wbext + '.rels';\n  var wbrels = parse_rels(getzipstr(zip, wbrelsfile, true), wbrelsfile.replace(/_rels.*/, \"s5s\"));\n  if ((dir.metadata || []).length >= 1) {\n    /* TODO: MDX and other types of metadata */\n    opts.xlmeta = parse_xlmeta(getzipdata(zip, strip_front_slash(dir.metadata[0])), dir.metadata[0], opts);\n  }\n  if ((dir.people || []).length >= 1) {\n    opts.people = parse_people_xml(getzipdata(zip, strip_front_slash(dir.people[0])), opts);\n  }\n  if (wbrels) wbrels = safe_parse_wbrels(wbrels, wb.Sheets);\n\n  /* Numbers iOS hack */\n  var nmode = getzipdata(zip, \"xl/worksheets/sheet.xml\", true) ? 1 : 0;\n  wsloop: for (i = 0; i != props.Worksheets; ++i) {\n    var stype = \"sheet\";\n    if (wbrels && wbrels[i]) {\n      path = 'xl/' + wbrels[i][1].replace(/[\\/]?xl\\//, \"\");\n      if (!safegetzipfile(zip, path)) path = wbrels[i][1];\n      if (!safegetzipfile(zip, path)) path = wbrelsfile.replace(/_rels\\/.*$/, \"\") + wbrels[i][1];\n      stype = wbrels[i][2];\n    } else {\n      path = 'xl/worksheets/sheet' + (i + 1 - nmode) + \".\" + wbext;\n      path = path.replace(/sheet0\\./, \"sheet.\");\n    }\n    relsPath = path.replace(/^(.*)(\\/)([^\\/]*)$/, \"$1/_rels/$3.rels\");\n    if (opts && opts.sheets != null) switch (typeof opts.sheets) {\n      case \"number\":\n        if (i != opts.sheets) continue wsloop;\n        break;\n      case \"string\":\n        if (props.SheetNames[i].toLowerCase() != opts.sheets.toLowerCase()) continue wsloop;\n        break;\n      default:\n        if (Array.isArray && Array.isArray(opts.sheets)) {\n          var snjseen = false;\n          for (var snj = 0; snj != opts.sheets.length; ++snj) {\n            if (typeof opts.sheets[snj] == \"number\" && opts.sheets[snj] == i) snjseen = 1;\n            if (typeof opts.sheets[snj] == \"string\" && opts.sheets[snj].toLowerCase() == props.SheetNames[i].toLowerCase()) snjseen = 1;\n          }\n          if (!snjseen) continue wsloop;\n        }\n    }\n    safe_parse_sheet(zip, path, relsPath, props.SheetNames[i], i, sheetRels, sheets, stype, opts, wb, themes, styles);\n  }\n  out = {\n    Directory: dir,\n    Workbook: wb,\n    Props: props,\n    Custprops: custprops,\n    Deps: deps,\n    Sheets: sheets,\n    SheetNames: props.SheetNames,\n    Strings: strs,\n    Styles: styles,\n    Themes: themes,\n    SSF: dup(table_fmt)\n  } /*:any*/;\n  if (opts && opts.bookFiles) {\n    if (zip.files) {\n      out.keys = entries;\n      out.files = zip.files;\n    } else {\n      out.keys = [];\n      out.files = {};\n      zip.FullPaths.forEach(function (p, idx) {\n        p = p.replace(/^Root Entry[\\/]/, \"\");\n        out.keys.push(p);\n        out.files[p] = zip.FileIndex[idx];\n      });\n    }\n  }\n  if (opts && opts.bookVBA) {\n    if (dir.vba.length > 0) out.vbaraw = getzipdata(zip, strip_front_slash(dir.vba[0]), true);else if (dir.defaults && dir.defaults.bin === CT_VBA) out.vbaraw = getzipdata(zip, 'xl/vbaProject.bin', true);\n  }\n  // TODO: pass back content types metdata for xlsm/xlsx resolution\n  out.bookType = xlsb ? \"xlsb\" : \"xlsx\";\n  return out;\n}\n\n/* [MS-OFFCRYPTO] 2.1.1 */\nfunction parse_xlsxcfb(cfb, _opts /*:?ParseOpts*/) /*:Workbook*/{\n  var opts = _opts || {};\n  var f = 'Workbook',\n    data = CFB.find(cfb, f);\n  try {\n    f = '/!DataSpaces/Version';\n    data = CFB.find(cfb, f);\n    if (!data || !data.content) throw new Error(\"ECMA-376 Encrypted file missing \" + f);\n    /*var version = */\n    parse_DataSpaceVersionInfo(data.content);\n\n    /* 2.3.4.1 */\n    f = '/!DataSpaces/DataSpaceMap';\n    data = CFB.find(cfb, f);\n    if (!data || !data.content) throw new Error(\"ECMA-376 Encrypted file missing \" + f);\n    var dsm = parse_DataSpaceMap(data.content);\n    if (dsm.length !== 1 || dsm[0].comps.length !== 1 || dsm[0].comps[0].t !== 0 || dsm[0].name !== \"StrongEncryptionDataSpace\" || dsm[0].comps[0].v !== \"EncryptedPackage\") throw new Error(\"ECMA-376 Encrypted file bad \" + f);\n\n    /* 2.3.4.2 */\n    f = '/!DataSpaces/DataSpaceInfo/StrongEncryptionDataSpace';\n    data = CFB.find(cfb, f);\n    if (!data || !data.content) throw new Error(\"ECMA-376 Encrypted file missing \" + f);\n    var seds = parse_DataSpaceDefinition(data.content);\n    if (seds.length != 1 || seds[0] != \"StrongEncryptionTransform\") throw new Error(\"ECMA-376 Encrypted file bad \" + f);\n\n    /* 2.3.4.3 */\n    f = '/!DataSpaces/TransformInfo/StrongEncryptionTransform/!Primary';\n    data = CFB.find(cfb, f);\n    if (!data || !data.content) throw new Error(\"ECMA-376 Encrypted file missing \" + f);\n    /*var hdr = */\n    parse_Primary(data.content);\n  } catch (e) {}\n  f = '/EncryptionInfo';\n  data = CFB.find(cfb, f);\n  if (!data || !data.content) throw new Error(\"ECMA-376 Encrypted file missing \" + f);\n  var einfo = parse_EncryptionInfo(data.content);\n\n  /* 2.3.4.4 */\n  f = '/EncryptedPackage';\n  data = CFB.find(cfb, f);\n  if (!data || !data.content) throw new Error(\"ECMA-376 Encrypted file missing \" + f);\n\n  /*global decrypt_agile */\n  /*:: declare var decrypt_agile:any; */\n  if (einfo[0] == 0x04 && typeof decrypt_agile !== 'undefined') return decrypt_agile(einfo[1], data.content, opts.password || \"\", opts);\n  /*global decrypt_std76 */\n  /*:: declare var decrypt_std76:any; */\n  if (einfo[0] == 0x02 && typeof decrypt_std76 !== 'undefined') return decrypt_std76(einfo[1], data.content, opts.password || \"\", opts);\n  throw new Error(\"File is password-protected\");\n}\nfunction write_zip_xlsb(wb /*:Workbook*/, opts /*:WriteOpts*/) /*:ZIP*/{\n  if (wb && !wb.SSF) {\n    wb.SSF = dup(table_fmt);\n  }\n  if (wb && wb.SSF) {\n    make_ssf();\n    SSF_load_table(wb.SSF);\n    // $FlowIgnore\n    opts.revssf = evert_num(wb.SSF);\n    opts.revssf[wb.SSF[65535]] = 0;\n    opts.ssf = wb.SSF;\n  }\n  opts.rels = {};\n  opts.wbrels = {};\n  opts.Strings = /*::((*/[] /*:: :any):SST)*/;\n  opts.Strings.Count = 0;\n  opts.Strings.Unique = 0;\n  if (browser_has_Map) opts.revStrings = new Map();else {\n    opts.revStrings = {};\n    opts.revStrings.foo = [];\n    delete opts.revStrings.foo;\n  }\n  var wbext = \"bin\";\n  var vbafmt = true;\n  var ct = new_ct();\n  fix_write_opts(opts = opts || {});\n  var zip = zip_new();\n  var f = \"\",\n    rId = 0;\n  opts.cellXfs = [];\n  get_cell_style(opts.cellXfs, {}, {\n    revssf: {\n      \"General\": 0\n    }\n  });\n  if (!wb.Props) wb.Props = {};\n  f = \"docProps/core.xml\";\n  zip_add_file(zip, f, write_core_props(wb.Props, opts));\n  ct.coreprops.push(f);\n  add_rels(opts.rels, 2, f, RELS.CORE_PROPS);\n\n  /*::if(!wb.Props) throw \"unreachable\"; */\n  f = \"docProps/app.xml\";\n  if (wb.Props && wb.Props.SheetNames) ;else if (!wb.Workbook || !wb.Workbook.Sheets) wb.Props.SheetNames = wb.SheetNames;else {\n    var _sn = [];\n    for (var _i = 0; _i < wb.SheetNames.length; ++_i) if ((wb.Workbook.Sheets[_i] || {}).Hidden != 2) _sn.push(wb.SheetNames[_i]);\n    wb.Props.SheetNames = _sn;\n  }\n  wb.Props.Worksheets = wb.Props.SheetNames.length;\n  zip_add_file(zip, f, write_ext_props(wb.Props));\n  ct.extprops.push(f);\n  add_rels(opts.rels, 3, f, RELS.EXT_PROPS);\n  if (wb.Custprops !== wb.Props && keys(wb.Custprops || {}).length > 0) {\n    f = \"docProps/custom.xml\";\n    zip_add_file(zip, f, write_cust_props(wb.Custprops));\n    ct.custprops.push(f);\n    add_rels(opts.rels, 4, f, RELS.CUST_PROPS);\n  }\n  var people = [\"SheetJ5\"];\n  opts.tcid = 0;\n  for (rId = 1; rId <= wb.SheetNames.length; ++rId) {\n    var wsrels = {\n      '!id': {}\n    };\n    var ws = wb.Sheets[wb.SheetNames[rId - 1]];\n    var _type = (ws || {})[\"!type\"] || \"sheet\";\n    switch (_type) {\n      case \"chart\":\n      /* falls through */\n      default:\n        f = \"xl/worksheets/sheet\" + rId + \".\" + wbext;\n        zip_add_file(zip, f, write_ws_bin(rId - 1, opts, wb, wsrels));\n        ct.sheets.push(f);\n        add_rels(opts.wbrels, -1, \"worksheets/sheet\" + rId + \".\" + wbext, RELS.WS[0]);\n    }\n    if (ws) {\n      var comments = ws['!comments'];\n      var need_vml = false;\n      var cf = \"\";\n      if (comments && comments.length > 0) {\n        var needtc = false;\n        comments.forEach(function (carr) {\n          carr[1].forEach(function (c) {\n            if (c.T == true) needtc = true;\n          });\n        });\n        if (needtc) {\n          cf = \"xl/threadedComments/threadedComment\" + rId + \".xml\";\n          zip_add_file(zip, cf, write_tcmnt_xml(comments, people, opts));\n          ct.threadedcomments.push(cf);\n          add_rels(wsrels, -1, \"../threadedComments/threadedComment\" + rId + \".xml\", RELS.TCMNT);\n        }\n        cf = \"xl/comments\" + rId + \".\" + wbext;\n        zip_add_file(zip, cf, write_comments_bin(comments));\n        ct.comments.push(cf);\n        add_rels(wsrels, -1, \"../comments\" + rId + \".\" + wbext, RELS.CMNT);\n        need_vml = true;\n      }\n      if (ws['!legacy']) {\n        if (need_vml) zip_add_file(zip, \"xl/drawings/vmlDrawing\" + rId + \".vml\", write_vml(rId, ws['!comments']));\n      }\n      delete ws['!comments'];\n      delete ws['!legacy'];\n    }\n    if (wsrels['!id'].rId1) zip_add_file(zip, get_rels_path(f), write_rels(wsrels));\n  }\n  if (opts.Strings != null && opts.Strings.length > 0) {\n    f = \"xl/sharedStrings.\" + wbext;\n    zip_add_file(zip, f, write_sst_bin(opts.Strings));\n    ct.strs.push(f);\n    add_rels(opts.wbrels, -1, \"sharedStrings.\" + wbext, RELS.SST);\n  }\n  f = \"xl/workbook.\" + wbext;\n  zip_add_file(zip, f, write_wb_bin(wb));\n  ct.workbooks.push(f);\n  add_rels(opts.rels, 1, f, RELS.WB);\n\n  /* TODO: something more intelligent with themes */\n\n  f = \"xl/theme/theme1.xml\";\n  var ww = write_theme(wb.Themes, opts);\n  zip_add_file(zip, f, ww);\n  ct.themes.push(f);\n  add_rels(opts.wbrels, -1, \"theme/theme1.xml\", RELS.THEME);\n\n  /* TODO: something more intelligent with styles */\n\n  f = \"xl/styles.\" + wbext;\n  zip_add_file(zip, f, write_sty_bin(wb, opts));\n  ct.styles.push(f);\n  add_rels(opts.wbrels, -1, \"styles.\" + wbext, RELS.STY);\n  if (wb.vbaraw && vbafmt) {\n    f = \"xl/vbaProject.bin\";\n    zip_add_file(zip, f, wb.vbaraw);\n    ct.vba.push(f);\n    add_rels(opts.wbrels, -1, \"vbaProject.bin\", RELS.VBA);\n  }\n  f = \"xl/metadata.\" + wbext;\n  zip_add_file(zip, f, write_xlmeta_bin());\n  ct.metadata.push(f);\n  add_rels(opts.wbrels, -1, \"metadata.\" + wbext, RELS.XLMETA);\n  if (people.length > 1) {\n    f = \"xl/persons/person.xml\";\n    zip_add_file(zip, f, write_people_xml(people));\n    ct.people.push(f);\n    add_rels(opts.wbrels, -1, \"persons/person.xml\", RELS.PEOPLE);\n  }\n  zip_add_file(zip, \"[Content_Types].xml\", write_ct(ct, opts));\n  zip_add_file(zip, '_rels/.rels', write_rels(opts.rels));\n  zip_add_file(zip, 'xl/_rels/workbook.' + wbext + '.rels', write_rels(opts.wbrels));\n  delete opts.revssf;\n  delete opts.ssf;\n  return zip;\n}\nfunction write_zip_xlsx(wb /*:Workbook*/, opts /*:WriteOpts*/) /*:ZIP*/{\n  if (wb && !wb.SSF) {\n    wb.SSF = dup(table_fmt);\n  }\n  if (wb && wb.SSF) {\n    make_ssf();\n    SSF_load_table(wb.SSF);\n    // $FlowIgnore\n    opts.revssf = evert_num(wb.SSF);\n    opts.revssf[wb.SSF[65535]] = 0;\n    opts.ssf = wb.SSF;\n  }\n  opts.rels = {};\n  opts.wbrels = {};\n  opts.Strings = /*::((*/[] /*:: :any):SST)*/;\n  opts.Strings.Count = 0;\n  opts.Strings.Unique = 0;\n  if (browser_has_Map) opts.revStrings = new Map();else {\n    opts.revStrings = {};\n    opts.revStrings.foo = [];\n    delete opts.revStrings.foo;\n  }\n  var wbext = \"xml\";\n  var vbafmt = VBAFMTS.indexOf(opts.bookType) > -1;\n  var ct = new_ct();\n  fix_write_opts(opts = opts || {});\n  var zip = zip_new();\n  var f = \"\",\n    rId = 0;\n  opts.cellXfs = [];\n  get_cell_style(opts.cellXfs, {}, {\n    revssf: {\n      \"General\": 0\n    }\n  });\n  if (!wb.Props) wb.Props = {};\n  f = \"docProps/core.xml\";\n  zip_add_file(zip, f, write_core_props(wb.Props, opts));\n  ct.coreprops.push(f);\n  add_rels(opts.rels, 2, f, RELS.CORE_PROPS);\n\n  /*::if(!wb.Props) throw \"unreachable\"; */\n  f = \"docProps/app.xml\";\n  if (wb.Props && wb.Props.SheetNames) ;else if (!wb.Workbook || !wb.Workbook.Sheets) wb.Props.SheetNames = wb.SheetNames;else {\n    var _sn = [];\n    for (var _i = 0; _i < wb.SheetNames.length; ++_i) if ((wb.Workbook.Sheets[_i] || {}).Hidden != 2) _sn.push(wb.SheetNames[_i]);\n    wb.Props.SheetNames = _sn;\n  }\n  wb.Props.Worksheets = wb.Props.SheetNames.length;\n  zip_add_file(zip, f, write_ext_props(wb.Props));\n  ct.extprops.push(f);\n  add_rels(opts.rels, 3, f, RELS.EXT_PROPS);\n  if (wb.Custprops !== wb.Props && keys(wb.Custprops || {}).length > 0) {\n    f = \"docProps/custom.xml\";\n    zip_add_file(zip, f, write_cust_props(wb.Custprops));\n    ct.custprops.push(f);\n    add_rels(opts.rels, 4, f, RELS.CUST_PROPS);\n  }\n  var people = [\"SheetJ5\"];\n  opts.tcid = 0;\n  for (rId = 1; rId <= wb.SheetNames.length; ++rId) {\n    var wsrels = {\n      '!id': {}\n    };\n    var ws = wb.Sheets[wb.SheetNames[rId - 1]];\n    var _type = (ws || {})[\"!type\"] || \"sheet\";\n    switch (_type) {\n      case \"chart\":\n      /* falls through */\n      default:\n        f = \"xl/worksheets/sheet\" + rId + \".\" + wbext;\n        zip_add_file(zip, f, write_ws_xml(rId - 1, opts, wb, wsrels));\n        ct.sheets.push(f);\n        add_rels(opts.wbrels, -1, \"worksheets/sheet\" + rId + \".\" + wbext, RELS.WS[0]);\n    }\n    if (ws) {\n      var comments = ws['!comments'];\n      var need_vml = false;\n      var cf = \"\";\n      if (comments && comments.length > 0) {\n        var needtc = false;\n        comments.forEach(function (carr) {\n          carr[1].forEach(function (c) {\n            if (c.T == true) needtc = true;\n          });\n        });\n        if (needtc) {\n          cf = \"xl/threadedComments/threadedComment\" + rId + \".xml\";\n          zip_add_file(zip, cf, write_tcmnt_xml(comments, people, opts));\n          ct.threadedcomments.push(cf);\n          add_rels(wsrels, -1, \"../threadedComments/threadedComment\" + rId + \".xml\", RELS.TCMNT);\n        }\n        cf = \"xl/comments\" + rId + \".\" + wbext;\n        zip_add_file(zip, cf, write_comments_xml(comments));\n        ct.comments.push(cf);\n        add_rels(wsrels, -1, \"../comments\" + rId + \".\" + wbext, RELS.CMNT);\n        need_vml = true;\n      }\n      if (ws['!legacy']) {\n        if (need_vml) zip_add_file(zip, \"xl/drawings/vmlDrawing\" + rId + \".vml\", write_vml(rId, ws['!comments']));\n      }\n      delete ws['!comments'];\n      delete ws['!legacy'];\n    }\n    if (wsrels['!id'].rId1) zip_add_file(zip, get_rels_path(f), write_rels(wsrels));\n  }\n  if (opts.Strings != null && opts.Strings.length > 0) {\n    f = \"xl/sharedStrings.\" + wbext;\n    zip_add_file(zip, f, write_sst_xml(opts.Strings, opts));\n    ct.strs.push(f);\n    add_rels(opts.wbrels, -1, \"sharedStrings.\" + wbext, RELS.SST);\n  }\n  f = \"xl/workbook.\" + wbext;\n  zip_add_file(zip, f, write_wb_xml(wb));\n  ct.workbooks.push(f);\n  add_rels(opts.rels, 1, f, RELS.WB);\n\n  /* TODO: something more intelligent with themes */\n\n  f = \"xl/theme/theme1.xml\";\n  zip_add_file(zip, f, write_theme(wb.Themes, opts));\n  ct.themes.push(f);\n  add_rels(opts.wbrels, -1, \"theme/theme1.xml\", RELS.THEME);\n\n  /* TODO: something more intelligent with styles */\n\n  f = \"xl/styles.\" + wbext;\n  zip_add_file(zip, f, write_sty_xml(wb, opts));\n  ct.styles.push(f);\n  add_rels(opts.wbrels, -1, \"styles.\" + wbext, RELS.STY);\n  if (wb.vbaraw && vbafmt) {\n    f = \"xl/vbaProject.bin\";\n    zip_add_file(zip, f, wb.vbaraw);\n    ct.vba.push(f);\n    add_rels(opts.wbrels, -1, \"vbaProject.bin\", RELS.VBA);\n  }\n  f = \"xl/metadata.\" + wbext;\n  zip_add_file(zip, f, write_xlmeta_xml());\n  ct.metadata.push(f);\n  add_rels(opts.wbrels, -1, \"metadata.\" + wbext, RELS.XLMETA);\n  if (people.length > 1) {\n    f = \"xl/persons/person.xml\";\n    zip_add_file(zip, f, write_people_xml(people));\n    ct.people.push(f);\n    add_rels(opts.wbrels, -1, \"persons/person.xml\", RELS.PEOPLE);\n  }\n  zip_add_file(zip, \"[Content_Types].xml\", write_ct(ct, opts));\n  zip_add_file(zip, '_rels/.rels', write_rels(opts.rels));\n  zip_add_file(zip, 'xl/_rels/workbook.' + wbext + '.rels', write_rels(opts.wbrels));\n  delete opts.revssf;\n  delete opts.ssf;\n  return zip;\n}\nfunction firstbyte(f /*:RawData*/, o /*:?TypeOpts*/) /*:Array<number>*/{\n  var x = \"\";\n  switch ((o || {}).type || \"base64\") {\n    case 'buffer':\n      return [f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7]];\n    case 'base64':\n      x = Base64_decode(f.slice(0, 12));\n      break;\n    case 'binary':\n      x = f;\n      break;\n    case 'array':\n      return [f[0], f[1], f[2], f[3], f[4], f[5], f[6], f[7]];\n    default:\n      throw new Error(\"Unrecognized type \" + (o && o.type || \"undefined\"));\n  }\n  return [x.charCodeAt(0), x.charCodeAt(1), x.charCodeAt(2), x.charCodeAt(3), x.charCodeAt(4), x.charCodeAt(5), x.charCodeAt(6), x.charCodeAt(7)];\n}\nfunction read_cfb(cfb /*:CFBContainer*/, opts /*:?ParseOpts*/) /*:Workbook*/{\n  if (CFB.find(cfb, \"EncryptedPackage\")) return parse_xlsxcfb(cfb, opts);\n  return parse_xlscfb(cfb, opts);\n}\nfunction read_zip(data /*:RawData*/, opts /*:?ParseOpts*/) /*:Workbook*/{\n  var zip,\n    d = data;\n  var o = opts || {};\n  if (!o.type) o.type = has_buf && Buffer.isBuffer(data) ? \"buffer\" : \"base64\";\n  zip = zip_read(d, o);\n  return parse_zip(zip, o);\n}\nfunction read_plaintext(data /*:string*/, o /*:ParseOpts*/) /*:Workbook*/{\n  var i = 0;\n  main: while (i < data.length) switch (data.charCodeAt(i)) {\n    case 0x0A:\n    case 0x0D:\n    case 0x20:\n      ++i;\n      break;\n    case 0x3C:\n      return parse_xlml(data.slice(i), o);\n    default:\n      break main;\n  }\n  return PRN.to_workbook(data, o);\n}\nfunction read_plaintext_raw(data /*:RawData*/, o /*:ParseOpts*/) /*:Workbook*/{\n  var str = \"\",\n    bytes = firstbyte(data, o);\n  switch (o.type) {\n    case 'base64':\n      str = Base64_decode(data);\n      break;\n    case 'binary':\n      str = data;\n      break;\n    case 'buffer':\n      str = data.toString('binary');\n      break;\n    case 'array':\n      str = cc2str(data);\n      break;\n    default:\n      throw new Error(\"Unrecognized type \" + o.type);\n  }\n  if (bytes[0] == 0xEF && bytes[1] == 0xBB && bytes[2] == 0xBF) str = utf8read(str);\n  o.type = \"binary\";\n  return read_plaintext(str, o);\n}\nfunction read_utf16(data /*:RawData*/, o /*:ParseOpts*/) /*:Workbook*/{\n  var d = data;\n  if (o.type == 'base64') d = Base64_decode(d);\n  if (typeof ArrayBuffer !== \"undefined\" && data instanceof ArrayBuffer) d = new Uint8Array(data);\n  d = has_buf && Buffer.isBuffer(data) ? data.slice(2).toString(\"utf16le\") : typeof Uint8Array !== \"undefined\" && d instanceof Uint8Array ? typeof TextDecoder !== \"undefined\" ? new TextDecoder(\"utf-16le\").decode(d.slice(2)) : utf16lereadu(d.slice(2)) : utf16leread(d.slice(2));\n  o.type = \"binary\";\n  return read_plaintext(d, o);\n}\nfunction bstrify(data /*:string*/) /*:string*/{\n  return !data.match(/[^\\x00-\\x7F]/) ? data : utf8write(data);\n}\nfunction read_prn(data, d, o, str) {\n  if (str) {\n    o.type = \"string\";\n    return PRN.to_workbook(data, o);\n  }\n  return PRN.to_workbook(d, o);\n}\nfunction readSync(data /*:RawData*/, opts /*:?ParseOpts*/) /*:Workbook*/{\n  reset_cp();\n  var o = opts || {};\n  if (o.codepage && typeof $cptable === \"undefined\") console.error(\"Codepage tables are not loaded.  Non-ASCII characters may not give expected results\");\n  if (typeof ArrayBuffer !== 'undefined' && data instanceof ArrayBuffer) return readSync(new Uint8Array(data), (o = dup(o), o.type = \"array\", o));\n  if (typeof Uint8Array !== 'undefined' && data instanceof Uint8Array && !o.type) o.type = typeof Deno !== \"undefined\" ? \"buffer\" : \"array\";\n  var d = data,\n    n = [0, 0, 0, 0],\n    str = false;\n  if (o.cellStyles) {\n    o.cellNF = true;\n    o.sheetStubs = true;\n  }\n  _ssfopts = {};\n  if (o.dateNF) _ssfopts.dateNF = o.dateNF;\n  if (!o.type) o.type = has_buf && Buffer.isBuffer(data) ? \"buffer\" : \"base64\";\n  if (o.type == \"file\") {\n    o.type = has_buf ? \"buffer\" : \"binary\";\n    d = read_binary(data);\n    if (typeof Uint8Array !== 'undefined' && !has_buf) o.type = \"array\";\n  }\n  if (o.type == \"string\") {\n    str = true;\n    o.type = \"binary\";\n    o.codepage = 65001;\n    d = bstrify(data);\n  }\n  if (o.type == 'array' && typeof Uint8Array !== 'undefined' && data instanceof Uint8Array && typeof ArrayBuffer !== 'undefined') {\n    // $FlowIgnore\n    var ab = new ArrayBuffer(3),\n      vu = new Uint8Array(ab);\n    vu.foo = \"bar\";\n    // $FlowIgnore\n    if (!vu.foo) {\n      o = dup(o);\n      o.type = 'array';\n      return readSync(ab2a(d), o);\n    }\n  }\n  switch ((n = firstbyte(d, o))[0]) {\n    case 0xD0:\n      if (n[1] === 0xCF && n[2] === 0x11 && n[3] === 0xE0 && n[4] === 0xA1 && n[5] === 0xB1 && n[6] === 0x1A && n[7] === 0xE1) return read_cfb(CFB.read(d, o), o);\n      break;\n    case 0x09:\n      if (n[1] <= 0x08) return parse_xlscfb(d, o);\n      break;\n    case 0x3C:\n      return parse_xlml(d, o);\n    case 0x49:\n      if (n[1] === 0x49 && n[2] === 0x2a && n[3] === 0x00) throw new Error(\"TIFF Image File is not a spreadsheet\");\n      if (n[1] === 0x44) return read_wb_ID(d, o);\n      break;\n    case 0x54:\n      if (n[1] === 0x41 && n[2] === 0x42 && n[3] === 0x4C) return DIF.to_workbook(d, o);\n      break;\n    case 0x50:\n      return n[1] === 0x4B && n[2] < 0x09 && n[3] < 0x09 ? read_zip(d, o) : read_prn(data, d, o, str);\n    case 0xEF:\n      return n[3] === 0x3C ? parse_xlml(d, o) : read_prn(data, d, o, str);\n    case 0xFF:\n      if (n[1] === 0xFE) {\n        return read_utf16(d, o);\n      } else if (n[1] === 0x00 && n[2] === 0x02 && n[3] === 0x00) return WK_.to_workbook(d, o);\n      break;\n    case 0x00:\n      if (n[1] === 0x00) {\n        if (n[2] >= 0x02 && n[3] === 0x00) return WK_.to_workbook(d, o);\n        if (n[2] === 0x00 && (n[3] === 0x08 || n[3] === 0x09)) return WK_.to_workbook(d, o);\n      }\n      break;\n    case 0x03:\n    case 0x83:\n    case 0x8B:\n    case 0x8C:\n      return DBF.to_workbook(d, o);\n    case 0x7B:\n      if (n[1] === 0x5C && n[2] === 0x72 && n[3] === 0x74) return rtf_to_workbook(d, o);\n      break;\n    case 0x0A:\n    case 0x0D:\n    case 0x20:\n      return read_plaintext_raw(d, o);\n    case 0x89:\n      if (n[1] === 0x50 && n[2] === 0x4E && n[3] === 0x47) throw new Error(\"PNG Image File is not a spreadsheet\");\n      break;\n    case 0x08:\n      if (n[1] === 0xE7) throw new Error(\"Unsupported Multiplan 1.x file!\");\n      break;\n    case 0x0C:\n      if (n[1] === 0xEC) throw new Error(\"Unsupported Multiplan 2.x file!\");\n      if (n[1] === 0xED) throw new Error(\"Unsupported Multiplan 3.x file!\");\n      break;\n  }\n  if (DBF_SUPPORTED_VERSIONS.indexOf(n[0]) > -1 && n[2] <= 12 && n[3] <= 31) return DBF.to_workbook(d, o);\n  return read_prn(data, d, o, str);\n}\nfunction write_cfb_ctr(cfb /*:CFBContainer*/, o /*:WriteOpts*/) /*:any*/{\n  switch (o.type) {\n    case \"base64\":\n    case \"binary\":\n      break;\n    case \"buffer\":\n    case \"array\":\n      o.type = \"\";\n      break;\n    case \"file\":\n      return write_dl(o.file, CFB.write(cfb, {\n        type: has_buf ? 'buffer' : \"\"\n      }));\n    case \"string\":\n      throw new Error(\"'string' output type invalid for '\" + o.bookType + \"' files\");\n    default:\n      throw new Error(\"Unrecognized type \" + o.type);\n  }\n  return CFB.write(cfb, o);\n}\nfunction write_zip(wb /*:Workbook*/, opts /*:WriteOpts*/) /*:ZIP*/{\n  switch (opts.bookType) {\n    case \"ods\":\n      return write_ods(wb, opts);\n    case \"numbers\":\n      return write_numbers_iwa(wb, opts);\n    case \"xlsb\":\n      return write_zip_xlsb(wb, opts);\n    default:\n      return write_zip_xlsx(wb, opts);\n  }\n}\n\n/*:: declare var encrypt_agile:any; */\nfunction write_zip_type(wb /*:Workbook*/, opts /*:?WriteOpts*/) /*:any*/{\n  var o = dup(opts || {});\n  var z = write_zip(wb, o);\n  return write_zip_denouement(z, o);\n}\nfunction write_zip_denouement(z /*:any*/, o /*:?WriteOpts*/) /*:any*/{\n  var oopts = {};\n  var ftype = has_buf ? \"nodebuffer\" : typeof Uint8Array !== \"undefined\" ? \"array\" : \"string\";\n  if (o.compression) oopts.compression = 'DEFLATE';\n  if (o.password) oopts.type = ftype;else switch (o.type) {\n    case \"base64\":\n      oopts.type = \"base64\";\n      break;\n    case \"binary\":\n      oopts.type = \"string\";\n      break;\n    case \"string\":\n      throw new Error(\"'string' output type invalid for '\" + o.bookType + \"' files\");\n    case \"buffer\":\n    case \"file\":\n      oopts.type = ftype;\n      break;\n    default:\n      throw new Error(\"Unrecognized type \" + o.type);\n  }\n  var out = z.FullPaths ? CFB.write(z, {\n    fileType: \"zip\",\n    type: /*::(*/{\n      \"nodebuffer\": \"buffer\",\n      \"string\": \"binary\"\n    } /*:: :any)*/[oopts.type] || oopts.type,\n    compression: !!o.compression\n  }) : z.generate(oopts);\n  if (typeof Deno !== \"undefined\") {\n    if (typeof out == \"string\") {\n      if (o.type == \"binary\" || o.type == \"base64\") return out;\n      out = new Uint8Array(s2ab(out));\n    }\n  }\n  /*jshint -W083 */\n  if (o.password && typeof encrypt_agile !== 'undefined') return write_cfb_ctr(encrypt_agile(out, o.password), o); // eslint-disable-line no-undef\n  /*jshint +W083 */\n  if (o.type === \"file\") return write_dl(o.file, out);\n  return o.type == \"string\" ? utf8read( /*::(*/out /*:: :any)*/) : out;\n}\nfunction write_cfb_type(wb /*:Workbook*/, opts /*:?WriteOpts*/) /*:any*/{\n  var o = opts || {};\n  var cfb /*:CFBContainer*/ = write_xlscfb(wb, o);\n  return write_cfb_ctr(cfb, o);\n}\nfunction write_string_type(out /*:string*/, opts /*:WriteOpts*/, bom /*:?string*/) /*:any*/{\n  if (!bom) bom = \"\";\n  var o = bom + out;\n  switch (opts.type) {\n    case \"base64\":\n      return Base64_encode(utf8write(o));\n    case \"binary\":\n      return utf8write(o);\n    case \"string\":\n      return out;\n    case \"file\":\n      return write_dl(opts.file, o, 'utf8');\n    case \"buffer\":\n      {\n        if (has_buf) return Buffer_from(o, 'utf8');else if (typeof TextEncoder !== \"undefined\") return new TextEncoder().encode(o);else return write_string_type(o, {\n          type: 'binary'\n        }).split(\"\").map(function (c) {\n          return c.charCodeAt(0);\n        });\n      }\n  }\n  throw new Error(\"Unrecognized type \" + opts.type);\n}\nfunction write_stxt_type(out /*:string*/, opts /*:WriteOpts*/) /*:any*/{\n  switch (opts.type) {\n    case \"base64\":\n      return Base64_encode_pass(out);\n    case \"binary\":\n      return out;\n    case \"string\":\n      return out;\n    /* override in sheet_to_txt */\n    case \"file\":\n      return write_dl(opts.file, out, 'binary');\n    case \"buffer\":\n      {\n        if (has_buf) return Buffer_from(out, 'binary');else return out.split(\"\").map(function (c) {\n          return c.charCodeAt(0);\n        });\n      }\n  }\n  throw new Error(\"Unrecognized type \" + opts.type);\n}\n\n/* TODO: test consistency */\nfunction write_binary_type(out, opts /*:WriteOpts*/) /*:any*/{\n  switch (opts.type) {\n    case \"string\":\n    case \"base64\":\n    case \"binary\":\n      var bstr = \"\";\n      // $FlowIgnore\n      for (var i = 0; i < out.length; ++i) bstr += String.fromCharCode(out[i]);\n      return opts.type == 'base64' ? Base64_encode(bstr) : opts.type == 'string' ? utf8read(bstr) : bstr;\n    case \"file\":\n      return write_dl(opts.file, out);\n    case \"buffer\":\n      return out;\n    default:\n      throw new Error(\"Unrecognized type \" + opts.type);\n  }\n}\nfunction writeSync(wb /*:Workbook*/, opts /*:?WriteOpts*/) {\n  reset_cp();\n  check_wb(wb);\n  var o = dup(opts || {});\n  if (o.cellStyles) {\n    o.cellNF = true;\n    o.sheetStubs = true;\n  }\n  if (o.type == \"array\") {\n    o.type = \"binary\";\n    var out /*:string*/ = writeSync(wb, o) /*:any*/;\n    o.type = \"array\";\n    return s2ab(out);\n  }\n  var idx = 0;\n  if (o.sheet) {\n    if (typeof o.sheet == \"number\") idx = o.sheet;else idx = wb.SheetNames.indexOf(o.sheet);\n    if (!wb.SheetNames[idx]) throw new Error(\"Sheet not found: \" + o.sheet + \" : \" + typeof o.sheet);\n  }\n  switch (o.bookType || 'xlsb') {\n    case 'xml':\n    case 'xlml':\n      return write_string_type(write_xlml(wb, o), o);\n    case 'slk':\n    case 'sylk':\n      return write_string_type(SYLK.from_sheet(wb.Sheets[wb.SheetNames[idx]], o, wb), o);\n    case 'htm':\n    case 'html':\n      return write_string_type(sheet_to_html(wb.Sheets[wb.SheetNames[idx]], o), o);\n    case 'txt':\n      return write_stxt_type(sheet_to_txt(wb.Sheets[wb.SheetNames[idx]], o), o);\n    case 'csv':\n      return write_string_type(sheet_to_csv(wb.Sheets[wb.SheetNames[idx]], o), o, \"\\ufeff\");\n    case 'dif':\n      return write_string_type(DIF.from_sheet(wb.Sheets[wb.SheetNames[idx]], o), o);\n    case 'dbf':\n      return write_binary_type(DBF.from_sheet(wb.Sheets[wb.SheetNames[idx]], o), o);\n    case 'prn':\n      return write_string_type(PRN.from_sheet(wb.Sheets[wb.SheetNames[idx]], o), o);\n    case 'rtf':\n      return write_string_type(sheet_to_rtf(wb.Sheets[wb.SheetNames[idx]]), o);\n    case 'eth':\n      return write_string_type(ETH.from_sheet(wb.Sheets[wb.SheetNames[idx]], o), o);\n    case 'fods':\n      return write_string_type(write_ods(wb, o), o);\n    case 'wk1':\n      return write_binary_type(WK_.sheet_to_wk1(wb.Sheets[wb.SheetNames[idx]], o), o);\n    case 'wk3':\n      return write_binary_type(WK_.book_to_wk3(wb, o), o);\n    case 'biff2':\n      if (!o.biff) o.biff = 2;\n    /* falls through */\n    case 'biff3':\n      if (!o.biff) o.biff = 3;\n    /* falls through */\n    case 'biff4':\n      if (!o.biff) o.biff = 4;\n      return write_binary_type(write_biff_buf(wb, o), o);\n    case 'biff5':\n      if (!o.biff) o.biff = 5;\n    /* falls through */\n    case 'biff8':\n    case 'xla':\n    case 'xls':\n      if (!o.biff) o.biff = 8;\n      return write_cfb_type(wb, o);\n    case 'xlsx':\n    case 'xlsm':\n    case 'xlam':\n    case 'xlsb':\n    case 'numbers':\n    case 'ods':\n      return write_zip_type(wb, o);\n    default:\n      throw new Error(\"Unrecognized bookType |\" + o.bookType + \"|\");\n  }\n}\n/*::\ntype MJRObject = {\n\trow: any;\n\tisempty: boolean;\n};\n*/\nfunction make_json_row(sheet /*:Worksheet*/, r /*:Range*/, R /*:number*/, cols /*:Array<string>*/, header /*:number*/, hdr /*:Array<any>*/, o /*:Sheet2JSONOpts*/) /*:MJRObject*/{\n  var rr = encode_row(R);\n  var defval = o.defval,\n    raw = o.raw || !Object.prototype.hasOwnProperty.call(o, \"raw\");\n  var isempty = true,\n    dense = sheet[\"!data\"] != null;\n  var row /*:any*/ = header === 1 ? [] : {};\n  if (header !== 1) {\n    if (Object.defineProperty) try {\n      Object.defineProperty(row, '__rowNum__', {\n        value: R,\n        enumerable: false\n      });\n    } catch (e) {\n      row.__rowNum__ = R;\n    } else row.__rowNum__ = R;\n  }\n  if (!dense || sheet[\"!data\"][R]) for (var C = r.s.c; C <= r.e.c; ++C) {\n    var val = dense ? (sheet[\"!data\"][R] || [])[C] : sheet[cols[C] + rr];\n    if (val == null || val.t === undefined) {\n      if (defval === undefined) continue;\n      if (hdr[C] != null) {\n        row[hdr[C]] = defval;\n      }\n      continue;\n    }\n    var v = val.v;\n    switch (val.t) {\n      case 'z':\n        if (v == null) break;\n        continue;\n      case 'e':\n        v = v == 0 ? null : void 0;\n        break;\n      case 's':\n      case 'b':\n      case 'n':\n        if (!val.z || !fmt_is_date(val.z)) break;\n        v = numdate(v); // TODO: date1904 setting should also be stored in worksheet object\n        if (typeof v == \"number\") break;\n      /* falls through */\n      case 'd':\n        if (!(o && o.UTC)) v = utc_to_local(v);\n        break;\n      default:\n        throw new Error('unrecognized type ' + val.t);\n    }\n    if (hdr[C] != null) {\n      if (v == null) {\n        if (val.t == \"e\" && v === null) row[hdr[C]] = null;else if (defval !== undefined) row[hdr[C]] = defval;else if (raw && v === null) row[hdr[C]] = null;else continue;\n      } else {\n        row[hdr[C]] = raw && (val.t !== \"n\" || val.t === \"n\" && o.rawNumbers !== false) ? v : format_cell(val, v, o);\n      }\n      if (v != null) isempty = false;\n    }\n  }\n  return {\n    row: row,\n    isempty: isempty\n  };\n}\nfunction sheet_to_json(sheet /*:Worksheet*/, opts /*:?Sheet2JSONOpts*/) {\n  if (sheet == null || sheet[\"!ref\"] == null) return [];\n  var val = {\n      t: 'n',\n      v: 0\n    },\n    header = 0,\n    offset = 1,\n    hdr /*:Array<any>*/ = [],\n    v = 0,\n    vv = \"\";\n  var r = {\n    s: {\n      r: 0,\n      c: 0\n    },\n    e: {\n      r: 0,\n      c: 0\n    }\n  };\n  var o = opts || {};\n  var range = o.range != null ? o.range : sheet[\"!ref\"];\n  if (o.header === 1) header = 1;else if (o.header === \"A\") header = 2;else if (Array.isArray(o.header)) header = 3;else if (o.header == null) header = 0;\n  switch (typeof range) {\n    case 'string':\n      r = safe_decode_range(range);\n      break;\n    case 'number':\n      r = safe_decode_range(sheet[\"!ref\"]);\n      r.s.r = range;\n      break;\n    default:\n      r = range;\n  }\n  if (header > 0) offset = 0;\n  var rr = encode_row(r.s.r);\n  var cols /*:Array<string>*/ = [];\n  var out /*:Array<any>*/ = [];\n  var outi = 0,\n    counter = 0;\n  var dense = sheet[\"!data\"] != null;\n  var R = r.s.r,\n    C = 0;\n  var header_cnt = {};\n  if (dense && !sheet[\"!data\"][R]) sheet[\"!data\"][R] = [];\n  var colinfo /*:Array<ColInfo>*/ = o.skipHidden && sheet[\"!cols\"] || [];\n  var rowinfo /*:Array<ColInfo>*/ = o.skipHidden && sheet[\"!rows\"] || [];\n  for (C = r.s.c; C <= r.e.c; ++C) {\n    if ((colinfo[C] || {}).hidden) continue;\n    cols[C] = encode_col(C);\n    val = dense ? sheet[\"!data\"][R][C] : sheet[cols[C] + rr];\n    switch (header) {\n      case 1:\n        hdr[C] = C - r.s.c;\n        break;\n      case 2:\n        hdr[C] = cols[C];\n        break;\n      case 3:\n        hdr[C] = o.header[C - r.s.c];\n        break;\n      default:\n        if (val == null) val = {\n          w: \"__EMPTY\",\n          t: \"s\"\n        };\n        vv = v = format_cell(val, null, o);\n        counter = header_cnt[v] || 0;\n        if (!counter) header_cnt[v] = 1;else {\n          do {\n            vv = v + \"_\" + counter++;\n          } while (header_cnt[vv]);\n          header_cnt[v] = counter;\n          header_cnt[vv] = 1;\n        }\n        hdr[C] = vv;\n    }\n  }\n  for (R = r.s.r + offset; R <= r.e.r; ++R) {\n    if ((rowinfo[R] || {}).hidden) continue;\n    var row = make_json_row(sheet, r, R, cols, header, hdr, o);\n    if (row.isempty === false || (header === 1 ? o.blankrows !== false : !!o.blankrows)) out[outi++] = row.row;\n  }\n  out.length = outi;\n  return out;\n}\nvar qreg = /\"/g;\nfunction make_csv_row(sheet /*:Worksheet*/, r /*:Range*/, R /*:number*/, cols /*:Array<string>*/, fs /*:number*/, rs /*:number*/, FS /*:string*/, o /*:Sheet2CSVOpts*/) /*:?string*/{\n  var isempty = true;\n  var row /*:Array<string>*/ = [],\n    txt = \"\",\n    rr = encode_row(R);\n  var dense = sheet[\"!data\"] != null;\n  var datarow = dense && sheet[\"!data\"][R] || [];\n  for (var C = r.s.c; C <= r.e.c; ++C) {\n    if (!cols[C]) continue;\n    var val = dense ? datarow[C] : sheet[cols[C] + rr];\n    if (val == null) txt = \"\";else if (val.v != null) {\n      isempty = false;\n      txt = '' + (o.rawNumbers && val.t == \"n\" ? val.v : format_cell(val, null, o));\n      for (var i = 0, cc = 0; i !== txt.length; ++i) if ((cc = txt.charCodeAt(i)) === fs || cc === rs || cc === 34 || o.forceQuotes) {\n        txt = \"\\\"\" + txt.replace(qreg, '\"\"') + \"\\\"\";\n        break;\n      }\n      if (txt == \"ID\") txt = '\"ID\"';\n    } else if (val.f != null && !val.F) {\n      isempty = false;\n      txt = '=' + val.f;\n      if (txt.indexOf(\",\") >= 0) txt = '\"' + txt.replace(qreg, '\"\"') + '\"';\n    } else txt = \"\";\n    /* NOTE: Excel CSV does not support array formulae */\n    row.push(txt);\n  }\n  if (o.blankrows === false && isempty) return null;\n  return row.join(FS);\n}\nfunction sheet_to_csv(sheet /*:Worksheet*/, opts /*:?Sheet2CSVOpts*/) /*:string*/{\n  var out /*:Array<string>*/ = [];\n  var o = opts == null ? {} : opts;\n  if (sheet == null || sheet[\"!ref\"] == null) return \"\";\n  var r = safe_decode_range(sheet[\"!ref\"]);\n  var FS = o.FS !== undefined ? o.FS : \",\",\n    fs = FS.charCodeAt(0);\n  var RS = o.RS !== undefined ? o.RS : \"\\n\",\n    rs = RS.charCodeAt(0);\n  var endregex = new RegExp((FS == \"|\" ? \"\\\\|\" : FS) + \"+$\");\n  var row = \"\",\n    cols /*:Array<string>*/ = [];\n  var colinfo /*:Array<ColInfo>*/ = o.skipHidden && sheet[\"!cols\"] || [];\n  var rowinfo /*:Array<ColInfo>*/ = o.skipHidden && sheet[\"!rows\"] || [];\n  for (var C = r.s.c; C <= r.e.c; ++C) if (!(colinfo[C] || {}).hidden) cols[C] = encode_col(C);\n  var w = 0;\n  for (var R = r.s.r; R <= r.e.r; ++R) {\n    if ((rowinfo[R] || {}).hidden) continue;\n    row = make_csv_row(sheet, r, R, cols, fs, rs, FS, o);\n    if (row == null) {\n      continue;\n    }\n    if (o.strip) row = row.replace(endregex, \"\");\n    if (row || o.blankrows !== false) out.push((w++ ? RS : \"\") + row);\n  }\n  return out.join(\"\");\n}\nfunction sheet_to_txt(sheet /*:Worksheet*/, opts /*:?Sheet2CSVOpts*/) {\n  if (!opts) opts = {};\n  opts.FS = \"\\t\";\n  opts.RS = \"\\n\";\n  var s = sheet_to_csv(sheet, opts);\n  return s;\n}\nfunction sheet_to_formulae(sheet /*:Worksheet*/) /*:Array<string>*/{\n  var y = \"\",\n    x,\n    val = \"\";\n  if (sheet == null || sheet[\"!ref\"] == null) return [];\n  var r = safe_decode_range(sheet['!ref']),\n    rr = \"\",\n    cols /*:Array<string>*/ = [],\n    C;\n  var cmds /*:Array<string>*/ = [];\n  var dense = sheet[\"!data\"] != null;\n  for (C = r.s.c; C <= r.e.c; ++C) cols[C] = encode_col(C);\n  for (var R = r.s.r; R <= r.e.r; ++R) {\n    rr = encode_row(R);\n    for (C = r.s.c; C <= r.e.c; ++C) {\n      y = cols[C] + rr;\n      x = dense ? (sheet[\"!data\"][R] || [])[C] : sheet[y];\n      val = \"\";\n      if (x === undefined) continue;else if (x.F != null) {\n        y = x.F;\n        if (!x.f) continue;\n        val = x.f;\n        if (y.indexOf(\":\") == -1) y = y + \":\" + y;\n      }\n      if (x.f != null) val = x.f;else if (x.t == 'z') continue;else if (x.t == 'n' && x.v != null) val = \"\" + x.v;else if (x.t == 'b') val = x.v ? \"TRUE\" : \"FALSE\";else if (x.w !== undefined) val = \"'\" + x.w;else if (x.v === undefined) continue;else if (x.t == 's') val = \"'\" + x.v;else val = \"\" + x.v;\n      cmds[cmds.length] = y + \"=\" + val;\n    }\n  }\n  return cmds;\n}\nfunction sheet_add_json(_ws /*:?Worksheet*/, js /*:Array<any>*/, opts) /*:Worksheet*/{\n  var o = opts || {};\n  var dense = _ws ? _ws[\"!data\"] != null : o.dense;\n  var offset = +!o.skipHeader;\n  var ws /*:Worksheet*/ = _ws || {};\n  if (!_ws && dense) ws[\"!data\"] = [];\n  var _R = 0,\n    _C = 0;\n  if (ws && o.origin != null) {\n    if (typeof o.origin == 'number') _R = o.origin;else {\n      var _origin /*:CellAddress*/ = typeof o.origin == \"string\" ? decode_cell(o.origin) : o.origin;\n      _R = _origin.r;\n      _C = _origin.c;\n    }\n  }\n  var range /*:Range*/ = {\n    s: {\n      c: 0,\n      r: 0\n    },\n    e: {\n      c: _C,\n      r: _R + js.length - 1 + offset\n    }\n  } /*:any*/;\n  if (ws['!ref']) {\n    var _range = safe_decode_range(ws['!ref']);\n    range.e.c = Math.max(range.e.c, _range.e.c);\n    range.e.r = Math.max(range.e.r, _range.e.r);\n    if (_R == -1) {\n      _R = _range.e.r + 1;\n      range.e.r = _R + js.length - 1 + offset;\n    }\n  } else {\n    if (_R == -1) {\n      _R = 0;\n      range.e.r = js.length - 1 + offset;\n    }\n  }\n  var hdr /*:Array<string>*/ = o.header || [],\n    C = 0;\n  var ROW = [];\n  js.forEach(function (JS, R /*:number*/) {\n    if (dense && !ws[\"!data\"][_R + R + offset]) ws[\"!data\"][_R + R + offset] = [];\n    if (dense) ROW = ws[\"!data\"][_R + R + offset];\n    keys(JS).forEach(function (k) {\n      if ((C = hdr.indexOf(k)) == -1) hdr[C = hdr.length] = k;\n      var v = JS[k];\n      var t = 'z';\n      var z = \"\";\n      var ref = dense ? \"\" : encode_col(_C + C) + encode_row(_R + R + offset);\n      var cell /*:Cell*/ = dense ? ROW[_C + C] : ws[ref];\n      if (v && typeof v === 'object' && !(v instanceof Date)) {\n        if (dense) ROW[_C + C] = v;else ws[ref] = v;\n      } else {\n        if (typeof v == 'number') t = 'n';else if (typeof v == 'boolean') t = 'b';else if (typeof v == 'string') t = 's';else if (v instanceof Date) {\n          t = 'd';\n          if (!o.UTC) v = local_to_utc(v);\n          if (!o.cellDates) {\n            t = 'n';\n            v = datenum(v);\n          }\n          z = cell != null && cell.z && fmt_is_date(cell.z) ? cell.z : o.dateNF || table_fmt[14];\n        } else if (v === null && o.nullError) {\n          t = 'e';\n          v = 0;\n        }\n        if (!cell) {\n          if (!dense) ws[ref] = cell = {\n            t: t,\n            v: v\n          } /*:any*/;else ROW[_C + C] = cell = {\n            t: t,\n            v: v\n          } /*:any*/;\n        } else {\n          cell.t = t;\n          cell.v = v;\n          delete cell.w;\n          delete cell.R;\n          if (z) cell.z = z;\n        }\n        if (z) cell.z = z;\n      }\n    });\n  });\n  range.e.c = Math.max(range.e.c, _C + hdr.length - 1);\n  var __R = encode_row(_R);\n  if (dense && !ws[\"!data\"][_R]) ws[\"!data\"][_R] = [];\n  if (offset) for (C = 0; C < hdr.length; ++C) {\n    if (dense) ws[\"!data\"][_R][C + _C] = {\n      t: 's',\n      v: hdr[C]\n    };else ws[encode_col(C + _C) + __R] = {\n      t: 's',\n      v: hdr[C]\n    };\n  }\n  ws['!ref'] = encode_range(range);\n  return ws;\n}\nfunction json_to_sheet(js /*:Array<any>*/, opts) /*:Worksheet*/{\n  return sheet_add_json(null, js, opts);\n}\n\n/* get cell, creating a stub if necessary */\nfunction ws_get_cell_stub(ws /*:Worksheet*/, R, C /*:?number*/) /*:Cell*/{\n  /* A1 cell address */\n  if (typeof R == \"string\") {\n    if (ws[\"!data\"] != null) {\n      var RC = decode_cell(R);\n      if (!ws[\"!data\"][RC.r]) ws[\"!data\"][RC.r] = [];\n      return ws[\"!data\"][RC.r][RC.c] || (ws[\"!data\"][RC.r][RC.c] = {\n        t: 'z'\n      });\n    }\n    return ws[R] || (ws[R] = {\n      t: 'z'\n    });\n  }\n  /* cell address object */\n  if (typeof R != \"number\") return ws_get_cell_stub(ws, encode_cell(R));\n  /* R and C are 0-based indices */\n  return ws_get_cell_stub(ws, encode_col(C || 0) + encode_row(R));\n}\n\n/* find sheet index for given name / validate index */\nfunction wb_sheet_idx(wb /*:Workbook*/, sh /*:number|string*/) {\n  if (typeof sh == \"number\") {\n    if (sh >= 0 && wb.SheetNames.length > sh) return sh;\n    throw new Error(\"Cannot find sheet # \" + sh);\n  } else if (typeof sh == \"string\") {\n    var idx = wb.SheetNames.indexOf(sh);\n    if (idx > -1) return idx;\n    throw new Error(\"Cannot find sheet name |\" + sh + \"|\");\n  } else throw new Error(\"Cannot find sheet |\" + sh + \"|\");\n}\n\n/* simple blank workbook object */\nfunction book_new() /*:Workbook*/{\n  return {\n    SheetNames: [],\n    Sheets: {}\n  };\n}\n\n/* add a worksheet to the end of a given workbook */\nfunction book_append_sheet(wb /*:Workbook*/, ws /*:Worksheet*/, name /*:?string*/, roll /*:?boolean*/) /*:string*/{\n  var i = 1;\n  if (!name) for (; i <= 0xFFFF; ++i, name = undefined) if (wb.SheetNames.indexOf(name = \"Sheet\" + i) == -1) break;\n  if (!name || wb.SheetNames.length >= 0xFFFF) throw new Error(\"Too many worksheets\");\n  if (roll && wb.SheetNames.indexOf(name) >= 0) {\n    var m = name.match(/(^.*?)(\\d+)$/);\n    i = m && +m[2] || 0;\n    var root = m && m[1] || name;\n    for (++i; i <= 0xFFFF; ++i) if (wb.SheetNames.indexOf(name = root + i) == -1) break;\n  }\n  check_ws_name(name);\n  if (wb.SheetNames.indexOf(name) >= 0) throw new Error(\"Worksheet with name |\" + name + \"| already exists!\");\n  wb.SheetNames.push(name);\n  wb.Sheets[name] = ws;\n  return name;\n}\n\n/* set sheet visibility (visible/hidden/very hidden) */\nfunction book_set_sheet_visibility(wb /*:Workbook*/, sh /*:number|string*/, vis /*:number*/) {\n  if (!wb.Workbook) wb.Workbook = {};\n  if (!wb.Workbook.Sheets) wb.Workbook.Sheets = [];\n  var idx = wb_sheet_idx(wb, sh);\n  // $FlowIgnore\n  if (!wb.Workbook.Sheets[idx]) wb.Workbook.Sheets[idx] = {};\n  switch (vis) {\n    case 0:\n    case 1:\n    case 2:\n      break;\n    default:\n      throw new Error(\"Bad sheet visibility setting \" + vis);\n  }\n  // $FlowIgnore\n  wb.Workbook.Sheets[idx].Hidden = vis;\n}\n\n/* set number format */\nfunction cell_set_number_format(cell /*:Cell*/, fmt /*:string|number*/) {\n  cell.z = fmt;\n  return cell;\n}\n\n/* set cell hyperlink */\nfunction cell_set_hyperlink(cell /*:Cell*/, target /*:string*/, tooltip /*:?string*/) {\n  if (!target) {\n    delete cell.l;\n  } else {\n    cell.l = {\n      Target: target\n    } /*:Hyperlink*/;\n    if (tooltip) cell.l.Tooltip = tooltip;\n  }\n  return cell;\n}\nfunction cell_set_internal_link(cell /*:Cell*/, range /*:string*/, tooltip /*:?string*/) {\n  return cell_set_hyperlink(cell, \"#\" + range, tooltip);\n}\n\n/* add to cell comments */\nfunction cell_add_comment(cell /*:Cell*/, text /*:string*/, author /*:?string*/) {\n  if (!cell.c) cell.c = [];\n  cell.c.push({\n    t: text,\n    a: author || \"SheetJS\"\n  });\n}\n\n/* set array formula and flush related cells */\nfunction sheet_set_array_formula(ws /*:Worksheet*/, range, formula /*:string*/, dynamic /*:boolean*/) {\n  var rng = typeof range != \"string\" ? range : safe_decode_range(range);\n  var rngstr = typeof range == \"string\" ? range : encode_range(range);\n  for (var R = rng.s.r; R <= rng.e.r; ++R) for (var C = rng.s.c; C <= rng.e.c; ++C) {\n    var cell = ws_get_cell_stub(ws, R, C);\n    cell.t = 'n';\n    cell.F = rngstr;\n    delete cell.v;\n    if (R == rng.s.r && C == rng.s.c) {\n      cell.f = formula;\n      if (dynamic) cell.D = true;\n    }\n  }\n  var wsr = decode_range(ws[\"!ref\"]);\n  if (wsr.s.r > rng.s.r) wsr.s.r = rng.s.r;\n  if (wsr.s.c > rng.s.c) wsr.s.c = rng.s.c;\n  if (wsr.e.r < rng.e.r) wsr.e.r = rng.e.r;\n  if (wsr.e.c < rng.e.c) wsr.e.c = rng.e.c;\n  ws[\"!ref\"] = encode_range(wsr);\n  return ws;\n}\nvar utils /*:any*/ = {\n  encode_col: encode_col,\n  encode_row: encode_row,\n  encode_cell: encode_cell,\n  encode_range: encode_range,\n  decode_col: decode_col,\n  decode_row: decode_row,\n  split_cell: split_cell,\n  decode_cell: decode_cell,\n  decode_range: decode_range,\n  format_cell: format_cell,\n  sheet_add_aoa: sheet_add_aoa,\n  sheet_add_json: sheet_add_json,\n  sheet_add_dom: sheet_add_dom,\n  aoa_to_sheet: aoa_to_sheet,\n  json_to_sheet: json_to_sheet,\n  table_to_sheet: parse_dom_table,\n  table_to_book: table_to_book,\n  sheet_to_csv: sheet_to_csv,\n  sheet_to_txt: sheet_to_txt,\n  sheet_to_json: sheet_to_json,\n  sheet_to_html: sheet_to_html,\n  sheet_to_formulae: sheet_to_formulae,\n  sheet_to_row_object_array: sheet_to_json,\n  sheet_get_cell: ws_get_cell_stub,\n  book_new: book_new,\n  book_append_sheet: book_append_sheet,\n  book_set_sheet_visibility: book_set_sheet_visibility,\n  cell_set_number_format: cell_set_number_format,\n  cell_set_hyperlink: cell_set_hyperlink,\n  cell_set_internal_link: cell_set_internal_link,\n  cell_add_comment: cell_add_comment,\n  sheet_set_array_formula: sheet_set_array_formula,\n  consts: {\n    SHEET_VISIBLE: 0,\n    SHEET_HIDDEN: 1,\n    SHEET_VERY_HIDDEN: 2\n  }\n};\nfunction _typeof$1(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof$1 = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof$1(o);\n}\nfunction toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n  var number = Number(dirtyNumber);\n  if (isNaN(number)) {\n    return number;\n  }\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}\nfunction requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}\n\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nfunction toDate$1(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument);\n\n  // Clone the date\n  if (argument instanceof Date || _typeof$1(argument) === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments\");\n      // eslint-disable-next-line no-console\n      console.warn(new Error().stack);\n    }\n    return new Date(NaN);\n  }\n}\n\n/**\n * @name addMilliseconds\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * const result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\nfunction addMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var timestamp = toDate$1(dirtyDate).getTime();\n  var amount = toInteger(dirtyAmount);\n  return new Date(timestamp + amount);\n}\nvar defaultOptions = {};\nfunction getDefaultOptions() {\n  return defaultOptions;\n}\n\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nfunction getTimezoneOffsetInMilliseconds(date) {\n  var utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n  utcDate.setUTCFullYear(date.getFullYear());\n  return date.getTime() - utcDate.getTime();\n}\n\n/**\n * Days in 1 week.\n *\n * @name daysInWeek\n * @constant\n * @type {number}\n * @default\n */\n\n/**\n * Milliseconds in 1 minute\n *\n * @name millisecondsInMinute\n * @constant\n * @type {number}\n * @default\n */\nvar millisecondsInMinute = 60000;\n\n/**\n * Milliseconds in 1 hour\n *\n * @name millisecondsInHour\n * @constant\n * @type {number}\n * @default\n */\nvar millisecondsInHour = 3600000;\n\n/**\n * Milliseconds in 1 second\n *\n * @name millisecondsInSecond\n * @constant\n * @type {number}\n * @default\n */\nvar millisecondsInSecond = 1000;\n\n/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * @param {*} value - the value to check\n * @returns {boolean} true if the given value is a date\n * @throws {TypeError} 1 arguments required\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\nfunction isDate$2(value) {\n  requiredArgs(1, arguments);\n  return value instanceof Date || _typeof$1(value) === 'object' && Object.prototype.toString.call(value) === '[object Date]';\n}\n\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @param {*} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\nfunction isValid$2(dirtyDate) {\n  requiredArgs(1, arguments);\n  if (!isDate$2(dirtyDate) && typeof dirtyDate !== 'number') {\n    return false;\n  }\n  var date = toDate$1(dirtyDate);\n  return !isNaN(Number(date));\n}\n\n/**\n * @name subMilliseconds\n * @category Millisecond Helpers\n * @summary Subtract the specified number of milliseconds from the given date.\n *\n * @description\n * Subtract the specified number of milliseconds from the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:\n * const result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:29.250\n */\nfunction subMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, -amount);\n}\nvar MILLISECONDS_IN_DAY = 86400000;\nfunction getUTCDayOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate$1(dirtyDate);\n  var timestamp = date.getTime();\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n  var startOfYearTimestamp = date.getTime();\n  var difference = timestamp - startOfYearTimestamp;\n  return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;\n}\nfunction startOfUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var weekStartsOn = 1;\n  var date = toDate$1(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}\nfunction getUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate$1(dirtyDate);\n  var year = date.getUTCFullYear();\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\nfunction startOfUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getUTCISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setUTCFullYear(year, 0, 4);\n  fourthOfJanuary.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCISOWeek(fourthOfJanuary);\n  return date;\n}\nvar MILLISECONDS_IN_WEEK$1 = 604800000;\nfunction getUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate$1(dirtyDate);\n  var diff = startOfUTCISOWeek(date).getTime() - startOfUTCISOWeekYear(date).getTime();\n\n  // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n  return Math.round(diff / MILLISECONDS_IN_WEEK$1) + 1;\n}\nfunction startOfUTCWeek(dirtyDate, options) {\n  var _ref, _ref2, _ref3, _options$weekStartsOn, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;\n  requiredArgs(1, arguments);\n  var defaultOptions = getDefaultOptions();\n  var weekStartsOn = toInteger((_ref = (_ref2 = (_ref3 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref !== void 0 ? _ref : 0);\n\n  // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n  var date = toDate$1(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}\nfunction getUTCWeekYear(dirtyDate, options) {\n  var _ref, _ref2, _ref3, _options$firstWeekCon, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;\n  requiredArgs(1, arguments);\n  var date = toDate$1(dirtyDate);\n  var year = date.getUTCFullYear();\n  var defaultOptions = getDefaultOptions();\n  var firstWeekContainsDate = toInteger((_ref = (_ref2 = (_ref3 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref !== void 0 ? _ref : 1);\n\n  // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, options);\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, options);\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\nfunction startOfUTCWeekYear(dirtyDate, options) {\n  var _ref, _ref2, _ref3, _options$firstWeekCon, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;\n  requiredArgs(1, arguments);\n  var defaultOptions = getDefaultOptions();\n  var firstWeekContainsDate = toInteger((_ref = (_ref2 = (_ref3 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref !== void 0 ? _ref : 1);\n  var year = getUTCWeekYear(dirtyDate, options);\n  var firstWeek = new Date(0);\n  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCWeek(firstWeek, options);\n  return date;\n}\nvar MILLISECONDS_IN_WEEK = 604800000;\nfunction getUTCWeek(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  var date = toDate$1(dirtyDate);\n  var diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime();\n\n  // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}\nfunction addLeadingZeros(number, targetLength) {\n  var sign = number < 0 ? '-' : '';\n  var output = Math.abs(number).toString();\n  while (output.length < targetLength) {\n    output = '0' + output;\n  }\n  return sign + output;\n}\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\nvar formatters$2 = {\n  // Year\n  y: function y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\n    var signedYear = date.getUTCFullYear();\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    var year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === 'yy' ? year % 100 : year, token.length);\n  },\n  // Month\n  M: function M(date, token) {\n    var month = date.getUTCMonth();\n    return token === 'M' ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n  // Day of the month\n  d: function d(date, token) {\n    return addLeadingZeros(date.getUTCDate(), token.length);\n  },\n  // AM or PM\n  a: function a(date, token) {\n    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? 'pm' : 'am';\n    switch (token) {\n      case 'a':\n      case 'aa':\n        return dayPeriodEnumValue.toUpperCase();\n      case 'aaa':\n        return dayPeriodEnumValue;\n      case 'aaaaa':\n        return dayPeriodEnumValue[0];\n      case 'aaaa':\n      default:\n        return dayPeriodEnumValue === 'am' ? 'a.m.' : 'p.m.';\n    }\n  },\n  // Hour [1-12]\n  h: function h(date, token) {\n    return addLeadingZeros(date.getUTCHours() % 12 || 12, token.length);\n  },\n  // Hour [0-23]\n  H: function H(date, token) {\n    return addLeadingZeros(date.getUTCHours(), token.length);\n  },\n  // Minute\n  m: function m(date, token) {\n    return addLeadingZeros(date.getUTCMinutes(), token.length);\n  },\n  // Second\n  s: function s(date, token) {\n    return addLeadingZeros(date.getUTCSeconds(), token.length);\n  },\n  // Fraction of second\n  S: function S(date, token) {\n    var numberOfDigits = token.length;\n    var milliseconds = date.getUTCMilliseconds();\n    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));\n    return addLeadingZeros(fractionalSeconds, token.length);\n  }\n};\nvar formatters$3 = formatters$2;\nvar dayPeriodEnum = {\n  am: 'am',\n  pm: 'pm',\n  midnight: 'midnight',\n  noon: 'noon',\n  morning: 'morning',\n  afternoon: 'afternoon',\n  evening: 'evening',\n  night: 'night'\n};\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nvar formatters = {\n  // Era\n  G: function G(date, token, localize) {\n    var era = date.getUTCFullYear() > 0 ? 1 : 0;\n    switch (token) {\n      // AD, BC\n      case 'G':\n      case 'GG':\n      case 'GGG':\n        return localize.era(era, {\n          width: 'abbreviated'\n        });\n      // A, B\n      case 'GGGGG':\n        return localize.era(era, {\n          width: 'narrow'\n        });\n      // Anno Domini, Before Christ\n      case 'GGGG':\n      default:\n        return localize.era(era, {\n          width: 'wide'\n        });\n    }\n  },\n  // Year\n  y: function y(date, token, localize) {\n    // Ordinal number\n    if (token === 'yo') {\n      var signedYear = date.getUTCFullYear();\n      // Returns 1 for 1 BC (which is year 0 in JavaScript)\n      var year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, {\n        unit: 'year'\n      });\n    }\n    return formatters$3.y(date, token);\n  },\n  // Local week-numbering year\n  Y: function Y(date, token, localize, options) {\n    var signedWeekYear = getUTCWeekYear(date, options);\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\n\n    // Two digit year\n    if (token === 'YY') {\n      var twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    }\n\n    // Ordinal number\n    if (token === 'Yo') {\n      return localize.ordinalNumber(weekYear, {\n        unit: 'year'\n      });\n    }\n\n    // Padding\n    return addLeadingZeros(weekYear, token.length);\n  },\n  // ISO week-numbering year\n  R: function R(date, token) {\n    var isoWeekYear = getUTCISOWeekYear(date);\n\n    // Padding\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function u(date, token) {\n    var year = date.getUTCFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n  // Quarter\n  Q: function Q(date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'Q':\n        return String(quarter);\n      // 01, 02, 03, 04\n      case 'QQ':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case 'Qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n      case 'QQQ':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case 'QQQQQ':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // 1st quarter, 2nd quarter, ...\n      case 'QQQQ':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone quarter\n  q: function q(date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'q':\n        return String(quarter);\n      // 01, 02, 03, 04\n      case 'qq':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case 'qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n      case 'qqq':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case 'qqqqq':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // 1st quarter, 2nd quarter, ...\n      case 'qqqq':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Month\n  M: function M(date, token, localize) {\n    var month = date.getUTCMonth();\n    switch (token) {\n      case 'M':\n      case 'MM':\n        return formatters$3.M(date, token);\n      // 1st, 2nd, ..., 12th\n      case 'Mo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n      case 'MMM':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // J, F, ..., D\n      case 'MMMMM':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // January, February, ..., December\n      case 'MMMM':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone month\n  L: function L(date, token, localize) {\n    var month = date.getUTCMonth();\n    switch (token) {\n      // 1, 2, ..., 12\n      case 'L':\n        return String(month + 1);\n      // 01, 02, ..., 12\n      case 'LL':\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n      case 'Lo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n      case 'LLL':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // J, F, ..., D\n      case 'LLLLL':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // January, February, ..., December\n      case 'LLLL':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Local week of year\n  w: function w(date, token, localize, options) {\n    var week = getUTCWeek(date, options);\n    if (token === 'wo') {\n      return localize.ordinalNumber(week, {\n        unit: 'week'\n      });\n    }\n    return addLeadingZeros(week, token.length);\n  },\n  // ISO week of year\n  I: function I(date, token, localize) {\n    var isoWeek = getUTCISOWeek(date);\n    if (token === 'Io') {\n      return localize.ordinalNumber(isoWeek, {\n        unit: 'week'\n      });\n    }\n    return addLeadingZeros(isoWeek, token.length);\n  },\n  // Day of the month\n  d: function d(date, token, localize) {\n    if (token === 'do') {\n      return localize.ordinalNumber(date.getUTCDate(), {\n        unit: 'date'\n      });\n    }\n    return formatters$3.d(date, token);\n  },\n  // Day of year\n  D: function D(date, token, localize) {\n    var dayOfYear = getUTCDayOfYear(date);\n    if (token === 'Do') {\n      return localize.ordinalNumber(dayOfYear, {\n        unit: 'dayOfYear'\n      });\n    }\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n  // Day of week\n  E: function E(date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n    switch (token) {\n      // Tue\n      case 'E':\n      case 'EE':\n      case 'EEE':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n      case 'EEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n      case 'EEEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n      case 'EEEE':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Local day of week\n  e: function e(date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case 'e':\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case 'ee':\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n      case 'eo':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n      case 'eee':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n      case 'eeeee':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n      case 'eeeeee':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n      case 'eeee':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone local day of week\n  c: function c(date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case 'c':\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case 'cc':\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n      case 'co':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n      case 'ccc':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // T\n      case 'ccccc':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // Tu\n      case 'cccccc':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'standalone'\n        });\n      // Tuesday\n      case 'cccc':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // ISO day of week\n  i: function i(date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n    switch (token) {\n      // 2\n      case 'i':\n        return String(isoDayOfWeek);\n      // 02\n      case 'ii':\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n      case 'io':\n        return localize.ordinalNumber(isoDayOfWeek, {\n          unit: 'day'\n        });\n      // Tue\n      case 'iii':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n      case 'iiiii':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n      case 'iiiiii':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n      case 'iiii':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM or PM\n  a: function a(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n    switch (token) {\n      case 'a':\n      case 'aa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      case 'aaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }).toLowerCase();\n      case 'aaaaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      case 'aaaa':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM, PM, midnight, noon\n  b: function b(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n    }\n    switch (token) {\n      case 'b':\n      case 'bb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      case 'bbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }).toLowerCase();\n      case 'bbbbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      case 'bbbb':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: function B(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n    switch (token) {\n      case 'B':\n      case 'BB':\n      case 'BBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      case 'BBBBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      case 'BBBB':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Hour [1-12]\n  h: function h(date, token, localize) {\n    if (token === 'ho') {\n      var hours = date.getUTCHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n    return formatters$3.h(date, token);\n  },\n  // Hour [0-23]\n  H: function H(date, token, localize) {\n    if (token === 'Ho') {\n      return localize.ordinalNumber(date.getUTCHours(), {\n        unit: 'hour'\n      });\n    }\n    return formatters$3.H(date, token);\n  },\n  // Hour [0-11]\n  K: function K(date, token, localize) {\n    var hours = date.getUTCHours() % 12;\n    if (token === 'Ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n    return addLeadingZeros(hours, token.length);\n  },\n  // Hour [1-24]\n  k: function k(date, token, localize) {\n    var hours = date.getUTCHours();\n    if (hours === 0) hours = 24;\n    if (token === 'ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n    return addLeadingZeros(hours, token.length);\n  },\n  // Minute\n  m: function m(date, token, localize) {\n    if (token === 'mo') {\n      return localize.ordinalNumber(date.getUTCMinutes(), {\n        unit: 'minute'\n      });\n    }\n    return formatters$3.m(date, token);\n  },\n  // Second\n  s: function s(date, token, localize) {\n    if (token === 'so') {\n      return localize.ordinalNumber(date.getUTCSeconds(), {\n        unit: 'second'\n      });\n    }\n    return formatters$3.s(date, token);\n  },\n  // Fraction of second\n  S: function S(date, token) {\n    return formatters$3.S(date, token);\n  },\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function X(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n    if (timezoneOffset === 0) {\n      return 'Z';\n    }\n    switch (token) {\n      // Hours and optional minutes\n      case 'X':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case 'XXXX':\n      case 'XX':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case 'XXXXX':\n      case 'XXX': // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function x(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n    switch (token) {\n      // Hours and optional minutes\n      case 'x':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case 'xxxx':\n      case 'xx':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case 'xxxxx':\n      case 'xxx': // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (GMT)\n  O: function O(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n    switch (token) {\n      // Short\n      case 'O':\n      case 'OO':\n      case 'OOO':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n      case 'OOOO':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (specific non-location)\n  z: function z(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n    switch (token) {\n      // Short\n      case 'z':\n      case 'zz':\n      case 'zzz':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n      case 'zzzz':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Seconds timestamp\n  t: function t(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = Math.floor(originalDate.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n  // Milliseconds timestamp\n  T: function T(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = originalDate.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  }\n};\nfunction formatTimezoneShort(offset, dirtyDelimiter) {\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = Math.floor(absOffset / 60);\n  var minutes = absOffset % 60;\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n  var delimiter = dirtyDelimiter || '';\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\nfunction formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {\n  if (offset % 60 === 0) {\n    var sign = offset > 0 ? '-' : '+';\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n  return formatTimezone(offset, dirtyDelimiter);\n}\nfunction formatTimezone(offset, dirtyDelimiter) {\n  var delimiter = dirtyDelimiter || '';\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);\n  var minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\nvar formatters$1 = formatters;\nvar dateLongFormatter = function dateLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'P':\n      return formatLong.date({\n        width: 'short'\n      });\n    case 'PP':\n      return formatLong.date({\n        width: 'medium'\n      });\n    case 'PPP':\n      return formatLong.date({\n        width: 'long'\n      });\n    case 'PPPP':\n    default:\n      return formatLong.date({\n        width: 'full'\n      });\n  }\n};\nvar timeLongFormatter = function timeLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'p':\n      return formatLong.time({\n        width: 'short'\n      });\n    case 'pp':\n      return formatLong.time({\n        width: 'medium'\n      });\n    case 'ppp':\n      return formatLong.time({\n        width: 'long'\n      });\n    case 'pppp':\n    default:\n      return formatLong.time({\n        width: 'full'\n      });\n  }\n};\nvar dateTimeLongFormatter = function dateTimeLongFormatter(pattern, formatLong) {\n  var matchResult = pattern.match(/(P+)(p+)?/) || [];\n  var datePattern = matchResult[1];\n  var timePattern = matchResult[2];\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n  var dateTimeFormat;\n  switch (datePattern) {\n    case 'P':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'short'\n      });\n      break;\n    case 'PP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'medium'\n      });\n      break;\n    case 'PPP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'long'\n      });\n      break;\n    case 'PPPP':\n    default:\n      dateTimeFormat = formatLong.dateTime({\n        width: 'full'\n      });\n      break;\n  }\n  return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));\n};\nvar longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter\n};\nvar longFormatters$1 = longFormatters;\nvar protectedDayOfYearTokens = ['D', 'DD'];\nvar protectedWeekYearTokens = ['YY', 'YYYY'];\nfunction isProtectedDayOfYearToken(token) {\n  return protectedDayOfYearTokens.indexOf(token) !== -1;\n}\nfunction isProtectedWeekYearToken(token) {\n  return protectedWeekYearTokens.indexOf(token) !== -1;\n}\nfunction throwProtectedError(token, format, input) {\n  if (token === 'YYYY') {\n    throw new RangeError(\"Use `yyyy` instead of `YYYY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\"));\n  } else if (token === 'YY') {\n    throw new RangeError(\"Use `yy` instead of `YY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\"));\n  } else if (token === 'D') {\n    throw new RangeError(\"Use `d` instead of `D` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\"));\n  } else if (token === 'DD') {\n    throw new RangeError(\"Use `dd` instead of `DD` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\"));\n  }\n}\nvar formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'less than a second',\n    other: 'less than {{count}} seconds'\n  },\n  xSeconds: {\n    one: '1 second',\n    other: '{{count}} seconds'\n  },\n  halfAMinute: 'half a minute',\n  lessThanXMinutes: {\n    one: 'less than a minute',\n    other: 'less than {{count}} minutes'\n  },\n  xMinutes: {\n    one: '1 minute',\n    other: '{{count}} minutes'\n  },\n  aboutXHours: {\n    one: 'about 1 hour',\n    other: 'about {{count}} hours'\n  },\n  xHours: {\n    one: '1 hour',\n    other: '{{count}} hours'\n  },\n  xDays: {\n    one: '1 day',\n    other: '{{count}} days'\n  },\n  aboutXWeeks: {\n    one: 'about 1 week',\n    other: 'about {{count}} weeks'\n  },\n  xWeeks: {\n    one: '1 week',\n    other: '{{count}} weeks'\n  },\n  aboutXMonths: {\n    one: 'about 1 month',\n    other: 'about {{count}} months'\n  },\n  xMonths: {\n    one: '1 month',\n    other: '{{count}} months'\n  },\n  aboutXYears: {\n    one: 'about 1 year',\n    other: 'about {{count}} years'\n  },\n  xYears: {\n    one: '1 year',\n    other: '{{count}} years'\n  },\n  overXYears: {\n    one: 'over 1 year',\n    other: 'over {{count}} years'\n  },\n  almostXYears: {\n    one: 'almost 1 year',\n    other: 'almost {{count}} years'\n  }\n};\nvar formatDistance = function formatDistance(token, count, options) {\n  var result;\n  var tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === 'string') {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace('{{count}}', count.toString());\n  }\n  if (options !== null && options !== void 0 && options.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return 'in ' + result;\n    } else {\n      return result + ' ago';\n    }\n  }\n  return result;\n};\nvar formatDistance$1 = formatDistance;\nfunction buildFormatLongFn(args) {\n  return function () {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    // TODO: Remove String()\n    var width = options.width ? String(options.width) : args.defaultWidth;\n    var format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}\nvar dateFormats = {\n  full: 'EEEE, MMMM do, y',\n  long: 'MMMM do, y',\n  medium: 'MMM d, y',\n  short: 'MM/dd/yyyy'\n};\nvar timeFormats = {\n  full: 'h:mm:ss a zzzz',\n  long: 'h:mm:ss a z',\n  medium: 'h:mm:ss a',\n  short: 'h:mm a'\n};\nvar dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: '{{date}}, {{time}}',\n  short: '{{date}}, {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'full'\n  })\n};\nvar formatLong$1 = formatLong;\nvar formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: 'P'\n};\nvar formatRelative = function formatRelative(token, _date, _baseDate, _options) {\n  return formatRelativeLocale[token];\n};\nvar formatRelative$1 = formatRelative;\nfunction buildLocalizeFn(args) {\n  return function (dirtyIndex, options) {\n    var context = options !== null && options !== void 0 && options.context ? String(options.context) : 'standalone';\n    var valuesArray;\n    if (context === 'formatting' && args.formattingValues) {\n      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      var width = options !== null && options !== void 0 && options.width ? String(options.width) : defaultWidth;\n      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      var _defaultWidth = args.defaultWidth;\n      var _width = options !== null && options !== void 0 && options.width ? String(options.width) : args.defaultWidth;\n      valuesArray = args.values[_width] || args.values[_defaultWidth];\n    }\n    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;\n    // @ts-ignore: For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}\nvar eraValues = {\n  narrow: ['B', 'A'],\n  abbreviated: ['BC', 'AD'],\n  wide: ['Before Christ', 'Anno Domini']\n};\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],\n  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter']\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nvar monthValues = {\n  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n  abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n};\nvar dayValues = {\n  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  }\n};\nvar ordinalNumber = function ordinalNumber(dirtyNumber, _options) {\n  var number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  var rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st';\n      case 2:\n        return number + 'nd';\n      case 3:\n        return number + 'rd';\n    }\n  }\n  return number + 'th';\n};\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function argumentCallback(quarter) {\n      return quarter - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide'\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'wide',\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: 'wide'\n  })\n};\nvar localize$1 = localize;\nfunction buildMatchFn(args) {\n  return function (string) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var width = options.width;\n    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];\n    var matchResult = string.match(matchPattern);\n    if (!matchResult) {\n      return null;\n    }\n    var matchedString = matchResult[0];\n    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];\n    var key = Array.isArray(parsePatterns) ? findIndex(parsePatterns, function (pattern) {\n      return pattern.test(matchedString);\n    }) : findKey(parsePatterns, function (pattern) {\n      return pattern.test(matchedString);\n    });\n    var value;\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    var rest = string.slice(matchedString.length);\n    return {\n      value: value,\n      rest: rest\n    };\n  };\n}\nfunction findKey(object, predicate) {\n  for (var key in object) {\n    if (object.hasOwnProperty(key) && predicate(object[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\nfunction findIndex(array, predicate) {\n  for (var key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\nfunction buildMatchPatternFn(args) {\n  return function (string) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    var matchedString = matchResult[0];\n    var parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    var rest = string.slice(matchedString.length);\n    return {\n      value: value,\n      rest: rest\n    };\n  };\n}\nvar matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i\n};\nvar parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i\n};\nvar parseMonthPatterns = {\n  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\n  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]\n};\nvar matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i\n};\nvar parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function valueCallback(value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function valueCallback(index) {\n      return index + 1;\n    }\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any'\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any'\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'any',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n};\nvar match$1 = match;\n\n/**\n * @type {Locale}\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}\n * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}\n */\nvar locale$1 = {\n  code: 'en-US',\n  formatDistance: formatDistance$1,\n  formatLong: formatLong$1,\n  formatRelative: formatRelative$1,\n  localize: localize$1,\n  match: match$1,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1\n  }\n};\nvar defaultLocale = locale$1;\n\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nvar formattingTokensRegExp$1 = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nvar longFormattingTokensRegExp$1 = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp$1 = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp$1 = /''/g;\nvar unescapedLatinCharacterRegExp$1 = /[a-zA-Z]/;\n\n/**\n * @name format\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}\n *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @param {Date|Number} date - the original date\n * @param {String} format - the string of tokens\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @returns {String} the formatted date string\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `localize` property\n * @throws {RangeError} `options.locale` must contain `formatLong` property\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * const result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * const result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\n\nfunction format$1(dirtyDate, dirtyFormatStr, options) {\n  var _ref, _options$locale, _ref2, _ref3, _ref4, _options$firstWeekCon, _options$locale2, _options$locale2$opti, _defaultOptions$local, _defaultOptions$local2, _ref5, _ref6, _ref7, _options$weekStartsOn, _options$locale3, _options$locale3$opti, _defaultOptions$local3, _defaultOptions$local4;\n  requiredArgs(2, arguments);\n  var formatStr = String(dirtyFormatStr);\n  var defaultOptions = getDefaultOptions();\n  var locale = (_ref = (_options$locale = options === null || options === void 0 ? void 0 : options.locale) !== null && _options$locale !== void 0 ? _options$locale : defaultOptions.locale) !== null && _ref !== void 0 ? _ref : defaultLocale;\n  var firstWeekContainsDate = toInteger((_ref2 = (_ref3 = (_ref4 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale2 = options.locale) === null || _options$locale2 === void 0 ? void 0 : (_options$locale2$opti = _options$locale2.options) === null || _options$locale2$opti === void 0 ? void 0 : _options$locale2$opti.firstWeekContainsDate) !== null && _ref4 !== void 0 ? _ref4 : defaultOptions.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : 1);\n\n  // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n  var weekStartsOn = toInteger((_ref5 = (_ref6 = (_ref7 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale3 = options.locale) === null || _options$locale3 === void 0 ? void 0 : (_options$locale3$opti = _options$locale3.options) === null || _options$locale3$opti === void 0 ? void 0 : _options$locale3$opti.weekStartsOn) !== null && _ref7 !== void 0 ? _ref7 : defaultOptions.weekStartsOn) !== null && _ref6 !== void 0 ? _ref6 : (_defaultOptions$local3 = defaultOptions.locale) === null || _defaultOptions$local3 === void 0 ? void 0 : (_defaultOptions$local4 = _defaultOptions$local3.options) === null || _defaultOptions$local4 === void 0 ? void 0 : _defaultOptions$local4.weekStartsOn) !== null && _ref5 !== void 0 ? _ref5 : 0);\n\n  // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n  if (!locale.localize) {\n    throw new RangeError('locale must contain localize property');\n  }\n  if (!locale.formatLong) {\n    throw new RangeError('locale must contain formatLong property');\n  }\n  var originalDate = toDate$1(dirtyDate);\n  if (!isValid$2(originalDate)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);\n  var utcDate = subMilliseconds(originalDate, timezoneOffset);\n  var formatterOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale,\n    _originalDate: originalDate\n  };\n  var result = formatStr.match(longFormattingTokensRegExp$1).map(function (substring) {\n    var firstCharacter = substring[0];\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters$1[firstCharacter];\n      return longFormatter(substring, locale.formatLong);\n    }\n    return substring;\n  }).join('').match(formattingTokensRegExp$1).map(function (substring) {\n    // Replace two single quote characters with one single quote character\n    if (substring === \"''\") {\n      return \"'\";\n    }\n    var firstCharacter = substring[0];\n    if (firstCharacter === \"'\") {\n      return cleanEscapedString$1(substring);\n    }\n    var formatter = formatters$1[firstCharacter];\n    if (formatter) {\n      if (!(options !== null && options !== void 0 && options.useAdditionalWeekYearTokens) && isProtectedWeekYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, String(dirtyDate));\n      }\n      if (!(options !== null && options !== void 0 && options.useAdditionalDayOfYearTokens) && isProtectedDayOfYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, String(dirtyDate));\n      }\n      return formatter(utcDate, substring, locale.localize, formatterOptions);\n    }\n    if (firstCharacter.match(unescapedLatinCharacterRegExp$1)) {\n      throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n    }\n    return substring;\n  }).join('');\n  return result;\n}\nfunction cleanEscapedString$1(input) {\n  var matched = input.match(escapedStringRegExp$1);\n  if (!matched) {\n    return input;\n  }\n  return matched[1].replace(doubleQuoteRegExp$1, \"'\");\n}\nfunction assign(target, object) {\n  if (target == null) {\n    throw new TypeError('assign requires that input parameter not be null or undefined');\n  }\n  for (var property in object) {\n    if (Object.prototype.hasOwnProperty.call(object, property)) {\n      target[property] = object[property];\n    }\n  }\n  return target;\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof$1(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return _assertThisInitialized(self);\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _toPrimitive(input, hint) {\n  if (_typeof$1(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof$1(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return _typeof$1(key) === \"symbol\" ? key : String(key);\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nvar TIMEZONE_UNIT_PRIORITY = 10;\nvar Setter = /*#__PURE__*/function () {\n  function Setter() {\n    _classCallCheck(this, Setter);\n    _defineProperty(this, \"priority\", void 0);\n    _defineProperty(this, \"subPriority\", 0);\n  }\n  _createClass(Setter, [{\n    key: \"validate\",\n    value: function validate(_utcDate, _options) {\n      return true;\n    }\n  }]);\n  return Setter;\n}();\nvar ValueSetter = /*#__PURE__*/function (_Setter) {\n  _inherits(ValueSetter, _Setter);\n  var _super = _createSuper(ValueSetter);\n  function ValueSetter(value, validateValue, setValue, priority, subPriority) {\n    var _this;\n    _classCallCheck(this, ValueSetter);\n    _this = _super.call(this);\n    _this.value = value;\n    _this.validateValue = validateValue;\n    _this.setValue = setValue;\n    _this.priority = priority;\n    if (subPriority) {\n      _this.subPriority = subPriority;\n    }\n    return _this;\n  }\n  _createClass(ValueSetter, [{\n    key: \"validate\",\n    value: function validate(utcDate, options) {\n      return this.validateValue(utcDate, this.value, options);\n    }\n  }, {\n    key: \"set\",\n    value: function set(utcDate, flags, options) {\n      return this.setValue(utcDate, flags, this.value, options);\n    }\n  }]);\n  return ValueSetter;\n}(Setter);\nvar DateToSystemTimezoneSetter = /*#__PURE__*/function (_Setter2) {\n  _inherits(DateToSystemTimezoneSetter, _Setter2);\n  var _super2 = _createSuper(DateToSystemTimezoneSetter);\n  function DateToSystemTimezoneSetter() {\n    var _this2;\n    _classCallCheck(this, DateToSystemTimezoneSetter);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this2 = _super2.call.apply(_super2, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this2), \"priority\", TIMEZONE_UNIT_PRIORITY);\n    _defineProperty(_assertThisInitialized(_this2), \"subPriority\", -1);\n    return _this2;\n  }\n  _createClass(DateToSystemTimezoneSetter, [{\n    key: \"set\",\n    value: function set(date, flags) {\n      if (flags.timestampIsSet) {\n        return date;\n      }\n      var convertedDate = new Date(0);\n      convertedDate.setFullYear(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate());\n      convertedDate.setHours(date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());\n      return convertedDate;\n    }\n  }]);\n  return DateToSystemTimezoneSetter;\n}(Setter);\nvar Parser = /*#__PURE__*/function () {\n  function Parser() {\n    _classCallCheck(this, Parser);\n    _defineProperty(this, \"incompatibleTokens\", void 0);\n    _defineProperty(this, \"priority\", void 0);\n    _defineProperty(this, \"subPriority\", void 0);\n  }\n  _createClass(Parser, [{\n    key: \"run\",\n    value: function run(dateString, token, match, options) {\n      var result = this.parse(dateString, token, match, options);\n      if (!result) {\n        return null;\n      }\n      return {\n        setter: new ValueSetter(result.value, this.validate, this.set, this.priority, this.subPriority),\n        rest: result.rest\n      };\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(_utcDate, _value, _options) {\n      return true;\n    }\n  }]);\n  return Parser;\n}();\nvar EraParser = /*#__PURE__*/function (_Parser) {\n  _inherits(EraParser, _Parser);\n  var _super = _createSuper(EraParser);\n  function EraParser() {\n    var _this;\n    _classCallCheck(this, EraParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 140);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['R', 'u', 't', 'T']);\n    return _this;\n  }\n  _createClass(EraParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      switch (token) {\n        // AD, BC\n        case 'G':\n        case 'GG':\n        case 'GGG':\n          return match.era(dateString, {\n            width: 'abbreviated'\n          }) || match.era(dateString, {\n            width: 'narrow'\n          });\n        // A, B\n        case 'GGGGG':\n          return match.era(dateString, {\n            width: 'narrow'\n          });\n        // Anno Domini, Before Christ\n        case 'GGGG':\n        default:\n          return match.era(dateString, {\n            width: 'wide'\n          }) || match.era(dateString, {\n            width: 'abbreviated'\n          }) || match.era(dateString, {\n            width: 'narrow'\n          });\n      }\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, flags, value) {\n      flags.era = value;\n      date.setUTCFullYear(value, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n  }]);\n  return EraParser;\n}(Parser);\nvar numericPatterns = {\n  month: /^(1[0-2]|0?\\d)/,\n  // 0 to 12\n  date: /^(3[0-1]|[0-2]?\\d)/,\n  // 0 to 31\n  dayOfYear: /^(36[0-6]|3[0-5]\\d|[0-2]?\\d?\\d)/,\n  // 0 to 366\n  week: /^(5[0-3]|[0-4]?\\d)/,\n  // 0 to 53\n  hour23h: /^(2[0-3]|[0-1]?\\d)/,\n  // 0 to 23\n  hour24h: /^(2[0-4]|[0-1]?\\d)/,\n  // 0 to 24\n  hour11h: /^(1[0-1]|0?\\d)/,\n  // 0 to 11\n  hour12h: /^(1[0-2]|0?\\d)/,\n  // 0 to 12\n  minute: /^[0-5]?\\d/,\n  // 0 to 59\n  second: /^[0-5]?\\d/,\n  // 0 to 59\n\n  singleDigit: /^\\d/,\n  // 0 to 9\n  twoDigits: /^\\d{1,2}/,\n  // 0 to 99\n  threeDigits: /^\\d{1,3}/,\n  // 0 to 999\n  fourDigits: /^\\d{1,4}/,\n  // 0 to 9999\n\n  anyDigitsSigned: /^-?\\d+/,\n  singleDigitSigned: /^-?\\d/,\n  // 0 to 9, -0 to -9\n  twoDigitsSigned: /^-?\\d{1,2}/,\n  // 0 to 99, -0 to -99\n  threeDigitsSigned: /^-?\\d{1,3}/,\n  // 0 to 999, -0 to -999\n  fourDigitsSigned: /^-?\\d{1,4}/ // 0 to 9999, -0 to -9999\n};\n\nvar timezonePatterns = {\n  basicOptionalMinutes: /^([+-])(\\d{2})(\\d{2})?|Z/,\n  basic: /^([+-])(\\d{2})(\\d{2})|Z/,\n  basicOptionalSeconds: /^([+-])(\\d{2})(\\d{2})((\\d{2}))?|Z/,\n  extended: /^([+-])(\\d{2}):(\\d{2})|Z/,\n  extendedOptionalSeconds: /^([+-])(\\d{2}):(\\d{2})(:(\\d{2}))?|Z/\n};\nfunction mapValue(parseFnResult, mapFn) {\n  if (!parseFnResult) {\n    return parseFnResult;\n  }\n  return {\n    value: mapFn(parseFnResult.value),\n    rest: parseFnResult.rest\n  };\n}\nfunction parseNumericPattern(pattern, dateString) {\n  var matchResult = dateString.match(pattern);\n  if (!matchResult) {\n    return null;\n  }\n  return {\n    value: parseInt(matchResult[0], 10),\n    rest: dateString.slice(matchResult[0].length)\n  };\n}\nfunction parseTimezonePattern(pattern, dateString) {\n  var matchResult = dateString.match(pattern);\n  if (!matchResult) {\n    return null;\n  }\n\n  // Input is 'Z'\n  if (matchResult[0] === 'Z') {\n    return {\n      value: 0,\n      rest: dateString.slice(1)\n    };\n  }\n  var sign = matchResult[1] === '+' ? 1 : -1;\n  var hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;\n  var minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;\n  var seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;\n  return {\n    value: sign * (hours * millisecondsInHour + minutes * millisecondsInMinute + seconds * millisecondsInSecond),\n    rest: dateString.slice(matchResult[0].length)\n  };\n}\nfunction parseAnyDigitsSigned(dateString) {\n  return parseNumericPattern(numericPatterns.anyDigitsSigned, dateString);\n}\nfunction parseNDigits(n, dateString) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigit, dateString);\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigits, dateString);\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigits, dateString);\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigits, dateString);\n    default:\n      return parseNumericPattern(new RegExp('^\\\\d{1,' + n + '}'), dateString);\n  }\n}\nfunction parseNDigitsSigned(n, dateString) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigitSigned, dateString);\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigitsSigned, dateString);\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigitsSigned, dateString);\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigitsSigned, dateString);\n    default:\n      return parseNumericPattern(new RegExp('^-?\\\\d{1,' + n + '}'), dateString);\n  }\n}\nfunction dayPeriodEnumToHours(dayPeriod) {\n  switch (dayPeriod) {\n    case 'morning':\n      return 4;\n    case 'evening':\n      return 17;\n    case 'pm':\n    case 'noon':\n    case 'afternoon':\n      return 12;\n    case 'am':\n    case 'midnight':\n    case 'night':\n    default:\n      return 0;\n  }\n}\nfunction normalizeTwoDigitYear(twoDigitYear, currentYear) {\n  var isCommonEra = currentYear > 0;\n  // Absolute number of the current year:\n  // 1 -> 1 AC\n  // 0 -> 1 BC\n  // -1 -> 2 BC\n  var absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;\n  var result;\n  if (absCurrentYear <= 50) {\n    result = twoDigitYear || 100;\n  } else {\n    var rangeEnd = absCurrentYear + 50;\n    var rangeEndCentury = Math.floor(rangeEnd / 100) * 100;\n    var isPreviousCentury = twoDigitYear >= rangeEnd % 100;\n    result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);\n  }\n  return isCommonEra ? result : 1 - result;\n}\nfunction isLeapYearIndex$1(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;\n}\n\n// From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns\n// | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n// |----------|-------|----|-------|-------|-------|\n// | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n// | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n// | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n// | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n// | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\nvar YearParser = /*#__PURE__*/function (_Parser) {\n  _inherits(YearParser, _Parser);\n  var _super = _createSuper(YearParser);\n  function YearParser() {\n    var _this;\n    _classCallCheck(this, YearParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 130);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['Y', 'R', 'u', 'w', 'I', 'i', 'e', 'c', 't', 'T']);\n    return _this;\n  }\n  _createClass(YearParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      var valueCallback = function valueCallback(year) {\n        return {\n          year: year,\n          isTwoDigitYear: token === 'yy'\n        };\n      };\n      switch (token) {\n        case 'y':\n          return mapValue(parseNDigits(4, dateString), valueCallback);\n        case 'yo':\n          return mapValue(match.ordinalNumber(dateString, {\n            unit: 'year'\n          }), valueCallback);\n        default:\n          return mapValue(parseNDigits(token.length, dateString), valueCallback);\n      }\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(_date, value) {\n      return value.isTwoDigitYear || value.year > 0;\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, flags, value) {\n      var currentYear = date.getUTCFullYear();\n      if (value.isTwoDigitYear) {\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, 1);\n        date.setUTCHours(0, 0, 0, 0);\n        return date;\n      }\n      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\n      date.setUTCFullYear(year, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n  }]);\n  return YearParser;\n}(Parser);\n\n// Local week-numbering year\nvar LocalWeekYearParser = /*#__PURE__*/function (_Parser) {\n  _inherits(LocalWeekYearParser, _Parser);\n  var _super = _createSuper(LocalWeekYearParser);\n  function LocalWeekYearParser() {\n    var _this;\n    _classCallCheck(this, LocalWeekYearParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 130);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['y', 'R', 'u', 'Q', 'q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']);\n    return _this;\n  }\n  _createClass(LocalWeekYearParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      var valueCallback = function valueCallback(year) {\n        return {\n          year: year,\n          isTwoDigitYear: token === 'YY'\n        };\n      };\n      switch (token) {\n        case 'Y':\n          return mapValue(parseNDigits(4, dateString), valueCallback);\n        case 'Yo':\n          return mapValue(match.ordinalNumber(dateString, {\n            unit: 'year'\n          }), valueCallback);\n        default:\n          return mapValue(parseNDigits(token.length, dateString), valueCallback);\n      }\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(_date, value) {\n      return value.isTwoDigitYear || value.year > 0;\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, flags, value, options) {\n      var currentYear = getUTCWeekYear(date, options);\n      if (value.isTwoDigitYear) {\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, options.firstWeekContainsDate);\n        date.setUTCHours(0, 0, 0, 0);\n        return startOfUTCWeek(date, options);\n      }\n      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\n      date.setUTCFullYear(year, 0, options.firstWeekContainsDate);\n      date.setUTCHours(0, 0, 0, 0);\n      return startOfUTCWeek(date, options);\n    }\n  }]);\n  return LocalWeekYearParser;\n}(Parser);\nvar ISOWeekYearParser = /*#__PURE__*/function (_Parser) {\n  _inherits(ISOWeekYearParser, _Parser);\n  var _super = _createSuper(ISOWeekYearParser);\n  function ISOWeekYearParser() {\n    var _this;\n    _classCallCheck(this, ISOWeekYearParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 130);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['G', 'y', 'Y', 'u', 'Q', 'q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']);\n    return _this;\n  }\n  _createClass(ISOWeekYearParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token) {\n      if (token === 'R') {\n        return parseNDigitsSigned(4, dateString);\n      }\n      return parseNDigitsSigned(token.length, dateString);\n    }\n  }, {\n    key: \"set\",\n    value: function set(_date, _flags, value) {\n      var firstWeekOfYear = new Date(0);\n      firstWeekOfYear.setUTCFullYear(value, 0, 4);\n      firstWeekOfYear.setUTCHours(0, 0, 0, 0);\n      return startOfUTCISOWeek(firstWeekOfYear);\n    }\n  }]);\n  return ISOWeekYearParser;\n}(Parser);\nvar ExtendedYearParser = /*#__PURE__*/function (_Parser) {\n  _inherits(ExtendedYearParser, _Parser);\n  var _super = _createSuper(ExtendedYearParser);\n  function ExtendedYearParser() {\n    var _this;\n    _classCallCheck(this, ExtendedYearParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 130);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['G', 'y', 'Y', 'R', 'w', 'I', 'i', 'e', 'c', 't', 'T']);\n    return _this;\n  }\n  _createClass(ExtendedYearParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token) {\n      if (token === 'u') {\n        return parseNDigitsSigned(4, dateString);\n      }\n      return parseNDigitsSigned(token.length, dateString);\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value) {\n      date.setUTCFullYear(value, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n  }]);\n  return ExtendedYearParser;\n}(Parser);\nvar QuarterParser = /*#__PURE__*/function (_Parser) {\n  _inherits(QuarterParser, _Parser);\n  var _super = _createSuper(QuarterParser);\n  function QuarterParser() {\n    var _this;\n    _classCallCheck(this, QuarterParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 120);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['Y', 'R', 'q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']);\n    return _this;\n  }\n  _createClass(QuarterParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      switch (token) {\n        // 1, 2, 3, 4\n        case 'Q':\n        case 'QQ':\n          // 01, 02, 03, 04\n          return parseNDigits(token.length, dateString);\n        // 1st, 2nd, 3rd, 4th\n        case 'Qo':\n          return match.ordinalNumber(dateString, {\n            unit: 'quarter'\n          });\n        // Q1, Q2, Q3, Q4\n        case 'QQQ':\n          return match.quarter(dateString, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.quarter(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n        case 'QQQQQ':\n          return match.quarter(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // 1st quarter, 2nd quarter, ...\n        case 'QQQQ':\n        default:\n          return match.quarter(dateString, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.quarter(dateString, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.quarter(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(_date, value) {\n      return value >= 1 && value <= 4;\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value) {\n      date.setUTCMonth((value - 1) * 3, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n  }]);\n  return QuarterParser;\n}(Parser);\nvar StandAloneQuarterParser = /*#__PURE__*/function (_Parser) {\n  _inherits(StandAloneQuarterParser, _Parser);\n  var _super = _createSuper(StandAloneQuarterParser);\n  function StandAloneQuarterParser() {\n    var _this;\n    _classCallCheck(this, StandAloneQuarterParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 120);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['Y', 'R', 'Q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']);\n    return _this;\n  }\n  _createClass(StandAloneQuarterParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      switch (token) {\n        // 1, 2, 3, 4\n        case 'q':\n        case 'qq':\n          // 01, 02, 03, 04\n          return parseNDigits(token.length, dateString);\n        // 1st, 2nd, 3rd, 4th\n        case 'qo':\n          return match.ordinalNumber(dateString, {\n            unit: 'quarter'\n          });\n        // Q1, Q2, Q3, Q4\n        case 'qqq':\n          return match.quarter(dateString, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.quarter(dateString, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n        case 'qqqqq':\n          return match.quarter(dateString, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // 1st quarter, 2nd quarter, ...\n        case 'qqqq':\n        default:\n          return match.quarter(dateString, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.quarter(dateString, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.quarter(dateString, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(_date, value) {\n      return value >= 1 && value <= 4;\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value) {\n      date.setUTCMonth((value - 1) * 3, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n  }]);\n  return StandAloneQuarterParser;\n}(Parser);\nvar MonthParser = /*#__PURE__*/function (_Parser) {\n  _inherits(MonthParser, _Parser);\n  var _super = _createSuper(MonthParser);\n  function MonthParser() {\n    var _this;\n    _classCallCheck(this, MonthParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['Y', 'R', 'q', 'Q', 'L', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']);\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 110);\n    return _this;\n  }\n  _createClass(MonthParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      var valueCallback = function valueCallback(value) {\n        return value - 1;\n      };\n      switch (token) {\n        // 1, 2, ..., 12\n        case 'M':\n          return mapValue(parseNumericPattern(numericPatterns.month, dateString), valueCallback);\n        // 01, 02, ..., 12\n        case 'MM':\n          return mapValue(parseNDigits(2, dateString), valueCallback);\n        // 1st, 2nd, ..., 12th\n        case 'Mo':\n          return mapValue(match.ordinalNumber(dateString, {\n            unit: 'month'\n          }), valueCallback);\n        // Jan, Feb, ..., Dec\n        case 'MMM':\n          return match.month(dateString, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.month(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // J, F, ..., D\n        case 'MMMMM':\n          return match.month(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // January, February, ..., December\n        case 'MMMM':\n        default:\n          return match.month(dateString, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.month(dateString, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.month(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(_date, value) {\n      return value >= 0 && value <= 11;\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value) {\n      date.setUTCMonth(value, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n  }]);\n  return MonthParser;\n}(Parser);\nvar StandAloneMonthParser = /*#__PURE__*/function (_Parser) {\n  _inherits(StandAloneMonthParser, _Parser);\n  var _super = _createSuper(StandAloneMonthParser);\n  function StandAloneMonthParser() {\n    var _this;\n    _classCallCheck(this, StandAloneMonthParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 110);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['Y', 'R', 'q', 'Q', 'M', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']);\n    return _this;\n  }\n  _createClass(StandAloneMonthParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      var valueCallback = function valueCallback(value) {\n        return value - 1;\n      };\n      switch (token) {\n        // 1, 2, ..., 12\n        case 'L':\n          return mapValue(parseNumericPattern(numericPatterns.month, dateString), valueCallback);\n        // 01, 02, ..., 12\n        case 'LL':\n          return mapValue(parseNDigits(2, dateString), valueCallback);\n        // 1st, 2nd, ..., 12th\n        case 'Lo':\n          return mapValue(match.ordinalNumber(dateString, {\n            unit: 'month'\n          }), valueCallback);\n        // Jan, Feb, ..., Dec\n        case 'LLL':\n          return match.month(dateString, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.month(dateString, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // J, F, ..., D\n        case 'LLLLL':\n          return match.month(dateString, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // January, February, ..., December\n        case 'LLLL':\n        default:\n          return match.month(dateString, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.month(dateString, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.month(dateString, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(_date, value) {\n      return value >= 0 && value <= 11;\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value) {\n      date.setUTCMonth(value, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n  }]);\n  return StandAloneMonthParser;\n}(Parser);\nfunction setUTCWeek(dirtyDate, dirtyWeek, options) {\n  requiredArgs(2, arguments);\n  var date = toDate$1(dirtyDate);\n  var week = toInteger(dirtyWeek);\n  var diff = getUTCWeek(date, options) - week;\n  date.setUTCDate(date.getUTCDate() - diff * 7);\n  return date;\n}\nvar LocalWeekParser = /*#__PURE__*/function (_Parser) {\n  _inherits(LocalWeekParser, _Parser);\n  var _super = _createSuper(LocalWeekParser);\n  function LocalWeekParser() {\n    var _this;\n    _classCallCheck(this, LocalWeekParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 100);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']);\n    return _this;\n  }\n  _createClass(LocalWeekParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      switch (token) {\n        case 'w':\n          return parseNumericPattern(numericPatterns.week, dateString);\n        case 'wo':\n          return match.ordinalNumber(dateString, {\n            unit: 'week'\n          });\n        default:\n          return parseNDigits(token.length, dateString);\n      }\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(_date, value) {\n      return value >= 1 && value <= 53;\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value, options) {\n      return startOfUTCWeek(setUTCWeek(date, value, options), options);\n    }\n  }]);\n  return LocalWeekParser;\n}(Parser);\nfunction setUTCISOWeek(dirtyDate, dirtyISOWeek) {\n  requiredArgs(2, arguments);\n  var date = toDate$1(dirtyDate);\n  var isoWeek = toInteger(dirtyISOWeek);\n  var diff = getUTCISOWeek(date) - isoWeek;\n  date.setUTCDate(date.getUTCDate() - diff * 7);\n  return date;\n}\nvar ISOWeekParser = /*#__PURE__*/function (_Parser) {\n  _inherits(ISOWeekParser, _Parser);\n  var _super = _createSuper(ISOWeekParser);\n  function ISOWeekParser() {\n    var _this;\n    _classCallCheck(this, ISOWeekParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 100);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']);\n    return _this;\n  }\n  _createClass(ISOWeekParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      switch (token) {\n        case 'I':\n          return parseNumericPattern(numericPatterns.week, dateString);\n        case 'Io':\n          return match.ordinalNumber(dateString, {\n            unit: 'week'\n          });\n        default:\n          return parseNDigits(token.length, dateString);\n      }\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(_date, value) {\n      return value >= 1 && value <= 53;\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value) {\n      return startOfUTCISOWeek(setUTCISOWeek(date, value));\n    }\n  }]);\n  return ISOWeekParser;\n}(Parser);\nvar DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nvar DAYS_IN_MONTH_LEAP_YEAR = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n// Day of the month\nvar DateParser = /*#__PURE__*/function (_Parser) {\n  _inherits(DateParser, _Parser);\n  var _super = _createSuper(DateParser);\n  function DateParser() {\n    var _this;\n    _classCallCheck(this, DateParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 90);\n    _defineProperty(_assertThisInitialized(_this), \"subPriority\", 1);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['Y', 'R', 'q', 'Q', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']);\n    return _this;\n  }\n  _createClass(DateParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      switch (token) {\n        case 'd':\n          return parseNumericPattern(numericPatterns.date, dateString);\n        case 'do':\n          return match.ordinalNumber(dateString, {\n            unit: 'date'\n          });\n        default:\n          return parseNDigits(token.length, dateString);\n      }\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(date, value) {\n      var year = date.getUTCFullYear();\n      var isLeapYear = isLeapYearIndex$1(year);\n      var month = date.getUTCMonth();\n      if (isLeapYear) {\n        return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month];\n      } else {\n        return value >= 1 && value <= DAYS_IN_MONTH[month];\n      }\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value) {\n      date.setUTCDate(value);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n  }]);\n  return DateParser;\n}(Parser);\nvar DayOfYearParser = /*#__PURE__*/function (_Parser) {\n  _inherits(DayOfYearParser, _Parser);\n  var _super = _createSuper(DayOfYearParser);\n  function DayOfYearParser() {\n    var _this;\n    _classCallCheck(this, DayOfYearParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 90);\n    _defineProperty(_assertThisInitialized(_this), \"subpriority\", 1);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['Y', 'R', 'q', 'Q', 'M', 'L', 'w', 'I', 'd', 'E', 'i', 'e', 'c', 't', 'T']);\n    return _this;\n  }\n  _createClass(DayOfYearParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      switch (token) {\n        case 'D':\n        case 'DD':\n          return parseNumericPattern(numericPatterns.dayOfYear, dateString);\n        case 'Do':\n          return match.ordinalNumber(dateString, {\n            unit: 'date'\n          });\n        default:\n          return parseNDigits(token.length, dateString);\n      }\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(date, value) {\n      var year = date.getUTCFullYear();\n      var isLeapYear = isLeapYearIndex$1(year);\n      if (isLeapYear) {\n        return value >= 1 && value <= 366;\n      } else {\n        return value >= 1 && value <= 365;\n      }\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value) {\n      date.setUTCMonth(0, value);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n  }]);\n  return DayOfYearParser;\n}(Parser);\nfunction setUTCDay(dirtyDate, dirtyDay, options) {\n  var _ref, _ref2, _ref3, _options$weekStartsOn, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;\n  requiredArgs(2, arguments);\n  var defaultOptions = getDefaultOptions();\n  var weekStartsOn = toInteger((_ref = (_ref2 = (_ref3 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref !== void 0 ? _ref : 0);\n\n  // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n  var date = toDate$1(dirtyDate);\n  var day = toInteger(dirtyDay);\n  var currentDay = date.getUTCDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}\nvar DayParser = /*#__PURE__*/function (_Parser) {\n  _inherits(DayParser, _Parser);\n  var _super = _createSuper(DayParser);\n  function DayParser() {\n    var _this;\n    _classCallCheck(this, DayParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 90);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['D', 'i', 'e', 'c', 't', 'T']);\n    return _this;\n  }\n  _createClass(DayParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      switch (token) {\n        // Tue\n        case 'E':\n        case 'EE':\n        case 'EEE':\n          return match.day(dateString, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(dateString, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // T\n        case 'EEEEE':\n          return match.day(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tu\n        case 'EEEEEE':\n          return match.day(dateString, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tuesday\n        case 'EEEE':\n        default:\n          return match.day(dateString, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.day(dateString, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(dateString, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(_date, value) {\n      return value >= 0 && value <= 6;\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n  }]);\n  return DayParser;\n}(Parser);\nvar LocalDayParser = /*#__PURE__*/function (_Parser) {\n  _inherits(LocalDayParser, _Parser);\n  var _super = _createSuper(LocalDayParser);\n  function LocalDayParser() {\n    var _this;\n    _classCallCheck(this, LocalDayParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 90);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'c', 't', 'T']);\n    return _this;\n  }\n  _createClass(LocalDayParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match, options) {\n      var valueCallback = function valueCallback(value) {\n        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;\n      };\n      switch (token) {\n        // 3\n        case 'e':\n        case 'ee':\n          // 03\n          return mapValue(parseNDigits(token.length, dateString), valueCallback);\n        // 3rd\n        case 'eo':\n          return mapValue(match.ordinalNumber(dateString, {\n            unit: 'day'\n          }), valueCallback);\n        // Tue\n        case 'eee':\n          return match.day(dateString, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(dateString, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // T\n        case 'eeeee':\n          return match.day(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tu\n        case 'eeeeee':\n          return match.day(dateString, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tuesday\n        case 'eeee':\n        default:\n          return match.day(dateString, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.day(dateString, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(dateString, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(_date, value) {\n      return value >= 0 && value <= 6;\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n  }]);\n  return LocalDayParser;\n}(Parser);\nvar StandAloneLocalDayParser = /*#__PURE__*/function (_Parser) {\n  _inherits(StandAloneLocalDayParser, _Parser);\n  var _super = _createSuper(StandAloneLocalDayParser);\n  function StandAloneLocalDayParser() {\n    var _this;\n    _classCallCheck(this, StandAloneLocalDayParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 90);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'e', 't', 'T']);\n    return _this;\n  }\n  _createClass(StandAloneLocalDayParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match, options) {\n      var valueCallback = function valueCallback(value) {\n        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;\n      };\n      switch (token) {\n        // 3\n        case 'c':\n        case 'cc':\n          // 03\n          return mapValue(parseNDigits(token.length, dateString), valueCallback);\n        // 3rd\n        case 'co':\n          return mapValue(match.ordinalNumber(dateString, {\n            unit: 'day'\n          }), valueCallback);\n        // Tue\n        case 'ccc':\n          return match.day(dateString, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.day(dateString, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(dateString, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // T\n        case 'ccccc':\n          return match.day(dateString, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // Tu\n        case 'cccccc':\n          return match.day(dateString, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(dateString, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // Tuesday\n        case 'cccc':\n        default:\n          return match.day(dateString, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.day(dateString, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.day(dateString, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(dateString, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(_date, value) {\n      return value >= 0 && value <= 6;\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n  }]);\n  return StandAloneLocalDayParser;\n}(Parser);\nfunction setUTCISODay(dirtyDate, dirtyDay) {\n  requiredArgs(2, arguments);\n  var day = toInteger(dirtyDay);\n  if (day % 7 === 0) {\n    day = day - 7;\n  }\n  var weekStartsOn = 1;\n  var date = toDate$1(dirtyDate);\n  var currentDay = date.getUTCDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}\nvar ISODayParser = /*#__PURE__*/function (_Parser) {\n  _inherits(ISODayParser, _Parser);\n  var _super = _createSuper(ISODayParser);\n  function ISODayParser() {\n    var _this;\n    _classCallCheck(this, ISODayParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 90);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'E', 'e', 'c', 't', 'T']);\n    return _this;\n  }\n  _createClass(ISODayParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      var valueCallback = function valueCallback(value) {\n        if (value === 0) {\n          return 7;\n        }\n        return value;\n      };\n      switch (token) {\n        // 2\n        case 'i':\n        case 'ii':\n          // 02\n          return parseNDigits(token.length, dateString);\n        // 2nd\n        case 'io':\n          return match.ordinalNumber(dateString, {\n            unit: 'day'\n          });\n        // Tue\n        case 'iii':\n          return mapValue(match.day(dateString, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(dateString, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          }), valueCallback);\n        // T\n        case 'iiiii':\n          return mapValue(match.day(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          }), valueCallback);\n        // Tu\n        case 'iiiiii':\n          return mapValue(match.day(dateString, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          }), valueCallback);\n        // Tuesday\n        case 'iiii':\n        default:\n          return mapValue(match.day(dateString, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.day(dateString, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(dateString, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          }), valueCallback);\n      }\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(_date, value) {\n      return value >= 1 && value <= 7;\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value) {\n      date = setUTCISODay(date, value);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n  }]);\n  return ISODayParser;\n}(Parser);\nvar AMPMParser = /*#__PURE__*/function (_Parser) {\n  _inherits(AMPMParser, _Parser);\n  var _super = _createSuper(AMPMParser);\n  function AMPMParser() {\n    var _this;\n    _classCallCheck(this, AMPMParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 80);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['b', 'B', 'H', 'k', 't', 'T']);\n    return _this;\n  }\n  _createClass(AMPMParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      switch (token) {\n        case 'a':\n        case 'aa':\n        case 'aaa':\n          return match.dayPeriod(dateString, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        case 'aaaaa':\n          return match.dayPeriod(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        case 'aaaa':\n        default:\n          return match.dayPeriod(dateString, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(dateString, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    }\n  }]);\n  return AMPMParser;\n}(Parser);\nvar AMPMMidnightParser = /*#__PURE__*/function (_Parser) {\n  _inherits(AMPMMidnightParser, _Parser);\n  var _super = _createSuper(AMPMMidnightParser);\n  function AMPMMidnightParser() {\n    var _this;\n    _classCallCheck(this, AMPMMidnightParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 80);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['a', 'B', 'H', 'k', 't', 'T']);\n    return _this;\n  }\n  _createClass(AMPMMidnightParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      switch (token) {\n        case 'b':\n        case 'bb':\n        case 'bbb':\n          return match.dayPeriod(dateString, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        case 'bbbbb':\n          return match.dayPeriod(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        case 'bbbb':\n        default:\n          return match.dayPeriod(dateString, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(dateString, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    }\n  }]);\n  return AMPMMidnightParser;\n}(Parser);\nvar DayPeriodParser = /*#__PURE__*/function (_Parser) {\n  _inherits(DayPeriodParser, _Parser);\n  var _super = _createSuper(DayPeriodParser);\n  function DayPeriodParser() {\n    var _this;\n    _classCallCheck(this, DayPeriodParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 80);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['a', 'b', 't', 'T']);\n    return _this;\n  }\n  _createClass(DayPeriodParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      switch (token) {\n        case 'B':\n        case 'BB':\n        case 'BBB':\n          return match.dayPeriod(dateString, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        case 'BBBBB':\n          return match.dayPeriod(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        case 'BBBB':\n        default:\n          return match.dayPeriod(dateString, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(dateString, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(dateString, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    }\n  }]);\n  return DayPeriodParser;\n}(Parser);\nvar Hour1to12Parser = /*#__PURE__*/function (_Parser) {\n  _inherits(Hour1to12Parser, _Parser);\n  var _super = _createSuper(Hour1to12Parser);\n  function Hour1to12Parser() {\n    var _this;\n    _classCallCheck(this, Hour1to12Parser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 70);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['H', 'K', 'k', 't', 'T']);\n    return _this;\n  }\n  _createClass(Hour1to12Parser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      switch (token) {\n        case 'h':\n          return parseNumericPattern(numericPatterns.hour12h, dateString);\n        case 'ho':\n          return match.ordinalNumber(dateString, {\n            unit: 'hour'\n          });\n        default:\n          return parseNDigits(token.length, dateString);\n      }\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(_date, value) {\n      return value >= 1 && value <= 12;\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value) {\n      var isPM = date.getUTCHours() >= 12;\n      if (isPM && value < 12) {\n        date.setUTCHours(value + 12, 0, 0, 0);\n      } else if (!isPM && value === 12) {\n        date.setUTCHours(0, 0, 0, 0);\n      } else {\n        date.setUTCHours(value, 0, 0, 0);\n      }\n      return date;\n    }\n  }]);\n  return Hour1to12Parser;\n}(Parser);\nvar Hour0to23Parser = /*#__PURE__*/function (_Parser) {\n  _inherits(Hour0to23Parser, _Parser);\n  var _super = _createSuper(Hour0to23Parser);\n  function Hour0to23Parser() {\n    var _this;\n    _classCallCheck(this, Hour0to23Parser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 70);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['a', 'b', 'h', 'K', 'k', 't', 'T']);\n    return _this;\n  }\n  _createClass(Hour0to23Parser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      switch (token) {\n        case 'H':\n          return parseNumericPattern(numericPatterns.hour23h, dateString);\n        case 'Ho':\n          return match.ordinalNumber(dateString, {\n            unit: 'hour'\n          });\n        default:\n          return parseNDigits(token.length, dateString);\n      }\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(_date, value) {\n      return value >= 0 && value <= 23;\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value) {\n      date.setUTCHours(value, 0, 0, 0);\n      return date;\n    }\n  }]);\n  return Hour0to23Parser;\n}(Parser);\nvar Hour0To11Parser = /*#__PURE__*/function (_Parser) {\n  _inherits(Hour0To11Parser, _Parser);\n  var _super = _createSuper(Hour0To11Parser);\n  function Hour0To11Parser() {\n    var _this;\n    _classCallCheck(this, Hour0To11Parser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 70);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['h', 'H', 'k', 't', 'T']);\n    return _this;\n  }\n  _createClass(Hour0To11Parser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      switch (token) {\n        case 'K':\n          return parseNumericPattern(numericPatterns.hour11h, dateString);\n        case 'Ko':\n          return match.ordinalNumber(dateString, {\n            unit: 'hour'\n          });\n        default:\n          return parseNDigits(token.length, dateString);\n      }\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(_date, value) {\n      return value >= 0 && value <= 11;\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value) {\n      var isPM = date.getUTCHours() >= 12;\n      if (isPM && value < 12) {\n        date.setUTCHours(value + 12, 0, 0, 0);\n      } else {\n        date.setUTCHours(value, 0, 0, 0);\n      }\n      return date;\n    }\n  }]);\n  return Hour0To11Parser;\n}(Parser);\nvar Hour1To24Parser = /*#__PURE__*/function (_Parser) {\n  _inherits(Hour1To24Parser, _Parser);\n  var _super = _createSuper(Hour1To24Parser);\n  function Hour1To24Parser() {\n    var _this;\n    _classCallCheck(this, Hour1To24Parser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 70);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['a', 'b', 'h', 'H', 'K', 't', 'T']);\n    return _this;\n  }\n  _createClass(Hour1To24Parser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      switch (token) {\n        case 'k':\n          return parseNumericPattern(numericPatterns.hour24h, dateString);\n        case 'ko':\n          return match.ordinalNumber(dateString, {\n            unit: 'hour'\n          });\n        default:\n          return parseNDigits(token.length, dateString);\n      }\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(_date, value) {\n      return value >= 1 && value <= 24;\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value) {\n      var hours = value <= 24 ? value % 24 : value;\n      date.setUTCHours(hours, 0, 0, 0);\n      return date;\n    }\n  }]);\n  return Hour1To24Parser;\n}(Parser);\nvar MinuteParser = /*#__PURE__*/function (_Parser) {\n  _inherits(MinuteParser, _Parser);\n  var _super = _createSuper(MinuteParser);\n  function MinuteParser() {\n    var _this;\n    _classCallCheck(this, MinuteParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 60);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['t', 'T']);\n    return _this;\n  }\n  _createClass(MinuteParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      switch (token) {\n        case 'm':\n          return parseNumericPattern(numericPatterns.minute, dateString);\n        case 'mo':\n          return match.ordinalNumber(dateString, {\n            unit: 'minute'\n          });\n        default:\n          return parseNDigits(token.length, dateString);\n      }\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(_date, value) {\n      return value >= 0 && value <= 59;\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value) {\n      date.setUTCMinutes(value, 0, 0);\n      return date;\n    }\n  }]);\n  return MinuteParser;\n}(Parser);\nvar SecondParser = /*#__PURE__*/function (_Parser) {\n  _inherits(SecondParser, _Parser);\n  var _super = _createSuper(SecondParser);\n  function SecondParser() {\n    var _this;\n    _classCallCheck(this, SecondParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 50);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['t', 'T']);\n    return _this;\n  }\n  _createClass(SecondParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      switch (token) {\n        case 's':\n          return parseNumericPattern(numericPatterns.second, dateString);\n        case 'so':\n          return match.ordinalNumber(dateString, {\n            unit: 'second'\n          });\n        default:\n          return parseNDigits(token.length, dateString);\n      }\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(_date, value) {\n      return value >= 0 && value <= 59;\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value) {\n      date.setUTCSeconds(value, 0);\n      return date;\n    }\n  }]);\n  return SecondParser;\n}(Parser);\nvar FractionOfSecondParser = /*#__PURE__*/function (_Parser) {\n  _inherits(FractionOfSecondParser, _Parser);\n  var _super = _createSuper(FractionOfSecondParser);\n  function FractionOfSecondParser() {\n    var _this;\n    _classCallCheck(this, FractionOfSecondParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 30);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['t', 'T']);\n    return _this;\n  }\n  _createClass(FractionOfSecondParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token) {\n      var valueCallback = function valueCallback(value) {\n        return Math.floor(value * Math.pow(10, -token.length + 3));\n      };\n      return mapValue(parseNDigits(token.length, dateString), valueCallback);\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value) {\n      date.setUTCMilliseconds(value);\n      return date;\n    }\n  }]);\n  return FractionOfSecondParser;\n}(Parser);\nvar ISOTimezoneWithZParser = /*#__PURE__*/function (_Parser) {\n  _inherits(ISOTimezoneWithZParser, _Parser);\n  var _super = _createSuper(ISOTimezoneWithZParser);\n  function ISOTimezoneWithZParser() {\n    var _this;\n    _classCallCheck(this, ISOTimezoneWithZParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 10);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['t', 'T', 'x']);\n    return _this;\n  }\n  _createClass(ISOTimezoneWithZParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token) {\n      switch (token) {\n        case 'X':\n          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, dateString);\n        case 'XX':\n          return parseTimezonePattern(timezonePatterns.basic, dateString);\n        case 'XXXX':\n          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, dateString);\n        case 'XXXXX':\n          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, dateString);\n        case 'XXX':\n        default:\n          return parseTimezonePattern(timezonePatterns.extended, dateString);\n      }\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, flags, value) {\n      if (flags.timestampIsSet) {\n        return date;\n      }\n      return new Date(date.getTime() - value);\n    }\n  }]);\n  return ISOTimezoneWithZParser;\n}(Parser);\nvar ISOTimezoneParser = /*#__PURE__*/function (_Parser) {\n  _inherits(ISOTimezoneParser, _Parser);\n  var _super = _createSuper(ISOTimezoneParser);\n  function ISOTimezoneParser() {\n    var _this;\n    _classCallCheck(this, ISOTimezoneParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 10);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", ['t', 'T', 'X']);\n    return _this;\n  }\n  _createClass(ISOTimezoneParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token) {\n      switch (token) {\n        case 'x':\n          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, dateString);\n        case 'xx':\n          return parseTimezonePattern(timezonePatterns.basic, dateString);\n        case 'xxxx':\n          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, dateString);\n        case 'xxxxx':\n          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, dateString);\n        case 'xxx':\n        default:\n          return parseTimezonePattern(timezonePatterns.extended, dateString);\n      }\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, flags, value) {\n      if (flags.timestampIsSet) {\n        return date;\n      }\n      return new Date(date.getTime() - value);\n    }\n  }]);\n  return ISOTimezoneParser;\n}(Parser);\nvar TimestampSecondsParser = /*#__PURE__*/function (_Parser) {\n  _inherits(TimestampSecondsParser, _Parser);\n  var _super = _createSuper(TimestampSecondsParser);\n  function TimestampSecondsParser() {\n    var _this;\n    _classCallCheck(this, TimestampSecondsParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 40);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", '*');\n    return _this;\n  }\n  _createClass(TimestampSecondsParser, [{\n    key: \"parse\",\n    value: function parse(dateString) {\n      return parseAnyDigitsSigned(dateString);\n    }\n  }, {\n    key: \"set\",\n    value: function set(_date, _flags, value) {\n      return [new Date(value * 1000), {\n        timestampIsSet: true\n      }];\n    }\n  }]);\n  return TimestampSecondsParser;\n}(Parser);\nvar TimestampMillisecondsParser = /*#__PURE__*/function (_Parser) {\n  _inherits(TimestampMillisecondsParser, _Parser);\n  var _super = _createSuper(TimestampMillisecondsParser);\n  function TimestampMillisecondsParser() {\n    var _this;\n    _classCallCheck(this, TimestampMillisecondsParser);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 20);\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", '*');\n    return _this;\n  }\n  _createClass(TimestampMillisecondsParser, [{\n    key: \"parse\",\n    value: function parse(dateString) {\n      return parseAnyDigitsSigned(dateString);\n    }\n  }, {\n    key: \"set\",\n    value: function set(_date, _flags, value) {\n      return [new Date(value), {\n        timestampIsSet: true\n      }];\n    }\n  }]);\n  return TimestampMillisecondsParser;\n}(Parser);\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O* | Timezone (GMT)                 |\n * |  p  |                                |  P  |                                |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z* | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `parse` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n */\nvar parsers = {\n  G: new EraParser(),\n  y: new YearParser(),\n  Y: new LocalWeekYearParser(),\n  R: new ISOWeekYearParser(),\n  u: new ExtendedYearParser(),\n  Q: new QuarterParser(),\n  q: new StandAloneQuarterParser(),\n  M: new MonthParser(),\n  L: new StandAloneMonthParser(),\n  w: new LocalWeekParser(),\n  I: new ISOWeekParser(),\n  d: new DateParser(),\n  D: new DayOfYearParser(),\n  E: new DayParser(),\n  e: new LocalDayParser(),\n  c: new StandAloneLocalDayParser(),\n  i: new ISODayParser(),\n  a: new AMPMParser(),\n  b: new AMPMMidnightParser(),\n  B: new DayPeriodParser(),\n  h: new Hour1to12Parser(),\n  H: new Hour0to23Parser(),\n  K: new Hour0To11Parser(),\n  k: new Hour1To24Parser(),\n  m: new MinuteParser(),\n  s: new SecondParser(),\n  S: new FractionOfSecondParser(),\n  X: new ISOTimezoneWithZParser(),\n  x: new ISOTimezoneParser(),\n  t: new TimestampSecondsParser(),\n  T: new TimestampMillisecondsParser()\n};\n\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar notWhitespaceRegExp = /\\S/;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\n/**\n * @name parse\n * @category Common Helpers\n * @summary Parse the date.\n *\n * @description\n * Return the date parsed from string using the given format string.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters in the format string wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n *\n * Format of the format string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 5 below the table).\n *\n * Not all tokens are compatible. Combinations that don't make sense or could lead to bugs are prohibited\n * and will throw `RangeError`. For example usage of 24-hour format token with AM/PM token will throw an exception:\n *\n * ```javascript\n * parse('23 AM', 'HH a', new Date())\n * //=> RangeError: The format string mustn't contain `HH` and `a` at the same time\n * ```\n *\n * See the compatibility table: https://docs.google.com/spreadsheets/d/e/2PACX-1vQOPU3xUhplll6dyoMmVUXHKl_8CRDs6_ueLmex3SoqwhuolkuN3O05l4rqx5h1dKX8eb46Ul-CCSrq/pubhtml?gid=0&single=true\n *\n * Accepted format string patterns:\n * | Unit                            |Prior| Pattern | Result examples                   | Notes |\n * |---------------------------------|-----|---------|-----------------------------------|-------|\n * | Era                             | 140 | G..GGG  | AD, BC                            |       |\n * |                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 |     | GGGGG   | A, B                              |       |\n * | Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |\n * |                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | yy      | 44, 01, 00, 17                    | 4     |\n * |                                 |     | yyy     | 044, 001, 123, 999                | 4     |\n * |                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |\n * |                                 |     | yyyyy   | ...                               | 2,4   |\n * | Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |\n * |                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |\n * |                                 |     | YYY     | 044, 001, 123, 999                | 4     |\n * |                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |\n * |                                 |     | YYYYY   | ...                               | 2,4   |\n * | ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |\n * |                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |\n * |                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |\n * |                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |\n * |                                 |     | RRRRR   | ...                               | 2,4,5 |\n * | Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |\n * |                                 |     | uu      | -43, 01, 99, -99                  | 4     |\n * |                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |\n * |                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |\n * |                                 |     | uuuuu   | ...                               | 2,4   |\n * | Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |\n * |                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | QQ      | 01, 02, 03, 04                    |       |\n * |                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |\n * |                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | qq      | 01, 02, 03, 04                    |       |\n * |                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |\n * | Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |\n * |                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | MM      | 01, 02, ..., 12                   |       |\n * |                                 |     | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | MMMM    | January, February, ..., December  | 2     |\n * |                                 |     | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |\n * |                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | LL      | 01, 02, ..., 12                   |       |\n * |                                 |     | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | LLLL    | January, February, ..., December  | 2     |\n * |                                 |     | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |\n * |                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |\n * |                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | II      | 01, 02, ..., 53                   | 5     |\n * | Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |\n * |                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |\n * |                                 |     | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 7     |\n * |                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |\n * |                                 |     | DD      | 01, 02, ..., 365, 366             | 7     |\n * |                                 |     | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 |     | DDDD    | ...                               | 2     |\n * | Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |\n * |                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |\n * |                                 |     | ii      | 01, 02, ..., 07                   | 5     |\n * |                                 |     | iii     | Mon, Tue, Wed, ..., Sun           | 5     |\n * |                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |\n * |                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |\n * |                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 5     |\n * | Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | ee      | 02, 03, ..., 01                   |       |\n * |                                 |     | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | cc      | 02, 03, ..., 01                   |       |\n * |                                 |     | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          |  80 | a..aaa  | AM, PM                            |       |\n * |                                 |     | aaaa    | a.m., p.m.                        | 2     |\n * |                                 |     | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 |     | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |\n * |                                 |     | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 |     | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |\n * |                                 |     | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |\n * |                                 |     | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |\n * |                                 |     | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |\n * |                                 |     | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          |  60 | m       | 0, 1, ..., 59                     |       |\n * |                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | mm      | 00, 01, ..., 59                   |       |\n * | Second                          |  50 | s       | 0, 1, ..., 59                     |       |\n * |                                 |     | so      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | ss      | 00, 01, ..., 59                   |       |\n * | Seconds timestamp               |  40 | t       | 512969520                         |       |\n * |                                 |     | tt      | ...                               | 2     |\n * | Fraction of second              |  30 | S       | 0, 1, ..., 9                      |       |\n * |                                 |     | SS      | 00, 01, ..., 99                   |       |\n * |                                 |     | SSS     | 000, 001, ..., 999                |       |\n * |                                 |     | SSSS    | ...                               | 2     |\n * | Milliseconds timestamp          |  20 | T       | 512969520900                      |       |\n * |                                 |     | TT      | ...                               | 2     |\n * | Timezone (ISO-8601 w/ Z)        |  10 | X       | -08, +0530, Z                     |       |\n * |                                 |     | XX      | -0800, +0530, Z                   |       |\n * |                                 |     | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       |  10 | x       | -08, +0530, +00                   |       |\n * |                                 |     | xx      | -0800, +0530, +0000               |       |\n * |                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Long localized date             |  NA | P       | 05/29/1453                        | 5,8   |\n * |                                 |     | PP      | May 29, 1453                      |       |\n * |                                 |     | PPP     | May 29th, 1453                    |       |\n * |                                 |     | PPPP    | Sunday, May 29th, 1453            | 2,5,8 |\n * | Long localized time             |  NA | p       | 12:00 AM                          | 5,8   |\n * |                                 |     | pp      | 12:00:00 AM                       |       |\n * | Combination of date and time    |  NA | Pp      | 05/29/1453, 12:00 AM              |       |\n * |                                 |     | PPpp    | May 29, 1453, 12:00:00 AM         |       |\n * |                                 |     | PPPpp   | May 29th, 1453 at ...             |       |\n * |                                 |     | PPPPpp  | Sunday, May 29th, 1453 at ...     | 2,5,8 |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular.\n *    In `format` function, they will produce different result:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n *    `parse` will try to match both formatting and stand-alone units interchangably.\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table:\n *    - for numerical units (`yyyyyyyy`) `parse` will try to match a number\n *      as wide as the sequence\n *    - for text units (`MMMMMMMM`) `parse` will try to match the widest variation of the unit.\n *      These variations are marked with \"2\" in the last column of the table.\n *\n * 3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 4. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` will try to guess the century of two digit year by proximity with `referenceDate`:\n *\n *    `parse('50', 'yy', new Date(2018, 0, 1)) //=> Sat Jan 01 2050 00:00:00`\n *\n *    `parse('75', 'yy', new Date(2018, 0, 1)) //=> Wed Jan 01 1975 00:00:00`\n *\n *    while `uu` will just assign the year as is:\n *\n *    `parse('50', 'uu', new Date(2018, 0, 1)) //=> Sat Jan 01 0050 00:00:00`\n *\n *    `parse('75', 'uu', new Date(2018, 0, 1)) //=> Tue Jan 01 0075 00:00:00`\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [setISOWeekYear]{@link https://date-fns.org/docs/setISOWeekYear}\n *    and [setWeekYear]{@link https://date-fns.org/docs/setWeekYear}).\n *\n * 5. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 6. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 7. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 8. `P+` tokens do not have a defined priority since they are merely aliases to other tokens based\n *    on the given locale.\n *\n *    using `en-US` locale: `P` => `MM/dd/yyyy`\n *    using `en-US` locale: `p` => `hh:mm a`\n *    using `pt-BR` locale: `P` => `dd/MM/yyyy`\n *    using `pt-BR` locale: `p` => `HH:mm`\n *\n * Values will be assigned to the date in the descending order of its unit's priority.\n * Units of an equal priority overwrite each other in the order of appearance.\n *\n * If no values of higher priority are parsed (e.g. when parsing string 'January 1st' without a year),\n * the values will be taken from 3rd argument `referenceDate` which works as a context of parsing.\n *\n * `referenceDate` must be passed for correct work of the function.\n * If you're not sure which `referenceDate` to supply, create a new instance of Date:\n * `parse('02/11/2014', 'MM/dd/yyyy', new Date())`\n * In this case parsing will be done in the context of the current date.\n * If `referenceDate` is `Invalid Date` or a value not convertible to valid `Date`,\n * then `Invalid Date` will be returned.\n *\n * The result may vary by locale.\n *\n * If `formatString` matches with `dateString` but does not provides tokens, `referenceDate` will be returned.\n *\n * If parsing failed, `Invalid Date` will be returned.\n * Invalid Date is a Date, whose time value is NaN.\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @param {String} dateString - the string to parse\n * @param {String} formatString - the string of tokens\n * @param {Date|Number} referenceDate - defines values missing from the parsed dateString\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @returns {Date} the parsed date\n * @throws {TypeError} 3 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} `options.locale` must contain `match` property\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Parse 11 February 2014 from middle-endian format:\n * var result = parse('02/11/2014', 'MM/dd/yyyy', new Date())\n * //=> Tue Feb 11 2014 00:00:00\n *\n * @example\n * // Parse 28th of February in Esperanto locale in the context of 2010 year:\n * import eo from 'date-fns/locale/eo'\n * var result = parse('28-a de februaro', \"do 'de' MMMM\", new Date(2010, 0, 1), {\n *   locale: eo\n * })\n * //=> Sun Feb 28 2010 00:00:00\n */\nfunction parse$1(dirtyDateString, dirtyFormatString, dirtyReferenceDate, options) {\n  var _ref, _options$locale, _ref2, _ref3, _ref4, _options$firstWeekCon, _options$locale2, _options$locale2$opti, _defaultOptions$local, _defaultOptions$local2, _ref5, _ref6, _ref7, _options$weekStartsOn, _options$locale3, _options$locale3$opti, _defaultOptions$local3, _defaultOptions$local4;\n  requiredArgs(3, arguments);\n  var dateString = String(dirtyDateString);\n  var formatString = String(dirtyFormatString);\n  var defaultOptions = getDefaultOptions();\n  var locale = (_ref = (_options$locale = options === null || options === void 0 ? void 0 : options.locale) !== null && _options$locale !== void 0 ? _options$locale : defaultOptions.locale) !== null && _ref !== void 0 ? _ref : defaultLocale;\n  if (!locale.match) {\n    throw new RangeError('locale must contain match property');\n  }\n  var firstWeekContainsDate = toInteger((_ref2 = (_ref3 = (_ref4 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale2 = options.locale) === null || _options$locale2 === void 0 ? void 0 : (_options$locale2$opti = _options$locale2.options) === null || _options$locale2$opti === void 0 ? void 0 : _options$locale2$opti.firstWeekContainsDate) !== null && _ref4 !== void 0 ? _ref4 : defaultOptions.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : 1);\n\n  // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n  var weekStartsOn = toInteger((_ref5 = (_ref6 = (_ref7 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale3 = options.locale) === null || _options$locale3 === void 0 ? void 0 : (_options$locale3$opti = _options$locale3.options) === null || _options$locale3$opti === void 0 ? void 0 : _options$locale3$opti.weekStartsOn) !== null && _ref7 !== void 0 ? _ref7 : defaultOptions.weekStartsOn) !== null && _ref6 !== void 0 ? _ref6 : (_defaultOptions$local3 = defaultOptions.locale) === null || _defaultOptions$local3 === void 0 ? void 0 : (_defaultOptions$local4 = _defaultOptions$local3.options) === null || _defaultOptions$local4 === void 0 ? void 0 : _defaultOptions$local4.weekStartsOn) !== null && _ref5 !== void 0 ? _ref5 : 0);\n\n  // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n  if (formatString === '') {\n    if (dateString === '') {\n      return toDate$1(dirtyReferenceDate);\n    } else {\n      return new Date(NaN);\n    }\n  }\n  var subFnOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale\n  };\n\n  // If timezone isn't specified, it will be set to the system timezone\n  var setters = [new DateToSystemTimezoneSetter()];\n  var tokens = formatString.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n    if (firstCharacter in longFormatters$1) {\n      var longFormatter = longFormatters$1[firstCharacter];\n      return longFormatter(substring, locale.formatLong);\n    }\n    return substring;\n  }).join('').match(formattingTokensRegExp);\n  var usedTokens = [];\n  var _iterator = _createForOfIteratorHelper(tokens),\n    _step;\n  try {\n    var _loop = function _loop() {\n      var token = _step.value;\n      if (!(options !== null && options !== void 0 && options.useAdditionalWeekYearTokens) && isProtectedWeekYearToken(token)) {\n        throwProtectedError(token, formatString, dirtyDateString);\n      }\n      if (!(options !== null && options !== void 0 && options.useAdditionalDayOfYearTokens) && isProtectedDayOfYearToken(token)) {\n        throwProtectedError(token, formatString, dirtyDateString);\n      }\n      var firstCharacter = token[0];\n      var parser = parsers[firstCharacter];\n      if (parser) {\n        var incompatibleTokens = parser.incompatibleTokens;\n        if (Array.isArray(incompatibleTokens)) {\n          var incompatibleToken = usedTokens.find(function (usedToken) {\n            return incompatibleTokens.includes(usedToken.token) || usedToken.token === firstCharacter;\n          });\n          if (incompatibleToken) {\n            throw new RangeError(\"The format string mustn't contain `\".concat(incompatibleToken.fullToken, \"` and `\").concat(token, \"` at the same time\"));\n          }\n        } else if (parser.incompatibleTokens === '*' && usedTokens.length > 0) {\n          throw new RangeError(\"The format string mustn't contain `\".concat(token, \"` and any other token at the same time\"));\n        }\n        usedTokens.push({\n          token: firstCharacter,\n          fullToken: token\n        });\n        var parseResult = parser.run(dateString, token, locale.match, subFnOptions);\n        if (!parseResult) {\n          return {\n            v: new Date(NaN)\n          };\n        }\n        setters.push(parseResult.setter);\n        dateString = parseResult.rest;\n      } else {\n        if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n          throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n        }\n\n        // Replace two single quote characters with one single quote character\n        if (token === \"''\") {\n          token = \"'\";\n        } else if (firstCharacter === \"'\") {\n          token = cleanEscapedString(token);\n        }\n\n        // Cut token from string, or, if string doesn't match the token, return Invalid Date\n        if (dateString.indexOf(token) === 0) {\n          dateString = dateString.slice(token.length);\n        } else {\n          return {\n            v: new Date(NaN)\n          };\n        }\n      }\n    };\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var _ret = _loop();\n      if (_typeof$1(_ret) === \"object\") return _ret.v;\n    }\n\n    // Check if the remaining input contains something other than whitespace\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  if (dateString.length > 0 && notWhitespaceRegExp.test(dateString)) {\n    return new Date(NaN);\n  }\n  var uniquePrioritySetters = setters.map(function (setter) {\n    return setter.priority;\n  }).sort(function (a, b) {\n    return b - a;\n  }).filter(function (priority, index, array) {\n    return array.indexOf(priority) === index;\n  }).map(function (priority) {\n    return setters.filter(function (setter) {\n      return setter.priority === priority;\n    }).sort(function (a, b) {\n      return b.subPriority - a.subPriority;\n    });\n  }).map(function (setterArray) {\n    return setterArray[0];\n  });\n  var date = toDate$1(dirtyReferenceDate);\n  if (isNaN(date.getTime())) {\n    return new Date(NaN);\n  }\n\n  // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  var utcDate = subMilliseconds(date, getTimezoneOffsetInMilliseconds(date));\n  var flags = {};\n  var _iterator2 = _createForOfIteratorHelper(uniquePrioritySetters),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var setter = _step2.value;\n      if (!setter.validate(utcDate, subFnOptions)) {\n        return new Date(NaN);\n      }\n      var result = setter.set(utcDate, flags, subFnOptions);\n      // Result is tuple (date, flags)\n      if (Array.isArray(result)) {\n        utcDate = result[0];\n        assign(flags, result[1]);\n        // Result is date\n      } else {\n        utcDate = result;\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n  return utcDate;\n}\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n/**\n * @name isMatch\n * @category Common Helpers\n * @summary validates the date string against given formats\n *\n * @description\n * Return the true if given date is string correct against the given format else\n * will return false.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters in the format string wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n *\n * Format of the format string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 5 below the table).\n *\n * Not all tokens are compatible. Combinations that don't make sense or could lead to bugs are prohibited\n * and will throw `RangeError`. For example usage of 24-hour format token with AM/PM token will throw an exception:\n *\n * ```javascript\n * isMatch('23 AM', 'HH a')\n * //=> RangeError: The format string mustn't contain `HH` and `a` at the same time\n * ```\n *\n * See the compatibility table: https://docs.google.com/spreadsheets/d/e/2PACX-1vQOPU3xUhplll6dyoMmVUXHKl_8CRDs6_ueLmex3SoqwhuolkuN3O05l4rqx5h1dKX8eb46Ul-CCSrq/pubhtml?gid=0&single=true\n *\n * Accepted format string patterns:\n * | Unit                            |Prior| Pattern | Result examples                   | Notes |\n * |---------------------------------|-----|---------|-----------------------------------|-------|\n * | Era                             | 140 | G..GGG  | AD, BC                            |       |\n * |                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 |     | GGGGG   | A, B                              |       |\n * | Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |\n * |                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | yy      | 44, 01, 00, 17                    | 4     |\n * |                                 |     | yyy     | 044, 001, 123, 999                | 4     |\n * |                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |\n * |                                 |     | yyyyy   | ...                               | 2,4   |\n * | Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |\n * |                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |\n * |                                 |     | YYY     | 044, 001, 123, 999                | 4     |\n * |                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |\n * |                                 |     | YYYYY   | ...                               | 2,4   |\n * | ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |\n * |                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |\n * |                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |\n * |                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |\n * |                                 |     | RRRRR   | ...                               | 2,4,5 |\n * | Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |\n * |                                 |     | uu      | -43, 01, 99, -99                  | 4     |\n * |                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |\n * |                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |\n * |                                 |     | uuuuu   | ...                               | 2,4   |\n * | Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |\n * |                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | QQ      | 01, 02, 03, 04                    |       |\n * |                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |\n * |                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | qq      | 01, 02, 03, 04                    |       |\n * |                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |\n * | Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |\n * |                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | MM      | 01, 02, ..., 12                   |       |\n * |                                 |     | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | MMMM    | January, February, ..., December  | 2     |\n * |                                 |     | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |\n * |                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | LL      | 01, 02, ..., 12                   |       |\n * |                                 |     | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | LLLL    | January, February, ..., December  | 2     |\n * |                                 |     | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |\n * |                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |\n * |                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | II      | 01, 02, ..., 53                   | 5     |\n * | Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |\n * |                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |\n * |                                 |     | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 7     |\n * |                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |\n * |                                 |     | DD      | 01, 02, ..., 365, 366             | 7     |\n * |                                 |     | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 |     | DDDD    | ...                               | 2     |\n * | Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Su            |       |\n * |                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |\n * |                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |\n * |                                 |     | ii      | 01, 02, ..., 07                   | 5     |\n * |                                 |     | iii     | Mon, Tue, Wed, ..., Su            | 5     |\n * |                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |\n * |                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |\n * |                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 5     |\n * | Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | ee      | 02, 03, ..., 01                   |       |\n * |                                 |     | eee     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | cc      | 02, 03, ..., 01                   |       |\n * |                                 |     | ccc     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          |  80 | a..aaa  | AM, PM                            |       |\n * |                                 |     | aaaa    | a.m., p.m.                        | 2     |\n * |                                 |     | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 |     | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |\n * |                                 |     | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 |     | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |\n * |                                 |     | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |\n * |                                 |     | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |\n * |                                 |     | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |\n * |                                 |     | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          |  60 | m       | 0, 1, ..., 59                     |       |\n * |                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | mm      | 00, 01, ..., 59                   |       |\n * | Second                          |  50 | s       | 0, 1, ..., 59                     |       |\n * |                                 |     | so      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | ss      | 00, 01, ..., 59                   |       |\n * | Seconds timestamp               |  40 | t       | 512969520                         |       |\n * |                                 |     | tt      | ...                               | 2     |\n * | Fraction of second              |  30 | S       | 0, 1, ..., 9                      |       |\n * |                                 |     | SS      | 00, 01, ..., 99                   |       |\n * |                                 |     | SSS     | 000, 001, ..., 999                |       |\n * |                                 |     | SSSS    | ...                               | 2     |\n * | Milliseconds timestamp          |  20 | T       | 512969520900                      |       |\n * |                                 |     | TT      | ...                               | 2     |\n * | Timezone (ISO-8601 w/ Z)        |  10 | X       | -08, +0530, Z                     |       |\n * |                                 |     | XX      | -0800, +0530, Z                   |       |\n * |                                 |     | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       |  10 | x       | -08, +0530, +00                   |       |\n * |                                 |     | xx      | -0800, +0530, +0000               |       |\n * |                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Long localized date             |  NA | P       | 05/29/1453                        | 5,8   |\n * |                                 |     | PP      | May 29, 1453                      |       |\n * |                                 |     | PPP     | May 29th, 1453                    |       |\n * |                                 |     | PPPP    | Sunday, May 29th, 1453            | 2,5,8 |\n * | Long localized time             |  NA | p       | 12:00 AM                          | 5,8   |\n * |                                 |     | pp      | 12:00:00 AM                       |       |\n * | Combination of date and time    |  NA | Pp      | 05/29/1453, 12:00 AM              |       |\n * |                                 |     | PPpp    | May 29, 1453, 12:00:00 AM         |       |\n * |                                 |     | PPPpp   | May 29th, 1453 at ...             |       |\n * |                                 |     | PPPPpp  | Sunday, May 29th, 1453 at ...     | 2,5,8 |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular.\n *    In `format` function, they will produce different result:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n *    `isMatch` will try to match both formatting and stand-alone units interchangably.\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table:\n *    - for numerical units (`yyyyyyyy`) `isMatch` will try to match a number\n *      as wide as the sequence\n *    - for text units (`MMMMMMMM`) `isMatch` will try to match the widest variation of the unit.\n *      These variations are marked with \"2\" in the last column of the table.\n *\n * 3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 4. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` will try to guess the century of two digit year by proximity with `referenceDate`:\n *\n *    `isMatch('50', 'yy') //=> true`\n *\n *    `isMatch('75', 'yy') //=> true`\n *\n *    while `uu` will use the year as is:\n *\n *    `isMatch('50', 'uu') //=> true`\n *\n *    `isMatch('75', 'uu') //=> true`\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [setISOWeekYear]{@link https://date-fns.org/docs/setISOWeekYear}\n *    and [setWeekYear]{@link https://date-fns.org/docs/setWeekYear}).\n *\n * 5. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 6. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 7. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 8. `P+` tokens do not have a defined priority since they are merely aliases to other tokens based\n *    on the given locale.\n *\n *    using `en-US` locale: `P` => `MM/dd/yyyy`\n *    using `en-US` locale: `p` => `hh:mm a`\n *    using `pt-BR` locale: `P` => `dd/MM/yyyy`\n *    using `pt-BR` locale: `p` => `HH:mm`\n *\n * Values will be checked in the descending order of its unit's priority.\n * Units of an equal priority overwrite each other in the order of appearance.\n *\n * If no values of higher priority are matched (e.g. when matching string 'January 1st' without a year),\n * the values will be taken from today's using `new Date()` date which works as a context of parsing.\n *\n * The result may vary by locale.\n *\n * If `formatString` matches with `dateString` but does not provides tokens, `referenceDate` will be returned.\n *\n *\n *\n * @param {String} dateString - the date string to verify\n * @param {String} formatString - the string of tokens\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @returns {Boolean}\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} `options.locale` must contain `match` property\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws {RangeError} use `yy` instead of `YY` for formatting years; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Match 11 February 2014 from middle-endian format:\n * const result = isMatch('02/11/2014', 'MM/dd/yyyy')\n * //=> true\n *\n * @example\n * // Match 28th of February in Esperanto locale in the context of 2010 year:\n * import eo from 'date-fns/locale/eo'\n * const result = isMatch('28-a de februaro', \"do 'de' MMMM\", {\n *   locale: eo\n * })\n * //=> true\n */\nfunction isMatch(dateString, formatString, options) {\n  requiredArgs(2, arguments);\n  return isValid$2(parse$1(dateString, formatString, new Date(), options));\n}\n\n/**\n * @name parseISO\n * @category Common Helpers\n * @summary Parse ISO string\n *\n * @description\n * Parse the given string in ISO 8601 format and return an instance of Date.\n *\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n *\n * If the argument isn't a string, the function cannot parse the string or\n * the values are invalid, it returns Invalid Date.\n *\n * @param {String} argument - the value to convert\n * @param {Object} [options] - an object with options.\n * @param {0|1|2} [options.additionalDigits=2] - the additional number of digits in the extended year format\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * const result = parseISO('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert string '+02014101' to date,\n * // if the additional number of digits in the extended year format is 1:\n * const result = parseISO('+02014101', { additionalDigits: 1 })\n * //=> Fri Apr 11 2014 00:00:00\n */\nfunction parseISO$1(argument, options) {\n  var _options$additionalDi;\n  requiredArgs(1, arguments);\n  var additionalDigits = toInteger((_options$additionalDi = options === null || options === void 0 ? void 0 : options.additionalDigits) !== null && _options$additionalDi !== void 0 ? _options$additionalDi : 2);\n  if (additionalDigits !== 2 && additionalDigits !== 1 && additionalDigits !== 0) {\n    throw new RangeError('additionalDigits must be 0, 1 or 2');\n  }\n  if (!(typeof argument === 'string' || Object.prototype.toString.call(argument) === '[object String]')) {\n    return new Date(NaN);\n  }\n  var dateStrings = splitDateString(argument);\n  var date;\n  if (dateStrings.date) {\n    var parseYearResult = parseYear(dateStrings.date, additionalDigits);\n    date = parseDate(parseYearResult.restDateString, parseYearResult.year);\n  }\n  if (!date || isNaN(date.getTime())) {\n    return new Date(NaN);\n  }\n  var timestamp = date.getTime();\n  var time = 0;\n  var offset;\n  if (dateStrings.time) {\n    time = parseTime(dateStrings.time);\n    if (isNaN(time)) {\n      return new Date(NaN);\n    }\n  }\n  if (dateStrings.timezone) {\n    offset = parseTimezone(dateStrings.timezone);\n    if (isNaN(offset)) {\n      return new Date(NaN);\n    }\n  } else {\n    var dirtyDate = new Date(timestamp + time);\n    // js parsed string assuming it's in UTC timezone\n    // but we need it to be parsed in our timezone\n    // so we use utc values to build date in our timezone.\n    // Year values from 0 to 99 map to the years 1900 to 1999\n    // so set year explicitly with setFullYear.\n    var result = new Date(0);\n    result.setFullYear(dirtyDate.getUTCFullYear(), dirtyDate.getUTCMonth(), dirtyDate.getUTCDate());\n    result.setHours(dirtyDate.getUTCHours(), dirtyDate.getUTCMinutes(), dirtyDate.getUTCSeconds(), dirtyDate.getUTCMilliseconds());\n    return result;\n  }\n  return new Date(timestamp + time + offset);\n}\nvar patterns$1 = {\n  dateTimeDelimiter: /[T ]/,\n  timeZoneDelimiter: /[Z ]/i,\n  timezone: /([Z+-].*)$/\n};\nvar dateRegex = /^-?(?:(\\d{3})|(\\d{2})(?:-?(\\d{2}))?|W(\\d{2})(?:-?(\\d{1}))?|)$/;\nvar timeRegex = /^(\\d{2}(?:[.,]\\d*)?)(?::?(\\d{2}(?:[.,]\\d*)?))?(?::?(\\d{2}(?:[.,]\\d*)?))?$/;\nvar timezoneRegex = /^([+-])(\\d{2})(?::?(\\d{2}))?$/;\nfunction splitDateString(dateString) {\n  var dateStrings = {};\n  var array = dateString.split(patterns$1.dateTimeDelimiter);\n  var timeString;\n\n  // The regex match should only return at maximum two array elements.\n  // [date], [time], or [date, time].\n  if (array.length > 2) {\n    return dateStrings;\n  }\n  if (/:/.test(array[0])) {\n    timeString = array[0];\n  } else {\n    dateStrings.date = array[0];\n    timeString = array[1];\n    if (patterns$1.timeZoneDelimiter.test(dateStrings.date)) {\n      dateStrings.date = dateString.split(patterns$1.timeZoneDelimiter)[0];\n      timeString = dateString.substr(dateStrings.date.length, dateString.length);\n    }\n  }\n  if (timeString) {\n    var token = patterns$1.timezone.exec(timeString);\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], '');\n      dateStrings.timezone = token[1];\n    } else {\n      dateStrings.time = timeString;\n    }\n  }\n  return dateStrings;\n}\nfunction parseYear(dateString, additionalDigits) {\n  var regex = new RegExp('^(?:(\\\\d{4}|[+-]\\\\d{' + (4 + additionalDigits) + '})|(\\\\d{2}|[+-]\\\\d{' + (2 + additionalDigits) + '})$)');\n  var captures = dateString.match(regex);\n  // Invalid ISO-formatted year\n  if (!captures) return {\n    year: NaN,\n    restDateString: ''\n  };\n  var year = captures[1] ? parseInt(captures[1]) : null;\n  var century = captures[2] ? parseInt(captures[2]) : null;\n\n  // either year or century is null, not both\n  return {\n    year: century === null ? year : century * 100,\n    restDateString: dateString.slice((captures[1] || captures[2]).length)\n  };\n}\nfunction parseDate(dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) return new Date(NaN);\n  var captures = dateString.match(dateRegex);\n  // Invalid ISO-formatted string\n  if (!captures) return new Date(NaN);\n  var isWeekDate = !!captures[4];\n  var dayOfYear = parseDateUnit(captures[1]);\n  var month = parseDateUnit(captures[2]) - 1;\n  var day = parseDateUnit(captures[3]);\n  var week = parseDateUnit(captures[4]);\n  var dayOfWeek = parseDateUnit(captures[5]) - 1;\n  if (isWeekDate) {\n    if (!validateWeekDate(year, week, dayOfWeek)) {\n      return new Date(NaN);\n    }\n    return dayOfISOWeekYear(year, week, dayOfWeek);\n  } else {\n    var date = new Date(0);\n    if (!validateDate(year, month, day) || !validateDayOfYearDate(year, dayOfYear)) {\n      return new Date(NaN);\n    }\n    date.setUTCFullYear(year, month, Math.max(dayOfYear, day));\n    return date;\n  }\n}\nfunction parseDateUnit(value) {\n  return value ? parseInt(value) : 1;\n}\nfunction parseTime(timeString) {\n  var captures = timeString.match(timeRegex);\n  if (!captures) return NaN; // Invalid ISO-formatted time\n\n  var hours = parseTimeUnit(captures[1]);\n  var minutes = parseTimeUnit(captures[2]);\n  var seconds = parseTimeUnit(captures[3]);\n  if (!validateTime(hours, minutes, seconds)) {\n    return NaN;\n  }\n  return hours * millisecondsInHour + minutes * millisecondsInMinute + seconds * 1000;\n}\nfunction parseTimeUnit(value) {\n  return value && parseFloat(value.replace(',', '.')) || 0;\n}\nfunction parseTimezone(timezoneString) {\n  if (timezoneString === 'Z') return 0;\n  var captures = timezoneString.match(timezoneRegex);\n  if (!captures) return 0;\n  var sign = captures[1] === '+' ? -1 : 1;\n  var hours = parseInt(captures[2]);\n  var minutes = captures[3] && parseInt(captures[3]) || 0;\n  if (!validateTimezone(hours, minutes)) {\n    return NaN;\n  }\n  return sign * (hours * millisecondsInHour + minutes * millisecondsInMinute);\n}\nfunction dayOfISOWeekYear(isoWeekYear, week, day) {\n  var date = new Date(0);\n  date.setUTCFullYear(isoWeekYear, 0, 4);\n  var fourthOfJanuaryDay = date.getUTCDay() || 7;\n  var diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}\n\n// Validation functions\n\n// February is null to handle the leap year (using ||)\nvar daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;\n}\nfunction validateDate(year, month, date) {\n  return month >= 0 && month <= 11 && date >= 1 && date <= (daysInMonths[month] || (isLeapYearIndex(year) ? 29 : 28));\n}\nfunction validateDayOfYearDate(year, dayOfYear) {\n  return dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex(year) ? 366 : 365);\n}\nfunction validateWeekDate(_year, week, day) {\n  return week >= 1 && week <= 53 && day >= 0 && day <= 6;\n}\nfunction validateTime(hours, minutes, seconds) {\n  if (hours === 24) {\n    return minutes === 0 && seconds === 0;\n  }\n  return seconds >= 0 && seconds < 60 && minutes >= 0 && minutes < 60 && hours >= 0 && hours < 25;\n}\nfunction validateTimezone(_hours, minutes) {\n  return minutes >= 0 && minutes <= 59;\n}\n\n// Copyright (c) Cosmo Tech.\n// Licensed under the MIT license.\n\nvar decreaseDateByOffset = (date, offset) => {\n  if (date instanceof Date === false) throw new TypeError('\"date\" parameter must be a Date object');\n  return new Date(date - offset * 60 * 1000);\n};\nvar increaseDateByOffset = (date, offset) => {\n  return decreaseDateByOffset(date, -offset);\n};\nvar addLocalDateToUTCOffset = date => {\n  if (date instanceof Date === false) throw new TypeError('\"date\" parameter must be a Date object');\n  // Example: if local time is 15:00, UTC time is 13:00, timezoneOffset is -120, then we need to \"increase\" the local\n  // datetime by -120 to find UTC time\n  return increaseDateByOffset(date, date.getTimezoneOffset());\n};\nvar addUTCToLocalDateOffset = date => {\n  if (date instanceof Date === false) throw new TypeError('\"date\" parameter must be a Date object');\n  return decreaseDateByOffset(date, date.getTimezoneOffset());\n};\nvar getDateAtMidnightUTC = date => {\n  if (date instanceof Date === false) throw new TypeError('\"date\" parameter must be a Date object');\n  return new Date(Date.UTC(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), 0, 0, 0));\n};\nvar parse = (dateStr, dateFormat) => {\n  try {\n    return parse$1(dateStr, dateFormat, new Date());\n  } catch (error) {\n    console.error(error);\n  }\n};\nvar parseISO = dateStr => parseISO$1(dateStr);\nvar format = function format(date) {\n  var dateFormat = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"yyyy-MM-dd'T'HH:mm:ss.SSSX\";\n  if (date) {\n    try {\n      return format$1(date, dateFormat);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  return '';\n};\nvar formatUTCDateAsLocal = function formatUTCDateAsLocal(date) {\n  var dateFormat = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"yyyy-MM-dd'T'HH:mm:ss.SSSX\";\n  try {\n    var dateWithReverseOffset = addLocalDateToUTCOffset(date);\n    return format(dateWithReverseOffset, dateFormat);\n  } catch (error) {\n    console.error(error);\n  }\n  return '';\n};\n\n// TODO: (breaking change) rename to something like \"isFormatValid\" to prevent confusion with the check of invalid dates\nvar isValid$1 = (dateStr, dateFormat) => {\n  return isMatch(dateStr, dateFormat);\n};\nvar isValidDate = date => {\n  return isValid$2(date);\n};\nvar min = (dateA, dateB) => {\n  if (dateA && dateB) {\n    return dateA < dateB ? dateA : dateB;\n  }\n};\nvar max = (dateA, dateB) => {\n  if (dateA && dateB) {\n    return dateA > dateB ? dateA : dateB;\n  }\n};\n\n// Same as min, but accepts string parameters and returns a string value\nvar strMin = (dateStrA, dateStrB, dateFormat) => {\n  var dateA = parse(dateStrA, dateFormat);\n  var dateB = parse(dateStrB, dateFormat);\n  if (dateA && dateB) {\n    return dateA < dateB ? dateStrA : dateStrB;\n  }\n};\n\n// Same as max, but accepts string parameters and returns a string value\nvar strMax = (dateStrA, dateStrB, dateFormat) => {\n  var dateA = parse(dateStrA, dateFormat);\n  var dateB = parse(dateStrB, dateFormat);\n  if (dateA && dateB) {\n    return dateA > dateB ? dateStrA : dateStrB;\n  }\n};\nvar DateUtils = {\n  decreaseDateByOffset,\n  increaseDateByOffset,\n  addLocalDateToUTCOffset,\n  addUTCToLocalDateOffset,\n  getDateAtMidnightUTC,\n  parse,\n  parseISO,\n  format,\n  formatUTCDateAsLocal,\n  isValid: isValid$1,\n  isValidDate,\n  min,\n  max,\n  strMin,\n  strMax\n};\nvar _castCellValueToStr = cellValue => {\n  if (cellValue === null || cellValue === undefined) {\n    return '';\n  }\n  return '' + cellValue;\n};\nvar _dateCellsToString = (cols, data, hasHeader, dateFormat) => {\n  cols.forEach((column, i) => {\n    var _column$type;\n    if (column !== null && column !== void 0 && (_column$type = column.type) !== null && _column$type !== void 0 && _column$type.includes('date')) {\n      for (var j = 0 + hasHeader; j < data.length; j++) {\n        var dateCell = data[j][i];\n        if (dateCell instanceof Date) {\n          var maybeDateFormat = DateUtils.format(new Date(dateCell), dateFormat);\n          data[j][i] = maybeDateFormat !== '' ? maybeDateFormat : dateCell;\n        }\n      }\n    }\n  });\n  return data;\n};\nvar read = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (fileBlob, forceStr, emptyCols, cols, options, hasHeader) {\n    var data;\n    try {\n      var buffer = yield fileBlob.arrayBuffer();\n      var workbook = readSync(buffer, {\n        cellDates: true\n      });\n      var worksheetName = workbook.SheetNames[0];\n      var worksheet = workbook.Sheets[worksheetName];\n      data = utils.sheet_to_json(worksheet, emptyCols ? {\n        header: 1,\n        defval: ''\n      } : {\n        header: 1\n      });\n    } catch (err) {\n      throw new Error(\"Can't parse file. Please provide a valid XLSX file.\");\n    }\n    if (forceStr) {\n      data = _dateCellsToString(cols, data, hasHeader, options.dateFormat);\n      data = data.map(row => {\n        return row.map(cell => _castCellValueToStr(cell));\n      });\n    }\n    return data;\n  });\n  return function read(_x, _x2, _x3, _x4, _x5, _x6) {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar write = (data, cols) => {\n  var worksheet = utils.json_to_sheet(data, {\n    header: cols\n  });\n  var workbook = utils.book_new();\n  utils.book_append_sheet(workbook, worksheet, 'Sheet1');\n  return writeSync(workbook, {\n    type: 'array'\n  });\n};\nvar XLSXUtils = {\n  read,\n  write\n};\nvar validator$1 = {\n  exports: {}\n};\nvar toDate = {\n  exports: {}\n};\nvar assertString = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = assertString;\n  function _typeof(obj) {\n    \"@babel/helpers - typeof\";\n\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function _typeof(obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function _typeof(obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n    return _typeof(obj);\n  }\n  function assertString(input) {\n    var isString = typeof input === 'string' || input instanceof String;\n    if (!isString) {\n      var invalidType = _typeof(input);\n      if (input === null) invalidType = 'null';else if (invalidType === 'object') invalidType = input.constructor.name;\n      throw new TypeError(\"Expected a string but received a \".concat(invalidType));\n    }\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(assertString, assertString.exports);\nvar assertStringExports = assertString.exports;\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = toDate;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  function toDate(date) {\n    (0, _assertString.default)(date);\n    date = Date.parse(date);\n    return !isNaN(date) ? new Date(date) : null;\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(toDate, toDate.exports);\nvar toDateExports = toDate.exports;\nvar toFloat = {\n  exports: {}\n};\nvar isFloat$1 = {};\nvar alpha$1 = {};\nObject.defineProperty(alpha$1, \"__esModule\", {\n  value: true\n});\nalpha$1.commaDecimal = alpha$1.dotDecimal = alpha$1.bengaliLocales = alpha$1.farsiLocales = alpha$1.arabicLocales = alpha$1.englishLocales = alpha$1.decimal = alpha$1.alphanumeric = alpha$1.alpha = void 0;\nvar alpha = {\n  'en-US': /^[A-Z]+$/i,\n  'az-AZ': /^[A-VXYZÇƏĞİıÖŞÜ]+$/i,\n  'bg-BG': /^[А-Я]+$/i,\n  'cs-CZ': /^[A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ]+$/i,\n  'da-DK': /^[A-ZÆØÅ]+$/i,\n  'de-DE': /^[A-ZÄÖÜß]+$/i,\n  'el-GR': /^[Α-ώ]+$/i,\n  'es-ES': /^[A-ZÁÉÍÑÓÚÜ]+$/i,\n  'fa-IR': /^[ابپتثجچحخدذرزژسشصضطظعغفقکگلمنوهی]+$/i,\n  'fi-FI': /^[A-ZÅÄÖ]+$/i,\n  'fr-FR': /^[A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ]+$/i,\n  'it-IT': /^[A-ZÀÉÈÌÎÓÒÙ]+$/i,\n  'ja-JP': /^[ぁ-んァ-ヶｦ-ﾟ一-龠ー・。、]+$/i,\n  'nb-NO': /^[A-ZÆØÅ]+$/i,\n  'nl-NL': /^[A-ZÁÉËÏÓÖÜÚ]+$/i,\n  'nn-NO': /^[A-ZÆØÅ]+$/i,\n  'hu-HU': /^[A-ZÁÉÍÓÖŐÚÜŰ]+$/i,\n  'pl-PL': /^[A-ZĄĆĘŚŁŃÓŻŹ]+$/i,\n  'pt-PT': /^[A-ZÃÁÀÂÄÇÉÊËÍÏÕÓÔÖÚÜ]+$/i,\n  'ru-RU': /^[А-ЯЁ]+$/i,\n  'kk-KZ': /^[А-ЯЁ\\u04D8\\u04B0\\u0406\\u04A2\\u0492\\u04AE\\u049A\\u04E8\\u04BA]+$/i,\n  'sl-SI': /^[A-ZČĆĐŠŽ]+$/i,\n  'sk-SK': /^[A-ZÁČĎÉÍŇÓŠŤÚÝŽĹŔĽÄÔ]+$/i,\n  'sr-RS@latin': /^[A-ZČĆŽŠĐ]+$/i,\n  'sr-RS': /^[А-ЯЂЈЉЊЋЏ]+$/i,\n  'sv-SE': /^[A-ZÅÄÖ]+$/i,\n  'th-TH': /^[ก-๐\\s]+$/i,\n  'tr-TR': /^[A-ZÇĞİıÖŞÜ]+$/i,\n  'uk-UA': /^[А-ЩЬЮЯЄIЇҐі]+$/i,\n  'vi-VN': /^[A-ZÀÁẠẢÃÂẦẤẬẨẪĂẰẮẶẲẴĐÈÉẸẺẼÊỀẾỆỂỄÌÍỊỈĨÒÓỌỎÕÔỒỐỘỔỖƠỜỚỢỞỠÙÚỤỦŨƯỪỨỰỬỮỲÝỴỶỸ]+$/i,\n  'ko-KR': /^[ㄱ-ㅎㅏ-ㅣ가-힣]*$/,\n  'ku-IQ': /^[ئابپتجچحخدرڕزژسشعغفڤقکگلڵمنوۆھەیێيطؤثآإأكضصةظذ]+$/i,\n  ar: /^[ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ]+$/,\n  he: /^[א-ת]+$/,\n  fa: /^['آاءأؤئبپتثجچحخدذرزژسشصضطظعغفقکگلمنوهةی']+$/i,\n  bn: /^['ঀঁংঃঅআইঈউঊঋঌএঐওঔকখগঘঙচছজঝঞটঠডঢণতথদধনপফবভমযরলশষসহ়ঽািীুূৃৄেৈোৌ্ৎৗড়ঢ়য়ৠৡৢৣৰৱ৲৳৴৵৶৷৸৹৺৻']+$/,\n  'hi-IN': /^[\\u0900-\\u0961]+[\\u0972-\\u097F]*$/i,\n  'si-LK': /^[\\u0D80-\\u0DFF]+$/\n};\nalpha$1.alpha = alpha;\nvar alphanumeric = {\n  'en-US': /^[0-9A-Z]+$/i,\n  'az-AZ': /^[0-9A-VXYZÇƏĞİıÖŞÜ]+$/i,\n  'bg-BG': /^[0-9А-Я]+$/i,\n  'cs-CZ': /^[0-9A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ]+$/i,\n  'da-DK': /^[0-9A-ZÆØÅ]+$/i,\n  'de-DE': /^[0-9A-ZÄÖÜß]+$/i,\n  'el-GR': /^[0-9Α-ω]+$/i,\n  'es-ES': /^[0-9A-ZÁÉÍÑÓÚÜ]+$/i,\n  'fi-FI': /^[0-9A-ZÅÄÖ]+$/i,\n  'fr-FR': /^[0-9A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ]+$/i,\n  'it-IT': /^[0-9A-ZÀÉÈÌÎÓÒÙ]+$/i,\n  'ja-JP': /^[0-9０-９ぁ-んァ-ヶｦ-ﾟ一-龠ー・。、]+$/i,\n  'hu-HU': /^[0-9A-ZÁÉÍÓÖŐÚÜŰ]+$/i,\n  'nb-NO': /^[0-9A-ZÆØÅ]+$/i,\n  'nl-NL': /^[0-9A-ZÁÉËÏÓÖÜÚ]+$/i,\n  'nn-NO': /^[0-9A-ZÆØÅ]+$/i,\n  'pl-PL': /^[0-9A-ZĄĆĘŚŁŃÓŻŹ]+$/i,\n  'pt-PT': /^[0-9A-ZÃÁÀÂÄÇÉÊËÍÏÕÓÔÖÚÜ]+$/i,\n  'ru-RU': /^[0-9А-ЯЁ]+$/i,\n  'kk-KZ': /^[0-9А-ЯЁ\\u04D8\\u04B0\\u0406\\u04A2\\u0492\\u04AE\\u049A\\u04E8\\u04BA]+$/i,\n  'sl-SI': /^[0-9A-ZČĆĐŠŽ]+$/i,\n  'sk-SK': /^[0-9A-ZÁČĎÉÍŇÓŠŤÚÝŽĹŔĽÄÔ]+$/i,\n  'sr-RS@latin': /^[0-9A-ZČĆŽŠĐ]+$/i,\n  'sr-RS': /^[0-9А-ЯЂЈЉЊЋЏ]+$/i,\n  'sv-SE': /^[0-9A-ZÅÄÖ]+$/i,\n  'th-TH': /^[ก-๙\\s]+$/i,\n  'tr-TR': /^[0-9A-ZÇĞİıÖŞÜ]+$/i,\n  'uk-UA': /^[0-9А-ЩЬЮЯЄIЇҐі]+$/i,\n  'ko-KR': /^[0-9ㄱ-ㅎㅏ-ㅣ가-힣]*$/,\n  'ku-IQ': /^[٠١٢٣٤٥٦٧٨٩0-9ئابپتجچحخدرڕزژسشعغفڤقکگلڵمنوۆھەیێيطؤثآإأكضصةظذ]+$/i,\n  'vi-VN': /^[0-9A-ZÀÁẠẢÃÂẦẤẬẨẪĂẰẮẶẲẴĐÈÉẸẺẼÊỀẾỆỂỄÌÍỊỈĨÒÓỌỎÕÔỒỐỘỔỖƠỜỚỢỞỠÙÚỤỦŨƯỪỨỰỬỮỲÝỴỶỸ]+$/i,\n  ar: /^[٠١٢٣٤٥٦٧٨٩0-9ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ]+$/,\n  he: /^[0-9א-ת]+$/,\n  fa: /^['0-9آاءأؤئبپتثجچحخدذرزژسشصضطظعغفقکگلمنوهةی۱۲۳۴۵۶۷۸۹۰']+$/i,\n  bn: /^['ঀঁংঃঅআইঈউঊঋঌএঐওঔকখগঘঙচছজঝঞটঠডঢণতথদধনপফবভমযরলশষসহ়ঽািীুূৃৄেৈোৌ্ৎৗড়ঢ়য়ৠৡৢৣ০১২৩৪৫৬৭৮৯ৰৱ৲৳৴৵৶৷৸৹৺৻']+$/,\n  'hi-IN': /^[\\u0900-\\u0963]+[\\u0966-\\u097F]*$/i,\n  'si-LK': /^[0-9\\u0D80-\\u0DFF]+$/\n};\nalpha$1.alphanumeric = alphanumeric;\nvar decimal = {\n  'en-US': '.',\n  ar: '٫'\n};\nalpha$1.decimal = decimal;\nvar englishLocales = ['AU', 'GB', 'HK', 'IN', 'NZ', 'ZA', 'ZM'];\nalpha$1.englishLocales = englishLocales;\nfor (var locale, i = 0; i < englishLocales.length; i++) {\n  locale = \"en-\".concat(englishLocales[i]);\n  alpha[locale] = alpha['en-US'];\n  alphanumeric[locale] = alphanumeric['en-US'];\n  decimal[locale] = decimal['en-US'];\n} // Source: http://www.localeplanet.com/java/\n\nvar arabicLocales = ['AE', 'BH', 'DZ', 'EG', 'IQ', 'JO', 'KW', 'LB', 'LY', 'MA', 'QM', 'QA', 'SA', 'SD', 'SY', 'TN', 'YE'];\nalpha$1.arabicLocales = arabicLocales;\nfor (var _locale, _i = 0; _i < arabicLocales.length; _i++) {\n  _locale = \"ar-\".concat(arabicLocales[_i]);\n  alpha[_locale] = alpha.ar;\n  alphanumeric[_locale] = alphanumeric.ar;\n  decimal[_locale] = decimal.ar;\n}\nvar farsiLocales = ['IR', 'AF'];\nalpha$1.farsiLocales = farsiLocales;\nfor (var _locale2, _i2 = 0; _i2 < farsiLocales.length; _i2++) {\n  _locale2 = \"fa-\".concat(farsiLocales[_i2]);\n  alphanumeric[_locale2] = alphanumeric.fa;\n  decimal[_locale2] = decimal.ar;\n}\nvar bengaliLocales = ['BD', 'IN'];\nalpha$1.bengaliLocales = bengaliLocales;\nfor (var _locale3, _i3 = 0; _i3 < bengaliLocales.length; _i3++) {\n  _locale3 = \"bn-\".concat(bengaliLocales[_i3]);\n  alpha[_locale3] = alpha.bn;\n  alphanumeric[_locale3] = alphanumeric.bn;\n  decimal[_locale3] = decimal['en-US'];\n} // Source: https://en.wikipedia.org/wiki/Decimal_mark\n\nvar dotDecimal = ['ar-EG', 'ar-LB', 'ar-LY'];\nalpha$1.dotDecimal = dotDecimal;\nvar commaDecimal = ['bg-BG', 'cs-CZ', 'da-DK', 'de-DE', 'el-GR', 'en-ZM', 'es-ES', 'fr-CA', 'fr-FR', 'id-ID', 'it-IT', 'ku-IQ', 'hi-IN', 'hu-HU', 'nb-NO', 'nn-NO', 'nl-NL', 'pl-PL', 'pt-PT', 'ru-RU', 'kk-KZ', 'si-LK', 'sl-SI', 'sr-RS@latin', 'sr-RS', 'sv-SE', 'tr-TR', 'uk-UA', 'vi-VN'];\nalpha$1.commaDecimal = commaDecimal;\nfor (var _i4 = 0; _i4 < dotDecimal.length; _i4++) {\n  decimal[dotDecimal[_i4]] = decimal['en-US'];\n}\nfor (var _i5 = 0; _i5 < commaDecimal.length; _i5++) {\n  decimal[commaDecimal[_i5]] = ',';\n}\nalpha['fr-CA'] = alpha['fr-FR'];\nalphanumeric['fr-CA'] = alphanumeric['fr-FR'];\nalpha['pt-BR'] = alpha['pt-PT'];\nalphanumeric['pt-BR'] = alphanumeric['pt-PT'];\ndecimal['pt-BR'] = decimal['pt-PT']; // see #862\n\nalpha['pl-Pl'] = alpha['pl-PL'];\nalphanumeric['pl-Pl'] = alphanumeric['pl-PL'];\ndecimal['pl-Pl'] = decimal['pl-PL']; // see #1455\n\nalpha['fa-AF'] = alpha.fa;\nObject.defineProperty(isFloat$1, \"__esModule\", {\n  value: true\n});\nisFloat$1.default = isFloat;\nisFloat$1.locales = void 0;\nvar _assertString$b = _interopRequireDefault$b(assertStringExports);\nvar _alpha$2 = alpha$1;\nfunction _interopRequireDefault$b(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction isFloat(str, options) {\n  (0, _assertString$b.default)(str);\n  options = options || {};\n  var float = new RegExp(\"^(?:[-+])?(?:[0-9]+)?(?:\\\\\".concat(options.locale ? _alpha$2.decimal[options.locale] : '.', \"[0-9]*)?(?:[eE][\\\\+\\\\-]?(?:[0-9]+))?$\"));\n  if (str === '' || str === '.' || str === ',' || str === '-' || str === '+') {\n    return false;\n  }\n  var value = parseFloat(str.replace(',', '.'));\n  return float.test(str) && (!options.hasOwnProperty('min') || value >= options.min) && (!options.hasOwnProperty('max') || value <= options.max) && (!options.hasOwnProperty('lt') || value < options.lt) && (!options.hasOwnProperty('gt') || value > options.gt);\n}\nvar locales$5 = Object.keys(_alpha$2.decimal);\nisFloat$1.locales = locales$5;\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = toFloat;\n  var _isFloat = _interopRequireDefault(isFloat$1);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  function toFloat(str) {\n    if (!(0, _isFloat.default)(str)) return NaN;\n    return parseFloat(str);\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(toFloat, toFloat.exports);\nvar toFloatExports = toFloat.exports;\nvar toInt = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = toInt;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  function toInt(str, radix) {\n    (0, _assertString.default)(str);\n    return parseInt(str, radix || 10);\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(toInt, toInt.exports);\nvar toIntExports = toInt.exports;\nvar toBoolean = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = toBoolean;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  function toBoolean(str, strict) {\n    (0, _assertString.default)(str);\n    if (strict) {\n      return str === '1' || /^true$/i.test(str);\n    }\n    return str !== '0' && !/^false$/i.test(str) && str !== '';\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(toBoolean, toBoolean.exports);\nvar toBooleanExports = toBoolean.exports;\nvar equals = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = equals;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  function equals(str, comparison) {\n    (0, _assertString.default)(str);\n    return str === comparison;\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(equals, equals.exports);\nvar equalsExports = equals.exports;\nvar contains = {\n  exports: {}\n};\nvar toString$1 = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = toString;\n  function _typeof(obj) {\n    \"@babel/helpers - typeof\";\n\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function _typeof(obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function _typeof(obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n    return _typeof(obj);\n  }\n  function toString(input) {\n    if (_typeof(input) === 'object' && input !== null) {\n      if (typeof input.toString === 'function') {\n        input = input.toString();\n      } else {\n        input = '[object Object]';\n      }\n    } else if (input === null || typeof input === 'undefined' || isNaN(input) && !input.length) {\n      input = '';\n    }\n    return String(input);\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(toString$1, toString$1.exports);\nvar toStringExports = toString$1.exports;\nvar merge = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = merge;\n  function merge() {\n    var obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var defaults = arguments.length > 1 ? arguments[1] : undefined;\n    for (var key in defaults) {\n      if (typeof obj[key] === 'undefined') {\n        obj[key] = defaults[key];\n      }\n    }\n    return obj;\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(merge, merge.exports);\nvar mergeExports = merge.exports;\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = contains;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  var _toString = _interopRequireDefault(toStringExports);\n  var _merge = _interopRequireDefault(mergeExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  var defaulContainsOptions = {\n    ignoreCase: false,\n    minOccurrences: 1\n  };\n  function contains(str, elem, options) {\n    (0, _assertString.default)(str);\n    options = (0, _merge.default)(options, defaulContainsOptions);\n    if (options.ignoreCase) {\n      return str.toLowerCase().split((0, _toString.default)(elem).toLowerCase()).length > options.minOccurrences;\n    }\n    return str.split((0, _toString.default)(elem)).length > options.minOccurrences;\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(contains, contains.exports);\nvar containsExports = contains.exports;\nvar matches = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = matches;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  function matches(str, pattern, modifiers) {\n    (0, _assertString.default)(str);\n    if (Object.prototype.toString.call(pattern) !== '[object RegExp]') {\n      pattern = new RegExp(pattern, modifiers);\n    }\n    return !!str.match(pattern);\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(matches, matches.exports);\nvar matchesExports = matches.exports;\nvar isEmail = {\n  exports: {}\n};\nvar isByteLength = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isByteLength;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  function _typeof(obj) {\n    \"@babel/helpers - typeof\";\n\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function _typeof(obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function _typeof(obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n    return _typeof(obj);\n  }\n\n  /* eslint-disable prefer-rest-params */\n  function isByteLength(str, options) {\n    (0, _assertString.default)(str);\n    var min;\n    var max;\n    if (_typeof(options) === 'object') {\n      min = options.min || 0;\n      max = options.max;\n    } else {\n      // backwards compatibility: isByteLength(str, min [, max])\n      min = arguments[1];\n      max = arguments[2];\n    }\n    var len = encodeURI(str).split(/%..|./).length - 1;\n    return len >= min && (typeof max === 'undefined' || len <= max);\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(isByteLength, isByteLength.exports);\nvar isByteLengthExports = isByteLength.exports;\nvar isFQDN = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isFQDN;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  var _merge = _interopRequireDefault(mergeExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  var default_fqdn_options = {\n    require_tld: true,\n    allow_underscores: false,\n    allow_trailing_dot: false,\n    allow_numeric_tld: false,\n    allow_wildcard: false,\n    ignore_max_length: false\n  };\n  function isFQDN(str, options) {\n    (0, _assertString.default)(str);\n    options = (0, _merge.default)(options, default_fqdn_options);\n    /* Remove the optional trailing dot before checking validity */\n\n    if (options.allow_trailing_dot && str[str.length - 1] === '.') {\n      str = str.substring(0, str.length - 1);\n    }\n    /* Remove the optional wildcard before checking validity */\n\n    if (options.allow_wildcard === true && str.indexOf('*.') === 0) {\n      str = str.substring(2);\n    }\n    var parts = str.split('.');\n    var tld = parts[parts.length - 1];\n    if (options.require_tld) {\n      // disallow fqdns without tld\n      if (parts.length < 2) {\n        return false;\n      }\n      if (!options.allow_numeric_tld && !/^([a-z\\u00A1-\\u00A8\\u00AA-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]{2,}|xn[a-z0-9-]{2,})$/i.test(tld)) {\n        return false;\n      } // disallow spaces\n\n      if (/\\s/.test(tld)) {\n        return false;\n      }\n    } // reject numeric TLDs\n\n    if (!options.allow_numeric_tld && /^\\d+$/.test(tld)) {\n      return false;\n    }\n    return parts.every(function (part) {\n      if (part.length > 63 && !options.ignore_max_length) {\n        return false;\n      }\n      if (!/^[a-z_\\u00a1-\\uffff0-9-]+$/i.test(part)) {\n        return false;\n      } // disallow full-width chars\n\n      if (/[\\uff01-\\uff5e]/.test(part)) {\n        return false;\n      } // disallow parts starting or ending with hyphen\n\n      if (/^-|-$/.test(part)) {\n        return false;\n      }\n      if (!options.allow_underscores && /_/.test(part)) {\n        return false;\n      }\n      return true;\n    });\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(isFQDN, isFQDN.exports);\nvar isFQDNExports = isFQDN.exports;\nvar isIP = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isIP;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  /**\n  11.3.  Examples\n  \t   The following addresses\n  \t             fe80::1234 (on the 1st link of the node)\n               ff02::5678 (on the 5th link of the node)\n               ff08::9abc (on the 10th organization of the node)\n  \t   would be represented as follows:\n  \t             fe80::1234%1\n               ff02::5678%5\n               ff08::9abc%10\n  \t   (Here we assume a natural translation from a zone index to the\n     <zone_id> part, where the Nth zone of any scope is translated into\n     \"N\".)\n  \t   If we use interface names as <zone_id>, those addresses could also be\n     represented as follows:\n  \t            fe80::1234%ne0\n              ff02::5678%pvc1.3\n              ff08::9abc%interface10\n  \t   where the interface \"ne0\" belongs to the 1st link, \"pvc1.3\" belongs\n     to the 5th link, and \"interface10\" belongs to the 10th organization.\n   * * */\n  var IPv4SegmentFormat = '(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])';\n  var IPv4AddressFormat = \"(\".concat(IPv4SegmentFormat, \"[.]){3}\").concat(IPv4SegmentFormat);\n  var IPv4AddressRegExp = new RegExp(\"^\".concat(IPv4AddressFormat, \"$\"));\n  var IPv6SegmentFormat = '(?:[0-9a-fA-F]{1,4})';\n  var IPv6AddressRegExp = new RegExp('^(' + \"(?:\".concat(IPv6SegmentFormat, \":){7}(?:\").concat(IPv6SegmentFormat, \"|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){6}(?:\").concat(IPv4AddressFormat, \"|:\").concat(IPv6SegmentFormat, \"|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){5}(?::\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,2}|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){4}(?:(:\").concat(IPv6SegmentFormat, \"){0,1}:\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,3}|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){3}(?:(:\").concat(IPv6SegmentFormat, \"){0,2}:\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,4}|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){2}(?:(:\").concat(IPv6SegmentFormat, \"){0,3}:\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,5}|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){1}(?:(:\").concat(IPv6SegmentFormat, \"){0,4}:\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,6}|:)|\") + \"(?::((?::\".concat(IPv6SegmentFormat, \"){0,5}:\").concat(IPv4AddressFormat, \"|(?::\").concat(IPv6SegmentFormat, \"){1,7}|:))\") + ')(%[0-9a-zA-Z-.:]{1,})?$');\n  function isIP(str) {\n    var version = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    (0, _assertString.default)(str);\n    version = String(version);\n    if (!version) {\n      return isIP(str, 4) || isIP(str, 6);\n    }\n    if (version === '4') {\n      return IPv4AddressRegExp.test(str);\n    }\n    if (version === '6') {\n      return IPv6AddressRegExp.test(str);\n    }\n    return false;\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(isIP, isIP.exports);\nvar isIPExports = isIP.exports;\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isEmail;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  var _isByteLength = _interopRequireDefault(isByteLengthExports);\n  var _isFQDN = _interopRequireDefault(isFQDNExports);\n  var _isIP = _interopRequireDefault(isIPExports);\n  var _merge = _interopRequireDefault(mergeExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  var default_email_options = {\n    allow_display_name: false,\n    allow_underscores: false,\n    require_display_name: false,\n    allow_utf8_local_part: true,\n    require_tld: true,\n    blacklisted_chars: '',\n    ignore_max_length: false,\n    host_blacklist: [],\n    host_whitelist: []\n  };\n  /* eslint-disable max-len */\n\n  /* eslint-disable no-control-regex */\n\n  var splitNameAddress = /^([^\\x00-\\x1F\\x7F-\\x9F\\cX]+)</i;\n  var emailUserPart = /^[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]+$/i;\n  var gmailUserPart = /^[a-z\\d]+$/;\n  var quotedEmailUser = /^([\\s\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5d-\\x7e]|(\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]))*$/i;\n  var emailUserUtf8Part = /^[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~\\u00A1-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+$/i;\n  var quotedEmailUserUtf8 = /^([\\s\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5d-\\x7e\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|(\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))*$/i;\n  var defaultMaxEmailLength = 254;\n  /* eslint-enable max-len */\n\n  /* eslint-enable no-control-regex */\n\n  /**\n   * Validate display name according to the RFC2822: https://tools.ietf.org/html/rfc2822#appendix-A.1.2\n   * @param {String} display_name\n   */\n\n  function validateDisplayName(display_name) {\n    var display_name_without_quotes = display_name.replace(/^\"(.+)\"$/, '$1'); // display name with only spaces is not valid\n\n    if (!display_name_without_quotes.trim()) {\n      return false;\n    } // check whether display name contains illegal character\n\n    var contains_illegal = /[\\.\";<>]/.test(display_name_without_quotes);\n    if (contains_illegal) {\n      // if contains illegal characters,\n      // must to be enclosed in double-quotes, otherwise it's not a valid display name\n      if (display_name_without_quotes === display_name) {\n        return false;\n      } // the quotes in display name must start with character symbol \\\n\n      var all_start_with_back_slash = display_name_without_quotes.split('\"').length === display_name_without_quotes.split('\\\\\"').length;\n      if (!all_start_with_back_slash) {\n        return false;\n      }\n    }\n    return true;\n  }\n  function isEmail(str, options) {\n    (0, _assertString.default)(str);\n    options = (0, _merge.default)(options, default_email_options);\n    if (options.require_display_name || options.allow_display_name) {\n      var display_email = str.match(splitNameAddress);\n      if (display_email) {\n        var display_name = display_email[1]; // Remove display name and angle brackets to get email address\n        // Can be done in the regex but will introduce a ReDOS (See  #1597 for more info)\n\n        str = str.replace(display_name, '').replace(/(^<|>$)/g, ''); // sometimes need to trim the last space to get the display name\n        // because there may be a space between display name and email address\n        // eg. myname <address@gmail.com>\n        // the display name is `myname` instead of `myname `, so need to trim the last space\n\n        if (display_name.endsWith(' ')) {\n          display_name = display_name.slice(0, -1);\n        }\n        if (!validateDisplayName(display_name)) {\n          return false;\n        }\n      } else if (options.require_display_name) {\n        return false;\n      }\n    }\n    if (!options.ignore_max_length && str.length > defaultMaxEmailLength) {\n      return false;\n    }\n    var parts = str.split('@');\n    var domain = parts.pop();\n    var lower_domain = domain.toLowerCase();\n    if (options.host_blacklist.includes(lower_domain)) {\n      return false;\n    }\n    if (options.host_whitelist.length > 0 && !options.host_whitelist.includes(lower_domain)) {\n      return false;\n    }\n    var user = parts.join('@');\n    if (options.domain_specific_validation && (lower_domain === 'gmail.com' || lower_domain === 'googlemail.com')) {\n      /*\n        Previously we removed dots for gmail addresses before validating.\n        This was removed because it allows `multiple..dots@gmail.com`\n        to be reported as valid, but it is not.\n        Gmail only normalizes single dots, removing them from here is pointless,\n        should be done in normalizeEmail\n      */\n      user = user.toLowerCase(); // Removing sub-address from username before gmail validation\n\n      var username = user.split('+')[0]; // Dots are not included in gmail length restriction\n\n      if (!(0, _isByteLength.default)(username.replace(/\\./g, ''), {\n        min: 6,\n        max: 30\n      })) {\n        return false;\n      }\n      var _user_parts = username.split('.');\n      for (var i = 0; i < _user_parts.length; i++) {\n        if (!gmailUserPart.test(_user_parts[i])) {\n          return false;\n        }\n      }\n    }\n    if (options.ignore_max_length === false && (!(0, _isByteLength.default)(user, {\n      max: 64\n    }) || !(0, _isByteLength.default)(domain, {\n      max: 254\n    }))) {\n      return false;\n    }\n    if (!(0, _isFQDN.default)(domain, {\n      require_tld: options.require_tld,\n      ignore_max_length: options.ignore_max_length,\n      allow_underscores: options.allow_underscores\n    })) {\n      if (!options.allow_ip_domain) {\n        return false;\n      }\n      if (!(0, _isIP.default)(domain)) {\n        if (!domain.startsWith('[') || !domain.endsWith(']')) {\n          return false;\n        }\n        var noBracketdomain = domain.slice(1, -1);\n        if (noBracketdomain.length === 0 || !(0, _isIP.default)(noBracketdomain)) {\n          return false;\n        }\n      }\n    }\n    if (user[0] === '\"') {\n      user = user.slice(1, user.length - 1);\n      return options.allow_utf8_local_part ? quotedEmailUserUtf8.test(user) : quotedEmailUser.test(user);\n    }\n    var pattern = options.allow_utf8_local_part ? emailUserUtf8Part : emailUserPart;\n    var user_parts = user.split('.');\n    for (var _i = 0; _i < user_parts.length; _i++) {\n      if (!pattern.test(user_parts[_i])) {\n        return false;\n      }\n    }\n    if (options.blacklisted_chars) {\n      if (user.search(new RegExp(\"[\".concat(options.blacklisted_chars, \"]+\"), 'g')) !== -1) return false;\n    }\n    return true;\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(isEmail, isEmail.exports);\nvar isEmailExports = isEmail.exports;\nvar isURL = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isURL;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  var _isFQDN = _interopRequireDefault(isFQDNExports);\n  var _isIP = _interopRequireDefault(isIPExports);\n  var _merge = _interopRequireDefault(mergeExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  function _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n  }\n  function _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for (var i = 0, arr2 = new Array(len); i < len; i++) {\n      arr2[i] = arr[i];\n    }\n    return arr2;\n  }\n  function _iterableToArrayLimit(arr, i) {\n    if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n  function _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n  }\n\n  /*\n  options for isURL method\n  \trequire_protocol - if set as true isURL will return false if protocol is not present in the URL\n  require_valid_protocol - isURL will check if the URL's protocol is present in the protocols option\n  protocols - valid protocols can be modified with this option\n  require_host - if set as false isURL will not check if host is present in the URL\n  require_port - if set as true isURL will check if port is present in the URL\n  allow_protocol_relative_urls - if set as true protocol relative URLs will be allowed\n  validate_length - if set as false isURL will skip string length validation (IE maximum is 2083)\n  \t*/\n  var default_url_options = {\n    protocols: ['http', 'https', 'ftp'],\n    require_tld: true,\n    require_protocol: false,\n    require_host: true,\n    require_port: false,\n    require_valid_protocol: true,\n    allow_underscores: false,\n    allow_trailing_dot: false,\n    allow_protocol_relative_urls: false,\n    allow_fragments: true,\n    allow_query_components: true,\n    validate_length: true\n  };\n  var wrapped_ipv6 = /^\\[([^\\]]+)\\](?::([0-9]+))?$/;\n  function isRegExp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n  }\n  function checkHost(host, matches) {\n    for (var i = 0; i < matches.length; i++) {\n      var match = matches[i];\n      if (host === match || isRegExp(match) && match.test(host)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  function isURL(url, options) {\n    (0, _assertString.default)(url);\n    if (!url || /[\\s<>]/.test(url)) {\n      return false;\n    }\n    if (url.indexOf('mailto:') === 0) {\n      return false;\n    }\n    options = (0, _merge.default)(options, default_url_options);\n    if (options.validate_length && url.length >= 2083) {\n      return false;\n    }\n    if (!options.allow_fragments && url.includes('#')) {\n      return false;\n    }\n    if (!options.allow_query_components && (url.includes('?') || url.includes('&'))) {\n      return false;\n    }\n    var protocol, auth, host, hostname, port, port_str, split, ipv6;\n    split = url.split('#');\n    url = split.shift();\n    split = url.split('?');\n    url = split.shift();\n    split = url.split('://');\n    if (split.length > 1) {\n      protocol = split.shift().toLowerCase();\n      if (options.require_valid_protocol && options.protocols.indexOf(protocol) === -1) {\n        return false;\n      }\n    } else if (options.require_protocol) {\n      return false;\n    } else if (url.slice(0, 2) === '//') {\n      if (!options.allow_protocol_relative_urls) {\n        return false;\n      }\n      split[0] = url.slice(2);\n    }\n    url = split.join('://');\n    if (url === '') {\n      return false;\n    }\n    split = url.split('/');\n    url = split.shift();\n    if (url === '' && !options.require_host) {\n      return true;\n    }\n    split = url.split('@');\n    if (split.length > 1) {\n      if (options.disallow_auth) {\n        return false;\n      }\n      if (split[0] === '') {\n        return false;\n      }\n      auth = split.shift();\n      if (auth.indexOf(':') >= 0 && auth.split(':').length > 2) {\n        return false;\n      }\n      var _auth$split = auth.split(':'),\n        _auth$split2 = _slicedToArray(_auth$split, 2),\n        user = _auth$split2[0],\n        password = _auth$split2[1];\n      if (user === '' && password === '') {\n        return false;\n      }\n    }\n    hostname = split.join('@');\n    port_str = null;\n    ipv6 = null;\n    var ipv6_match = hostname.match(wrapped_ipv6);\n    if (ipv6_match) {\n      host = '';\n      ipv6 = ipv6_match[1];\n      port_str = ipv6_match[2] || null;\n    } else {\n      split = hostname.split(':');\n      host = split.shift();\n      if (split.length) {\n        port_str = split.join(':');\n      }\n    }\n    if (port_str !== null && port_str.length > 0) {\n      port = parseInt(port_str, 10);\n      if (!/^[0-9]+$/.test(port_str) || port <= 0 || port > 65535) {\n        return false;\n      }\n    } else if (options.require_port) {\n      return false;\n    }\n    if (options.host_whitelist) {\n      return checkHost(host, options.host_whitelist);\n    }\n    if (host === '' && !options.require_host) {\n      return true;\n    }\n    if (!(0, _isIP.default)(host) && !(0, _isFQDN.default)(host, options) && (!ipv6 || !(0, _isIP.default)(ipv6, 6))) {\n      return false;\n    }\n    host = host || ipv6;\n    if (options.host_blacklist && checkHost(host, options.host_blacklist)) {\n      return false;\n    }\n    return true;\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(isURL, isURL.exports);\nvar isURLExports = isURL.exports;\nvar isMACAddress = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isMACAddress;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  var macAddress48 = /^(?:[0-9a-fA-F]{2}([-:\\s]))([0-9a-fA-F]{2}\\1){4}([0-9a-fA-F]{2})$/;\n  var macAddress48NoSeparators = /^([0-9a-fA-F]){12}$/;\n  var macAddress48WithDots = /^([0-9a-fA-F]{4}\\.){2}([0-9a-fA-F]{4})$/;\n  var macAddress64 = /^(?:[0-9a-fA-F]{2}([-:\\s]))([0-9a-fA-F]{2}\\1){6}([0-9a-fA-F]{2})$/;\n  var macAddress64NoSeparators = /^([0-9a-fA-F]){16}$/;\n  var macAddress64WithDots = /^([0-9a-fA-F]{4}\\.){3}([0-9a-fA-F]{4})$/;\n  function isMACAddress(str, options) {\n    (0, _assertString.default)(str);\n    if (options !== null && options !== void 0 && options.eui) {\n      options.eui = String(options.eui);\n    }\n    /**\n     * @deprecated `no_colons` TODO: remove it in the next major\n    */\n\n    if (options !== null && options !== void 0 && options.no_colons || options !== null && options !== void 0 && options.no_separators) {\n      if (options.eui === '48') {\n        return macAddress48NoSeparators.test(str);\n      }\n      if (options.eui === '64') {\n        return macAddress64NoSeparators.test(str);\n      }\n      return macAddress48NoSeparators.test(str) || macAddress64NoSeparators.test(str);\n    }\n    if ((options === null || options === void 0 ? void 0 : options.eui) === '48') {\n      return macAddress48.test(str) || macAddress48WithDots.test(str);\n    }\n    if ((options === null || options === void 0 ? void 0 : options.eui) === '64') {\n      return macAddress64.test(str) || macAddress64WithDots.test(str);\n    }\n    return isMACAddress(str, {\n      eui: '48'\n    }) || isMACAddress(str, {\n      eui: '64'\n    });\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(isMACAddress, isMACAddress.exports);\nvar isMACAddressExports = isMACAddress.exports;\nvar isIPRange = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isIPRange;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  var _isIP = _interopRequireDefault(isIPExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  var subnetMaybe = /^\\d{1,3}$/;\n  var v4Subnet = 32;\n  var v6Subnet = 128;\n  function isIPRange(str) {\n    var version = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    (0, _assertString.default)(str);\n    var parts = str.split('/'); // parts[0] -> ip, parts[1] -> subnet\n\n    if (parts.length !== 2) {\n      return false;\n    }\n    if (!subnetMaybe.test(parts[1])) {\n      return false;\n    } // Disallow preceding 0 i.e. 01, 02, ...\n\n    if (parts[1].length > 1 && parts[1].startsWith('0')) {\n      return false;\n    }\n    var isValidIP = (0, _isIP.default)(parts[0], version);\n    if (!isValidIP) {\n      return false;\n    } // Define valid subnet according to IP's version\n\n    var expectedSubnet = null;\n    switch (String(version)) {\n      case '4':\n        expectedSubnet = v4Subnet;\n        break;\n      case '6':\n        expectedSubnet = v6Subnet;\n        break;\n      default:\n        expectedSubnet = (0, _isIP.default)(parts[0], '6') ? v6Subnet : v4Subnet;\n    }\n    return parts[1] <= expectedSubnet && parts[1] >= 0;\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(isIPRange, isIPRange.exports);\nvar isIPRangeExports = isIPRange.exports;\nvar isDate$1 = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isDate;\n  var _merge = _interopRequireDefault(mergeExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  function _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n  }\n  function _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  function _iterableToArrayLimit(arr, i) {\n    if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n  function _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n  }\n  function _createForOfIteratorHelper(o, allowArrayLike) {\n    var it;\n    if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n      if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n        if (it) o = it;\n        var i = 0;\n        var F = function F() {};\n        return {\n          s: F,\n          n: function n() {\n            if (i >= o.length) return {\n              done: true\n            };\n            return {\n              done: false,\n              value: o[i++]\n            };\n          },\n          e: function e(_e2) {\n            throw _e2;\n          },\n          f: F\n        };\n      }\n      throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n    }\n    var normalCompletion = true,\n      didErr = false,\n      err;\n    return {\n      s: function s() {\n        it = o[Symbol.iterator]();\n      },\n      n: function n() {\n        var step = it.next();\n        normalCompletion = step.done;\n        return step;\n      },\n      e: function e(_e3) {\n        didErr = true;\n        err = _e3;\n      },\n      f: function f() {\n        try {\n          if (!normalCompletion && it.return != null) it.return();\n        } finally {\n          if (didErr) throw err;\n        }\n      }\n    };\n  }\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for (var i = 0, arr2 = new Array(len); i < len; i++) {\n      arr2[i] = arr[i];\n    }\n    return arr2;\n  }\n  var default_date_options = {\n    format: 'YYYY/MM/DD',\n    delimiters: ['/', '-'],\n    strictMode: false\n  };\n  function isValidFormat(format) {\n    return /(^(y{4}|y{2})[.\\/-](m{1,2})[.\\/-](d{1,2})$)|(^(m{1,2})[.\\/-](d{1,2})[.\\/-]((y{4}|y{2})$))|(^(d{1,2})[.\\/-](m{1,2})[.\\/-]((y{4}|y{2})$))/gi.test(format);\n  }\n  function zip(date, format) {\n    var zippedArr = [],\n      len = Math.min(date.length, format.length);\n    for (var i = 0; i < len; i++) {\n      zippedArr.push([date[i], format[i]]);\n    }\n    return zippedArr;\n  }\n  function isDate(input, options) {\n    if (typeof options === 'string') {\n      // Allow backward compatbility for old format isDate(input [, format])\n      options = (0, _merge.default)({\n        format: options\n      }, default_date_options);\n    } else {\n      options = (0, _merge.default)(options, default_date_options);\n    }\n    if (typeof input === 'string' && isValidFormat(options.format)) {\n      var formatDelimiter = options.delimiters.find(function (delimiter) {\n        return options.format.indexOf(delimiter) !== -1;\n      });\n      var dateDelimiter = options.strictMode ? formatDelimiter : options.delimiters.find(function (delimiter) {\n        return input.indexOf(delimiter) !== -1;\n      });\n      var dateAndFormat = zip(input.split(dateDelimiter), options.format.toLowerCase().split(formatDelimiter));\n      var dateObj = {};\n      var _iterator = _createForOfIteratorHelper(dateAndFormat),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _step$value = _slicedToArray(_step.value, 2),\n            dateWord = _step$value[0],\n            formatWord = _step$value[1];\n          if (dateWord.length !== formatWord.length) {\n            return false;\n          }\n          dateObj[formatWord.charAt(0)] = dateWord;\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      var fullYear = dateObj.y;\n      if (dateObj.y.length === 2) {\n        var parsedYear = parseInt(dateObj.y, 10);\n        if (isNaN(parsedYear)) {\n          return false;\n        }\n        var currentYearLastTwoDigits = new Date().getFullYear() % 100;\n        if (parsedYear < currentYearLastTwoDigits) {\n          fullYear = \"20\".concat(dateObj.y);\n        } else {\n          fullYear = \"19\".concat(dateObj.y);\n        }\n      }\n      return new Date(\"\".concat(fullYear, \"-\").concat(dateObj.m, \"-\").concat(dateObj.d)).getDate() === +dateObj.d;\n    }\n    if (!options.strictMode) {\n      return Object.prototype.toString.call(input) === '[object Date]' && isFinite(input);\n    }\n    return false;\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(isDate$1, isDate$1.exports);\nvar isDateExports = isDate$1.exports;\nvar isTime = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isTime;\n  var _merge = _interopRequireDefault(mergeExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  var default_time_options = {\n    hourFormat: 'hour24',\n    mode: 'default'\n  };\n  var formats = {\n    hour24: {\n      default: /^([01]?[0-9]|2[0-3]):([0-5][0-9])$/,\n      withSeconds: /^([01]?[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])$/\n    },\n    hour12: {\n      default: /^(0?[1-9]|1[0-2]):([0-5][0-9]) (A|P)M$/,\n      withSeconds: /^(0?[1-9]|1[0-2]):([0-5][0-9]):([0-5][0-9]) (A|P)M$/\n    }\n  };\n  function isTime(input, options) {\n    options = (0, _merge.default)(options, default_time_options);\n    if (typeof input !== 'string') return false;\n    return formats[options.hourFormat][options.mode].test(input);\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(isTime, isTime.exports);\nvar isTimeExports = isTime.exports;\nvar isBoolean = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isBoolean;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  var defaultOptions = {\n    loose: false\n  };\n  var strictBooleans = ['true', 'false', '1', '0'];\n  var looseBooleans = [].concat(strictBooleans, ['yes', 'no']);\n  function isBoolean(str) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultOptions;\n    (0, _assertString.default)(str);\n    if (options.loose) {\n      return looseBooleans.includes(str.toLowerCase());\n    }\n    return strictBooleans.includes(str);\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(isBoolean, isBoolean.exports);\nvar isBooleanExports = isBoolean.exports;\nvar isLocale = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isLocale;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  /*\n    = 3ALPHA              ; selected ISO 639 codes\n      *2(\"-\" 3ALPHA)      ; permanently reserved\n   */\n  var extlang = '([A-Za-z]{3}(-[A-Za-z]{3}){0,2})';\n  /*\n    = 2*3ALPHA            ; shortest ISO 639 code\n      [\"-\" extlang]       ; sometimes followed by\n                          ; extended language subtags\n    / 4ALPHA              ; or reserved for future use\n    / 5*8ALPHA            ; or registered language subtag\n   */\n\n  var language = \"(([a-zA-Z]{2,3}(-\".concat(extlang, \")?)|([a-zA-Z]{5,8}))\");\n  /*\n    = 4ALPHA              ; ISO 15924 code\n   */\n\n  var script = '([A-Za-z]{4})';\n  /*\n    = 2ALPHA              ; ISO 3166-1 code\n    / 3DIGIT              ; UN M.49 code\n   */\n\n  var region = '([A-Za-z]{2}|\\\\d{3})';\n  /*\n    = 5*8alphanum         ; registered variants\n    / (DIGIT 3alphanum)\n   */\n\n  var variant = '([A-Za-z0-9]{5,8}|(\\\\d[A-Z-a-z0-9]{3}))';\n  /*\n    = DIGIT               ; 0 - 9\n    / %x41-57             ; A - W\n    / %x59-5A             ; Y - Z\n    / %x61-77             ; a - w\n    / %x79-7A             ; y - z\n   */\n\n  var singleton = '(\\\\d|[A-W]|[Y-Z]|[a-w]|[y-z])';\n  /*\n    = singleton 1*(\"-\" (2*8alphanum))\n                          ; Single alphanumerics\n                          ; \"x\" reserved for private use\n   */\n\n  var extension = \"(\".concat(singleton, \"(-[A-Za-z0-9]{2,8})+)\");\n  /*\n    = \"x\" 1*(\"-\" (1*8alphanum))\n   */\n\n  var privateuse = '(x(-[A-Za-z0-9]{1,8})+)'; // irregular tags do not match the 'langtag' production and would not\n  // otherwise be considered 'well-formed'. These tags are all valid, but\n  // most are deprecated in favor of more modern subtags or subtag combination\n\n  var irregular = '((en-GB-oed)|(i-ami)|(i-bnn)|(i-default)|(i-enochian)|' + '(i-hak)|(i-klingon)|(i-lux)|(i-mingo)|(i-navajo)|(i-pwn)|(i-tao)|' + '(i-tay)|(i-tsu)|(sgn-BE-FR)|(sgn-BE-NL)|(sgn-CH-DE))'; // regular tags match the 'langtag' production, but their subtags are not\n  // extended language or variant subtags: their meaning is defined by\n  // their registration and all of these are deprecated in favor of a more\n  // modern subtag or sequence of subtags\n\n  var regular = '((art-lojban)|(cel-gaulish)|(no-bok)|(no-nyn)|(zh-guoyu)|' + '(zh-hakka)|(zh-min)|(zh-min-nan)|(zh-xiang))';\n  /*\n    = irregular           ; non-redundant tags registered\n    / regular             ; during the RFC 3066 era\n  \t */\n\n  var grandfathered = \"(\".concat(irregular, \"|\").concat(regular, \")\");\n  /*\n    RFC 5646 defines delimitation of subtags via a hyphen:\n  \t      \"Subtag\" refers to a specific section of a tag, delimited by a\n        hyphen, such as the subtags 'zh', 'Hant', and 'CN' in the tag \"zh-\n        Hant-CN\".  Examples of subtags in this document are enclosed in\n        single quotes ('Hant')\n  \t  However, we need to add \"_\" to maintain the existing behaviour.\n   */\n\n  var delimiter = '(-|_)';\n  /*\n    = language\n      [\"-\" script]\n      [\"-\" region]\n      *(\"-\" variant)\n      *(\"-\" extension)\n      [\"-\" privateuse]\n   */\n\n  var langtag = \"\".concat(language, \"(\").concat(delimiter).concat(script, \")?(\").concat(delimiter).concat(region, \")?(\").concat(delimiter).concat(variant, \")*(\").concat(delimiter).concat(extension, \")*(\").concat(delimiter).concat(privateuse, \")?\");\n  /*\n    Regex implementation based on BCP RFC 5646\n    Tags for Identifying Languages\n    https://www.rfc-editor.org/rfc/rfc5646.html\n   */\n\n  var languageTagRegex = new RegExp(\"(^\".concat(privateuse, \"$)|(^\").concat(grandfathered, \"$)|(^\").concat(langtag, \"$)\"));\n  function isLocale(str) {\n    (0, _assertString.default)(str);\n    return languageTagRegex.test(str);\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(isLocale, isLocale.exports);\nvar isLocaleExports = isLocale.exports;\nvar isAlpha$1 = {};\nObject.defineProperty(isAlpha$1, \"__esModule\", {\n  value: true\n});\nisAlpha$1.default = isAlpha;\nisAlpha$1.locales = void 0;\nvar _assertString$a = _interopRequireDefault$a(assertStringExports);\nvar _alpha$1 = alpha$1;\nfunction _interopRequireDefault$a(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction isAlpha(_str) {\n  var locale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'en-US';\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  (0, _assertString$a.default)(_str);\n  var str = _str;\n  var ignore = options.ignore;\n  if (ignore) {\n    if (ignore instanceof RegExp) {\n      str = str.replace(ignore, '');\n    } else if (typeof ignore === 'string') {\n      str = str.replace(new RegExp(\"[\".concat(ignore.replace(/[-[\\]{}()*+?.,\\\\^$|#\\\\s]/g, '\\\\$&'), \"]\"), 'g'), ''); // escape regex for ignore\n    } else {\n      throw new Error('ignore should be instance of a String or RegExp');\n    }\n  }\n  if (locale in _alpha$1.alpha) {\n    return _alpha$1.alpha[locale].test(str);\n  }\n  throw new Error(\"Invalid locale '\".concat(locale, \"'\"));\n}\nvar locales$4 = Object.keys(_alpha$1.alpha);\nisAlpha$1.locales = locales$4;\nvar isAlphanumeric$1 = {};\nObject.defineProperty(isAlphanumeric$1, \"__esModule\", {\n  value: true\n});\nisAlphanumeric$1.default = isAlphanumeric;\nisAlphanumeric$1.locales = void 0;\nvar _assertString$9 = _interopRequireDefault$9(assertStringExports);\nvar _alpha = alpha$1;\nfunction _interopRequireDefault$9(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction isAlphanumeric(_str) {\n  var locale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'en-US';\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  (0, _assertString$9.default)(_str);\n  var str = _str;\n  var ignore = options.ignore;\n  if (ignore) {\n    if (ignore instanceof RegExp) {\n      str = str.replace(ignore, '');\n    } else if (typeof ignore === 'string') {\n      str = str.replace(new RegExp(\"[\".concat(ignore.replace(/[-[\\]{}()*+?.,\\\\^$|#\\\\s]/g, '\\\\$&'), \"]\"), 'g'), ''); // escape regex for ignore\n    } else {\n      throw new Error('ignore should be instance of a String or RegExp');\n    }\n  }\n  if (locale in _alpha.alphanumeric) {\n    return _alpha.alphanumeric[locale].test(str);\n  }\n  throw new Error(\"Invalid locale '\".concat(locale, \"'\"));\n}\nvar locales$3 = Object.keys(_alpha.alphanumeric);\nisAlphanumeric$1.locales = locales$3;\nvar isNumeric = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isNumeric;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  var _alpha = alpha$1;\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  var numericNoSymbols = /^[0-9]+$/;\n  function isNumeric(str, options) {\n    (0, _assertString.default)(str);\n    if (options && options.no_symbols) {\n      return numericNoSymbols.test(str);\n    }\n    return new RegExp(\"^[+-]?([0-9]*[\".concat((options || {}).locale ? _alpha.decimal[options.locale] : '.', \"])?[0-9]+$\")).test(str);\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(isNumeric, isNumeric.exports);\nvar isNumericExports = isNumeric.exports;\nvar isPassportNumber = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isPassportNumber;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  /**\n   * Reference:\n   * https://en.wikipedia.org/ -- Wikipedia\n   * https://docs.microsoft.com/en-us/microsoft-365/compliance/eu-passport-number -- EU Passport Number\n   * https://countrycode.org/ -- Country Codes\n   */\n  var passportRegexByCountryCode = {\n    AM: /^[A-Z]{2}\\d{7}$/,\n    // ARMENIA\n    AR: /^[A-Z]{3}\\d{6}$/,\n    // ARGENTINA\n    AT: /^[A-Z]\\d{7}$/,\n    // AUSTRIA\n    AU: /^[A-Z]\\d{7}$/,\n    // AUSTRALIA\n    AZ: /^[A-Z]{2,3}\\d{7,8}$/,\n    // AZERBAIJAN\n    BE: /^[A-Z]{2}\\d{6}$/,\n    // BELGIUM\n    BG: /^\\d{9}$/,\n    // BULGARIA\n    BR: /^[A-Z]{2}\\d{6}$/,\n    // BRAZIL\n    BY: /^[A-Z]{2}\\d{7}$/,\n    // BELARUS\n    CA: /^[A-Z]{2}\\d{6}$/,\n    // CANADA\n    CH: /^[A-Z]\\d{7}$/,\n    // SWITZERLAND\n    CN: /^G\\d{8}$|^E(?![IO])[A-Z0-9]\\d{7}$/,\n    // CHINA [G=Ordinary, E=Electronic] followed by 8-digits, or E followed by any UPPERCASE letter (except I and O) followed by 7 digits\n    CY: /^[A-Z](\\d{6}|\\d{8})$/,\n    // CYPRUS\n    CZ: /^\\d{8}$/,\n    // CZECH REPUBLIC\n    DE: /^[CFGHJKLMNPRTVWXYZ0-9]{9}$/,\n    // GERMANY\n    DK: /^\\d{9}$/,\n    // DENMARK\n    DZ: /^\\d{9}$/,\n    // ALGERIA\n    EE: /^([A-Z]\\d{7}|[A-Z]{2}\\d{7})$/,\n    // ESTONIA (K followed by 7-digits), e-passports have 2 UPPERCASE followed by 7 digits\n    ES: /^[A-Z0-9]{2}([A-Z0-9]?)\\d{6}$/,\n    // SPAIN\n    FI: /^[A-Z]{2}\\d{7}$/,\n    // FINLAND\n    FR: /^\\d{2}[A-Z]{2}\\d{5}$/,\n    // FRANCE\n    GB: /^\\d{9}$/,\n    // UNITED KINGDOM\n    GR: /^[A-Z]{2}\\d{7}$/,\n    // GREECE\n    HR: /^\\d{9}$/,\n    // CROATIA\n    HU: /^[A-Z]{2}(\\d{6}|\\d{7})$/,\n    // HUNGARY\n    IE: /^[A-Z0-9]{2}\\d{7}$/,\n    // IRELAND\n    IN: /^[A-Z]{1}-?\\d{7}$/,\n    // INDIA\n    ID: /^[A-C]\\d{7}$/,\n    // INDONESIA\n    IR: /^[A-Z]\\d{8}$/,\n    // IRAN\n    IS: /^(A)\\d{7}$/,\n    // ICELAND\n    IT: /^[A-Z0-9]{2}\\d{7}$/,\n    // ITALY\n    JM: /^[Aa]\\d{7}$/,\n    // JAMAICA\n    JP: /^[A-Z]{2}\\d{7}$/,\n    // JAPAN\n    KR: /^[MS]\\d{8}$/,\n    // SOUTH KOREA, REPUBLIC OF KOREA, [S=PS Passports, M=PM Passports]\n    KZ: /^[a-zA-Z]\\d{7}$/,\n    // KAZAKHSTAN\n    LI: /^[a-zA-Z]\\d{5}$/,\n    // LIECHTENSTEIN\n    LT: /^[A-Z0-9]{8}$/,\n    // LITHUANIA\n    LU: /^[A-Z0-9]{8}$/,\n    // LUXEMBURG\n    LV: /^[A-Z0-9]{2}\\d{7}$/,\n    // LATVIA\n    LY: /^[A-Z0-9]{8}$/,\n    // LIBYA\n    MT: /^\\d{7}$/,\n    // MALTA\n    MZ: /^([A-Z]{2}\\d{7})|(\\d{2}[A-Z]{2}\\d{5})$/,\n    // MOZAMBIQUE\n    MY: /^[AHK]\\d{8}$/,\n    // MALAYSIA\n    MX: /^\\d{10,11}$/,\n    // MEXICO\n    NL: /^[A-Z]{2}[A-Z0-9]{6}\\d$/,\n    // NETHERLANDS\n    NZ: /^([Ll]([Aa]|[Dd]|[Ff]|[Hh])|[Ee]([Aa]|[Pp])|[Nn])\\d{6}$/,\n    // NEW ZEALAND\n    PH: /^([A-Z](\\d{6}|\\d{7}[A-Z]))|([A-Z]{2}(\\d{6}|\\d{7}))$/,\n    // PHILIPPINES\n    PK: /^[A-Z]{2}\\d{7}$/,\n    // PAKISTAN\n    PL: /^[A-Z]{2}\\d{7}$/,\n    // POLAND\n    PT: /^[A-Z]\\d{6}$/,\n    // PORTUGAL\n    RO: /^\\d{8,9}$/,\n    // ROMANIA\n    RU: /^\\d{9}$/,\n    // RUSSIAN FEDERATION\n    SE: /^\\d{8}$/,\n    // SWEDEN\n    SL: /^(P)[A-Z]\\d{7}$/,\n    // SLOVENIA\n    SK: /^[0-9A-Z]\\d{7}$/,\n    // SLOVAKIA\n    TH: /^[A-Z]{1,2}\\d{6,7}$/,\n    // THAILAND\n    TR: /^[A-Z]\\d{8}$/,\n    // TURKEY\n    UA: /^[A-Z]{2}\\d{6}$/,\n    // UKRAINE\n    US: /^\\d{9}$/ // UNITED STATES\n  };\n  /**\n   * Check if str is a valid passport number\n   * relative to provided ISO Country Code.\n   *\n   * @param {string} str\n   * @param {string} countryCode\n   * @return {boolean}\n   */\n\n  function isPassportNumber(str, countryCode) {\n    (0, _assertString.default)(str);\n    /** Remove All Whitespaces, Convert to UPPERCASE */\n\n    var normalizedStr = str.replace(/\\s/g, '').toUpperCase();\n    return countryCode.toUpperCase() in passportRegexByCountryCode && passportRegexByCountryCode[countryCode].test(normalizedStr);\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(isPassportNumber, isPassportNumber.exports);\nvar isPassportNumberExports = isPassportNumber.exports;\nvar isPort = {\n  exports: {}\n};\nvar isInt$1 = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isInt;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  var int = /^(?:[-+]?(?:0|[1-9][0-9]*))$/;\n  var intLeadingZeroes = /^[-+]?[0-9]+$/;\n  function isInt(str, options) {\n    (0, _assertString.default)(str);\n    options = options || {}; // Get the regex to use for testing, based on whether\n    // leading zeroes are allowed or not.\n\n    var regex = options.hasOwnProperty('allow_leading_zeroes') && !options.allow_leading_zeroes ? int : intLeadingZeroes; // Check min/max/lt/gt\n\n    var minCheckPassed = !options.hasOwnProperty('min') || str >= options.min;\n    var maxCheckPassed = !options.hasOwnProperty('max') || str <= options.max;\n    var ltCheckPassed = !options.hasOwnProperty('lt') || str < options.lt;\n    var gtCheckPassed = !options.hasOwnProperty('gt') || str > options.gt;\n    return regex.test(str) && minCheckPassed && maxCheckPassed && ltCheckPassed && gtCheckPassed;\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(isInt$1, isInt$1.exports);\nvar isIntExports = isInt$1.exports;\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isPort;\n  var _isInt = _interopRequireDefault(isIntExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  function isPort(str) {\n    return (0, _isInt.default)(str, {\n      min: 0,\n      max: 65535\n    });\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(isPort, isPort.exports);\nvar isPortExports = isPort.exports;\nvar isLowercase = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isLowercase;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  function isLowercase(str) {\n    (0, _assertString.default)(str);\n    return str === str.toLowerCase();\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(isLowercase, isLowercase.exports);\nvar isLowercaseExports = isLowercase.exports;\nvar isUppercase = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isUppercase;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  function isUppercase(str) {\n    (0, _assertString.default)(str);\n    return str === str.toUpperCase();\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(isUppercase, isUppercase.exports);\nvar isUppercaseExports = isUppercase.exports;\nvar isIMEI = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isIMEI;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  var imeiRegexWithoutHypens = /^[0-9]{15}$/;\n  var imeiRegexWithHypens = /^\\d{2}-\\d{6}-\\d{6}-\\d{1}$/;\n  function isIMEI(str, options) {\n    (0, _assertString.default)(str);\n    options = options || {}; // default regex for checking imei is the one without hyphens\n\n    var imeiRegex = imeiRegexWithoutHypens;\n    if (options.allow_hyphens) {\n      imeiRegex = imeiRegexWithHypens;\n    }\n    if (!imeiRegex.test(str)) {\n      return false;\n    }\n    str = str.replace(/-/g, '');\n    var sum = 0,\n      mul = 2,\n      l = 14;\n    for (var i = 0; i < l; i++) {\n      var digit = str.substring(l - i - 1, l - i);\n      var tp = parseInt(digit, 10) * mul;\n      if (tp >= 10) {\n        sum += tp % 10 + 1;\n      } else {\n        sum += tp;\n      }\n      if (mul === 1) {\n        mul += 1;\n      } else {\n        mul -= 1;\n      }\n    }\n    var chk = (10 - sum % 10) % 10;\n    if (chk !== parseInt(str.substring(14, 15), 10)) {\n      return false;\n    }\n    return true;\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(isIMEI, isIMEI.exports);\nvar isIMEIExports = isIMEI.exports;\nvar isAscii = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isAscii;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  /* eslint-disable no-control-regex */\n  var ascii = /^[\\x00-\\x7F]+$/;\n  /* eslint-enable no-control-regex */\n\n  function isAscii(str) {\n    (0, _assertString.default)(str);\n    return ascii.test(str);\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(isAscii, isAscii.exports);\nvar isAsciiExports = isAscii.exports;\nvar isFullWidth$1 = {};\nObject.defineProperty(isFullWidth$1, \"__esModule\", {\n  value: true\n});\nisFullWidth$1.default = isFullWidth;\nisFullWidth$1.fullWidth = void 0;\nvar _assertString$8 = _interopRequireDefault$8(assertStringExports);\nfunction _interopRequireDefault$8(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar fullWidth = /[^\\u0020-\\u007E\\uFF61-\\uFF9F\\uFFA0-\\uFFDC\\uFFE8-\\uFFEE0-9a-zA-Z]/;\nisFullWidth$1.fullWidth = fullWidth;\nfunction isFullWidth(str) {\n  (0, _assertString$8.default)(str);\n  return fullWidth.test(str);\n}\nvar isHalfWidth$1 = {};\nObject.defineProperty(isHalfWidth$1, \"__esModule\", {\n  value: true\n});\nisHalfWidth$1.default = isHalfWidth;\nisHalfWidth$1.halfWidth = void 0;\nvar _assertString$7 = _interopRequireDefault$7(assertStringExports);\nfunction _interopRequireDefault$7(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar halfWidth = /[\\u0020-\\u007E\\uFF61-\\uFF9F\\uFFA0-\\uFFDC\\uFFE8-\\uFFEE0-9a-zA-Z]/;\nisHalfWidth$1.halfWidth = halfWidth;\nfunction isHalfWidth(str) {\n  (0, _assertString$7.default)(str);\n  return halfWidth.test(str);\n}\nvar isVariableWidth = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isVariableWidth;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  var _isFullWidth = isFullWidth$1;\n  var _isHalfWidth = isHalfWidth$1;\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  function isVariableWidth(str) {\n    (0, _assertString.default)(str);\n    return _isFullWidth.fullWidth.test(str) && _isHalfWidth.halfWidth.test(str);\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(isVariableWidth, isVariableWidth.exports);\nvar isVariableWidthExports = isVariableWidth.exports;\nvar isMultibyte = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isMultibyte;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  /* eslint-disable no-control-regex */\n  var multibyte = /[^\\x00-\\x7F]/;\n  /* eslint-enable no-control-regex */\n\n  function isMultibyte(str) {\n    (0, _assertString.default)(str);\n    return multibyte.test(str);\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(isMultibyte, isMultibyte.exports);\nvar isMultibyteExports = isMultibyte.exports;\nvar isSemVer = {\n  exports: {}\n};\nvar multilineRegex = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = multilineRegexp;\n\n  /**\n   * Build RegExp object from an array\n   * of multiple/multi-line regexp parts\n   *\n   * @param {string[]} parts\n   * @param {string} flags\n   * @return {object} - RegExp object\n   */\n  function multilineRegexp(parts, flags) {\n    var regexpAsStringLiteral = parts.join('');\n    return new RegExp(regexpAsStringLiteral, flags);\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(multilineRegex, multilineRegex.exports);\nvar multilineRegexExports = multilineRegex.exports;\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isSemVer;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  var _multilineRegex = _interopRequireDefault(multilineRegexExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  /**\n   * Regular Expression to match\n   * semantic versioning (SemVer)\n   * built from multi-line, multi-parts regexp\n   * Reference: https://semver.org/\n   */\n  var semanticVersioningRegex = (0, _multilineRegex.default)(['^(0|[1-9]\\\\d*)\\\\.(0|[1-9]\\\\d*)\\\\.(0|[1-9]\\\\d*)', '(?:-((?:0|[1-9]\\\\d*|\\\\d*[a-z-][0-9a-z-]*)(?:\\\\.(?:0|[1-9]\\\\d*|\\\\d*[a-z-][0-9a-z-]*))*))', '?(?:\\\\+([0-9a-z-]+(?:\\\\.[0-9a-z-]+)*))?$'], 'i');\n  function isSemVer(str) {\n    (0, _assertString.default)(str);\n    return semanticVersioningRegex.test(str);\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(isSemVer, isSemVer.exports);\nvar isSemVerExports = isSemVer.exports;\nvar isSurrogatePair = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isSurrogatePair;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  var surrogatePair = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/;\n  function isSurrogatePair(str) {\n    (0, _assertString.default)(str);\n    return surrogatePair.test(str);\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(isSurrogatePair, isSurrogatePair.exports);\nvar isSurrogatePairExports = isSurrogatePair.exports;\nvar isDecimal = {\n  exports: {}\n};\nvar includes = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var includes = function includes(arr, val) {\n    return arr.some(function (arrVal) {\n      return val === arrVal;\n    });\n  };\n  var _default = includes;\n  exports.default = _default;\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(includes, includes.exports);\nvar includesExports = includes.exports;\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isDecimal;\n  var _merge = _interopRequireDefault(mergeExports);\n  var _assertString = _interopRequireDefault(assertStringExports);\n  var _includes = _interopRequireDefault(includesExports);\n  var _alpha = alpha$1;\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  function decimalRegExp(options) {\n    var regExp = new RegExp(\"^[-+]?([0-9]+)?(\\\\\".concat(_alpha.decimal[options.locale], \"[0-9]{\").concat(options.decimal_digits, \"})\").concat(options.force_decimal ? '' : '?', \"$\"));\n    return regExp;\n  }\n  var default_decimal_options = {\n    force_decimal: false,\n    decimal_digits: '1,',\n    locale: 'en-US'\n  };\n  var blacklist = ['', '-', '+'];\n  function isDecimal(str, options) {\n    (0, _assertString.default)(str);\n    options = (0, _merge.default)(options, default_decimal_options);\n    if (options.locale in _alpha.decimal) {\n      return !(0, _includes.default)(blacklist, str.replace(/ /g, '')) && decimalRegExp(options).test(str);\n    }\n    throw new Error(\"Invalid locale '\".concat(options.locale, \"'\"));\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(isDecimal, isDecimal.exports);\nvar isDecimalExports = isDecimal.exports;\nvar isHexadecimal = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isHexadecimal;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  var hexadecimal = /^(0x|0h)?[0-9A-F]+$/i;\n  function isHexadecimal(str) {\n    (0, _assertString.default)(str);\n    return hexadecimal.test(str);\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(isHexadecimal, isHexadecimal.exports);\nvar isHexadecimalExports = isHexadecimal.exports;\nvar isOctal = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isOctal;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  var octal = /^(0o)?[0-7]+$/i;\n  function isOctal(str) {\n    (0, _assertString.default)(str);\n    return octal.test(str);\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(isOctal, isOctal.exports);\nvar isOctalExports = isOctal.exports;\nvar isDivisibleBy = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isDivisibleBy;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  var _toFloat = _interopRequireDefault(toFloatExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  function isDivisibleBy(str, num) {\n    (0, _assertString.default)(str);\n    return (0, _toFloat.default)(str) % parseInt(num, 10) === 0;\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(isDivisibleBy, isDivisibleBy.exports);\nvar isDivisibleByExports = isDivisibleBy.exports;\nvar isHexColor = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isHexColor;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  var hexcolor = /^#?([0-9A-F]{3}|[0-9A-F]{4}|[0-9A-F]{6}|[0-9A-F]{8})$/i;\n  function isHexColor(str) {\n    (0, _assertString.default)(str);\n    return hexcolor.test(str);\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(isHexColor, isHexColor.exports);\nvar isHexColorExports = isHexColor.exports;\nvar isRgbColor = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isRgbColor;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  var rgbColor = /^rgb\\((([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]),){2}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\)$/;\n  var rgbaColor = /^rgba\\((([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]),){3}(0?\\.\\d|1(\\.0)?|0(\\.0)?)\\)$/;\n  var rgbColorPercent = /^rgb\\((([0-9]%|[1-9][0-9]%|100%),){2}([0-9]%|[1-9][0-9]%|100%)\\)$/;\n  var rgbaColorPercent = /^rgba\\((([0-9]%|[1-9][0-9]%|100%),){3}(0?\\.\\d|1(\\.0)?|0(\\.0)?)\\)$/;\n  function isRgbColor(str) {\n    var includePercentValues = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    (0, _assertString.default)(str);\n    if (!includePercentValues) {\n      return rgbColor.test(str) || rgbaColor.test(str);\n    }\n    return rgbColor.test(str) || rgbaColor.test(str) || rgbColorPercent.test(str) || rgbaColorPercent.test(str);\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(isRgbColor, isRgbColor.exports);\nvar isRgbColorExports = isRgbColor.exports;\nvar isHSL = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isHSL;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  var hslComma = /^hsla?\\(((\\+|\\-)?([0-9]+(\\.[0-9]+)?(e(\\+|\\-)?[0-9]+)?|\\.[0-9]+(e(\\+|\\-)?[0-9]+)?))(deg|grad|rad|turn)?(,(\\+|\\-)?([0-9]+(\\.[0-9]+)?(e(\\+|\\-)?[0-9]+)?|\\.[0-9]+(e(\\+|\\-)?[0-9]+)?)%){2}(,((\\+|\\-)?([0-9]+(\\.[0-9]+)?(e(\\+|\\-)?[0-9]+)?|\\.[0-9]+(e(\\+|\\-)?[0-9]+)?)%?))?\\)$/i;\n  var hslSpace = /^hsla?\\(((\\+|\\-)?([0-9]+(\\.[0-9]+)?(e(\\+|\\-)?[0-9]+)?|\\.[0-9]+(e(\\+|\\-)?[0-9]+)?))(deg|grad|rad|turn)?(\\s(\\+|\\-)?([0-9]+(\\.[0-9]+)?(e(\\+|\\-)?[0-9]+)?|\\.[0-9]+(e(\\+|\\-)?[0-9]+)?)%){2}\\s?(\\/\\s((\\+|\\-)?([0-9]+(\\.[0-9]+)?(e(\\+|\\-)?[0-9]+)?|\\.[0-9]+(e(\\+|\\-)?[0-9]+)?)%?)\\s?)?\\)$/i;\n  function isHSL(str) {\n    (0, _assertString.default)(str); // Strip duplicate spaces before calling the validation regex (See  #1598 for more info)\n\n    var strippedStr = str.replace(/\\s+/g, ' ').replace(/\\s?(hsla?\\(|\\)|,)\\s?/ig, '$1');\n    if (strippedStr.indexOf(',') !== -1) {\n      return hslComma.test(strippedStr);\n    }\n    return hslSpace.test(strippedStr);\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(isHSL, isHSL.exports);\nvar isHSLExports = isHSL.exports;\nvar isISRC = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isISRC;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  // see http://isrc.ifpi.org/en/isrc-standard/code-syntax\n  var isrc = /^[A-Z]{2}[0-9A-Z]{3}\\d{2}\\d{5}$/;\n  function isISRC(str) {\n    (0, _assertString.default)(str);\n    return isrc.test(str);\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(isISRC, isISRC.exports);\nvar isISRCExports = isISRC.exports;\nvar isIBAN$1 = {};\nObject.defineProperty(isIBAN$1, \"__esModule\", {\n  value: true\n});\nisIBAN$1.default = isIBAN;\nisIBAN$1.locales = void 0;\nvar _assertString$6 = _interopRequireDefault$6(assertStringExports);\nfunction _interopRequireDefault$6(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\n/**\n * List of country codes with\n * corresponding IBAN regular expression\n * Reference: https://en.wikipedia.org/wiki/International_Bank_Account_Number\n */\nvar ibanRegexThroughCountryCode = {\n  AD: /^(AD[0-9]{2})\\d{8}[A-Z0-9]{12}$/,\n  AE: /^(AE[0-9]{2})\\d{3}\\d{16}$/,\n  AL: /^(AL[0-9]{2})\\d{8}[A-Z0-9]{16}$/,\n  AT: /^(AT[0-9]{2})\\d{16}$/,\n  AZ: /^(AZ[0-9]{2})[A-Z0-9]{4}\\d{20}$/,\n  BA: /^(BA[0-9]{2})\\d{16}$/,\n  BE: /^(BE[0-9]{2})\\d{12}$/,\n  BG: /^(BG[0-9]{2})[A-Z]{4}\\d{6}[A-Z0-9]{8}$/,\n  BH: /^(BH[0-9]{2})[A-Z]{4}[A-Z0-9]{14}$/,\n  BR: /^(BR[0-9]{2})\\d{23}[A-Z]{1}[A-Z0-9]{1}$/,\n  BY: /^(BY[0-9]{2})[A-Z0-9]{4}\\d{20}$/,\n  CH: /^(CH[0-9]{2})\\d{5}[A-Z0-9]{12}$/,\n  CR: /^(CR[0-9]{2})\\d{18}$/,\n  CY: /^(CY[0-9]{2})\\d{8}[A-Z0-9]{16}$/,\n  CZ: /^(CZ[0-9]{2})\\d{20}$/,\n  DE: /^(DE[0-9]{2})\\d{18}$/,\n  DK: /^(DK[0-9]{2})\\d{14}$/,\n  DO: /^(DO[0-9]{2})[A-Z]{4}\\d{20}$/,\n  EE: /^(EE[0-9]{2})\\d{16}$/,\n  EG: /^(EG[0-9]{2})\\d{25}$/,\n  ES: /^(ES[0-9]{2})\\d{20}$/,\n  FI: /^(FI[0-9]{2})\\d{14}$/,\n  FO: /^(FO[0-9]{2})\\d{14}$/,\n  FR: /^(FR[0-9]{2})\\d{10}[A-Z0-9]{11}\\d{2}$/,\n  GB: /^(GB[0-9]{2})[A-Z]{4}\\d{14}$/,\n  GE: /^(GE[0-9]{2})[A-Z0-9]{2}\\d{16}$/,\n  GI: /^(GI[0-9]{2})[A-Z]{4}[A-Z0-9]{15}$/,\n  GL: /^(GL[0-9]{2})\\d{14}$/,\n  GR: /^(GR[0-9]{2})\\d{7}[A-Z0-9]{16}$/,\n  GT: /^(GT[0-9]{2})[A-Z0-9]{4}[A-Z0-9]{20}$/,\n  HR: /^(HR[0-9]{2})\\d{17}$/,\n  HU: /^(HU[0-9]{2})\\d{24}$/,\n  IE: /^(IE[0-9]{2})[A-Z0-9]{4}\\d{14}$/,\n  IL: /^(IL[0-9]{2})\\d{19}$/,\n  IQ: /^(IQ[0-9]{2})[A-Z]{4}\\d{15}$/,\n  IR: /^(IR[0-9]{2})0\\d{2}0\\d{18}$/,\n  IS: /^(IS[0-9]{2})\\d{22}$/,\n  IT: /^(IT[0-9]{2})[A-Z]{1}\\d{10}[A-Z0-9]{12}$/,\n  JO: /^(JO[0-9]{2})[A-Z]{4}\\d{22}$/,\n  KW: /^(KW[0-9]{2})[A-Z]{4}[A-Z0-9]{22}$/,\n  KZ: /^(KZ[0-9]{2})\\d{3}[A-Z0-9]{13}$/,\n  LB: /^(LB[0-9]{2})\\d{4}[A-Z0-9]{20}$/,\n  LC: /^(LC[0-9]{2})[A-Z]{4}[A-Z0-9]{24}$/,\n  LI: /^(LI[0-9]{2})\\d{5}[A-Z0-9]{12}$/,\n  LT: /^(LT[0-9]{2})\\d{16}$/,\n  LU: /^(LU[0-9]{2})\\d{3}[A-Z0-9]{13}$/,\n  LV: /^(LV[0-9]{2})[A-Z]{4}[A-Z0-9]{13}$/,\n  MA: /^(MA[0-9]{26})$/,\n  MC: /^(MC[0-9]{2})\\d{10}[A-Z0-9]{11}\\d{2}$/,\n  MD: /^(MD[0-9]{2})[A-Z0-9]{20}$/,\n  ME: /^(ME[0-9]{2})\\d{18}$/,\n  MK: /^(MK[0-9]{2})\\d{3}[A-Z0-9]{10}\\d{2}$/,\n  MR: /^(MR[0-9]{2})\\d{23}$/,\n  MT: /^(MT[0-9]{2})[A-Z]{4}\\d{5}[A-Z0-9]{18}$/,\n  MU: /^(MU[0-9]{2})[A-Z]{4}\\d{19}[A-Z]{3}$/,\n  MZ: /^(MZ[0-9]{2})\\d{21}$/,\n  NL: /^(NL[0-9]{2})[A-Z]{4}\\d{10}$/,\n  NO: /^(NO[0-9]{2})\\d{11}$/,\n  PK: /^(PK[0-9]{2})[A-Z0-9]{4}\\d{16}$/,\n  PL: /^(PL[0-9]{2})\\d{24}$/,\n  PS: /^(PS[0-9]{2})[A-Z0-9]{4}\\d{21}$/,\n  PT: /^(PT[0-9]{2})\\d{21}$/,\n  QA: /^(QA[0-9]{2})[A-Z]{4}[A-Z0-9]{21}$/,\n  RO: /^(RO[0-9]{2})[A-Z]{4}[A-Z0-9]{16}$/,\n  RS: /^(RS[0-9]{2})\\d{18}$/,\n  SA: /^(SA[0-9]{2})\\d{2}[A-Z0-9]{18}$/,\n  SC: /^(SC[0-9]{2})[A-Z]{4}\\d{20}[A-Z]{3}$/,\n  SE: /^(SE[0-9]{2})\\d{20}$/,\n  SI: /^(SI[0-9]{2})\\d{15}$/,\n  SK: /^(SK[0-9]{2})\\d{20}$/,\n  SM: /^(SM[0-9]{2})[A-Z]{1}\\d{10}[A-Z0-9]{12}$/,\n  SV: /^(SV[0-9]{2})[A-Z0-9]{4}\\d{20}$/,\n  TL: /^(TL[0-9]{2})\\d{19}$/,\n  TN: /^(TN[0-9]{2})\\d{20}$/,\n  TR: /^(TR[0-9]{2})\\d{5}[A-Z0-9]{17}$/,\n  UA: /^(UA[0-9]{2})\\d{6}[A-Z0-9]{19}$/,\n  VA: /^(VA[0-9]{2})\\d{18}$/,\n  VG: /^(VG[0-9]{2})[A-Z0-9]{4}\\d{16}$/,\n  XK: /^(XK[0-9]{2})\\d{16}$/\n};\n/**\n * Check if the country codes passed are valid using the\n * ibanRegexThroughCountryCode as a reference\n *\n * @param {array} countryCodeArray\n * @return {boolean}\n */\n\nfunction hasOnlyValidCountryCodes(countryCodeArray) {\n  var countryCodeArrayFilteredWithObjectIbanCode = countryCodeArray.filter(function (countryCode) {\n    return !(countryCode in ibanRegexThroughCountryCode);\n  });\n  if (countryCodeArrayFilteredWithObjectIbanCode.length > 0) {\n    return false;\n  }\n  return true;\n}\n/**\n * Check whether string has correct universal IBAN format\n * The IBAN consists of up to 34 alphanumeric characters, as follows:\n * Country Code using ISO 3166-1 alpha-2, two letters\n * check digits, two digits and\n * Basic Bank Account Number (BBAN), up to 30 alphanumeric characters.\n * NOTE: Permitted IBAN characters are: digits [0-9] and the 26 latin alphabetic [A-Z]\n *\n * @param {string} str - string under validation\n * @param {object} options - object to pass the countries to be either whitelisted or blacklisted\n * @return {boolean}\n */\n\nfunction hasValidIbanFormat(str, options) {\n  // Strip white spaces and hyphens\n  var strippedStr = str.replace(/[\\s\\-]+/gi, '').toUpperCase();\n  var isoCountryCode = strippedStr.slice(0, 2).toUpperCase();\n  var isoCountryCodeInIbanRegexCodeObject = (isoCountryCode in ibanRegexThroughCountryCode);\n  if (options.whitelist) {\n    if (!hasOnlyValidCountryCodes(options.whitelist)) {\n      return false;\n    }\n    var isoCountryCodeInWhiteList = options.whitelist.includes(isoCountryCode);\n    if (!isoCountryCodeInWhiteList) {\n      return false;\n    }\n  }\n  if (options.blacklist) {\n    var isoCountryCodeInBlackList = options.blacklist.includes(isoCountryCode);\n    if (isoCountryCodeInBlackList) {\n      return false;\n    }\n  }\n  return isoCountryCodeInIbanRegexCodeObject && ibanRegexThroughCountryCode[isoCountryCode].test(strippedStr);\n}\n/**\n   * Check whether string has valid IBAN Checksum\n   * by performing basic mod-97 operation and\n   * the remainder should equal 1\n   * -- Start by rearranging the IBAN by moving the four initial characters to the end of the string\n   * -- Replace each letter in the string with two digits, A -> 10, B = 11, Z = 35\n   * -- Interpret the string as a decimal integer and\n   * -- compute the remainder on division by 97 (mod 97)\n   * Reference: https://en.wikipedia.org/wiki/International_Bank_Account_Number\n   *\n   * @param {string} str\n   * @return {boolean}\n   */\n\nfunction hasValidIbanChecksum(str) {\n  var strippedStr = str.replace(/[^A-Z0-9]+/gi, '').toUpperCase(); // Keep only digits and A-Z latin alphabetic\n\n  var rearranged = strippedStr.slice(4) + strippedStr.slice(0, 4);\n  var alphaCapsReplacedWithDigits = rearranged.replace(/[A-Z]/g, function (char) {\n    return char.charCodeAt(0) - 55;\n  });\n  var remainder = alphaCapsReplacedWithDigits.match(/\\d{1,7}/g).reduce(function (acc, value) {\n    return Number(acc + value) % 97;\n  }, '');\n  return remainder === 1;\n}\nfunction isIBAN(str) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  (0, _assertString$6.default)(str);\n  return hasValidIbanFormat(str, options) && hasValidIbanChecksum(str);\n}\nvar locales$2 = Object.keys(ibanRegexThroughCountryCode);\nisIBAN$1.locales = locales$2;\nvar isBIC = {\n  exports: {}\n};\nvar isISO31661Alpha2$1 = {};\nObject.defineProperty(isISO31661Alpha2$1, \"__esModule\", {\n  value: true\n});\nisISO31661Alpha2$1.default = isISO31661Alpha2;\nisISO31661Alpha2$1.CountryCodes = void 0;\nvar _assertString$5 = _interopRequireDefault$5(assertStringExports);\nfunction _interopRequireDefault$5(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\n// from https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2\nvar validISO31661Alpha2CountriesCodes = new Setnfunction isISO31661Alpha2(str) {\n  (0, _assertString$5.default)(str);\n  return validISO31661Alpha2CountriesCodes.has(str.toUpperCase());\n}\nvar CountryCodes = validISO31661Alpha2CountriesCodes;\nisISO31661Alpha2$1.CountryCodes = CountryCodes;\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isBIC;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  var _isISO31661Alpha = isISO31661Alpha2$1;\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  // https://en.wikipedia.org/wiki/ISO_9362\n  var isBICReg = /^[A-Za-z]{6}[A-Za-z0-9]{2}([A-Za-z0-9]{3})?$/;\n  function isBIC(str) {\n    (0, _assertString.default)(str); // toUpperCase() should be removed when a new major version goes out that changes\n    // the regex to [A-Z] (per the spec).\n\n    var countryCode = str.slice(4, 6).toUpperCase();\n    if (!_isISO31661Alpha.CountryCodes.has(countryCode) && countryCode !== 'XK') {\n      return false;\n    }\n    return isBICReg.test(str);\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(isBIC, isBIC.exports);\nvar isBICExports = isBIC.exports;\nvar isMD5 = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isMD5;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  var md5 = /^[a-f0-9]{32}$/;\n  function isMD5(str) {\n    (0, _assertString.default)(str);\n    return md5.test(str);\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(isMD5, isMD5.exports);\nvar isMD5Exports = isMD5.exports;\nvar isHash = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isHash;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  var lengths = {\n    md5: 32,\n    md4: 32,\n    sha1: 40,\n    sha256: 64,\n    sha384: 96,\n    sha512: 128,\n    ripemd128: 32,\n    ripemd160: 40,\n    tiger128: 32,\n    tiger160: 40,\n    tiger192: 48,\n    crc32: 8,\n    crc32b: 8\n  };\n  function isHash(str, algorithm) {\n    (0, _assertString.default)(str);\n    var hash = new RegExp(\"^[a-fA-F0-9]{\".concat(lengths[algorithm], \"}$\"));\n    return hash.test(str);\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(isHash, isHash.exports);\nvar isHashExports = isHash.exports;\nvar isJWT = {\n  exports: {}\n};\nvar isBase64 = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isBase64;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  var _merge = _interopRequireDefault(mergeExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  var notBase64 = /[^A-Z0-9+\\/=]/i;\n  var urlSafeBase64 = /^[A-Z0-9_\\-]*$/i;\n  var defaultBase64Options = {\n    urlSafe: false\n  };\n  function isBase64(str, options) {\n    (0, _assertString.default)(str);\n    options = (0, _merge.default)(options, defaultBase64Options);\n    var len = str.length;\n    if (options.urlSafe) {\n      return urlSafeBase64.test(str);\n    }\n    if (len % 4 !== 0 || notBase64.test(str)) {\n      return false;\n    }\n    var firstPaddingChar = str.indexOf('=');\n    return firstPaddingChar === -1 || firstPaddingChar === len - 1 || firstPaddingChar === len - 2 && str[len - 1] === '=';\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(isBase64, isBase64.exports);\nvar isBase64Exports = isBase64.exports;\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isJWT;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  var _isBase = _interopRequireDefault(isBase64Exports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  function isJWT(str) {\n    (0, _assertString.default)(str);\n    var dotSplit = str.split('.');\n    var len = dotSplit.length;\n    if (len !== 3) {\n      return false;\n    }\n    return dotSplit.reduce(function (acc, currElem) {\n      return acc && (0, _isBase.default)(currElem, {\n        urlSafe: true\n      });\n    }, true);\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(isJWT, isJWT.exports);\nvar isJWTExports = isJWT.exports;\nvar isJSON = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isJSON;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  var _merge = _interopRequireDefault(mergeExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  function _typeof(obj) {\n    \"@babel/helpers - typeof\";\n\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function _typeof(obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function _typeof(obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n    return _typeof(obj);\n  }\n  var default_json_options = {\n    allow_primitives: false\n  };\n  function isJSON(str, options) {\n    (0, _assertString.default)(str);\n    try {\n      options = (0, _merge.default)(options, default_json_options);\n      var primitives = [];\n      if (options.allow_primitives) {\n        primitives = [null, false, true];\n      }\n      var obj = JSON.parse(str);\n      return primitives.includes(obj) || !!obj && _typeof(obj) === 'object';\n    } catch (e) {\n      /* ignore */\n    }\n    return false;\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(isJSON, isJSON.exports);\nvar isJSONExports = isJSON.exports;\nvar isEmpty = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isEmpty;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  var _merge = _interopRequireDefault(mergeExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  var default_is_empty_options = {\n    ignore_whitespace: false\n  };\n  function isEmpty(str, options) {\n    (0, _assertString.default)(str);\n    options = (0, _merge.default)(options, default_is_empty_options);\n    return (options.ignore_whitespace ? str.trim().length : str.length) === 0;\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(isEmpty, isEmpty.exports);\nvar isEmptyExports = isEmpty.exports;\nvar isLength = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isLength;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  function _typeof(obj) {\n    \"@babel/helpers - typeof\";\n\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function _typeof(obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function _typeof(obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n    return _typeof(obj);\n  }\n\n  /* eslint-disable prefer-rest-params */\n  function isLength(str, options) {\n    (0, _assertString.default)(str);\n    var min;\n    var max;\n    if (_typeof(options) === 'object') {\n      min = options.min || 0;\n      max = options.max;\n    } else {\n      // backwards compatibility: isLength(str, min [, max])\n      min = arguments[1] || 0;\n      max = arguments[2];\n    }\n    var presentationSequences = str.match(/(\\uFE0F|\\uFE0E)/g) || [];\n    var surrogatePairs = str.match(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g) || [];\n    var len = str.length - presentationSequences.length - surrogatePairs.length;\n    return len >= min && (typeof max === 'undefined' || len <= max);\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(isLength, isLength.exports);\nvar isLengthExports = isLength.exports;\nvar isUUID = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isUUID;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  var uuid = {\n    1: /^[0-9A-F]{8}-[0-9A-F]{4}-1[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i,\n    2: /^[0-9A-F]{8}-[0-9A-F]{4}-2[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i,\n    3: /^[0-9A-F]{8}-[0-9A-F]{4}-3[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i,\n    4: /^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,\n    5: /^[0-9A-F]{8}-[0-9A-F]{4}-5[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,\n    all: /^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i\n  };\n  function isUUID(str, version) {\n    (0, _assertString.default)(str);\n    var pattern = uuid[![undefined, null].includes(version) ? version : 'all'];\n    return !!pattern && pattern.test(str);\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(isUUID, isUUID.exports);\nvar isUUIDExports = isUUID.exports;\nvar isMongoId = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isMongoId;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  var _isHexadecimal = _interopRequireDefault(isHexadecimalExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  function isMongoId(str) {\n    (0, _assertString.default)(str);\n    return (0, _isHexadecimal.default)(str) && str.length === 24;\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(isMongoId, isMongoId.exports);\nvar isMongoIdExports = isMongoId.exports;\nvar isAfter = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isAfter;\n  var _toDate = _interopRequireDefault(toDateExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  function isAfter(date, options) {\n    // For backwards compatibility:\n    // isAfter(str [, date]), i.e. `options` could be used as argument for the legacy `date`\n    var comparisonDate = (options === null || options === void 0 ? void 0 : options.comparisonDate) || options || Date().toString();\n    var comparison = (0, _toDate.default)(comparisonDate);\n    var original = (0, _toDate.default)(date);\n    return !!(original && comparison && original > comparison);\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(isAfter, isAfter.exports);\nvar isAfterExports = isAfter.exports;\nvar isBefore = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isBefore;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  var _toDate = _interopRequireDefault(toDateExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  function isBefore(str) {\n    var date = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : String(new Date());\n    (0, _assertString.default)(str);\n    var comparison = (0, _toDate.default)(date);\n    var original = (0, _toDate.default)(str);\n    return !!(original && comparison && original < comparison);\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(isBefore, isBefore.exports);\nvar isBeforeExports = isBefore.exports;\nvar isIn = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isIn;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  var _toString = _interopRequireDefault(toStringExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  function _typeof(obj) {\n    \"@babel/helpers - typeof\";\n\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function _typeof(obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function _typeof(obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n    return _typeof(obj);\n  }\n  function isIn(str, options) {\n    (0, _assertString.default)(str);\n    var i;\n    if (Object.prototype.toString.call(options) === '[object Array]') {\n      var array = [];\n      for (i in options) {\n        // https://github.com/gotwarlost/istanbul/blob/master/ignoring-code-for-coverage.md#ignoring-code-for-coverage-purposes\n        // istanbul ignore else\n        if ({}.hasOwnProperty.call(options, i)) {\n          array[i] = (0, _toString.default)(options[i]);\n        }\n      }\n      return array.indexOf(str) >= 0;\n    } else if (_typeof(options) === 'object') {\n      return options.hasOwnProperty(str);\n    } else if (options && typeof options.indexOf === 'function') {\n      return options.indexOf(str) >= 0;\n    }\n    return false;\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(isIn, isIn.exports);\nvar isInExports = isIn.exports;\nvar isLuhnNumber = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isLuhnNumber;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  function isLuhnNumber(str) {\n    (0, _assertString.default)(str);\n    var sanitized = str.replace(/[- ]+/g, '');\n    var sum = 0;\n    var digit;\n    var tmpNum;\n    var shouldDouble;\n    for (var i = sanitized.length - 1; i >= 0; i--) {\n      digit = sanitized.substring(i, i + 1);\n      tmpNum = parseInt(digit, 10);\n      if (shouldDouble) {\n        tmpNum *= 2;\n        if (tmpNum >= 10) {\n          sum += tmpNum % 10 + 1;\n        } else {\n          sum += tmpNum;\n        }\n      } else {\n        sum += tmpNum;\n      }\n      shouldDouble = !shouldDouble;\n    }\n    return !!(sum % 10 === 0 ? sanitized : false);\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(isLuhnNumber, isLuhnNumber.exports);\nvar isLuhnNumberExports = isLuhnNumber.exports;\nvar isCreditCard = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isCreditCard;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  var _isLuhnNumber = _interopRequireDefault(isLuhnNumberExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  var cards = {\n    amex: /^3[47][0-9]{13}$/,\n    dinersclub: /^3(?:0[0-5]|[68][0-9])[0-9]{11}$/,\n    discover: /^6(?:011|5[0-9][0-9])[0-9]{12,15}$/,\n    jcb: /^(?:2131|1800|35\\d{3})\\d{11}$/,\n    mastercard: /^5[1-5][0-9]{2}|(222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}$/,\n    // /^[25][1-7][0-9]{14}$/;\n    unionpay: /^(6[27][0-9]{14}|^(81[0-9]{14,17}))$/,\n    visa: /^(?:4[0-9]{12})(?:[0-9]{3,6})?$/\n  };\n  var allCards = function () {\n    var tmpCardsArray = [];\n    for (var cardProvider in cards) {\n      // istanbul ignore else\n      if (cards.hasOwnProperty(cardProvider)) {\n        tmpCardsArray.push(cards[cardProvider]);\n      }\n    }\n    return tmpCardsArray;\n  }();\n  function isCreditCard(card) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    (0, _assertString.default)(card);\n    var provider = options.provider;\n    var sanitized = card.replace(/[- ]+/g, '');\n    if (provider && provider.toLowerCase() in cards) {\n      // specific provider in the list\n      if (!cards[provider.toLowerCase()].test(sanitized)) {\n        return false;\n      }\n    } else if (provider && !(provider.toLowerCase() in cards)) {\n      /* specific provider not in the list */\n      throw new Error(\"\".concat(provider, \" is not a valid credit card provider.\"));\n    } else if (!allCards.some(function (cardProvider) {\n      return cardProvider.test(sanitized);\n    })) {\n      // no specific provider\n      return false;\n    }\n    return (0, _isLuhnNumber.default)(card);\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(isCreditCard, isCreditCard.exports);\nvar isCreditCardExports = isCreditCard.exports;\nvar isIdentityCard = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isIdentityCard;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  var _isInt = _interopRequireDefault(isIntExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  var validators = {\n    PL: function PL(str) {\n      (0, _assertString.default)(str);\n      var weightOfDigits = {\n        1: 1,\n        2: 3,\n        3: 7,\n        4: 9,\n        5: 1,\n        6: 3,\n        7: 7,\n        8: 9,\n        9: 1,\n        10: 3,\n        11: 0\n      };\n      if (str != null && str.length === 11 && (0, _isInt.default)(str, {\n        allow_leading_zeroes: true\n      })) {\n        var digits = str.split('').slice(0, -1);\n        var sum = digits.reduce(function (acc, digit, index) {\n          return acc + Number(digit) * weightOfDigits[index + 1];\n        }, 0);\n        var modulo = sum % 10;\n        var lastDigit = Number(str.charAt(str.length - 1));\n        if (modulo === 0 && lastDigit === 0 || lastDigit === 10 - modulo) {\n          return true;\n        }\n      }\n      return false;\n    },\n    ES: function ES(str) {\n      (0, _assertString.default)(str);\n      var DNI = /^[0-9X-Z][0-9]{7}[TRWAGMYFPDXBNJZSQVHLCKE]$/;\n      var charsValue = {\n        X: 0,\n        Y: 1,\n        Z: 2\n      };\n      var controlDigits = ['T', 'R', 'W', 'A', 'G', 'M', 'Y', 'F', 'P', 'D', 'X', 'B', 'N', 'J', 'Z', 'S', 'Q', 'V', 'H', 'L', 'C', 'K', 'E']; // sanitize user input\n\n      var sanitized = str.trim().toUpperCase(); // validate the data structure\n\n      if (!DNI.test(sanitized)) {\n        return false;\n      } // validate the control digit\n\n      var number = sanitized.slice(0, -1).replace(/[X,Y,Z]/g, function (char) {\n        return charsValue[char];\n      });\n      return sanitized.endsWith(controlDigits[number % 23]);\n    },\n    FI: function FI(str) {\n      // https://dvv.fi/en/personal-identity-code#:~:text=control%20character%20for%20a-,personal,-identity%20code%20calculated\n      (0, _assertString.default)(str);\n      if (str.length !== 11) {\n        return false;\n      }\n      if (!str.match(/^\\d{6}[\\-A\\+]\\d{3}[0-9ABCDEFHJKLMNPRSTUVWXY]{1}$/)) {\n        return false;\n      }\n      var checkDigits = '0123456789ABCDEFHJKLMNPRSTUVWXY';\n      var idAsNumber = parseInt(str.slice(0, 6), 10) * 1000 + parseInt(str.slice(7, 10), 10);\n      var remainder = idAsNumber % 31;\n      var checkDigit = checkDigits[remainder];\n      return checkDigit === str.slice(10, 11);\n    },\n    IN: function IN(str) {\n      var DNI = /^[1-9]\\d{3}\\s?\\d{4}\\s?\\d{4}$/; // multiplication table\n\n      var d = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9], [1, 2, 3, 4, 0, 6, 7, 8, 9, 5], [2, 3, 4, 0, 1, 7, 8, 9, 5, 6], [3, 4, 0, 1, 2, 8, 9, 5, 6, 7], [4, 0, 1, 2, 3, 9, 5, 6, 7, 8], [5, 9, 8, 7, 6, 0, 4, 3, 2, 1], [6, 5, 9, 8, 7, 1, 0, 4, 3, 2], [7, 6, 5, 9, 8, 2, 1, 0, 4, 3], [8, 7, 6, 5, 9, 3, 2, 1, 0, 4], [9, 8, 7, 6, 5, 4, 3, 2, 1, 0]]; // permutation table\n\n      var p = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9], [1, 5, 7, 6, 2, 8, 3, 0, 9, 4], [5, 8, 0, 3, 7, 9, 6, 1, 4, 2], [8, 9, 1, 6, 0, 4, 3, 5, 2, 7], [9, 4, 5, 3, 1, 2, 6, 8, 7, 0], [4, 2, 8, 6, 5, 7, 3, 9, 0, 1], [2, 7, 9, 3, 8, 0, 6, 4, 1, 5], [7, 0, 4, 6, 9, 1, 3, 2, 5, 8]]; // sanitize user input\n\n      var sanitized = str.trim(); // validate the data structure\n\n      if (!DNI.test(sanitized)) {\n        return false;\n      }\n      var c = 0;\n      var invertedArray = sanitized.replace(/\\s/g, '').split('').map(Number).reverse();\n      invertedArray.forEach(function (val, i) {\n        c = d[c][p[i % 8][val]];\n      });\n      return c === 0;\n    },\n    IR: function IR(str) {\n      if (!str.match(/^\\d{10}$/)) return false;\n      str = \"0000\".concat(str).slice(str.length - 6);\n      if (parseInt(str.slice(3, 9), 10) === 0) return false;\n      var lastNumber = parseInt(str.slice(9, 10), 10);\n      var sum = 0;\n      for (var i = 0; i < 9; i++) {\n        sum += parseInt(str.slice(i, i + 1), 10) * (10 - i);\n      }\n      sum %= 11;\n      return sum < 2 && lastNumber === sum || sum >= 2 && lastNumber === 11 - sum;\n    },\n    IT: function IT(str) {\n      if (str.length !== 9) return false;\n      if (str === 'CA00000AA') return false; // https://it.wikipedia.org/wiki/Carta_d%27identit%C3%A0_elettronica_italiana\n\n      return str.search(/C[A-Z][0-9]{5}[A-Z]{2}/i) > -1;\n    },\n    NO: function NO(str) {\n      var sanitized = str.trim();\n      if (isNaN(Number(sanitized))) return false;\n      if (sanitized.length !== 11) return false;\n      if (sanitized === '00000000000') return false; // https://no.wikipedia.org/wiki/F%C3%B8dselsnummer\n\n      var f = sanitized.split('').map(Number);\n      var k1 = (11 - (3 * f[0] + 7 * f[1] + 6 * f[2] + 1 * f[3] + 8 * f[4] + 9 * f[5] + 4 * f[6] + 5 * f[7] + 2 * f[8]) % 11) % 11;\n      var k2 = (11 - (5 * f[0] + 4 * f[1] + 3 * f[2] + 2 * f[3] + 7 * f[4] + 6 * f[5] + 5 * f[6] + 4 * f[7] + 3 * f[8] + 2 * k1) % 11) % 11;\n      if (k1 !== f[9] || k2 !== f[10]) return false;\n      return true;\n    },\n    TH: function TH(str) {\n      if (!str.match(/^[1-8]\\d{12}$/)) return false; // validate check digit\n\n      var sum = 0;\n      for (var i = 0; i < 12; i++) {\n        sum += parseInt(str[i], 10) * (13 - i);\n      }\n      return str[12] === ((11 - sum % 11) % 10).toString();\n    },\n    LK: function LK(str) {\n      var old_nic = /^[1-9]\\d{8}[vx]$/i;\n      var new_nic = /^[1-9]\\d{11}$/i;\n      if (str.length === 10 && old_nic.test(str)) return true;else if (str.length === 12 && new_nic.test(str)) return true;\n      return false;\n    },\n    'he-IL': function heIL(str) {\n      var DNI = /^\\d{9}$/; // sanitize user input\n\n      var sanitized = str.trim(); // validate the data structure\n\n      if (!DNI.test(sanitized)) {\n        return false;\n      }\n      var id = sanitized;\n      var sum = 0,\n        incNum;\n      for (var i = 0; i < id.length; i++) {\n        incNum = Number(id[i]) * (i % 2 + 1); // Multiply number by 1 or 2\n\n        sum += incNum > 9 ? incNum - 9 : incNum; // Sum the digits up and add to total\n      }\n\n      return sum % 10 === 0;\n    },\n    'ar-LY': function arLY(str) {\n      // Libya National Identity Number NIN is 12 digits, the first digit is either 1 or 2\n      var NIN = /^(1|2)\\d{11}$/; // sanitize user input\n\n      var sanitized = str.trim(); // validate the data structure\n\n      if (!NIN.test(sanitized)) {\n        return false;\n      }\n      return true;\n    },\n    'ar-TN': function arTN(str) {\n      var DNI = /^\\d{8}$/; // sanitize user input\n\n      var sanitized = str.trim(); // validate the data structure\n\n      if (!DNI.test(sanitized)) {\n        return false;\n      }\n      return true;\n    },\n    'zh-CN': function zhCN(str) {\n      var provincesAndCities = ['11',\n      // 北京\n      '12',\n      // 天津\n      '13',\n      // 河北\n      '14',\n      // 山西\n      '15',\n      // 内蒙古\n      '21',\n      // 辽宁\n      '22',\n      // 吉林\n      '23',\n      // 黑龙江\n      '31',\n      // 上海\n      '32',\n      // 江苏\n      '33',\n      // 浙江\n      '34',\n      // 安徽\n      '35',\n      // 福建\n      '36',\n      // 江西\n      '37',\n      // 山东\n      '41',\n      // 河南\n      '42',\n      // 湖北\n      '43',\n      // 湖南\n      '44',\n      // 广东\n      '45',\n      // 广西\n      '46',\n      // 海南\n      '50',\n      // 重庆\n      '51',\n      // 四川\n      '52',\n      // 贵州\n      '53',\n      // 云南\n      '54',\n      // 西藏\n      '61',\n      // 陕西\n      '62',\n      // 甘肃\n      '63',\n      // 青海\n      '64',\n      // 宁夏\n      '65',\n      // 新疆\n      '71',\n      // 台湾\n      '81',\n      // 香港\n      '82',\n      // 澳门\n      '91' // 国外\n      ];\n\n      var powers = ['7', '9', '10', '5', '8', '4', '2', '1', '6', '3', '7', '9', '10', '5', '8', '4', '2'];\n      var parityBit = ['1', '0', 'X', '9', '8', '7', '6', '5', '4', '3', '2'];\n      var checkAddressCode = function checkAddressCode(addressCode) {\n        return provincesAndCities.includes(addressCode);\n      };\n      var checkBirthDayCode = function checkBirthDayCode(birDayCode) {\n        var yyyy = parseInt(birDayCode.substring(0, 4), 10);\n        var mm = parseInt(birDayCode.substring(4, 6), 10);\n        var dd = parseInt(birDayCode.substring(6), 10);\n        var xdata = new Date(yyyy, mm - 1, dd);\n        if (xdata > new Date()) {\n          return false; // eslint-disable-next-line max-len\n        } else if (xdata.getFullYear() === yyyy && xdata.getMonth() === mm - 1 && xdata.getDate() === dd) {\n          return true;\n        }\n        return false;\n      };\n      var getParityBit = function getParityBit(idCardNo) {\n        var id17 = idCardNo.substring(0, 17);\n        var power = 0;\n        for (var i = 0; i < 17; i++) {\n          power += parseInt(id17.charAt(i), 10) * parseInt(powers[i], 10);\n        }\n        var mod = power % 11;\n        return parityBit[mod];\n      };\n      var checkParityBit = function checkParityBit(idCardNo) {\n        return getParityBit(idCardNo) === idCardNo.charAt(17).toUpperCase();\n      };\n      var check15IdCardNo = function check15IdCardNo(idCardNo) {\n        var check = /^[1-9]\\d{7}((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))\\d{3}$/.test(idCardNo);\n        if (!check) return false;\n        var addressCode = idCardNo.substring(0, 2);\n        check = checkAddressCode(addressCode);\n        if (!check) return false;\n        var birDayCode = \"19\".concat(idCardNo.substring(6, 12));\n        check = checkBirthDayCode(birDayCode);\n        if (!check) return false;\n        return true;\n      };\n      var check18IdCardNo = function check18IdCardNo(idCardNo) {\n        var check = /^[1-9]\\d{5}[1-9]\\d{3}((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))\\d{3}(\\d|x|X)$/.test(idCardNo);\n        if (!check) return false;\n        var addressCode = idCardNo.substring(0, 2);\n        check = checkAddressCode(addressCode);\n        if (!check) return false;\n        var birDayCode = idCardNo.substring(6, 14);\n        check = checkBirthDayCode(birDayCode);\n        if (!check) return false;\n        return checkParityBit(idCardNo);\n      };\n      var checkIdCardNo = function checkIdCardNo(idCardNo) {\n        var check = /^\\d{15}|(\\d{17}(\\d|x|X))$/.test(idCardNo);\n        if (!check) return false;\n        if (idCardNo.length === 15) {\n          return check15IdCardNo(idCardNo);\n        }\n        return check18IdCardNo(idCardNo);\n      };\n      return checkIdCardNo(str);\n    },\n    'zh-HK': function zhHK(str) {\n      // sanitize user input\n      str = str.trim(); // HKID number starts with 1 or 2 letters, followed by 6 digits,\n      // then a checksum contained in square / round brackets or nothing\n\n      var regexHKID = /^[A-Z]{1,2}[0-9]{6}((\\([0-9A]\\))|(\\[[0-9A]\\])|([0-9A]))$/;\n      var regexIsDigit = /^[0-9]$/; // convert the user input to all uppercase and apply regex\n\n      str = str.toUpperCase();\n      if (!regexHKID.test(str)) return false;\n      str = str.replace(/\\[|\\]|\\(|\\)/g, '');\n      if (str.length === 8) str = \"3\".concat(str);\n      var checkSumVal = 0;\n      for (var i = 0; i <= 7; i++) {\n        var convertedChar = void 0;\n        if (!regexIsDigit.test(str[i])) convertedChar = (str[i].charCodeAt(0) - 55) % 11;else convertedChar = str[i];\n        checkSumVal += convertedChar * (9 - i);\n      }\n      checkSumVal %= 11;\n      var checkSumConverted;\n      if (checkSumVal === 0) checkSumConverted = '0';else if (checkSumVal === 1) checkSumConverted = 'A';else checkSumConverted = String(11 - checkSumVal);\n      if (checkSumConverted === str[str.length - 1]) return true;\n      return false;\n    },\n    'zh-TW': function zhTW(str) {\n      var ALPHABET_CODES = {\n        A: 10,\n        B: 11,\n        C: 12,\n        D: 13,\n        E: 14,\n        F: 15,\n        G: 16,\n        H: 17,\n        I: 34,\n        J: 18,\n        K: 19,\n        L: 20,\n        M: 21,\n        N: 22,\n        O: 35,\n        P: 23,\n        Q: 24,\n        R: 25,\n        S: 26,\n        T: 27,\n        U: 28,\n        V: 29,\n        W: 32,\n        X: 30,\n        Y: 31,\n        Z: 33\n      };\n      var sanitized = str.trim().toUpperCase();\n      if (!/^[A-Z][0-9]{9}$/.test(sanitized)) return false;\n      return Array.from(sanitized).reduce(function (sum, number, index) {\n        if (index === 0) {\n          var code = ALPHABET_CODES[number];\n          return code % 10 * 9 + Math.floor(code / 10);\n        }\n        if (index === 9) {\n          return (10 - sum % 10 - Number(number)) % 10 === 0;\n        }\n        return sum + Number(number) * (9 - index);\n      }, 0);\n    }\n  };\n  function isIdentityCard(str, locale) {\n    (0, _assertString.default)(str);\n    if (locale in validators) {\n      return validators[locale](str);\n    } else if (locale === 'any') {\n      for (var key in validators) {\n        // https://github.com/gotwarlost/istanbul/blob/master/ignoring-code-for-coverage.md#ignoring-code-for-coverage-purposes\n        // istanbul ignore else\n        if (validators.hasOwnProperty(key)) {\n          var validator = validators[key];\n          if (validator(str)) {\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n    throw new Error(\"Invalid locale '\".concat(locale, \"'\"));\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(isIdentityCard, isIdentityCard.exports);\nvar isIdentityCardExports = isIdentityCard.exports;\nvar isEAN = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isEAN;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  /**\n   * The most commonly used EAN standard is\n   * the thirteen-digit EAN-13, while the\n   * less commonly used 8-digit EAN-8 barcode was\n   * introduced for use on small packages.\n   * Also EAN/UCC-14 is used for Grouping of individual\n   * trade items above unit level(Intermediate, Carton or Pallet).\n   * For more info about EAN-14 checkout: https://www.gtin.info/itf-14-barcodes/\n   * EAN consists of:\n   * GS1 prefix, manufacturer code, product code and check digit\n   * Reference: https://en.wikipedia.org/wiki/International_Article_Number\n   * Reference: https://www.gtin.info/\n   */\n\n  /**\n   * Define EAN Lenghts; 8 for EAN-8; 13 for EAN-13; 14 for EAN-14\n   * and Regular Expression for valid EANs (EAN-8, EAN-13, EAN-14),\n   * with exact numberic matching of 8 or 13 or 14 digits [0-9]\n   */\n  var LENGTH_EAN_8 = 8;\n  var LENGTH_EAN_14 = 14;\n  var validEanRegex = /^(\\d{8}|\\d{13}|\\d{14})$/;\n  /**\n   * Get position weight given:\n   * EAN length and digit index/position\n   *\n   * @param {number} length\n   * @param {number} index\n   * @return {number}\n   */\n\n  function getPositionWeightThroughLengthAndIndex(length, index) {\n    if (length === LENGTH_EAN_8 || length === LENGTH_EAN_14) {\n      return index % 2 === 0 ? 3 : 1;\n    }\n    return index % 2 === 0 ? 1 : 3;\n  }\n  /**\n   * Calculate EAN Check Digit\n   * Reference: https://en.wikipedia.org/wiki/International_Article_Number#Calculation_of_checksum_digit\n   *\n   * @param {string} ean\n   * @return {number}\n   */\n\n  function calculateCheckDigit(ean) {\n    var checksum = ean.slice(0, -1).split('').map(function (char, index) {\n      return Number(char) * getPositionWeightThroughLengthAndIndex(ean.length, index);\n    }).reduce(function (acc, partialSum) {\n      return acc + partialSum;\n    }, 0);\n    var remainder = 10 - checksum % 10;\n    return remainder < 10 ? remainder : 0;\n  }\n  /**\n   * Check if string is valid EAN:\n   * Matches EAN-8/EAN-13/EAN-14 regex\n   * Has valid check digit.\n   *\n   * @param {string} str\n   * @return {boolean}\n   */\n\n  function isEAN(str) {\n    (0, _assertString.default)(str);\n    var actualCheckDigit = Number(str.slice(-1));\n    return validEanRegex.test(str) && actualCheckDigit === calculateCheckDigit(str);\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(isEAN, isEAN.exports);\nvar isEANExports = isEAN.exports;\nvar isISIN = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isISIN;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  var isin = /^[A-Z]{2}[0-9A-Z]{9}[0-9]$/; // this link details how the check digit is calculated:\n  // https://www.isin.org/isin-format/. it is a little bit\n  // odd in that it works with digits, not numbers. in order\n  // to make only one pass through the ISIN characters, the\n  // each alpha character is handled as 2 characters within\n  // the loop.\n\n  function isISIN(str) {\n    (0, _assertString.default)(str);\n    if (!isin.test(str)) {\n      return false;\n    }\n    var double = true;\n    var sum = 0; // convert values\n\n    for (var i = str.length - 2; i >= 0; i--) {\n      if (str[i] >= 'A' && str[i] <= 'Z') {\n        var value = str[i].charCodeAt(0) - 55;\n        var lo = value % 10;\n        var hi = Math.trunc(value / 10); // letters have two digits, so handle the low order\n        // and high order digits separately.\n\n        for (var _i = 0, _arr = [lo, hi]; _i < _arr.length; _i++) {\n          var digit = _arr[_i];\n          if (double) {\n            if (digit >= 5) {\n              sum += 1 + (digit - 5) * 2;\n            } else {\n              sum += digit * 2;\n            }\n          } else {\n            sum += digit;\n          }\n          double = !double;\n        }\n      } else {\n        var _digit = str[i].charCodeAt(0) - '0'.charCodeAt(0);\n        if (double) {\n          if (_digit >= 5) {\n            sum += 1 + (_digit - 5) * 2;\n          } else {\n            sum += _digit * 2;\n          }\n        } else {\n          sum += _digit;\n        }\n        double = !double;\n      }\n    }\n    var check = Math.trunc((sum + 9) / 10) * 10 - sum;\n    return +str[str.length - 1] === check;\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(isISIN, isISIN.exports);\nvar isISINExports = isISIN.exports;\nvar isISBN = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isISBN;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  var possibleIsbn10 = /^(?:[0-9]{9}X|[0-9]{10})$/;\n  var possibleIsbn13 = /^(?:[0-9]{13})$/;\n  var factor = [1, 3];\n  function isISBN(isbn, options) {\n    (0, _assertString.default)(isbn); // For backwards compatibility:\n    // isISBN(str [, version]), i.e. `options` could be used as argument for the legacy `version`\n\n    var version = String((options === null || options === void 0 ? void 0 : options.version) || options);\n    if (!(options !== null && options !== void 0 && options.version || options)) {\n      return isISBN(isbn, {\n        version: 10\n      }) || isISBN(isbn, {\n        version: 13\n      });\n    }\n    var sanitizedIsbn = isbn.replace(/[\\s-]+/g, '');\n    var checksum = 0;\n    if (version === '10') {\n      if (!possibleIsbn10.test(sanitizedIsbn)) {\n        return false;\n      }\n      for (var i = 0; i < version - 1; i++) {\n        checksum += (i + 1) * sanitizedIsbn.charAt(i);\n      }\n      if (sanitizedIsbn.charAt(9) === 'X') {\n        checksum += 10 * 10;\n      } else {\n        checksum += 10 * sanitizedIsbn.charAt(9);\n      }\n      if (checksum % 11 === 0) {\n        return true;\n      }\n    } else if (version === '13') {\n      if (!possibleIsbn13.test(sanitizedIsbn)) {\n        return false;\n      }\n      for (var _i = 0; _i < 12; _i++) {\n        checksum += factor[_i % 2] * sanitizedIsbn.charAt(_i);\n      }\n      if (sanitizedIsbn.charAt(12) - (10 - checksum % 10) % 10 === 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(isISBN, isISBN.exports);\nvar isISBNExports = isISBN.exports;\nvar isISSN = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isISSN;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  var issn = '^\\\\d{4}-?\\\\d{3}[\\\\dX]$';\n  function isISSN(str) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    (0, _assertString.default)(str);\n    var testIssn = issn;\n    testIssn = options.require_hyphen ? testIssn.replace('?', '') : testIssn;\n    testIssn = options.case_sensitive ? new RegExp(testIssn) : new RegExp(testIssn, 'i');\n    if (!testIssn.test(str)) {\n      return false;\n    }\n    var digits = str.replace('-', '').toUpperCase();\n    var checksum = 0;\n    for (var i = 0; i < digits.length; i++) {\n      var digit = digits[i];\n      checksum += (digit === 'X' ? 10 : +digit) * (8 - i);\n    }\n    return checksum % 11 === 0;\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(isISSN, isISSN.exports);\nvar isISSNExports = isISSN.exports;\nvar isTaxID = {\n  exports: {}\n};\nvar algorithms$1 = {};\nObject.defineProperty(algorithms$1, \"__esModule\", {\n  value: true\n});\nalgorithms$1.iso7064Check = iso7064Check;\nalgorithms$1.luhnCheck = luhnCheck;\nalgorithms$1.reverseMultiplyAndSum = reverseMultiplyAndSum;\nalgorithms$1.verhoeffCheck = verhoeffCheck;\n\n/**\n * Algorithmic validation functions\n * May be used as is or implemented in the workflow of other validators.\n */\n\n/*\n * ISO 7064 validation function\n * Called with a string of numbers (incl. check digit)\n * to validate according to ISO 7064 (MOD 11, 10).\n */\nfunction iso7064Check(str) {\n  var checkvalue = 10;\n  for (var i = 0; i < str.length - 1; i++) {\n    checkvalue = (parseInt(str[i], 10) + checkvalue) % 10 === 0 ? 10 * 2 % 11 : (parseInt(str[i], 10) + checkvalue) % 10 * 2 % 11;\n  }\n  checkvalue = checkvalue === 1 ? 0 : 11 - checkvalue;\n  return checkvalue === parseInt(str[10], 10);\n}\n/*\n * Luhn (mod 10) validation function\n * Called with a string of numbers (incl. check digit)\n * to validate according to the Luhn algorithm.\n */\n\nfunction luhnCheck(str) {\n  var checksum = 0;\n  var second = false;\n  for (var i = str.length - 1; i >= 0; i--) {\n    if (second) {\n      var product = parseInt(str[i], 10) * 2;\n      if (product > 9) {\n        // sum digits of product and add to checksum\n        checksum += product.toString().split('').map(function (a) {\n          return parseInt(a, 10);\n        }).reduce(function (a, b) {\n          return a + b;\n        }, 0);\n      } else {\n        checksum += product;\n      }\n    } else {\n      checksum += parseInt(str[i], 10);\n    }\n    second = !second;\n  }\n  return checksum % 10 === 0;\n}\n/*\n * Reverse TIN multiplication and summation helper function\n * Called with an array of single-digit integers and a base multiplier\n * to calculate the sum of the digits multiplied in reverse.\n * Normally used in variations of MOD 11 algorithmic checks.\n */\n\nfunction reverseMultiplyAndSum(digits, base) {\n  var total = 0;\n  for (var i = 0; i < digits.length; i++) {\n    total += digits[i] * (base - i);\n  }\n  return total;\n}\n/*\n * Verhoeff validation helper function\n * Called with a string of numbers\n * to validate according to the Verhoeff algorithm.\n */\n\nfunction verhoeffCheck(str) {\n  var d_table = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9], [1, 2, 3, 4, 0, 6, 7, 8, 9, 5], [2, 3, 4, 0, 1, 7, 8, 9, 5, 6], [3, 4, 0, 1, 2, 8, 9, 5, 6, 7], [4, 0, 1, 2, 3, 9, 5, 6, 7, 8], [5, 9, 8, 7, 6, 0, 4, 3, 2, 1], [6, 5, 9, 8, 7, 1, 0, 4, 3, 2], [7, 6, 5, 9, 8, 2, 1, 0, 4, 3], [8, 7, 6, 5, 9, 3, 2, 1, 0, 4], [9, 8, 7, 6, 5, 4, 3, 2, 1, 0]];\n  var p_table = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9], [1, 5, 7, 6, 2, 8, 3, 0, 9, 4], [5, 8, 0, 3, 7, 9, 6, 1, 4, 2], [8, 9, 1, 6, 0, 4, 3, 5, 2, 7], [9, 4, 5, 3, 1, 2, 6, 8, 7, 0], [4, 2, 8, 6, 5, 7, 3, 9, 0, 1], [2, 7, 9, 3, 8, 0, 6, 4, 1, 5], [7, 0, 4, 6, 9, 1, 3, 2, 5, 8]]; // Copy (to prevent replacement) and reverse\n\n  var str_copy = str.split('').reverse().join('');\n  var checksum = 0;\n  for (var i = 0; i < str_copy.length; i++) {\n    checksum = d_table[checksum][p_table[i % 8][parseInt(str_copy[i], 10)]];\n  }\n  return checksum === 0;\n}\n(function (module, exports) {\n  function _typeof(obj) {\n    \"@babel/helpers - typeof\";\n\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function _typeof(obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function _typeof(obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n    return _typeof(obj);\n  }\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isTaxID;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  var algorithms = _interopRequireWildcard(algorithms$1);\n  var _isDate = _interopRequireDefault(isDateExports);\n  function _getRequireWildcardCache() {\n    if (typeof WeakMap !== \"function\") return null;\n    var cache = new WeakMap();\n    _getRequireWildcardCache = function _getRequireWildcardCache() {\n      return cache;\n    };\n    return cache;\n  }\n  function _interopRequireWildcard(obj) {\n    if (obj && obj.__esModule) {\n      return obj;\n    }\n    if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n      return {\n        default: obj\n      };\n    }\n    var cache = _getRequireWildcardCache();\n    if (cache && cache.has(obj)) {\n      return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n        if (desc && (desc.get || desc.set)) {\n          Object.defineProperty(newObj, key, desc);\n        } else {\n          newObj[key] = obj[key];\n        }\n      }\n    }\n    newObj.default = obj;\n    if (cache) {\n      cache.set(obj, newObj);\n    }\n    return newObj;\n  }\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  function _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n  }\n  function _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n  function _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n  }\n  function _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n  }\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for (var i = 0, arr2 = new Array(len); i < len; i++) {\n      arr2[i] = arr[i];\n    }\n    return arr2;\n  }\n\n  /**\n   * TIN Validation\n   * Validates Tax Identification Numbers (TINs) from the US, EU member states and the United Kingdom.\n   *\n   * EU-UK:\n   * National TIN validity is calculated using public algorithms as made available by DG TAXUD.\n   *\n   * See `https://ec.europa.eu/taxation_customs/tin/specs/FS-TIN%20Algorithms-Public.docx` for more information.\n   *\n   * US:\n   * An Employer Identification Number (EIN), also known as a Federal Tax Identification Number,\n   *  is used to identify a business entity.\n   *\n   * NOTES:\n   *  - Prefix 47 is being reserved for future use\n   *  - Prefixes 26, 27, 45, 46 and 47 were previously assigned by the Philadelphia campus.\n   *\n   * See `http://www.irs.gov/Businesses/Small-Businesses-&-Self-Employed/How-EINs-are-Assigned-and-Valid-EIN-Prefixes`\n   * for more information.\n   */\n  // Locale functions\n\n  /*\n   * bg-BG validation function\n   * (Edinen graždanski nomer (EGN/ЕГН), persons only)\n   * Checks if birth date (first six digits) is valid and calculates check (last) digit\n   */\n  function bgBgCheck(tin) {\n    // Extract full year, normalize month and check birth date validity\n    var century_year = tin.slice(0, 2);\n    var month = parseInt(tin.slice(2, 4), 10);\n    if (month > 40) {\n      month -= 40;\n      century_year = \"20\".concat(century_year);\n    } else if (month > 20) {\n      month -= 20;\n      century_year = \"18\".concat(century_year);\n    } else {\n      century_year = \"19\".concat(century_year);\n    }\n    if (month < 10) {\n      month = \"0\".concat(month);\n    }\n    var date = \"\".concat(century_year, \"/\").concat(month, \"/\").concat(tin.slice(4, 6));\n    if (!(0, _isDate.default)(date, 'YYYY/MM/DD')) {\n      return false;\n    } // split digits into an array for further processing\n\n    var digits = tin.split('').map(function (a) {\n      return parseInt(a, 10);\n    }); // Calculate checksum by multiplying digits with fixed values\n\n    var multip_lookup = [2, 4, 8, 5, 10, 9, 7, 3, 6];\n    var checksum = 0;\n    for (var i = 0; i < multip_lookup.length; i++) {\n      checksum += digits[i] * multip_lookup[i];\n    }\n    checksum = checksum % 11 === 10 ? 0 : checksum % 11;\n    return checksum === digits[9];\n  }\n  /**\n   * Check if an input is a valid Canadian SIN (Social Insurance Number)\n   *\n   * The Social Insurance Number (SIN) is a 9 digit number that\n   * you need to work in Canada or to have access to government programs and benefits.\n   *\n   * https://en.wikipedia.org/wiki/Social_Insurance_Number\n   * https://www.canada.ca/en/employment-social-development/services/sin.html\n   * https://www.codercrunch.com/challenge/819302488/sin-validator\n   *\n   * @param {string} input\n   * @return {boolean}\n   */\n\n  function isCanadianSIN(input) {\n    var digitsArray = input.split('');\n    var even = digitsArray.filter(function (_, idx) {\n      return idx % 2;\n    }).map(function (i) {\n      return Number(i) * 2;\n    }).join('').split('');\n    var total = digitsArray.filter(function (_, idx) {\n      return !(idx % 2);\n    }).concat(even).map(function (i) {\n      return Number(i);\n    }).reduce(function (acc, cur) {\n      return acc + cur;\n    });\n    return total % 10 === 0;\n  }\n  /*\n   * cs-CZ validation function\n   * (Rodné číslo (RČ), persons only)\n   * Checks if birth date (first six digits) is valid and divisibility by 11\n   * Material not in DG TAXUD document sourced from:\n   * -`https://lorenc.info/3MA381/overeni-spravnosti-rodneho-cisla.htm`\n   * -`https://www.mvcr.cz/clanek/rady-a-sluzby-dokumenty-rodne-cislo.aspx`\n   */\n\n  function csCzCheck(tin) {\n    tin = tin.replace(/\\W/, ''); // Extract full year from TIN length\n\n    var full_year = parseInt(tin.slice(0, 2), 10);\n    if (tin.length === 10) {\n      if (full_year < 54) {\n        full_year = \"20\".concat(full_year);\n      } else {\n        full_year = \"19\".concat(full_year);\n      }\n    } else {\n      if (tin.slice(6) === '000') {\n        return false;\n      } // Three-zero serial not assigned before 1954\n\n      if (full_year < 54) {\n        full_year = \"19\".concat(full_year);\n      } else {\n        return false; // No 18XX years seen in any of the resources\n      }\n    } // Add missing zero if needed\n\n    if (full_year.length === 3) {\n      full_year = [full_year.slice(0, 2), '0', full_year.slice(2)].join('');\n    } // Extract month from TIN and normalize\n\n    var month = parseInt(tin.slice(2, 4), 10);\n    if (month > 50) {\n      month -= 50;\n    }\n    if (month > 20) {\n      // Month-plus-twenty was only introduced in 2004\n      if (parseInt(full_year, 10) < 2004) {\n        return false;\n      }\n      month -= 20;\n    }\n    if (month < 10) {\n      month = \"0\".concat(month);\n    } // Check date validity\n\n    var date = \"\".concat(full_year, \"/\").concat(month, \"/\").concat(tin.slice(4, 6));\n    if (!(0, _isDate.default)(date, 'YYYY/MM/DD')) {\n      return false;\n    } // Verify divisibility by 11\n\n    if (tin.length === 10) {\n      if (parseInt(tin, 10) % 11 !== 0) {\n        // Some numbers up to and including 1985 are still valid if\n        // check (last) digit equals 0 and modulo of first 9 digits equals 10\n        var checkdigit = parseInt(tin.slice(0, 9), 10) % 11;\n        if (parseInt(full_year, 10) < 1986 && checkdigit === 10) {\n          if (parseInt(tin.slice(9), 10) !== 0) {\n            return false;\n          }\n        } else {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n  /*\n   * de-AT validation function\n   * (Abgabenkontonummer, persons/entities)\n   * Verify TIN validity by calling luhnCheck()\n   */\n\n  function deAtCheck(tin) {\n    return algorithms.luhnCheck(tin);\n  }\n  /*\n   * de-DE validation function\n   * (Steueridentifikationsnummer (Steuer-IdNr.), persons only)\n   * Tests for single duplicate/triplicate value, then calculates ISO 7064 check (last) digit\n   * Partial implementation of spec (same result with both algorithms always)\n   */\n\n  function deDeCheck(tin) {\n    // Split digits into an array for further processing\n    var digits = tin.split('').map(function (a) {\n      return parseInt(a, 10);\n    }); // Fill array with strings of number positions\n\n    var occurences = [];\n    for (var i = 0; i < digits.length - 1; i++) {\n      occurences.push('');\n      for (var j = 0; j < digits.length - 1; j++) {\n        if (digits[i] === digits[j]) {\n          occurences[i] += j;\n        }\n      }\n    } // Remove digits with one occurence and test for only one duplicate/triplicate\n\n    occurences = occurences.filter(function (a) {\n      return a.length > 1;\n    });\n    if (occurences.length !== 2 && occurences.length !== 3) {\n      return false;\n    } // In case of triplicate value only two digits are allowed next to each other\n\n    if (occurences[0].length === 3) {\n      var trip_locations = occurences[0].split('').map(function (a) {\n        return parseInt(a, 10);\n      });\n      var recurrent = 0; // Amount of neighbour occurences\n\n      for (var _i = 0; _i < trip_locations.length - 1; _i++) {\n        if (trip_locations[_i] + 1 === trip_locations[_i + 1]) {\n          recurrent += 1;\n        }\n      }\n      if (recurrent === 2) {\n        return false;\n      }\n    }\n    return algorithms.iso7064Check(tin);\n  }\n  /*\n   * dk-DK validation function\n   * (CPR-nummer (personnummer), persons only)\n   * Checks if birth date (first six digits) is valid and assigned to century (seventh) digit,\n   * and calculates check (last) digit\n   */\n\n  function dkDkCheck(tin) {\n    tin = tin.replace(/\\W/, ''); // Extract year, check if valid for given century digit and add century\n\n    var year = parseInt(tin.slice(4, 6), 10);\n    var century_digit = tin.slice(6, 7);\n    switch (century_digit) {\n      case '0':\n      case '1':\n      case '2':\n      case '3':\n        year = \"19\".concat(year);\n        break;\n      case '4':\n      case '9':\n        if (year < 37) {\n          year = \"20\".concat(year);\n        } else {\n          year = \"19\".concat(year);\n        }\n        break;\n      default:\n        if (year < 37) {\n          year = \"20\".concat(year);\n        } else if (year > 58) {\n          year = \"18\".concat(year);\n        } else {\n          return false;\n        }\n        break;\n    } // Add missing zero if needed\n\n    if (year.length === 3) {\n      year = [year.slice(0, 2), '0', year.slice(2)].join('');\n    } // Check date validity\n\n    var date = \"\".concat(year, \"/\").concat(tin.slice(2, 4), \"/\").concat(tin.slice(0, 2));\n    if (!(0, _isDate.default)(date, 'YYYY/MM/DD')) {\n      return false;\n    } // Split digits into an array for further processing\n\n    var digits = tin.split('').map(function (a) {\n      return parseInt(a, 10);\n    });\n    var checksum = 0;\n    var weight = 4; // Multiply by weight and add to checksum\n\n    for (var i = 0; i < 9; i++) {\n      checksum += digits[i] * weight;\n      weight -= 1;\n      if (weight === 1) {\n        weight = 7;\n      }\n    }\n    checksum %= 11;\n    if (checksum === 1) {\n      return false;\n    }\n    return checksum === 0 ? digits[9] === 0 : digits[9] === 11 - checksum;\n  }\n  /*\n   * el-CY validation function\n   * (Arithmos Forologikou Mitroou (AFM/ΑΦΜ), persons only)\n   * Verify TIN validity by calculating ASCII value of check (last) character\n   */\n\n  function elCyCheck(tin) {\n    // split digits into an array for further processing\n    var digits = tin.slice(0, 8).split('').map(function (a) {\n      return parseInt(a, 10);\n    });\n    var checksum = 0; // add digits in even places\n\n    for (var i = 1; i < digits.length; i += 2) {\n      checksum += digits[i];\n    } // add digits in odd places\n\n    for (var _i2 = 0; _i2 < digits.length; _i2 += 2) {\n      if (digits[_i2] < 2) {\n        checksum += 1 - digits[_i2];\n      } else {\n        checksum += 2 * (digits[_i2] - 2) + 5;\n        if (digits[_i2] > 4) {\n          checksum += 2;\n        }\n      }\n    }\n    return String.fromCharCode(checksum % 26 + 65) === tin.charAt(8);\n  }\n  /*\n   * el-GR validation function\n   * (Arithmos Forologikou Mitroou (AFM/ΑΦΜ), persons/entities)\n   * Verify TIN validity by calculating check (last) digit\n   * Algorithm not in DG TAXUD document- sourced from:\n   * - `http://epixeirisi.gr/%CE%9A%CE%A1%CE%99%CE%A3%CE%99%CE%9C%CE%91-%CE%98%CE%95%CE%9C%CE%91%CE%A4%CE%91-%CE%A6%CE%9F%CE%A1%CE%9F%CE%9B%CE%9F%CE%93%CE%99%CE%91%CE%A3-%CE%9A%CE%91%CE%99-%CE%9B%CE%9F%CE%93%CE%99%CE%A3%CE%A4%CE%99%CE%9A%CE%97%CE%A3/23791/%CE%91%CF%81%CE%B9%CE%B8%CE%BC%CF%8C%CF%82-%CE%A6%CE%BF%CF%81%CE%BF%CE%BB%CE%BF%CE%B3%CE%B9%CE%BA%CE%BF%CF%8D-%CE%9C%CE%B7%CF%84%CF%81%CF%8E%CE%BF%CF%85`\n   */\n\n  function elGrCheck(tin) {\n    // split digits into an array for further processing\n    var digits = tin.split('').map(function (a) {\n      return parseInt(a, 10);\n    });\n    var checksum = 0;\n    for (var i = 0; i < 8; i++) {\n      checksum += digits[i] * Math.pow(2, 8 - i);\n    }\n    return checksum % 11 % 10 === digits[8];\n  }\n  /*\n   * en-GB validation function (should go here if needed)\n   * (National Insurance Number (NINO) or Unique Taxpayer Reference (UTR),\n   * persons/entities respectively)\n   */\n\n  /*\n   * en-IE validation function\n   * (Personal Public Service Number (PPS No), persons only)\n   * Verify TIN validity by calculating check (second to last) character\n   */\n\n  function enIeCheck(tin) {\n    var checksum = algorithms.reverseMultiplyAndSum(tin.split('').slice(0, 7).map(function (a) {\n      return parseInt(a, 10);\n    }), 8);\n    if (tin.length === 9 && tin[8] !== 'W') {\n      checksum += (tin[8].charCodeAt(0) - 64) * 9;\n    }\n    checksum %= 23;\n    if (checksum === 0) {\n      return tin[7].toUpperCase() === 'W';\n    }\n    return tin[7].toUpperCase() === String.fromCharCode(64 + checksum);\n  } // Valid US IRS campus prefixes\n\n  var enUsCampusPrefix = {\n    andover: ['10', '12'],\n    atlanta: ['60', '67'],\n    austin: ['50', '53'],\n    brookhaven: ['01', '02', '03', '04', '05', '06', '11', '13', '14', '16', '21', '22', '23', '25', '34', '51', '52', '54', '55', '56', '57', '58', '59', '65'],\n    cincinnati: ['30', '32', '35', '36', '37', '38', '61'],\n    fresno: ['15', '24'],\n    internet: ['20', '26', '27', '45', '46', '47'],\n    kansas: ['40', '44'],\n    memphis: ['94', '95'],\n    ogden: ['80', '90'],\n    philadelphia: ['33', '39', '41', '42', '43', '46', '48', '62', '63', '64', '66', '68', '71', '72', '73', '74', '75', '76', '77', '81', '82', '83', '84', '85', '86', '87', '88', '91', '92', '93', '98', '99'],\n    sba: ['31']\n  }; // Return an array of all US IRS campus prefixes\n\n  function enUsGetPrefixes() {\n    var prefixes = [];\n    for (var location in enUsCampusPrefix) {\n      // https://github.com/gotwarlost/istanbul/blob/master/ignoring-code-for-coverage.md#ignoring-code-for-coverage-purposes\n      // istanbul ignore else\n      if (enUsCampusPrefix.hasOwnProperty(location)) {\n        prefixes.push.apply(prefixes, _toConsumableArray(enUsCampusPrefix[location]));\n      }\n    }\n    return prefixes;\n  }\n  /*\n   * en-US validation function\n   * Verify that the TIN starts with a valid IRS campus prefix\n   */\n\n  function enUsCheck(tin) {\n    return enUsGetPrefixes().indexOf(tin.slice(0, 2)) !== -1;\n  }\n  /*\n   * es-ES validation function\n   * (Documento Nacional de Identidad (DNI)\n   * or Número de Identificación de Extranjero (NIE), persons only)\n   * Verify TIN validity by calculating check (last) character\n   */\n\n  function esEsCheck(tin) {\n    // Split characters into an array for further processing\n    var chars = tin.toUpperCase().split(''); // Replace initial letter if needed\n\n    if (isNaN(parseInt(chars[0], 10)) && chars.length > 1) {\n      var lead_replace = 0;\n      switch (chars[0]) {\n        case 'Y':\n          lead_replace = 1;\n          break;\n        case 'Z':\n          lead_replace = 2;\n          break;\n      }\n      chars.splice(0, 1, lead_replace); // Fill with zeros if smaller than proper\n    } else {\n      while (chars.length < 9) {\n        chars.unshift(0);\n      }\n    } // Calculate checksum and check according to lookup\n\n    var lookup = ['T', 'R', 'W', 'A', 'G', 'M', 'Y', 'F', 'P', 'D', 'X', 'B', 'N', 'J', 'Z', 'S', 'Q', 'V', 'H', 'L', 'C', 'K', 'E'];\n    chars = chars.join('');\n    var checksum = parseInt(chars.slice(0, 8), 10) % 23;\n    return chars[8] === lookup[checksum];\n  }\n  /*\n   * et-EE validation function\n   * (Isikukood (IK), persons only)\n   * Checks if birth date (century digit and six following) is valid and calculates check (last) digit\n   * Material not in DG TAXUD document sourced from:\n   * - `https://www.oecd.org/tax/automatic-exchange/crs-implementation-and-assistance/tax-identification-numbers/Estonia-TIN.pdf`\n   */\n\n  function etEeCheck(tin) {\n    // Extract year and add century\n    var full_year = tin.slice(1, 3);\n    var century_digit = tin.slice(0, 1);\n    switch (century_digit) {\n      case '1':\n      case '2':\n        full_year = \"18\".concat(full_year);\n        break;\n      case '3':\n      case '4':\n        full_year = \"19\".concat(full_year);\n        break;\n      default:\n        full_year = \"20\".concat(full_year);\n        break;\n    } // Check date validity\n\n    var date = \"\".concat(full_year, \"/\").concat(tin.slice(3, 5), \"/\").concat(tin.slice(5, 7));\n    if (!(0, _isDate.default)(date, 'YYYY/MM/DD')) {\n      return false;\n    } // Split digits into an array for further processing\n\n    var digits = tin.split('').map(function (a) {\n      return parseInt(a, 10);\n    });\n    var checksum = 0;\n    var weight = 1; // Multiply by weight and add to checksum\n\n    for (var i = 0; i < 10; i++) {\n      checksum += digits[i] * weight;\n      weight += 1;\n      if (weight === 10) {\n        weight = 1;\n      }\n    } // Do again if modulo 11 of checksum is 10\n\n    if (checksum % 11 === 10) {\n      checksum = 0;\n      weight = 3;\n      for (var _i3 = 0; _i3 < 10; _i3++) {\n        checksum += digits[_i3] * weight;\n        weight += 1;\n        if (weight === 10) {\n          weight = 1;\n        }\n      }\n      if (checksum % 11 === 10) {\n        return digits[10] === 0;\n      }\n    }\n    return checksum % 11 === digits[10];\n  }\n  /*\n   * fi-FI validation function\n   * (Henkilötunnus (HETU), persons only)\n   * Checks if birth date (first six digits plus century symbol) is valid\n   * and calculates check (last) digit\n   */\n\n  function fiFiCheck(tin) {\n    // Extract year and add century\n    var full_year = tin.slice(4, 6);\n    var century_symbol = tin.slice(6, 7);\n    switch (century_symbol) {\n      case '+':\n        full_year = \"18\".concat(full_year);\n        break;\n      case '-':\n        full_year = \"19\".concat(full_year);\n        break;\n      default:\n        full_year = \"20\".concat(full_year);\n        break;\n    } // Check date validity\n\n    var date = \"\".concat(full_year, \"/\").concat(tin.slice(2, 4), \"/\").concat(tin.slice(0, 2));\n    if (!(0, _isDate.default)(date, 'YYYY/MM/DD')) {\n      return false;\n    } // Calculate check character\n\n    var checksum = parseInt(tin.slice(0, 6) + tin.slice(7, 10), 10) % 31;\n    if (checksum < 10) {\n      return checksum === parseInt(tin.slice(10), 10);\n    }\n    checksum -= 10;\n    var letters_lookup = ['A', 'B', 'C', 'D', 'E', 'F', 'H', 'J', 'K', 'L', 'M', 'N', 'P', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y'];\n    return letters_lookup[checksum] === tin.slice(10);\n  }\n  /*\n   * fr/nl-BE validation function\n   * (Numéro national (N.N.), persons only)\n   * Checks if birth date (first six digits) is valid and calculates check (last two) digits\n   */\n\n  function frBeCheck(tin) {\n    // Zero month/day value is acceptable\n    if (tin.slice(2, 4) !== '00' || tin.slice(4, 6) !== '00') {\n      // Extract date from first six digits of TIN\n      var date = \"\".concat(tin.slice(0, 2), \"/\").concat(tin.slice(2, 4), \"/\").concat(tin.slice(4, 6));\n      if (!(0, _isDate.default)(date, 'YY/MM/DD')) {\n        return false;\n      }\n    }\n    var checksum = 97 - parseInt(tin.slice(0, 9), 10) % 97;\n    var checkdigits = parseInt(tin.slice(9, 11), 10);\n    if (checksum !== checkdigits) {\n      checksum = 97 - parseInt(\"2\".concat(tin.slice(0, 9)), 10) % 97;\n      if (checksum !== checkdigits) {\n        return false;\n      }\n    }\n    return true;\n  }\n  /*\n   * fr-FR validation function\n   * (Numéro fiscal de référence (numéro SPI), persons only)\n   * Verify TIN validity by calculating check (last three) digits\n   */\n\n  function frFrCheck(tin) {\n    tin = tin.replace(/\\s/g, '');\n    var checksum = parseInt(tin.slice(0, 10), 10) % 511;\n    var checkdigits = parseInt(tin.slice(10, 13), 10);\n    return checksum === checkdigits;\n  }\n  /*\n   * fr/lb-LU validation function\n   * (numéro d’identification personnelle, persons only)\n   * Verify birth date validity and run Luhn and Verhoeff checks\n   */\n\n  function frLuCheck(tin) {\n    // Extract date and check validity\n    var date = \"\".concat(tin.slice(0, 4), \"/\").concat(tin.slice(4, 6), \"/\").concat(tin.slice(6, 8));\n    if (!(0, _isDate.default)(date, 'YYYY/MM/DD')) {\n      return false;\n    } // Run Luhn check\n\n    if (!algorithms.luhnCheck(tin.slice(0, 12))) {\n      return false;\n    } // Remove Luhn check digit and run Verhoeff check\n\n    return algorithms.verhoeffCheck(\"\".concat(tin.slice(0, 11)).concat(tin[12]));\n  }\n  /*\n   * hr-HR validation function\n   * (Osobni identifikacijski broj (OIB), persons/entities)\n   * Verify TIN validity by calling iso7064Check(digits)\n   */\n\n  function hrHrCheck(tin) {\n    return algorithms.iso7064Check(tin);\n  }\n  /*\n   * hu-HU validation function\n   * (Adóazonosító jel, persons only)\n   * Verify TIN validity by calculating check (last) digit\n   */\n\n  function huHuCheck(tin) {\n    // split digits into an array for further processing\n    var digits = tin.split('').map(function (a) {\n      return parseInt(a, 10);\n    });\n    var checksum = 8;\n    for (var i = 1; i < 9; i++) {\n      checksum += digits[i] * (i + 1);\n    }\n    return checksum % 11 === digits[9];\n  }\n  /*\n   * lt-LT validation function (should go here if needed)\n   * (Asmens kodas, persons/entities respectively)\n   * Current validation check is alias of etEeCheck- same format applies\n   */\n\n  /*\n   * it-IT first/last name validity check\n   * Accepts it-IT TIN-encoded names as a three-element character array and checks their validity\n   * Due to lack of clarity between resources (\"Are only Italian consonants used?\n   * What happens if a person has X in their name?\" etc.) only two test conditions\n   * have been implemented:\n   * Vowels may only be followed by other vowels or an X character\n   * and X characters after vowels may only be followed by other X characters.\n   */\n\n  function itItNameCheck(name) {\n    // true at the first occurence of a vowel\n    var vowelflag = false; // true at the first occurence of an X AFTER vowel\n    // (to properly handle last names with X as consonant)\n\n    var xflag = false;\n    for (var i = 0; i < 3; i++) {\n      if (!vowelflag && /[AEIOU]/.test(name[i])) {\n        vowelflag = true;\n      } else if (!xflag && vowelflag && name[i] === 'X') {\n        xflag = true;\n      } else if (i > 0) {\n        if (vowelflag && !xflag) {\n          if (!/[AEIOU]/.test(name[i])) {\n            return false;\n          }\n        }\n        if (xflag) {\n          if (!/X/.test(name[i])) {\n            return false;\n          }\n        }\n      }\n    }\n    return true;\n  }\n  /*\n   * it-IT validation function\n   * (Codice fiscale (TIN-IT), persons only)\n   * Verify name, birth date and codice catastale validity\n   * and calculate check character.\n   * Material not in DG-TAXUD document sourced from:\n   * `https://en.wikipedia.org/wiki/Italian_fiscal_code`\n   */\n\n  function itItCheck(tin) {\n    // Capitalize and split characters into an array for further processing\n    var chars = tin.toUpperCase().split(''); // Check first and last name validity calling itItNameCheck()\n\n    if (!itItNameCheck(chars.slice(0, 3))) {\n      return false;\n    }\n    if (!itItNameCheck(chars.slice(3, 6))) {\n      return false;\n    } // Convert letters in number spaces back to numbers if any\n\n    var number_locations = [6, 7, 9, 10, 12, 13, 14];\n    var number_replace = {\n      L: '0',\n      M: '1',\n      N: '2',\n      P: '3',\n      Q: '4',\n      R: '5',\n      S: '6',\n      T: '7',\n      U: '8',\n      V: '9'\n    };\n    for (var _i4 = 0, _number_locations = number_locations; _i4 < _number_locations.length; _i4++) {\n      var i = _number_locations[_i4];\n      if (chars[i] in number_replace) {\n        chars.splice(i, 1, number_replace[chars[i]]);\n      }\n    } // Extract month and day, and check date validity\n\n    var month_replace = {\n      A: '01',\n      B: '02',\n      C: '03',\n      D: '04',\n      E: '05',\n      H: '06',\n      L: '07',\n      M: '08',\n      P: '09',\n      R: '10',\n      S: '11',\n      T: '12'\n    };\n    var month = month_replace[chars[8]];\n    var day = parseInt(chars[9] + chars[10], 10);\n    if (day > 40) {\n      day -= 40;\n    }\n    if (day < 10) {\n      day = \"0\".concat(day);\n    }\n    var date = \"\".concat(chars[6]).concat(chars[7], \"/\").concat(month, \"/\").concat(day);\n    if (!(0, _isDate.default)(date, 'YY/MM/DD')) {\n      return false;\n    } // Calculate check character by adding up even and odd characters as numbers\n\n    var checksum = 0;\n    for (var _i5 = 1; _i5 < chars.length - 1; _i5 += 2) {\n      var char_to_int = parseInt(chars[_i5], 10);\n      if (isNaN(char_to_int)) {\n        char_to_int = chars[_i5].charCodeAt(0) - 65;\n      }\n      checksum += char_to_int;\n    }\n    var odd_convert = {\n      // Maps of characters at odd places\n      A: 1,\n      B: 0,\n      C: 5,\n      D: 7,\n      E: 9,\n      F: 13,\n      G: 15,\n      H: 17,\n      I: 19,\n      J: 21,\n      K: 2,\n      L: 4,\n      M: 18,\n      N: 20,\n      O: 11,\n      P: 3,\n      Q: 6,\n      R: 8,\n      S: 12,\n      T: 14,\n      U: 16,\n      V: 10,\n      W: 22,\n      X: 25,\n      Y: 24,\n      Z: 23,\n      0: 1,\n      1: 0\n    };\n    for (var _i6 = 0; _i6 < chars.length - 1; _i6 += 2) {\n      var _char_to_int = 0;\n      if (chars[_i6] in odd_convert) {\n        _char_to_int = odd_convert[chars[_i6]];\n      } else {\n        var multiplier = parseInt(chars[_i6], 10);\n        _char_to_int = 2 * multiplier + 1;\n        if (multiplier > 4) {\n          _char_to_int += 2;\n        }\n      }\n      checksum += _char_to_int;\n    }\n    if (String.fromCharCode(65 + checksum % 26) !== chars[15]) {\n      return false;\n    }\n    return true;\n  }\n  /*\n   * lv-LV validation function\n   * (Personas kods (PK), persons only)\n   * Check validity of birth date and calculate check (last) digit\n   * Support only for old format numbers (not starting with '32', issued before 2017/07/01)\n   * Material not in DG TAXUD document sourced from:\n   * `https://boot.ritakafija.lv/forums/index.php?/topic/88314-personas-koda-algoritms-%C4%8Deksumma/`\n   */\n\n  function lvLvCheck(tin) {\n    tin = tin.replace(/\\W/, ''); // Extract date from TIN\n\n    var day = tin.slice(0, 2);\n    if (day !== '32') {\n      // No date/checksum check if new format\n      var month = tin.slice(2, 4);\n      if (month !== '00') {\n        // No date check if unknown month\n        var full_year = tin.slice(4, 6);\n        switch (tin[6]) {\n          case '0':\n            full_year = \"18\".concat(full_year);\n            break;\n          case '1':\n            full_year = \"19\".concat(full_year);\n            break;\n          default:\n            full_year = \"20\".concat(full_year);\n            break;\n        } // Check date validity\n\n        var date = \"\".concat(full_year, \"/\").concat(tin.slice(2, 4), \"/\").concat(day);\n        if (!(0, _isDate.default)(date, 'YYYY/MM/DD')) {\n          return false;\n        }\n      } // Calculate check digit\n\n      var checksum = 1101;\n      var multip_lookup = [1, 6, 3, 7, 9, 10, 5, 8, 4, 2];\n      for (var i = 0; i < tin.length - 1; i++) {\n        checksum -= parseInt(tin[i], 10) * multip_lookup[i];\n      }\n      return parseInt(tin[10], 10) === checksum % 11;\n    }\n    return true;\n  }\n  /*\n   * mt-MT validation function\n   * (Identity Card Number or Unique Taxpayer Reference, persons/entities)\n   * Verify Identity Card Number structure (no other tests found)\n   */\n\n  function mtMtCheck(tin) {\n    if (tin.length !== 9) {\n      // No tests for UTR\n      var chars = tin.toUpperCase().split(''); // Fill with zeros if smaller than proper\n\n      while (chars.length < 8) {\n        chars.unshift(0);\n      } // Validate format according to last character\n\n      switch (tin[7]) {\n        case 'A':\n        case 'P':\n          if (parseInt(chars[6], 10) === 0) {\n            return false;\n          }\n          break;\n        default:\n          {\n            var first_part = parseInt(chars.join('').slice(0, 5), 10);\n            if (first_part > 32000) {\n              return false;\n            }\n            var second_part = parseInt(chars.join('').slice(5, 7), 10);\n            if (first_part === second_part) {\n              return false;\n            }\n          }\n      }\n    }\n    return true;\n  }\n  /*\n   * nl-NL validation function\n   * (Burgerservicenummer (BSN) or Rechtspersonen Samenwerkingsverbanden Informatie Nummer (RSIN),\n   * persons/entities respectively)\n   * Verify TIN validity by calculating check (last) digit (variant of MOD 11)\n   */\n\n  function nlNlCheck(tin) {\n    return algorithms.reverseMultiplyAndSum(tin.split('').slice(0, 8).map(function (a) {\n      return parseInt(a, 10);\n    }), 9) % 11 === parseInt(tin[8], 10);\n  }\n  /*\n   * pl-PL validation function\n   * (Powszechny Elektroniczny System Ewidencji Ludności (PESEL)\n   * or Numer identyfikacji podatkowej (NIP), persons/entities)\n   * Verify TIN validity by validating birth date (PESEL) and calculating check (last) digit\n   */\n\n  function plPlCheck(tin) {\n    // NIP\n    if (tin.length === 10) {\n      // Calculate last digit by multiplying with lookup\n      var lookup = [6, 5, 7, 2, 3, 4, 5, 6, 7];\n      var _checksum = 0;\n      for (var i = 0; i < lookup.length; i++) {\n        _checksum += parseInt(tin[i], 10) * lookup[i];\n      }\n      _checksum %= 11;\n      if (_checksum === 10) {\n        return false;\n      }\n      return _checksum === parseInt(tin[9], 10);\n    } // PESEL\n    // Extract full year using month\n\n    var full_year = tin.slice(0, 2);\n    var month = parseInt(tin.slice(2, 4), 10);\n    if (month > 80) {\n      full_year = \"18\".concat(full_year);\n      month -= 80;\n    } else if (month > 60) {\n      full_year = \"22\".concat(full_year);\n      month -= 60;\n    } else if (month > 40) {\n      full_year = \"21\".concat(full_year);\n      month -= 40;\n    } else if (month > 20) {\n      full_year = \"20\".concat(full_year);\n      month -= 20;\n    } else {\n      full_year = \"19\".concat(full_year);\n    } // Add leading zero to month if needed\n\n    if (month < 10) {\n      month = \"0\".concat(month);\n    } // Check date validity\n\n    var date = \"\".concat(full_year, \"/\").concat(month, \"/\").concat(tin.slice(4, 6));\n    if (!(0, _isDate.default)(date, 'YYYY/MM/DD')) {\n      return false;\n    } // Calculate last digit by mulitplying with odd one-digit numbers except 5\n\n    var checksum = 0;\n    var multiplier = 1;\n    for (var _i7 = 0; _i7 < tin.length - 1; _i7++) {\n      checksum += parseInt(tin[_i7], 10) * multiplier % 10;\n      multiplier += 2;\n      if (multiplier > 10) {\n        multiplier = 1;\n      } else if (multiplier === 5) {\n        multiplier += 2;\n      }\n    }\n    checksum = 10 - checksum % 10;\n    return checksum === parseInt(tin[10], 10);\n  }\n  /*\n  * pt-BR validation function\n  * (Cadastro de Pessoas Físicas (CPF, persons)\n  * Cadastro Nacional de Pessoas Jurídicas (CNPJ, entities)\n  * Both inputs will be validated\n  */\n\n  function ptBrCheck(tin) {\n    if (tin.length === 11) {\n      var _sum;\n      var remainder;\n      _sum = 0;\n      if (\n      // Reject known invalid CPFs\n      tin === '11111111111' || tin === '22222222222' || tin === '33333333333' || tin === '44444444444' || tin === '55555555555' || tin === '66666666666' || tin === '77777777777' || tin === '88888888888' || tin === '99999999999' || tin === '00000000000') return false;\n      for (var i = 1; i <= 9; i++) {\n        _sum += parseInt(tin.substring(i - 1, i), 10) * (11 - i);\n      }\n      remainder = _sum * 10 % 11;\n      if (remainder === 10) remainder = 0;\n      if (remainder !== parseInt(tin.substring(9, 10), 10)) return false;\n      _sum = 0;\n      for (var _i8 = 1; _i8 <= 10; _i8++) {\n        _sum += parseInt(tin.substring(_i8 - 1, _i8), 10) * (12 - _i8);\n      }\n      remainder = _sum * 10 % 11;\n      if (remainder === 10) remainder = 0;\n      if (remainder !== parseInt(tin.substring(10, 11), 10)) return false;\n      return true;\n    }\n    if (\n    // Reject know invalid CNPJs\n    tin === '00000000000000' || tin === '11111111111111' || tin === '22222222222222' || tin === '33333333333333' || tin === '44444444444444' || tin === '55555555555555' || tin === '66666666666666' || tin === '77777777777777' || tin === '88888888888888' || tin === '99999999999999') {\n      return false;\n    }\n    var length = tin.length - 2;\n    var identifiers = tin.substring(0, length);\n    var verificators = tin.substring(length);\n    var sum = 0;\n    var pos = length - 7;\n    for (var _i9 = length; _i9 >= 1; _i9--) {\n      sum += identifiers.charAt(length - _i9) * pos;\n      pos -= 1;\n      if (pos < 2) {\n        pos = 9;\n      }\n    }\n    var result = sum % 11 < 2 ? 0 : 11 - sum % 11;\n    if (result !== parseInt(verificators.charAt(0), 10)) {\n      return false;\n    }\n    length += 1;\n    identifiers = tin.substring(0, length);\n    sum = 0;\n    pos = length - 7;\n    for (var _i10 = length; _i10 >= 1; _i10--) {\n      sum += identifiers.charAt(length - _i10) * pos;\n      pos -= 1;\n      if (pos < 2) {\n        pos = 9;\n      }\n    }\n    result = sum % 11 < 2 ? 0 : 11 - sum % 11;\n    if (result !== parseInt(verificators.charAt(1), 10)) {\n      return false;\n    }\n    return true;\n  }\n  /*\n   * pt-PT validation function\n   * (Número de identificação fiscal (NIF), persons/entities)\n   * Verify TIN validity by calculating check (last) digit (variant of MOD 11)\n   */\n\n  function ptPtCheck(tin) {\n    var checksum = 11 - algorithms.reverseMultiplyAndSum(tin.split('').slice(0, 8).map(function (a) {\n      return parseInt(a, 10);\n    }), 9) % 11;\n    if (checksum > 9) {\n      return parseInt(tin[8], 10) === 0;\n    }\n    return checksum === parseInt(tin[8], 10);\n  }\n  /*\n   * ro-RO validation function\n   * (Cod Numeric Personal (CNP) or Cod de înregistrare fiscală (CIF),\n   * persons only)\n   * Verify CNP validity by calculating check (last) digit (test not found for CIF)\n   * Material not in DG TAXUD document sourced from:\n   * `https://en.wikipedia.org/wiki/National_identification_number#Romania`\n   */\n\n  function roRoCheck(tin) {\n    if (tin.slice(0, 4) !== '9000') {\n      // No test found for this format\n      // Extract full year using century digit if possible\n      var full_year = tin.slice(1, 3);\n      switch (tin[0]) {\n        case '1':\n        case '2':\n          full_year = \"19\".concat(full_year);\n          break;\n        case '3':\n        case '4':\n          full_year = \"18\".concat(full_year);\n          break;\n        case '5':\n        case '6':\n          full_year = \"20\".concat(full_year);\n          break;\n      } // Check date validity\n\n      var date = \"\".concat(full_year, \"/\").concat(tin.slice(3, 5), \"/\").concat(tin.slice(5, 7));\n      if (date.length === 8) {\n        if (!(0, _isDate.default)(date, 'YY/MM/DD')) {\n          return false;\n        }\n      } else if (!(0, _isDate.default)(date, 'YYYY/MM/DD')) {\n        return false;\n      } // Calculate check digit\n\n      var digits = tin.split('').map(function (a) {\n        return parseInt(a, 10);\n      });\n      var multipliers = [2, 7, 9, 1, 4, 6, 3, 5, 8, 2, 7, 9];\n      var checksum = 0;\n      for (var i = 0; i < multipliers.length; i++) {\n        checksum += digits[i] * multipliers[i];\n      }\n      if (checksum % 11 === 10) {\n        return digits[12] === 1;\n      }\n      return digits[12] === checksum % 11;\n    }\n    return true;\n  }\n  /*\n   * sk-SK validation function\n   * (Rodné číslo (RČ) or bezvýznamové identifikačné číslo (BIČ), persons only)\n   * Checks validity of pre-1954 birth numbers (rodné číslo) only\n   * Due to the introduction of the pseudo-random BIČ it is not possible to test\n   * post-1954 birth numbers without knowing whether they are BIČ or RČ beforehand\n   */\n\n  function skSkCheck(tin) {\n    if (tin.length === 9) {\n      tin = tin.replace(/\\W/, '');\n      if (tin.slice(6) === '000') {\n        return false;\n      } // Three-zero serial not assigned before 1954\n      // Extract full year from TIN length\n\n      var full_year = parseInt(tin.slice(0, 2), 10);\n      if (full_year > 53) {\n        return false;\n      }\n      if (full_year < 10) {\n        full_year = \"190\".concat(full_year);\n      } else {\n        full_year = \"19\".concat(full_year);\n      } // Extract month from TIN and normalize\n\n      var month = parseInt(tin.slice(2, 4), 10);\n      if (month > 50) {\n        month -= 50;\n      }\n      if (month < 10) {\n        month = \"0\".concat(month);\n      } // Check date validity\n\n      var date = \"\".concat(full_year, \"/\").concat(month, \"/\").concat(tin.slice(4, 6));\n      if (!(0, _isDate.default)(date, 'YYYY/MM/DD')) {\n        return false;\n      }\n    }\n    return true;\n  }\n  /*\n   * sl-SI validation function\n   * (Davčna številka, persons/entities)\n   * Verify TIN validity by calculating check (last) digit (variant of MOD 11)\n   */\n\n  function slSiCheck(tin) {\n    var checksum = 11 - algorithms.reverseMultiplyAndSum(tin.split('').slice(0, 7).map(function (a) {\n      return parseInt(a, 10);\n    }), 8) % 11;\n    if (checksum === 10) {\n      return parseInt(tin[7], 10) === 0;\n    }\n    return checksum === parseInt(tin[7], 10);\n  }\n  /*\n   * sv-SE validation function\n   * (Personnummer or samordningsnummer, persons only)\n   * Checks validity of birth date and calls luhnCheck() to validate check (last) digit\n   */\n\n  function svSeCheck(tin) {\n    // Make copy of TIN and normalize to two-digit year form\n    var tin_copy = tin.slice(0);\n    if (tin.length > 11) {\n      tin_copy = tin_copy.slice(2);\n    } // Extract date of birth\n\n    var full_year = '';\n    var month = tin_copy.slice(2, 4);\n    var day = parseInt(tin_copy.slice(4, 6), 10);\n    if (tin.length > 11) {\n      full_year = tin.slice(0, 4);\n    } else {\n      full_year = tin.slice(0, 2);\n      if (tin.length === 11 && day < 60) {\n        // Extract full year from centenarian symbol\n        // Should work just fine until year 10000 or so\n        var current_year = new Date().getFullYear().toString();\n        var current_century = parseInt(current_year.slice(0, 2), 10);\n        current_year = parseInt(current_year, 10);\n        if (tin[6] === '-') {\n          if (parseInt(\"\".concat(current_century).concat(full_year), 10) > current_year) {\n            full_year = \"\".concat(current_century - 1).concat(full_year);\n          } else {\n            full_year = \"\".concat(current_century).concat(full_year);\n          }\n        } else {\n          full_year = \"\".concat(current_century - 1).concat(full_year);\n          if (current_year - parseInt(full_year, 10) < 100) {\n            return false;\n          }\n        }\n      }\n    } // Normalize day and check date validity\n\n    if (day > 60) {\n      day -= 60;\n    }\n    if (day < 10) {\n      day = \"0\".concat(day);\n    }\n    var date = \"\".concat(full_year, \"/\").concat(month, \"/\").concat(day);\n    if (date.length === 8) {\n      if (!(0, _isDate.default)(date, 'YY/MM/DD')) {\n        return false;\n      }\n    } else if (!(0, _isDate.default)(date, 'YYYY/MM/DD')) {\n      return false;\n    }\n    return algorithms.luhnCheck(tin.replace(/\\W/, ''));\n  } // Locale lookup objects\n\n  /*\n   * Tax id regex formats for various locales\n   *\n   * Where not explicitly specified in DG-TAXUD document both\n   * uppercase and lowercase letters are acceptable.\n   */\n\n  var taxIdFormat = {\n    'bg-BG': /^\\d{10}$/,\n    'cs-CZ': /^\\d{6}\\/{0,1}\\d{3,4}$/,\n    'de-AT': /^\\d{9}$/,\n    'de-DE': /^[1-9]\\d{10}$/,\n    'dk-DK': /^\\d{6}-{0,1}\\d{4}$/,\n    'el-CY': /^[09]\\d{7}[A-Z]$/,\n    'el-GR': /^([0-4]|[7-9])\\d{8}$/,\n    'en-CA': /^\\d{9}$/,\n    'en-GB': /^\\d{10}$|^(?!GB|NK|TN|ZZ)(?![DFIQUV])[A-Z](?![DFIQUVO])[A-Z]\\d{6}[ABCD ]$/i,\n    'en-IE': /^\\d{7}[A-W][A-IW]{0,1}$/i,\n    'en-US': /^\\d{2}[- ]{0,1}\\d{7}$/,\n    'es-ES': /^(\\d{0,8}|[XYZKLM]\\d{7})[A-HJ-NP-TV-Z]$/i,\n    'et-EE': /^[1-6]\\d{6}(00[1-9]|0[1-9][0-9]|[1-6][0-9]{2}|70[0-9]|710)\\d$/,\n    'fi-FI': /^\\d{6}[-+A]\\d{3}[0-9A-FHJ-NPR-Y]$/i,\n    'fr-BE': /^\\d{11}$/,\n    'fr-FR': /^[0-3]\\d{12}$|^[0-3]\\d\\s\\d{2}(\\s\\d{3}){3}$/,\n    // Conforms both to official spec and provided example\n    'fr-LU': /^\\d{13}$/,\n    'hr-HR': /^\\d{11}$/,\n    'hu-HU': /^8\\d{9}$/,\n    'it-IT': /^[A-Z]{6}[L-NP-V0-9]{2}[A-EHLMPRST][L-NP-V0-9]{2}[A-ILMZ][L-NP-V0-9]{3}[A-Z]$/i,\n    'lv-LV': /^\\d{6}-{0,1}\\d{5}$/,\n    // Conforms both to DG TAXUD spec and original research\n    'mt-MT': /^\\d{3,7}[APMGLHBZ]$|^([1-8])\\1\\d{7}$/i,\n    'nl-NL': /^\\d{9}$/,\n    'pl-PL': /^\\d{10,11}$/,\n    'pt-BR': /(?:^\\d{11}$)|(?:^\\d{14}$)/,\n    'pt-PT': /^\\d{9}$/,\n    'ro-RO': /^\\d{13}$/,\n    'sk-SK': /^\\d{6}\\/{0,1}\\d{3,4}$/,\n    'sl-SI': /^[1-9]\\d{7}$/,\n    'sv-SE': /^(\\d{6}[-+]{0,1}\\d{4}|(18|19|20)\\d{6}[-+]{0,1}\\d{4})$/\n  }; // taxIdFormat locale aliases\n\n  taxIdFormat['lb-LU'] = taxIdFormat['fr-LU'];\n  taxIdFormat['lt-LT'] = taxIdFormat['et-EE'];\n  taxIdFormat['nl-BE'] = taxIdFormat['fr-BE'];\n  taxIdFormat['fr-CA'] = taxIdFormat['en-CA']; // Algorithmic tax id check functions for various locales\n\n  var taxIdCheck = {\n    'bg-BG': bgBgCheck,\n    'cs-CZ': csCzCheck,\n    'de-AT': deAtCheck,\n    'de-DE': deDeCheck,\n    'dk-DK': dkDkCheck,\n    'el-CY': elCyCheck,\n    'el-GR': elGrCheck,\n    'en-CA': isCanadianSIN,\n    'en-IE': enIeCheck,\n    'en-US': enUsCheck,\n    'es-ES': esEsCheck,\n    'et-EE': etEeCheck,\n    'fi-FI': fiFiCheck,\n    'fr-BE': frBeCheck,\n    'fr-FR': frFrCheck,\n    'fr-LU': frLuCheck,\n    'hr-HR': hrHrCheck,\n    'hu-HU': huHuCheck,\n    'it-IT': itItCheck,\n    'lv-LV': lvLvCheck,\n    'mt-MT': mtMtCheck,\n    'nl-NL': nlNlCheck,\n    'pl-PL': plPlCheck,\n    'pt-BR': ptBrCheck,\n    'pt-PT': ptPtCheck,\n    'ro-RO': roRoCheck,\n    'sk-SK': skSkCheck,\n    'sl-SI': slSiCheck,\n    'sv-SE': svSeCheck\n  }; // taxIdCheck locale aliases\n\n  taxIdCheck['lb-LU'] = taxIdCheck['fr-LU'];\n  taxIdCheck['lt-LT'] = taxIdCheck['et-EE'];\n  taxIdCheck['nl-BE'] = taxIdCheck['fr-BE'];\n  taxIdCheck['fr-CA'] = taxIdCheck['en-CA']; // Regexes for locales where characters should be omitted before checking format\n\n  var allsymbols = /[-\\\\\\/!@#$%\\^&\\*\\(\\)\\+\\=\\[\\]]+/g;\n  var sanitizeRegexes = {\n    'de-AT': allsymbols,\n    'de-DE': /[\\/\\\\]/g,\n    'fr-BE': allsymbols\n  }; // sanitizeRegexes locale aliases\n\n  sanitizeRegexes['nl-BE'] = sanitizeRegexes['fr-BE'];\n  /*\n   * Validator function\n   * Return true if the passed string is a valid tax identification number\n   * for the specified locale.\n   * Throw an error exception if the locale is not supported.\n   */\n\n  function isTaxID(str) {\n    var locale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'en-US';\n    (0, _assertString.default)(str); // Copy TIN to avoid replacement if sanitized\n\n    var strcopy = str.slice(0);\n    if (locale in taxIdFormat) {\n      if (locale in sanitizeRegexes) {\n        strcopy = strcopy.replace(sanitizeRegexes[locale], '');\n      }\n      if (!taxIdFormat[locale].test(strcopy)) {\n        return false;\n      }\n      if (locale in taxIdCheck) {\n        return taxIdCheck[locale](strcopy);\n      } // Fallthrough; not all locales have algorithmic checks\n\n      return true;\n    }\n    throw new Error(\"Invalid locale '\".concat(locale, \"'\"));\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(isTaxID, isTaxID.exports);\nvar isTaxIDExports = isTaxID.exports;\nvar isMobilePhone$1 = {};\nObject.defineProperty(isMobilePhone$1, \"__esModule\", {\n  value: true\n});\nisMobilePhone$1.default = isMobilePhone;\nisMobilePhone$1.locales = void 0;\nvar _assertString$4 = _interopRequireDefault$4(assertStringExports);\nfunction _interopRequireDefault$4(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\n/* eslint-disable max-len */\nvar phones = {\n  'am-AM': /^(\\+?374|0)((10|[9|7][0-9])\\d{6}$|[2-4]\\d{7}$)/,\n  'ar-AE': /^((\\+?971)|0)?5[024568]\\d{7}$/,\n  'ar-BH': /^(\\+?973)?(3|6)\\d{7}$/,\n  'ar-DZ': /^(\\+?213|0)(5|6|7)\\d{8}$/,\n  'ar-LB': /^(\\+?961)?((3|81)\\d{6}|7\\d{7})$/,\n  'ar-EG': /^((\\+?20)|0)?1[0125]\\d{8}$/,\n  'ar-IQ': /^(\\+?964|0)?7[0-9]\\d{8}$/,\n  'ar-JO': /^(\\+?962|0)?7[789]\\d{7}$/,\n  'ar-KW': /^(\\+?965)([569]\\d{7}|41\\d{6})$/,\n  'ar-LY': /^((\\+?218)|0)?(9[1-6]\\d{7}|[1-8]\\d{7,9})$/,\n  'ar-MA': /^(?:(?:\\+|00)212|0)[5-7]\\d{8}$/,\n  'ar-OM': /^((\\+|00)968)?(9[1-9])\\d{6}$/,\n  'ar-PS': /^(\\+?970|0)5[6|9](\\d{7})$/,\n  'ar-SA': /^(!?(\\+?966)|0)?5\\d{8}$/,\n  'ar-SD': /^((\\+?249)|0)?(9[012369]|1[012])\\d{7}$/,\n  'ar-SY': /^(!?(\\+?963)|0)?9\\d{8}$/,\n  'ar-TN': /^(\\+?216)?[2459]\\d{7}$/,\n  'az-AZ': /^(\\+994|0)(10|5[015]|7[07]|99)\\d{7}$/,\n  'bs-BA': /^((((\\+|00)3876)|06))((([0-3]|[5-6])\\d{6})|(4\\d{7}))$/,\n  'be-BY': /^(\\+?375)?(24|25|29|33|44)\\d{7}$/,\n  'bg-BG': /^(\\+?359|0)?8[789]\\d{7}$/,\n  'bn-BD': /^(\\+?880|0)1[13456789][0-9]{8}$/,\n  'ca-AD': /^(\\+376)?[346]\\d{5}$/,\n  'cs-CZ': /^(\\+?420)? ?[1-9][0-9]{2} ?[0-9]{3} ?[0-9]{3}$/,\n  'da-DK': /^(\\+?45)?\\s?\\d{2}\\s?\\d{2}\\s?\\d{2}\\s?\\d{2}$/,\n  'de-DE': /^((\\+49|0)1)(5[0-25-9]\\d|6([23]|0\\d?)|7([0-57-9]|6\\d))\\d{7,9}$/,\n  'de-AT': /^(\\+43|0)\\d{1,4}\\d{3,12}$/,\n  'de-CH': /^(\\+41|0)([1-9])\\d{1,9}$/,\n  'de-LU': /^(\\+352)?((6\\d1)\\d{6})$/,\n  'dv-MV': /^(\\+?960)?(7[2-9]|9[1-9])\\d{5}$/,\n  'el-GR': /^(\\+?30|0)?6(8[5-9]|9(?![26])[0-9])\\d{7}$/,\n  'el-CY': /^(\\+?357?)?(9(9|6)\\d{6})$/,\n  'en-AI': /^(\\+?1|0)264(?:2(35|92)|4(?:6[1-2]|76|97)|5(?:3[6-9]|8[1-4])|7(?:2(4|9)|72))\\d{4}$/,\n  'en-AU': /^(\\+?61|0)4\\d{8}$/,\n  'en-AG': /^(?:\\+1|1)268(?:464|7(?:1[3-9]|[28]\\d|3[0246]|64|7[0-689]))\\d{4}$/,\n  'en-BM': /^(\\+?1)?441(((3|7)\\d{6}$)|(5[0-3][0-9]\\d{4}$)|(59\\d{5}$))/,\n  'en-BS': /^(\\+?1[-\\s]?|0)?\\(?242\\)?[-\\s]?\\d{3}[-\\s]?\\d{4}$/,\n  'en-GB': /^(\\+?44|0)7\\d{9}$/,\n  'en-GG': /^(\\+?44|0)1481\\d{6}$/,\n  'en-GH': /^(\\+233|0)(20|50|24|54|27|57|26|56|23|28|55|59)\\d{7}$/,\n  'en-GY': /^(\\+592|0)6\\d{6}$/,\n  'en-HK': /^(\\+?852[-\\s]?)?[456789]\\d{3}[-\\s]?\\d{4}$/,\n  'en-MO': /^(\\+?853[-\\s]?)?[6]\\d{3}[-\\s]?\\d{4}$/,\n  'en-IE': /^(\\+?353|0)8[356789]\\d{7}$/,\n  'en-IN': /^(\\+?91|0)?[6789]\\d{9}$/,\n  'en-JM': /^(\\+?876)?\\d{7}$/,\n  'en-KE': /^(\\+?254|0)(7|1)\\d{8}$/,\n  'fr-CF': /^(\\+?236| ?)(70|75|77|72|21|22)\\d{6}$/,\n  'en-SS': /^(\\+?211|0)(9[1257])\\d{7}$/,\n  'en-KI': /^((\\+686|686)?)?( )?((6|7)(2|3|8)[0-9]{6})$/,\n  'en-KN': /^(?:\\+1|1)869(?:46\\d|48[89]|55[6-8]|66\\d|76[02-7])\\d{4}$/,\n  'en-LS': /^(\\+?266)(22|28|57|58|59|27|52)\\d{6}$/,\n  'en-MT': /^(\\+?356|0)?(99|79|77|21|27|22|25)[0-9]{6}$/,\n  'en-MU': /^(\\+?230|0)?\\d{8}$/,\n  'en-NA': /^(\\+?264|0)(6|8)\\d{7}$/,\n  'en-NG': /^(\\+?234|0)?[789]\\d{9}$/,\n  'en-NZ': /^(\\+?64|0)[28]\\d{7,9}$/,\n  'en-PG': /^(\\+?675|0)?(7\\d|8[18])\\d{6}$/,\n  'en-PK': /^((00|\\+)?92|0)3[0-6]\\d{8}$/,\n  'en-PH': /^(09|\\+639)\\d{9}$/,\n  'en-RW': /^(\\+?250|0)?[7]\\d{8}$/,\n  'en-SG': /^(\\+65)?[3689]\\d{7}$/,\n  'en-SL': /^(\\+?232|0)\\d{8}$/,\n  'en-TZ': /^(\\+?255|0)?[67]\\d{8}$/,\n  'en-UG': /^(\\+?256|0)?[7]\\d{8}$/,\n  'en-US': /^((\\+1|1)?( |-)?)?(\\([2-9][0-9]{2}\\)|[2-9][0-9]{2})( |-)?([2-9][0-9]{2}( |-)?[0-9]{4})$/,\n  'en-ZA': /^(\\+?27|0)\\d{9}$/,\n  'en-ZM': /^(\\+?26)?09[567]\\d{7}$/,\n  'en-ZW': /^(\\+263)[0-9]{9}$/,\n  'en-BW': /^(\\+?267)?(7[1-8]{1})\\d{6}$/,\n  'es-AR': /^\\+?549(11|[2368]\\d)\\d{8}$/,\n  'es-BO': /^(\\+?591)?(6|7)\\d{7}$/,\n  'es-CO': /^(\\+?57)?3(0(0|1|2|4|5)|1\\d|2[0-4]|5(0|1))\\d{7}$/,\n  'es-CL': /^(\\+?56|0)[2-9]\\d{1}\\d{7}$/,\n  'es-CR': /^(\\+506)?[2-8]\\d{7}$/,\n  'es-CU': /^(\\+53|0053)?5\\d{7}$/,\n  'es-DO': /^(\\+?1)?8[024]9\\d{7}$/,\n  'es-HN': /^(\\+?504)?[9|8|3|2]\\d{7}$/,\n  'es-EC': /^(\\+?593|0)([2-7]|9[2-9])\\d{7}$/,\n  'es-ES': /^(\\+?34)?[6|7]\\d{8}$/,\n  'es-PE': /^(\\+?51)?9\\d{8}$/,\n  'es-MX': /^(\\+?52)?(1|01)?\\d{10,11}$/,\n  'es-NI': /^(\\+?505)\\d{7,8}$/,\n  'es-PA': /^(\\+?507)\\d{7,8}$/,\n  'es-PY': /^(\\+?595|0)9[9876]\\d{7}$/,\n  'es-SV': /^(\\+?503)?[67]\\d{7}$/,\n  'es-UY': /^(\\+598|0)9[1-9][\\d]{6}$/,\n  'es-VE': /^(\\+?58)?(2|4)\\d{9}$/,\n  'et-EE': /^(\\+?372)?\\s?(5|8[1-4])\\s?([0-9]\\s?){6,7}$/,\n  'fa-IR': /^(\\+?98[\\-\\s]?|0)9[0-39]\\d[\\-\\s]?\\d{3}[\\-\\s]?\\d{4}$/,\n  'fi-FI': /^(\\+?358|0)\\s?(4[0-6]|50)\\s?(\\d\\s?){4,8}$/,\n  'fj-FJ': /^(\\+?679)?\\s?\\d{3}\\s?\\d{4}$/,\n  'fo-FO': /^(\\+?298)?\\s?\\d{2}\\s?\\d{2}\\s?\\d{2}$/,\n  'fr-BF': /^(\\+226|0)[67]\\d{7}$/,\n  'fr-BJ': /^(\\+229)\\d{8}$/,\n  'fr-CD': /^(\\+?243|0)?(8|9)\\d{8}$/,\n  'fr-CM': /^(\\+?237)6[0-9]{8}$/,\n  'fr-FR': /^(\\+?33|0)[67]\\d{8}$/,\n  'fr-GF': /^(\\+?594|0|00594)[67]\\d{8}$/,\n  'fr-GP': /^(\\+?590|0|00590)[67]\\d{8}$/,\n  'fr-MQ': /^(\\+?596|0|00596)[67]\\d{8}$/,\n  'fr-PF': /^(\\+?689)?8[789]\\d{6}$/,\n  'fr-RE': /^(\\+?262|0|00262)[67]\\d{8}$/,\n  'fr-WF': /^(\\+681)?\\d{6}$/,\n  'he-IL': /^(\\+972|0)([23489]|5[012345689]|77)[1-9]\\d{6}$/,\n  'hu-HU': /^(\\+?36|06)(20|30|31|50|70)\\d{7}$/,\n  'id-ID': /^(\\+?62|0)8(1[123456789]|2[1238]|3[1238]|5[12356789]|7[78]|9[56789]|8[123456789])([\\s?|\\d]{5,11})$/,\n  'ir-IR': /^(\\+98|0)?9\\d{9}$/,\n  'it-IT': /^(\\+?39)?\\s?3\\d{2} ?\\d{6,7}$/,\n  'it-SM': /^((\\+378)|(0549)|(\\+390549)|(\\+3780549))?6\\d{5,9}$/,\n  'ja-JP': /^(\\+81[ \\-]?(\\(0\\))?|0)[6789]0[ \\-]?\\d{4}[ \\-]?\\d{4}$/,\n  'ka-GE': /^(\\+?995)?(79\\d{7}|5\\d{8})$/,\n  'kk-KZ': /^(\\+?7|8)?7\\d{9}$/,\n  'kl-GL': /^(\\+?299)?\\s?\\d{2}\\s?\\d{2}\\s?\\d{2}$/,\n  'ko-KR': /^((\\+?82)[ \\-]?)?0?1([0|1|6|7|8|9]{1})[ \\-]?\\d{3,4}[ \\-]?\\d{4}$/,\n  'ky-KG': /^(\\+?7\\s?\\+?7|0)\\s?\\d{2}\\s?\\d{3}\\s?\\d{4}$/,\n  'lt-LT': /^(\\+370|8)\\d{8}$/,\n  'lv-LV': /^(\\+?371)2\\d{7}$/,\n  'mg-MG': /^((\\+?261|0)(2|3)\\d)?\\d{7}$/,\n  'mn-MN': /^(\\+|00|011)?976(77|81|88|91|94|95|96|99)\\d{6}$/,\n  'my-MM': /^(\\+?959|09|9)(2[5-7]|3[1-2]|4[0-5]|6[6-9]|7[5-9]|9[6-9])[0-9]{7}$/,\n  'ms-MY': /^(\\+?60|0)1(([0145](-|\\s)?\\d{7,8})|([236-9](-|\\s)?\\d{7}))$/,\n  'mz-MZ': /^(\\+?258)?8[234567]\\d{7}$/,\n  'nb-NO': /^(\\+?47)?[49]\\d{7}$/,\n  'ne-NP': /^(\\+?977)?9[78]\\d{8}$/,\n  'nl-BE': /^(\\+?32|0)4\\d{8}$/,\n  'nl-NL': /^(((\\+|00)?31\\(0\\))|((\\+|00)?31)|0)6{1}\\d{8}$/,\n  'nl-AW': /^(\\+)?297(56|59|64|73|74|99)\\d{5}$/,\n  'nn-NO': /^(\\+?47)?[49]\\d{7}$/,\n  'pl-PL': /^(\\+?48)? ?([5-8]\\d|45) ?\\d{3} ?\\d{2} ?\\d{2}$/,\n  'pt-BR': /^((\\+?55\\ ?[1-9]{2}\\ ?)|(\\+?55\\ ?\\([1-9]{2}\\)\\ ?)|(0[1-9]{2}\\ ?)|(\\([1-9]{2}\\)\\ ?)|([1-9]{2}\\ ?))((\\d{4}\\-?\\d{4})|(9[1-9]{1}\\d{3}\\-?\\d{4}))$/,\n  'pt-PT': /^(\\+?351)?9[1236]\\d{7}$/,\n  'pt-AO': /^(\\+244)\\d{9}$/,\n  'ro-MD': /^(\\+?373|0)((6(0|1|2|6|7|8|9))|(7(6|7|8|9)))\\d{6}$/,\n  'ro-RO': /^(\\+?40|0)\\s?7\\d{2}(\\/|\\s|\\.|-)?\\d{3}(\\s|\\.|-)?\\d{3}$/,\n  'ru-RU': /^(\\+?7|8)?9\\d{9}$/,\n  'si-LK': /^(?:0|94|\\+94)?(7(0|1|2|4|5|6|7|8)( |-)?)\\d{7}$/,\n  'sl-SI': /^(\\+386\\s?|0)(\\d{1}\\s?\\d{3}\\s?\\d{2}\\s?\\d{2}|\\d{2}\\s?\\d{3}\\s?\\d{3})$/,\n  'sk-SK': /^(\\+?421)? ?[1-9][0-9]{2} ?[0-9]{3} ?[0-9]{3}$/,\n  'so-SO': /^(\\+?252|0)((6[0-9])\\d{7}|(7[1-9])\\d{7})$/,\n  'sq-AL': /^(\\+355|0)6[789]\\d{6}$/,\n  'sr-RS': /^(\\+3816|06)[- \\d]{5,9}$/,\n  'sv-SE': /^(\\+?46|0)[\\s\\-]?7[\\s\\-]?[02369]([\\s\\-]?\\d){7}$/,\n  'tg-TJ': /^(\\+?992)?[5][5]\\d{7}$/,\n  'th-TH': /^(\\+66|66|0)\\d{9}$/,\n  'tr-TR': /^(\\+?90|0)?5\\d{9}$/,\n  'tk-TM': /^(\\+993|993|8)\\d{8}$/,\n  'uk-UA': /^(\\+?38|8)?0\\d{9}$/,\n  'uz-UZ': /^(\\+?998)?(6[125-79]|7[1-69]|88|9\\d)\\d{7}$/,\n  'vi-VN': /^((\\+?84)|0)((3([2-9]))|(5([25689]))|(7([0|6-9]))|(8([1-9]))|(9([0-9])))([0-9]{7})$/,\n  'zh-CN': /^((\\+|00)86)?(1[3-9]|9[28])\\d{9}$/,\n  'zh-TW': /^(\\+?886\\-?|0)?9\\d{8}$/,\n  'dz-BT': /^(\\+?975|0)?(17|16|77|02)\\d{6}$/,\n  'ar-YE': /^(((\\+|00)9677|0?7)[0137]\\d{7}|((\\+|00)967|0)[1-7]\\d{6})$/,\n  'ar-EH': /^(\\+?212|0)[\\s\\-]?(5288|5289)[\\s\\-]?\\d{5}$/,\n  'fa-AF': /^(\\+93|0)?(2{1}[0-8]{1}|[3-5]{1}[0-4]{1})(\\d{7})$/\n};\n/* eslint-enable max-len */\n// aliases\n\nphones['en-CA'] = phones['en-US'];\nphones['fr-CA'] = phones['en-CA'];\nphones['fr-BE'] = phones['nl-BE'];\nphones['zh-HK'] = phones['en-HK'];\nphones['zh-MO'] = phones['en-MO'];\nphones['ga-IE'] = phones['en-IE'];\nphones['fr-CH'] = phones['de-CH'];\nphones['it-CH'] = phones['fr-CH'];\nfunction isMobilePhone(str, locale, options) {\n  (0, _assertString$4.default)(str);\n  if (options && options.strictMode && !str.startsWith('+')) {\n    return false;\n  }\n  if (Array.isArray(locale)) {\n    return locale.some(function (key) {\n      // https://github.com/gotwarlost/istanbul/blob/master/ignoring-code-for-coverage.md#ignoring-code-for-coverage-purposes\n      // istanbul ignore else\n      if (phones.hasOwnProperty(key)) {\n        var phone = phones[key];\n        if (phone.test(str)) {\n          return true;\n        }\n      }\n      return false;\n    });\n  } else if (locale in phones) {\n    return phones[locale].test(str); // alias falsey locale as 'any'\n  } else if (!locale || locale === 'any') {\n    for (var key in phones) {\n      // istanbul ignore else\n      if (phones.hasOwnProperty(key)) {\n        var phone = phones[key];\n        if (phone.test(str)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n  throw new Error(\"Invalid locale '\".concat(locale, \"'\"));\n}\nvar locales$1 = Object.keys(phones);\nisMobilePhone$1.locales = locales$1;\nvar isEthereumAddress = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isEthereumAddress;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  var eth = /^(0x)[0-9a-f]{40}$/i;\n  function isEthereumAddress(str) {\n    (0, _assertString.default)(str);\n    return eth.test(str);\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(isEthereumAddress, isEthereumAddress.exports);\nvar isEthereumAddressExports = isEthereumAddress.exports;\nvar isCurrency = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isCurrency;\n  var _merge = _interopRequireDefault(mergeExports);\n  var _assertString = _interopRequireDefault(assertStringExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  function currencyRegex(options) {\n    var decimal_digits = \"\\\\d{\".concat(options.digits_after_decimal[0], \"}\");\n    options.digits_after_decimal.forEach(function (digit, index) {\n      if (index !== 0) decimal_digits = \"\".concat(decimal_digits, \"|\\\\d{\").concat(digit, \"}\");\n    });\n    var symbol = \"(\".concat(options.symbol.replace(/\\W/, function (m) {\n        return \"\\\\\".concat(m);\n      }), \")\").concat(options.require_symbol ? '' : '?'),\n      negative = '-?',\n      whole_dollar_amount_without_sep = '[1-9]\\\\d*',\n      whole_dollar_amount_with_sep = \"[1-9]\\\\d{0,2}(\\\\\".concat(options.thousands_separator, \"\\\\d{3})*\"),\n      valid_whole_dollar_amounts = ['0', whole_dollar_amount_without_sep, whole_dollar_amount_with_sep],\n      whole_dollar_amount = \"(\".concat(valid_whole_dollar_amounts.join('|'), \")?\"),\n      decimal_amount = \"(\\\\\".concat(options.decimal_separator, \"(\").concat(decimal_digits, \"))\").concat(options.require_decimal ? '' : '?');\n    var pattern = whole_dollar_amount + (options.allow_decimal || options.require_decimal ? decimal_amount : ''); // default is negative sign before symbol, but there are two other options (besides parens)\n\n    if (options.allow_negatives && !options.parens_for_negatives) {\n      if (options.negative_sign_after_digits) {\n        pattern += negative;\n      } else if (options.negative_sign_before_digits) {\n        pattern = negative + pattern;\n      }\n    } // South African Rand, for example, uses R 123 (space) and R-123 (no space)\n\n    if (options.allow_negative_sign_placeholder) {\n      pattern = \"( (?!\\\\-))?\".concat(pattern);\n    } else if (options.allow_space_after_symbol) {\n      pattern = \" ?\".concat(pattern);\n    } else if (options.allow_space_after_digits) {\n      pattern += '( (?!$))?';\n    }\n    if (options.symbol_after_digits) {\n      pattern += symbol;\n    } else {\n      pattern = symbol + pattern;\n    }\n    if (options.allow_negatives) {\n      if (options.parens_for_negatives) {\n        pattern = \"(\\\\(\".concat(pattern, \"\\\\)|\").concat(pattern, \")\");\n      } else if (!(options.negative_sign_before_digits || options.negative_sign_after_digits)) {\n        pattern = negative + pattern;\n      }\n    } // ensure there's a dollar and/or decimal amount, and that\n    // it doesn't start with a space or a negative sign followed by a space\n\n    return new RegExp(\"^(?!-? )(?=.*\\\\d)\".concat(pattern, \"$\"));\n  }\n  var default_currency_options = {\n    symbol: '$',\n    require_symbol: false,\n    allow_space_after_symbol: false,\n    symbol_after_digits: false,\n    allow_negatives: true,\n    parens_for_negatives: false,\n    negative_sign_before_digits: false,\n    negative_sign_after_digits: false,\n    allow_negative_sign_placeholder: false,\n    thousands_separator: ',',\n    decimal_separator: '.',\n    allow_decimal: true,\n    require_decimal: false,\n    digits_after_decimal: [2],\n    allow_space_after_digits: false\n  };\n  function isCurrency(str, options) {\n    (0, _assertString.default)(str);\n    options = (0, _merge.default)(options, default_currency_options);\n    return currencyRegex(options).test(str);\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(isCurrency, isCurrency.exports);\nvar isCurrencyExports = isCurrency.exports;\nvar isBtcAddress = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isBtcAddress;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  var bech32 = /^(bc1)[a-z0-9]{25,39}$/;\n  var base58 = /^(1|3)[A-HJ-NP-Za-km-z1-9]{25,39}$/;\n  function isBtcAddress(str) {\n    (0, _assertString.default)(str);\n    return bech32.test(str) || base58.test(str);\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(isBtcAddress, isBtcAddress.exports);\nvar isBtcAddressExports = isBtcAddress.exports;\nvar isISO6346$1 = {};\nObject.defineProperty(isISO6346$1, \"__esModule\", {\n  value: true\n});\nisISO6346$1.isISO6346 = isISO6346;\nisISO6346$1.isFreightContainerID = void 0;\nvar _assertString$3 = _interopRequireDefault$3(assertStringExports);\nfunction _interopRequireDefault$3(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\n// https://en.wikipedia.org/wiki/ISO_6346\n// according to ISO6346 standard, checksum digit is mandatory for freight container but recommended\n// for other container types (J and Z)\nvar isISO6346Str = /^[A-Z]{3}(U[0-9]{7})|([J,Z][0-9]{6,7})$/;\nvar isDigit = /^[0-9]$/;\nfunction isISO6346(str) {\n  (0, _assertString$3.default)(str);\n  str = str.toUpperCase();\n  if (!isISO6346Str.test(str)) return false;\n  if (str.length === 11) {\n    var sum = 0;\n    for (var i = 0; i < str.length - 1; i++) {\n      if (!isDigit.test(str[i])) {\n        var convertedCode = void 0;\n        var letterCode = str.charCodeAt(i) - 55;\n        if (letterCode < 11) convertedCode = letterCode;else if (letterCode >= 11 && letterCode <= 20) convertedCode = 12 + letterCode % 11;else if (letterCode >= 21 && letterCode <= 30) convertedCode = 23 + letterCode % 21;else convertedCode = 34 + letterCode % 31;\n        sum += convertedCode * Math.pow(2, i);\n      } else sum += str[i] * Math.pow(2, i);\n    }\n    var checkSumDigit = sum % 11;\n    return Number(str[str.length - 1]) === checkSumDigit;\n  }\n  return true;\n}\nvar isFreightContainerID = isISO6346;\nisISO6346$1.isFreightContainerID = isFreightContainerID;\nvar isISO6391 = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isISO6391;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  var isISO6391Set = new Set(['aa', 'ab', 'ae', 'af', 'ak', 'am', 'an', 'ar', 'as', 'av', 'ay', 'az', 'az', 'ba', 'be', 'bg', 'bh', 'bi', 'bm', 'bn', 'bo', 'br', 'bs', 'ca', 'ce', 'ch', 'co', 'cr', 'cs', 'cu', 'cv', 'cy', 'da', 'de', 'dv', 'dz', 'ee', 'el', 'en', 'eo', 'es', 'et', 'eu', 'fa', 'ff', 'fi', 'fj', 'fo', 'fr', 'fy', 'ga', 'gd', 'gl', 'gn', 'gu', 'gv', 'ha', 'he', 'hi', 'ho', 'hr', 'ht', 'hu', 'hy', 'hz', 'ia', 'id', 'ie', 'ig', 'ii', 'ik', 'io', 'is', 'it', 'iu', 'ja', 'jv', 'ka', 'kg', 'ki', 'kj', 'kk', 'kl', 'km', 'kn', 'ko', 'kr', 'ks', 'ku', 'kv', 'kw', 'ky', 'la', 'lb', 'lg', 'li', 'ln', 'lo', 'lt', 'lu', 'lv', 'mg', 'mh', 'mi', 'mk', 'ml', 'mn', 'mr', 'ms', 'mt', 'my', 'na', 'nb', 'nd', 'ne', 'ng', 'nl', 'nn', 'no', 'nr', 'nv', 'ny', 'oc', 'oj', 'om', 'or', 'os', 'pa', 'pi', 'pl', 'ps', 'pt', 'qu', 'rm', 'rn', 'ro', 'ru', 'rw', 'sa', 'sc', 'sd', 'se', 'sg', 'si', 'sk', 'sl', 'sm', 'sn', 'so', 'sq', 'sr', 'ss', 'st', 'su', 'sv', 'sw', 'ta', 'te', 'tg', 'th', 'ti', 'tk', 'tl', 'tn', 'to', 'tr', 'ts', 'tt', 'tw', 'ty', 'ug', 'uk', 'ur', 'uz', 've', 'vi', 'vo', 'wa', 'wo', 'xh', 'yi', 'yo', 'za', 'zh', 'zu']);\n  function isISO6391(str) {\n    (0, _assertString.default)(str);\n    return isISO6391Set.has(str);\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(isISO6391, isISO6391.exports);\nvar isISO6391Exports = isISO6391.exports;\nvar isISO8601 = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isISO8601;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  /* eslint-disable max-len */\n  // from http://goo.gl/0ejHHW\n  var iso8601 = /^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-3])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$/; // same as above, except with a strict 'T' separator between date and time\n\n  var iso8601StrictSeparator = /^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-3])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$/;\n  /* eslint-enable max-len */\n\n  var isValidDate = function isValidDate(str) {\n    // str must have passed the ISO8601 check\n    // this check is meant to catch invalid dates\n    // like 2009-02-31\n    // first check for ordinal dates\n    var ordinalMatch = str.match(/^(\\d{4})-?(\\d{3})([ T]{1}\\.*|$)/);\n    if (ordinalMatch) {\n      var oYear = Number(ordinalMatch[1]);\n      var oDay = Number(ordinalMatch[2]); // if is leap year\n\n      if (oYear % 4 === 0 && oYear % 100 !== 0 || oYear % 400 === 0) return oDay <= 366;\n      return oDay <= 365;\n    }\n    var match = str.match(/(\\d{4})-?(\\d{0,2})-?(\\d*)/).map(Number);\n    var year = match[1];\n    var month = match[2];\n    var day = match[3];\n    var monthString = month ? \"0\".concat(month).slice(-2) : month;\n    var dayString = day ? \"0\".concat(day).slice(-2) : day; // create a date object and compare\n\n    var d = new Date(\"\".concat(year, \"-\").concat(monthString || '01', \"-\").concat(dayString || '01'));\n    if (month && day) {\n      return d.getUTCFullYear() === year && d.getUTCMonth() + 1 === month && d.getUTCDate() === day;\n    }\n    return true;\n  };\n  function isISO8601(str) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    (0, _assertString.default)(str);\n    var check = options.strictSeparator ? iso8601StrictSeparator.test(str) : iso8601.test(str);\n    if (check && options.strict) return isValidDate(str);\n    return check;\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(isISO8601, isISO8601.exports);\nvar isISO8601Exports = isISO8601.exports;\nvar isRFC3339 = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isRFC3339;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  /* Based on https://tools.ietf.org/html/rfc3339#section-5.6 */\n  var dateFullYear = /[0-9]{4}/;\n  var dateMonth = /(0[1-9]|1[0-2])/;\n  var dateMDay = /([12]\\d|0[1-9]|3[01])/;\n  var timeHour = /([01][0-9]|2[0-3])/;\n  var timeMinute = /[0-5][0-9]/;\n  var timeSecond = /([0-5][0-9]|60)/;\n  var timeSecFrac = /(\\.[0-9]+)?/;\n  var timeNumOffset = new RegExp(\"[-+]\".concat(timeHour.source, \":\").concat(timeMinute.source));\n  var timeOffset = new RegExp(\"([zZ]|\".concat(timeNumOffset.source, \")\"));\n  var partialTime = new RegExp(\"\".concat(timeHour.source, \":\").concat(timeMinute.source, \":\").concat(timeSecond.source).concat(timeSecFrac.source));\n  var fullDate = new RegExp(\"\".concat(dateFullYear.source, \"-\").concat(dateMonth.source, \"-\").concat(dateMDay.source));\n  var fullTime = new RegExp(\"\".concat(partialTime.source).concat(timeOffset.source));\n  var rfc3339 = new RegExp(\"^\".concat(fullDate.source, \"[ tT]\").concat(fullTime.source, \"$\"));\n  function isRFC3339(str) {\n    (0, _assertString.default)(str);\n    return rfc3339.test(str);\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(isRFC3339, isRFC3339.exports);\nvar isRFC3339Exports = isRFC3339.exports;\nvar isISO31661Alpha3 = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isISO31661Alpha3;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  // from https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3\n  var validISO31661Alpha3CountriesCodes = new Set(['AFG', 'ALA', 'ALB', 'DZA', 'ASM', 'AND', 'AGO', 'AIA', 'ATA', 'ATG', 'ARG', 'ARM', 'ABW', 'AUS', 'AUT', 'AZE', 'BHS', 'BHR', 'BGD', 'BRB', 'BLR', 'BEL', 'BLZ', 'BEN', 'BMU', 'BTN', 'BOL', 'BES', 'BIH', 'BWA', 'BVT', 'BRA', 'IOT', 'BRN', 'BGR', 'BFA', 'BDI', 'KHM', 'CMR', 'CAN', 'CPV', 'CYM', 'CAF', 'TCD', 'CHL', 'CHN', 'CXR', 'CCK', 'COL', 'COM', 'COG', 'COD', 'COK', 'CRI', 'CIV', 'HRV', 'CUB', 'CUW', 'CYP', 'CZE', 'DNK', 'DJI', 'DMA', 'DOM', 'ECU', 'EGY', 'SLV', 'GNQ', 'ERI', 'EST', 'ETH', 'FLK', 'FRO', 'FJI', 'FIN', 'FRA', 'GUF', 'PYF', 'ATF', 'GAB', 'GMB', 'GEO', 'DEU', 'GHA', 'GIB', 'GRC', 'GRL', 'GRD', 'GLP', 'GUM', 'GTM', 'GGY', 'GIN', 'GNB', 'GUY', 'HTI', 'HMD', 'VAT', 'HND', 'HKG', 'HUN', 'ISL', 'IND', 'IDN', 'IRN', 'IRQ', 'IRL', 'IMN', 'ISR', 'ITA', 'JAM', 'JPN', 'JEY', 'JOR', 'KAZ', 'KEN', 'KIR', 'PRK', 'KOR', 'KWT', 'KGZ', 'LAO', 'LVA', 'LBN', 'LSO', 'LBR', 'LBY', 'LIE', 'LTU', 'LUX', 'MAC', 'MKD', 'MDG', 'MWI', 'MYS', 'MDV', 'MLI', 'MLT', 'MHL', 'MTQ', 'MRT', 'MUS', 'MYT', 'MEX', 'FSM', 'MDA', 'MCO', 'MNG', 'MNE', 'MSR', 'MAR', 'MOZ', 'MMR', 'NAM', 'NRU', 'NPL', 'NLD', 'NCL', 'NZL', 'NIC', 'NER', 'NGA', 'NIU', 'NFK', 'MNP', 'NOR', 'OMN', 'PAK', 'PLW', 'PSE', 'PAN', 'PNG', 'PRY', 'PER', 'PHL', 'PCN', 'POL', 'PRT', 'PRI', 'QAT', 'REU', 'ROU', 'RUS', 'RWA', 'BLM', 'SHN', 'KNA', 'LCA', 'MAF', 'SPM', 'VCT', 'WSM', 'SMR', 'STP', 'SAU', 'SEN', 'SRB', 'SYC', 'SLE', 'SGP', 'SXM', 'SVK', 'SVN', 'SLB', 'SOM', 'ZAF', 'SGS', 'SSD', 'ESP', 'LKA', 'SDN', 'SUR', 'SJM', 'SWZ', 'SWE', 'CHE', 'SYR', 'TWN', 'TJK', 'TZA', 'THA', 'TLS', 'TGO', 'TKL', 'TON', 'TTO', 'TUN', 'TUR', 'TKM', 'TCA', 'TUV', 'UGA', 'UKR', 'ARE', 'GBR', 'USA', 'UMI', 'URY', 'UZB', 'VUT', 'VEN', 'VNM', 'VGB', 'VIR', 'WLF', 'ESH', 'YEM', 'ZMB', 'ZWE']);\n  function isISO31661Alpha3(str) {\n    (0, _assertString.default)(str);\n    return validISO31661Alpha3CountriesCodes.has(str.toUpperCase());\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(isISO31661Alpha3, isISO31661Alpha3.exports);\nvar isISO31661Alpha3Exports = isISO31661Alpha3.exports;\nvar isISO4217$1 = {};\nObject.defineProperty(isISO4217$1, \"__esModule\", {\n  value: true\n});\nisISO4217$1.default = isISO4217;\nisISO4217$1.CurrencyCodes = void 0;\nvar _assertString$2 = _interopRequireDefault$2(assertStringExports);\nfunction _interopRequireDefault$2(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\n// from https://en.wikipedia.org/wiki/ISO_4217\nvar validISO4217CurrencyCodes = new Set(['AED', 'AFN', 'ALL', 'AMD', 'ANG', 'AOA', 'ARS', 'AUD', 'AWG', 'AZN', 'BAM', 'BBD', 'BDT', 'BGN', 'BHD', 'BIF', 'BMD', 'BND', 'BOB', 'BOV', 'BRL', 'BSD', 'BTN', 'BWP', 'BYN', 'BZD', 'CAD', 'CDF', 'CHE', 'CHF', 'CHW', 'CLF', 'CLP', 'CNY', 'COP', 'COU', 'CRC', 'CUC', 'CUP', 'CVE', 'CZK', 'DJF', 'DKK', 'DOP', 'DZD', 'EGP', 'ERN', 'ETB', 'EUR', 'FJD', 'FKP', 'GBP', 'GEL', 'GHS', 'GIP', 'GMD', 'GNF', 'GTQ', 'GYD', 'HKD', 'HNL', 'HRK', 'HTG', 'HUF', 'IDR', 'ILS', 'INR', 'IQD', 'IRR', 'ISK', 'JMD', 'JOD', 'JPY', 'KES', 'KGS', 'KHR', 'KMF', 'KPW', 'KRW', 'KWD', 'KYD', 'KZT', 'LAK', 'LBP', 'LKR', 'LRD', 'LSL', 'LYD', 'MAD', 'MDL', 'MGA', 'MKD', 'MMK', 'MNT', 'MOP', 'MRU', 'MUR', 'MVR', 'MWK', 'MXN', 'MXV', 'MYR', 'MZN', 'NAD', 'NGN', 'NIO', 'NOK', 'NPR', 'NZD', 'OMR', 'PAB', 'PEN', 'PGK', 'PHP', 'PKR', 'PLN', 'PYG', 'QAR', 'RON', 'RSD', 'RUB', 'RWF', 'SAR', 'SBD', 'SCR', 'SDG', 'SEK', 'SGD', 'SHP', 'SLL', 'SOS', 'SRD', 'SSP', 'STN', 'SVC', 'SYP', 'SZL', 'THB', 'TJS', 'TMT', 'TND', 'TOP', 'TRY', 'TTD', 'TWD', 'TZS', 'UAH', 'UGX', 'USD', 'USN', 'UYI', 'UYU', 'UYW', 'UZS', 'VES', 'VND', 'VUV', 'WST', 'XAF', 'XAG', 'XAU', 'XBA', 'XBB', 'XBC', 'XBD', 'XCD', 'XDR', 'XOF', 'XPD', 'XPF', 'XPT', 'XSU', 'XTS', 'XUA', 'XXX', 'YER', 'ZAR', 'ZMW', 'ZWL']);\nfunction isISO4217(str) {\n  (0, _assertString$2.default)(str);\n  return validISO4217CurrencyCodes.has(str.toUpperCase());\n}\nvar CurrencyCodes = validISO4217CurrencyCodes;\nisISO4217$1.CurrencyCodes = CurrencyCodes;\nvar isBase32 = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isBase32;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  var _merge = _interopRequireDefault(mergeExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  var base32 = /^[A-Z2-7]+=*$/;\n  var crockfordBase32 = /^[A-HJKMNP-TV-Z0-9]+$/;\n  var defaultBase32Options = {\n    crockford: false\n  };\n  function isBase32(str, options) {\n    (0, _assertString.default)(str);\n    options = (0, _merge.default)(options, defaultBase32Options);\n    if (options.crockford) {\n      return crockfordBase32.test(str);\n    }\n    var len = str.length;\n    if (len % 8 === 0 && base32.test(str)) {\n      return true;\n    }\n    return false;\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(isBase32, isBase32.exports);\nvar isBase32Exports = isBase32.exports;\nvar isBase58 = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isBase58;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  // Accepted chars - 123456789ABCDEFGH JKLMN PQRSTUVWXYZabcdefghijk mnopqrstuvwxyz\n  var base58Reg = /^[A-HJ-NP-Za-km-z1-9]*$/;\n  function isBase58(str) {\n    (0, _assertString.default)(str);\n    if (base58Reg.test(str)) {\n      return true;\n    }\n    return false;\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(isBase58, isBase58.exports);\nvar isBase58Exports = isBase58.exports;\nvar isDataURI = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isDataURI;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  var validMediaType = /^[a-z]+\\/[a-z0-9\\-\\+\\._]+$/i;\n  var validAttribute = /^[a-z\\-]+=[a-z0-9\\-]+$/i;\n  var validData = /^[a-z0-9!\\$&'\\(\\)\\*\\+,;=\\-\\._~:@\\/\\?%\\s]*$/i;\n  function isDataURI(str) {\n    (0, _assertString.default)(str);\n    var data = str.split(',');\n    if (data.length < 2) {\n      return false;\n    }\n    var attributes = data.shift().trim().split(';');\n    var schemeAndMediaType = attributes.shift();\n    if (schemeAndMediaType.slice(0, 5) !== 'data:') {\n      return false;\n    }\n    var mediaType = schemeAndMediaType.slice(5);\n    if (mediaType !== '' && !validMediaType.test(mediaType)) {\n      return false;\n    }\n    for (var i = 0; i < attributes.length; i++) {\n      if (!(i === attributes.length - 1 && attributes[i].toLowerCase() === 'base64') && !validAttribute.test(attributes[i])) {\n        return false;\n      }\n    }\n    for (var _i = 0; _i < data.length; _i++) {\n      if (!validData.test(data[_i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(isDataURI, isDataURI.exports);\nvar isDataURIExports = isDataURI.exports;\nvar isMagnetURI = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isMagnetURI;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  var magnetURIComponent = /(?:^magnet:\\?|[^?&]&)xt(?:\\.1)?=urn:(?:(?:aich|bitprint|btih|ed2k|ed2khash|kzhash|md5|sha1|tree:tiger):[a-z0-9]{32}(?:[a-z0-9]{8})?|btmh:1220[a-z0-9]{64})(?:$|&)/i;\n  function isMagnetURI(url) {\n    (0, _assertString.default)(url);\n    if (url.indexOf('magnet:?') !== 0) {\n      return false;\n    }\n    return magnetURIComponent.test(url);\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(isMagnetURI, isMagnetURI.exports);\nvar isMagnetURIExports = isMagnetURI.exports;\nvar isMailtoURI = {\n  exports: {}\n};\nvar trim = {\n  exports: {}\n};\nvar rtrim = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = rtrim;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  function rtrim(str, chars) {\n    (0, _assertString.default)(str);\n    if (chars) {\n      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#Escaping\n      var pattern = new RegExp(\"[\".concat(chars.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'), \"]+$\"), 'g');\n      return str.replace(pattern, '');\n    } // Use a faster and more safe than regex trim method https://blog.stevenlevithan.com/archives/faster-trim-javascript\n\n    var strIndex = str.length - 1;\n    while (/\\s/.test(str.charAt(strIndex))) {\n      strIndex -= 1;\n    }\n    return str.slice(0, strIndex + 1);\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(rtrim, rtrim.exports);\nvar rtrimExports = rtrim.exports;\nvar ltrim = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = ltrim;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  function ltrim(str, chars) {\n    (0, _assertString.default)(str); // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#Escaping\n\n    var pattern = chars ? new RegExp(\"^[\".concat(chars.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'), \"]+\"), 'g') : /^\\s+/g;\n    return str.replace(pattern, '');\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(ltrim, ltrim.exports);\nvar ltrimExports = ltrim.exports;\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = trim;\n  var _rtrim = _interopRequireDefault(rtrimExports);\n  var _ltrim = _interopRequireDefault(ltrimExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  function trim(str, chars) {\n    return (0, _rtrim.default)((0, _ltrim.default)(str, chars), chars);\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(trim, trim.exports);\nvar trimExports = trim.exports;\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isMailtoURI;\n  var _trim = _interopRequireDefault(trimExports);\n  var _isEmail = _interopRequireDefault(isEmailExports);\n  var _assertString = _interopRequireDefault(assertStringExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  function _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n  }\n  function _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  function _iterableToArrayLimit(arr, i) {\n    if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n  function _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n  }\n  function _createForOfIteratorHelper(o, allowArrayLike) {\n    var it;\n    if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n      if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n        if (it) o = it;\n        var i = 0;\n        var F = function F() {};\n        return {\n          s: F,\n          n: function n() {\n            if (i >= o.length) return {\n              done: true\n            };\n            return {\n              done: false,\n              value: o[i++]\n            };\n          },\n          e: function e(_e2) {\n            throw _e2;\n          },\n          f: F\n        };\n      }\n      throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n    }\n    var normalCompletion = true,\n      didErr = false,\n      err;\n    return {\n      s: function s() {\n        it = o[Symbol.iterator]();\n      },\n      n: function n() {\n        var step = it.next();\n        normalCompletion = step.done;\n        return step;\n      },\n      e: function e(_e3) {\n        didErr = true;\n        err = _e3;\n      },\n      f: function f() {\n        try {\n          if (!normalCompletion && it.return != null) it.return();\n        } finally {\n          if (didErr) throw err;\n        }\n      }\n    };\n  }\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for (var i = 0, arr2 = new Array(len); i < len; i++) {\n      arr2[i] = arr[i];\n    }\n    return arr2;\n  }\n  function parseMailtoQueryString(queryString) {\n    var allowedParams = new Set(['subject', 'body', 'cc', 'bcc']),\n      query = {\n        cc: '',\n        bcc: ''\n      };\n    var isParseFailed = false;\n    var queryParams = queryString.split('&');\n    if (queryParams.length > 4) {\n      return false;\n    }\n    var _iterator = _createForOfIteratorHelper(queryParams),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var q = _step.value;\n        var _q$split = q.split('='),\n          _q$split2 = _slicedToArray(_q$split, 2),\n          key = _q$split2[0],\n          value = _q$split2[1]; // checked for invalid and duplicated query params\n\n        if (key && !allowedParams.has(key)) {\n          isParseFailed = true;\n          break;\n        }\n        if (value && (key === 'cc' || key === 'bcc')) {\n          query[key] = value;\n        }\n        if (key) {\n          allowedParams.delete(key);\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    return isParseFailed ? false : query;\n  }\n  function isMailtoURI(url, options) {\n    (0, _assertString.default)(url);\n    if (url.indexOf('mailto:') !== 0) {\n      return false;\n    }\n    var _url$replace$split = url.replace('mailto:', '').split('?'),\n      _url$replace$split2 = _slicedToArray(_url$replace$split, 2),\n      _url$replace$split2$ = _url$replace$split2[0],\n      to = _url$replace$split2$ === void 0 ? '' : _url$replace$split2$,\n      _url$replace$split2$2 = _url$replace$split2[1],\n      queryString = _url$replace$split2$2 === void 0 ? '' : _url$replace$split2$2;\n    if (!to && !queryString) {\n      return true;\n    }\n    var query = parseMailtoQueryString(queryString);\n    if (!query) {\n      return false;\n    }\n    return \"\".concat(to, \",\").concat(query.cc, \",\").concat(query.bcc).split(',').every(function (email) {\n      email = (0, _trim.default)(email, ' ');\n      if (email) {\n        return (0, _isEmail.default)(email, options);\n      }\n      return true;\n    });\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(isMailtoURI, isMailtoURI.exports);\nvar isMailtoURIExports = isMailtoURI.exports;\nvar isMimeType = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isMimeType;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  /*\n    Checks if the provided string matches to a correct Media type format (MIME type)\n  \t  This function only checks is the string format follows the\n    etablished rules by the according RFC specifications.\n    This function supports 'charset' in textual media types\n    (https://tools.ietf.org/html/rfc6657).\n  \t  This function does not check against all the media types listed\n    by the IANA (https://www.iana.org/assignments/media-types/media-types.xhtml)\n    because of lightness purposes : it would require to include\n    all these MIME types in this librairy, which would weigh it\n    significantly. This kind of effort maybe is not worth for the use that\n    this function has in this entire librairy.\n  \t  More informations in the RFC specifications :\n    - https://tools.ietf.org/html/rfc2045\n    - https://tools.ietf.org/html/rfc2046\n    - https://tools.ietf.org/html/rfc7231#section-3.1.1.1\n    - https://tools.ietf.org/html/rfc7231#section-3.1.1.5\n  */\n  // Match simple MIME types\n  // NB :\n  //   Subtype length must not exceed 100 characters.\n  //   This rule does not comply to the RFC specs (what is the max length ?).\n  var mimeTypeSimple = /^(application|audio|font|image|message|model|multipart|text|video)\\/[a-zA-Z0-9\\.\\-\\+_]{1,100}$/i; // eslint-disable-line max-len\n  // Handle \"charset\" in \"text/*\"\n\n  var mimeTypeText = /^text\\/[a-zA-Z0-9\\.\\-\\+]{1,100};\\s?charset=(\"[a-zA-Z0-9\\.\\-\\+\\s]{0,70}\"|[a-zA-Z0-9\\.\\-\\+]{0,70})(\\s?\\([a-zA-Z0-9\\.\\-\\+\\s]{1,20}\\))?$/i; // eslint-disable-line max-len\n  // Handle \"boundary\" in \"multipart/*\"\n\n  var mimeTypeMultipart = /^multipart\\/[a-zA-Z0-9\\.\\-\\+]{1,100}(;\\s?(boundary|charset)=(\"[a-zA-Z0-9\\.\\-\\+\\s]{0,70}\"|[a-zA-Z0-9\\.\\-\\+]{0,70})(\\s?\\([a-zA-Z0-9\\.\\-\\+\\s]{1,20}\\))?){0,2}$/i; // eslint-disable-line max-len\n\n  function isMimeType(str) {\n    (0, _assertString.default)(str);\n    return mimeTypeSimple.test(str) || mimeTypeText.test(str) || mimeTypeMultipart.test(str);\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(isMimeType, isMimeType.exports);\nvar isMimeTypeExports = isMimeType.exports;\nvar isLatLong = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isLatLong;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  var _merge = _interopRequireDefault(mergeExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  var lat = /^\\(?[+-]?(90(\\.0+)?|[1-8]?\\d(\\.\\d+)?)$/;\n  var long = /^\\s?[+-]?(180(\\.0+)?|1[0-7]\\d(\\.\\d+)?|\\d{1,2}(\\.\\d+)?)\\)?$/;\n  var latDMS = /^(([1-8]?\\d)\\D+([1-5]?\\d|60)\\D+([1-5]?\\d|60)(\\.\\d+)?|90\\D+0\\D+0)\\D+[NSns]?$/i;\n  var longDMS = /^\\s*([1-7]?\\d{1,2}\\D+([1-5]?\\d|60)\\D+([1-5]?\\d|60)(\\.\\d+)?|180\\D+0\\D+0)\\D+[EWew]?$/i;\n  var defaultLatLongOptions = {\n    checkDMS: false\n  };\n  function isLatLong(str, options) {\n    (0, _assertString.default)(str);\n    options = (0, _merge.default)(options, defaultLatLongOptions);\n    if (!str.includes(',')) return false;\n    var pair = str.split(',');\n    if (pair[0].startsWith('(') && !pair[1].endsWith(')') || pair[1].endsWith(')') && !pair[0].startsWith('(')) return false;\n    if (options.checkDMS) {\n      return latDMS.test(pair[0]) && longDMS.test(pair[1]);\n    }\n    return lat.test(pair[0]) && long.test(pair[1]);\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(isLatLong, isLatLong.exports);\nvar isLatLongExports = isLatLong.exports;\nvar isPostalCode$1 = {};\nObject.defineProperty(isPostalCode$1, \"__esModule\", {\n  value: true\n});\nisPostalCode$1.default = isPostalCode;\nisPostalCode$1.locales = void 0;\nvar _assertString$1 = _interopRequireDefault$1(assertStringExports);\nfunction _interopRequireDefault$1(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\n// common patterns\nvar threeDigit = /^\\d{3}$/;\nvar fourDigit = /^\\d{4}$/;\nvar fiveDigit = /^\\d{5}$/;\nvar sixDigit = /^\\d{6}$/;\nvar patterns = {\n  AD: /^AD\\d{3}$/,\n  AT: fourDigit,\n  AU: fourDigit,\n  AZ: /^AZ\\d{4}$/,\n  BA: /^([7-8]\\d{4}$)/,\n  BE: fourDigit,\n  BG: fourDigit,\n  BR: /^\\d{5}-\\d{3}$/,\n  BY: /^2[1-4]\\d{4}$/,\n  CA: /^[ABCEGHJKLMNPRSTVXY]\\d[ABCEGHJ-NPRSTV-Z][\\s\\-]?\\d[ABCEGHJ-NPRSTV-Z]\\d$/i,\n  CH: fourDigit,\n  CN: /^(0[1-7]|1[012356]|2[0-7]|3[0-6]|4[0-7]|5[1-7]|6[1-7]|7[1-5]|8[1345]|9[09])\\d{4}$/,\n  CZ: /^\\d{3}\\s?\\d{2}$/,\n  DE: fiveDigit,\n  DK: fourDigit,\n  DO: fiveDigit,\n  DZ: fiveDigit,\n  EE: fiveDigit,\n  ES: /^(5[0-2]{1}|[0-4]{1}\\d{1})\\d{3}$/,\n  FI: fiveDigit,\n  FR: /^\\d{2}\\s?\\d{3}$/,\n  GB: /^(gir\\s?0aa|[a-z]{1,2}\\d[\\da-z]?\\s?(\\d[a-z]{2})?)$/i,\n  GR: /^\\d{3}\\s?\\d{2}$/,\n  HR: /^([1-5]\\d{4}$)/,\n  HT: /^HT\\d{4}$/,\n  HU: fourDigit,\n  ID: fiveDigit,\n  IE: /^(?!.*(?:o))[A-Za-z]\\d[\\dw]\\s\\w{4}$/i,\n  IL: /^(\\d{5}|\\d{7})$/,\n  IN: /^((?!10|29|35|54|55|65|66|86|87|88|89)[1-9][0-9]{5})$/,\n  IR: /^(?!(\\d)\\1{3})[13-9]{4}[1346-9][013-9]{5}$/,\n  IS: threeDigit,\n  IT: fiveDigit,\n  JP: /^\\d{3}\\-\\d{4}$/,\n  KE: fiveDigit,\n  KR: /^(\\d{5}|\\d{6})$/,\n  LI: /^(948[5-9]|949[0-7])$/,\n  LT: /^LT\\-\\d{5}$/,\n  LU: fourDigit,\n  LV: /^LV\\-\\d{4}$/,\n  LK: fiveDigit,\n  MG: threeDigit,\n  MX: fiveDigit,\n  MT: /^[A-Za-z]{3}\\s{0,1}\\d{4}$/,\n  MY: fiveDigit,\n  NL: /^\\d{4}\\s?[a-z]{2}$/i,\n  NO: fourDigit,\n  NP: /^(10|21|22|32|33|34|44|45|56|57)\\d{3}$|^(977)$/i,\n  NZ: fourDigit,\n  PL: /^\\d{2}\\-\\d{3}$/,\n  PR: /^00[679]\\d{2}([ -]\\d{4})?$/,\n  PT: /^\\d{4}\\-\\d{3}?$/,\n  RO: sixDigit,\n  RU: sixDigit,\n  SA: fiveDigit,\n  SE: /^[1-9]\\d{2}\\s?\\d{2}$/,\n  SG: sixDigit,\n  SI: fourDigit,\n  SK: /^\\d{3}\\s?\\d{2}$/,\n  TH: fiveDigit,\n  TN: fourDigit,\n  TW: /^\\d{3}(\\d{2})?$/,\n  UA: fiveDigit,\n  US: /^\\d{5}(-\\d{4})?$/,\n  ZA: fourDigit,\n  ZM: fiveDigit\n};\nvar locales = Object.keys(patterns);\nisPostalCode$1.locales = locales;\nfunction isPostalCode(str, locale) {\n  (0, _assertString$1.default)(str);\n  if (locale in patterns) {\n    return patterns[locale].test(str);\n  } else if (locale === 'any') {\n    for (var key in patterns) {\n      // https://github.com/gotwarlost/istanbul/blob/master/ignoring-code-for-coverage.md#ignoring-code-for-coverage-purposes\n      // istanbul ignore else\n      if (patterns.hasOwnProperty(key)) {\n        var pattern = patterns[key];\n        if (pattern.test(str)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n  throw new Error(\"Invalid locale '\".concat(locale, \"'\"));\n}\nvar _escape = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = escape;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  function escape(str) {\n    (0, _assertString.default)(str);\n    return str.replace(/&/g, '&amp;').replace(/\"/g, '&quot;').replace(/'/g, '&#x27;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\\//g, '&#x2F;').replace(/\\\\/g, '&#x5C;').replace(/`/g, '&#96;');\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(_escape, _escape.exports);\nvar _escapeExports = _escape.exports;\nvar _unescape = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = unescape;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  function unescape(str) {\n    (0, _assertString.default)(str);\n    return str.replace(/&quot;/g, '\"').replace(/&#x27;/g, \"'\").replace(/&lt;/g, '<').replace(/&gt;/g, '>').replace(/&#x2F;/g, '/').replace(/&#x5C;/g, '\\\\').replace(/&#96;/g, '`').replace(/&amp;/g, '&'); // &amp; replacement has to be the last one to prevent\n    // bugs with intermediate strings containing escape sequences\n    // See: https://github.com/validatorjs/validator.js/issues/1827\n  }\n\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(_unescape, _unescape.exports);\nvar _unescapeExports = _unescape.exports;\nvar stripLow = {\n  exports: {}\n};\nvar blacklist = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = blacklist;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  function blacklist(str, chars) {\n    (0, _assertString.default)(str);\n    return str.replace(new RegExp(\"[\".concat(chars, \"]+\"), 'g'), '');\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(blacklist, blacklist.exports);\nvar blacklistExports = blacklist.exports;\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = stripLow;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  var _blacklist = _interopRequireDefault(blacklistExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  function stripLow(str, keep_new_lines) {\n    (0, _assertString.default)(str);\n    var chars = keep_new_lines ? '\\\\x00-\\\\x09\\\\x0B\\\\x0C\\\\x0E-\\\\x1F\\\\x7F' : '\\\\x00-\\\\x1F\\\\x7F';\n    return (0, _blacklist.default)(str, chars);\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(stripLow, stripLow.exports);\nvar stripLowExports = stripLow.exports;\nvar whitelist = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = whitelist;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  function whitelist(str, chars) {\n    (0, _assertString.default)(str);\n    return str.replace(new RegExp(\"[^\".concat(chars, \"]+\"), 'g'), '');\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(whitelist, whitelist.exports);\nvar whitelistExports = whitelist.exports;\nvar isWhitelisted = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isWhitelisted;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  function isWhitelisted(str, chars) {\n    (0, _assertString.default)(str);\n    for (var i = str.length - 1; i >= 0; i--) {\n      if (chars.indexOf(str[i]) === -1) {\n        return false;\n      }\n    }\n    return true;\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(isWhitelisted, isWhitelisted.exports);\nvar isWhitelistedExports = isWhitelisted.exports;\nvar normalizeEmail = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = normalizeEmail;\n  var _merge = _interopRequireDefault(mergeExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  var default_normalize_email_options = {\n    // The following options apply to all email addresses\n    // Lowercases the local part of the email address.\n    // Please note this may violate RFC 5321 as per http://stackoverflow.com/a/9808332/192024).\n    // The domain is always lowercased, as per RFC 1035\n    all_lowercase: true,\n    // The following conversions are specific to GMail\n    // Lowercases the local part of the GMail address (known to be case-insensitive)\n    gmail_lowercase: true,\n    // Removes dots from the local part of the email address, as that's ignored by GMail\n    gmail_remove_dots: true,\n    // Removes the subaddress (e.g. \"+foo\") from the email address\n    gmail_remove_subaddress: true,\n    // Conversts the googlemail.com domain to gmail.com\n    gmail_convert_googlemaildotcom: true,\n    // The following conversions are specific to Outlook.com / Windows Live / Hotmail\n    // Lowercases the local part of the Outlook.com address (known to be case-insensitive)\n    outlookdotcom_lowercase: true,\n    // Removes the subaddress (e.g. \"+foo\") from the email address\n    outlookdotcom_remove_subaddress: true,\n    // The following conversions are specific to Yahoo\n    // Lowercases the local part of the Yahoo address (known to be case-insensitive)\n    yahoo_lowercase: true,\n    // Removes the subaddress (e.g. \"-foo\") from the email address\n    yahoo_remove_subaddress: true,\n    // The following conversions are specific to Yandex\n    // Lowercases the local part of the Yandex address (known to be case-insensitive)\n    yandex_lowercase: true,\n    // The following conversions are specific to iCloud\n    // Lowercases the local part of the iCloud address (known to be case-insensitive)\n    icloud_lowercase: true,\n    // Removes the subaddress (e.g. \"+foo\") from the email address\n    icloud_remove_subaddress: true\n  }; // List of domains used by iCloud\n\n  var icloud_domains = ['icloud.com', 'me.com']; // List of domains used by Outlook.com and its predecessors\n  // This list is likely incomplete.\n  // Partial reference:\n  // https://blogs.office.com/2013/04/17/outlook-com-gets-two-step-verification-sign-in-by-alias-and-new-international-domains/\n\n  var outlookdotcom_domains = ['hotmail.at', 'hotmail.be', 'hotmail.ca', 'hotmail.cl', 'hotmail.co.il', 'hotmail.co.nz', 'hotmail.co.th', 'hotmail.co.uk', 'hotmail.com', 'hotmail.com.ar', 'hotmail.com.au', 'hotmail.com.br', 'hotmail.com.gr', 'hotmail.com.mx', 'hotmail.com.pe', 'hotmail.com.tr', 'hotmail.com.vn', 'hotmail.cz', 'hotmail.de', 'hotmail.dk', 'hotmail.es', 'hotmail.fr', 'hotmail.hu', 'hotmail.id', 'hotmail.ie', 'hotmail.in', 'hotmail.it', 'hotmail.jp', 'hotmail.kr', 'hotmail.lv', 'hotmail.my', 'hotmail.ph', 'hotmail.pt', 'hotmail.sa', 'hotmail.sg', 'hotmail.sk', 'live.be', 'live.co.uk', 'live.com', 'live.com.ar', 'live.com.mx', 'live.de', 'live.es', 'live.eu', 'live.fr', 'live.it', 'live.nl', 'msn.com', 'outlook.at', 'outlook.be', 'outlook.cl', 'outlook.co.il', 'outlook.co.nz', 'outlook.co.th', 'outlook.com', 'outlook.com.ar', 'outlook.com.au', 'outlook.com.br', 'outlook.com.gr', 'outlook.com.pe', 'outlook.com.tr', 'outlook.com.vn', 'outlook.cz', 'outlook.de', 'outlook.dk', 'outlook.es', 'outlook.fr', 'outlook.hu', 'outlook.id', 'outlook.ie', 'outlook.in', 'outlook.it', 'outlook.jp', 'outlook.kr', 'outlook.lv', 'outlook.my', 'outlook.ph', 'outlook.pt', 'outlook.sa', 'outlook.sg', 'outlook.sk', 'passport.com']; // List of domains used by Yahoo Mail\n  // This list is likely incomplete\n\n  var yahoo_domains = ['rocketmail.com', 'yahoo.ca', 'yahoo.co.uk', 'yahoo.com', 'yahoo.de', 'yahoo.fr', 'yahoo.in', 'yahoo.it', 'ymail.com']; // List of domains used by yandex.ru\n\n  var yandex_domains = ['yandex.ru', 'yandex.ua', 'yandex.kz', 'yandex.com', 'yandex.by', 'ya.ru']; // replace single dots, but not multiple consecutive dots\n\n  function dotsReplacer(match) {\n    if (match.length > 1) {\n      return match;\n    }\n    return '';\n  }\n  function normalizeEmail(email, options) {\n    options = (0, _merge.default)(options, default_normalize_email_options);\n    var raw_parts = email.split('@');\n    var domain = raw_parts.pop();\n    var user = raw_parts.join('@');\n    var parts = [user, domain]; // The domain is always lowercased, as it's case-insensitive per RFC 1035\n\n    parts[1] = parts[1].toLowerCase();\n    if (parts[1] === 'gmail.com' || parts[1] === 'googlemail.com') {\n      // Address is GMail\n      if (options.gmail_remove_subaddress) {\n        parts[0] = parts[0].split('+')[0];\n      }\n      if (options.gmail_remove_dots) {\n        // this does not replace consecutive dots like example..email@gmail.com\n        parts[0] = parts[0].replace(/\\.+/g, dotsReplacer);\n      }\n      if (!parts[0].length) {\n        return false;\n      }\n      if (options.all_lowercase || options.gmail_lowercase) {\n        parts[0] = parts[0].toLowerCase();\n      }\n      parts[1] = options.gmail_convert_googlemaildotcom ? 'gmail.com' : parts[1];\n    } else if (icloud_domains.indexOf(parts[1]) >= 0) {\n      // Address is iCloud\n      if (options.icloud_remove_subaddress) {\n        parts[0] = parts[0].split('+')[0];\n      }\n      if (!parts[0].length) {\n        return false;\n      }\n      if (options.all_lowercase || options.icloud_lowercase) {\n        parts[0] = parts[0].toLowerCase();\n      }\n    } else if (outlookdotcom_domains.indexOf(parts[1]) >= 0) {\n      // Address is Outlook.com\n      if (options.outlookdotcom_remove_subaddress) {\n        parts[0] = parts[0].split('+')[0];\n      }\n      if (!parts[0].length) {\n        return false;\n      }\n      if (options.all_lowercase || options.outlookdotcom_lowercase) {\n        parts[0] = parts[0].toLowerCase();\n      }\n    } else if (yahoo_domains.indexOf(parts[1]) >= 0) {\n      // Address is Yahoo\n      if (options.yahoo_remove_subaddress) {\n        var components = parts[0].split('-');\n        parts[0] = components.length > 1 ? components.slice(0, -1).join('-') : components[0];\n      }\n      if (!parts[0].length) {\n        return false;\n      }\n      if (options.all_lowercase || options.yahoo_lowercase) {\n        parts[0] = parts[0].toLowerCase();\n      }\n    } else if (yandex_domains.indexOf(parts[1]) >= 0) {\n      if (options.all_lowercase || options.yandex_lowercase) {\n        parts[0] = parts[0].toLowerCase();\n      }\n      parts[1] = 'yandex.ru'; // all yandex domains are equal, 1st preferred\n    } else if (options.all_lowercase) {\n      // Any other address\n      parts[0] = parts[0].toLowerCase();\n    }\n    return parts.join('@');\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(normalizeEmail, normalizeEmail.exports);\nvar normalizeEmailExports = normalizeEmail.exports;\nvar isSlug = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isSlug;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  var charsetRegex = /^[^\\s-_](?!.*?[-_]{2,})[a-z0-9-\\\\][^\\s]*[^-_\\s]$/;\n  function isSlug(str) {\n    (0, _assertString.default)(str);\n    return charsetRegex.test(str);\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(isSlug, isSlug.exports);\nvar isSlugExports = isSlug.exports;\nvar isLicensePlate = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isLicensePlate;\n  var _assertString = _interopRequireDefault(assertStringExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  var validators = {\n    'cs-CZ': function csCZ(str) {\n      return /^(([ABCDEFHIJKLMNPRSTUVXYZ]|[0-9])-?){5,8}$/.test(str);\n    },\n    'de-DE': function deDE(str) {\n      return /^((A|AA|AB|AC|AE|AH|AK|AM|AN|AÖ|AP|AS|AT|AU|AW|AZ|B|BA|BB|BC|BE|BF|BH|BI|BK|BL|BM|BN|BO|BÖ|BS|BT|BZ|C|CA|CB|CE|CO|CR|CW|D|DA|DD|DE|DH|DI|DL|DM|DN|DO|DU|DW|DZ|E|EA|EB|ED|EE|EF|EG|EH|EI|EL|EM|EN|ER|ES|EU|EW|F|FB|FD|FF|FG|FI|FL|FN|FO|FR|FS|FT|FÜ|FW|FZ|G|GA|GC|GD|GE|GF|GG|GI|GK|GL|GM|GN|GÖ|GP|GR|GS|GT|GÜ|GV|GW|GZ|H|HA|HB|HC|HD|HE|HF|HG|HH|HI|HK|HL|HM|HN|HO|HP|HR|HS|HU|HV|HX|HY|HZ|IK|IL|IN|IZ|J|JE|JL|K|KA|KB|KC|KE|KF|KG|KH|KI|KK|KL|KM|KN|KO|KR|KS|KT|KU|KW|KY|L|LA|LB|LC|LD|LF|LG|LH|LI|LL|LM|LN|LÖ|LP|LR|LU|M|MA|MB|MC|MD|ME|MG|MH|MI|MK|ML|MM|MN|MO|MQ|MR|MS|MÜ|MW|MY|MZ|N|NB|ND|NE|NF|NH|NI|NK|NM|NÖ|NP|NR|NT|NU|NW|NY|NZ|OA|OB|OC|OD|OE|OF|OG|OH|OK|OL|OP|OS|OZ|P|PA|PB|PE|PF|PI|PL|PM|PN|PR|PS|PW|PZ|R|RA|RC|RD|RE|RG|RH|RI|RL|RM|RN|RO|RP|RS|RT|RU|RV|RW|RZ|S|SB|SC|SE|SG|SI|SK|SL|SM|SN|SO|SP|SR|ST|SU|SW|SY|SZ|TE|TF|TG|TO|TP|TR|TS|TT|TÜ|ÜB|UE|UH|UL|UM|UN|V|VB|VG|VK|VR|VS|W|WA|WB|WE|WF|WI|WK|WL|WM|WN|WO|WR|WS|WT|WÜ|WW|WZ|Z|ZE|ZI|ZP|ZR|ZW|ZZ)[- ]?[A-Z]{1,2}[- ]?\\d{1,4}|(ABG|ABI|AIB|AIC|ALF|ALZ|ANA|ANG|ANK|APD|ARN|ART|ASL|ASZ|AUR|AZE|BAD|BAR|BBG|BCH|BED|BER|BGD|BGL|BID|BIN|BIR|BIT|BIW|BKS|BLB|BLK|BNA|BOG|BOH|BOR|BOT|BRA|BRB|BRG|BRK|BRL|BRV|BSB|BSK|BTF|BÜD|BUL|BÜR|BÜS|BÜZ|CAS|CHA|CLP|CLZ|COC|COE|CUX|DAH|DAN|DAU|DBR|DEG|DEL|DGF|DIL|DIN|DIZ|DKB|DLG|DON|DUD|DÜW|EBE|EBN|EBS|ECK|EIC|EIL|EIN|EIS|EMD|EMS|ERB|ERH|ERK|ERZ|ESB|ESW|FDB|FDS|FEU|FFB|FKB|FLÖ|FOR|FRG|FRI|FRW|FTL|FÜS|GAN|GAP|GDB|GEL|GEO|GER|GHA|GHC|GLA|GMN|GNT|GOA|GOH|GRA|GRH|GRI|GRM|GRZ|GTH|GUB|GUN|GVM|HAB|HAL|HAM|HAS|HBN|HBS|HCH|HDH|HDL|HEB|HEF|HEI|HER|HET|HGN|HGW|HHM|HIG|HIP|HMÜ|HOG|HOH|HOL|HOM|HOR|HÖS|HOT|HRO|HSK|HST|HVL|HWI|IGB|ILL|JÜL|KEH|KEL|KEM|KIB|KLE|KLZ|KÖN|KÖT|KÖZ|KRU|KÜN|KUS|KYF|LAN|LAU|LBS|LBZ|LDK|LDS|LEO|LER|LEV|LIB|LIF|LIP|LÖB|LOS|LRO|LSZ|LÜN|LUP|LWL|MAB|MAI|MAK|MAL|MED|MEG|MEI|MEK|MEL|MER|MET|MGH|MGN|MHL|MIL|MKK|MOD|MOL|MON|MOS|MSE|MSH|MSP|MST|MTK|MTL|MÜB|MÜR|MYK|MZG|NAB|NAI|NAU|NDH|NEA|NEB|NEC|NEN|NES|NEW|NMB|NMS|NOH|NOL|NOM|NOR|NVP|NWM|OAL|OBB|OBG|OCH|OHA|ÖHR|OHV|OHZ|OPR|OSL|OVI|OVL|OVP|PAF|PAN|PAR|PCH|PEG|PIR|PLÖ|PRÜ|QFT|QLB|RDG|REG|REH|REI|RID|RIE|ROD|ROF|ROK|ROL|ROS|ROT|ROW|RSL|RÜD|RÜG|SAB|SAD|SAN|SAW|SBG|SBK|SCZ|SDH|SDL|SDT|SEB|SEE|SEF|SEL|SFB|SFT|SGH|SHA|SHG|SHK|SHL|SIG|SIM|SLE|SLF|SLK|SLN|SLS|SLÜ|SLZ|SMÜ|SOB|SOG|SOK|SÖM|SON|SPB|SPN|SRB|SRO|STA|STB|STD|STE|STL|SUL|SÜW|SWA|SZB|TBB|TDO|TET|TIR|TÖL|TUT|UEM|UER|UFF|USI|VAI|VEC|VER|VIB|VIE|VIT|VOH|WAF|WAK|WAN|WAR|WAT|WBS|WDA|WEL|WEN|WER|WES|WHV|WIL|WIS|WIT|WIZ|WLG|WMS|WND|WOB|WOH|WOL|WOR|WOS|WRN|WSF|WST|WSW|WTL|WTM|WUG|WÜM|WUN|WUR|WZL|ZEL|ZIG)[- ]?(([A-Z][- ]?\\d{1,4})|([A-Z]{2}[- ]?\\d{1,3})))[- ]?(E|H)?$/.test(str);\n    },\n    'de-LI': function deLI(str) {\n      return /^FL[- ]?\\d{1,5}[UZ]?$/.test(str);\n    },\n    'en-IN': function enIN(str) {\n      return /^[A-Z]{2}[ -]?[0-9]{1,2}(?:[ -]?[A-Z])(?:[ -]?[A-Z]*)?[ -]?[0-9]{4}$/.test(str);\n    },\n    'es-AR': function esAR(str) {\n      return /^(([A-Z]{2} ?[0-9]{3} ?[A-Z]{2})|([A-Z]{3} ?[0-9]{3}))$/.test(str);\n    },\n    'fi-FI': function fiFI(str) {\n      return /^(?=.{4,7})(([A-Z]{1,3}|[0-9]{1,3})[\\s-]?([A-Z]{1,3}|[0-9]{1,5}))$/.test(str);\n    },\n    'hu-HU': function huHU(str) {\n      return /^((((?!AAA)(([A-NPRSTVZWXY]{1})([A-PR-Z]{1})([A-HJ-NPR-Z]))|(A[ABC]I)|A[ABC]O|A[A-W]Q|BPI|BPO|UCO|UDO|XAO)-(?!000)\\d{3})|(M\\d{6})|((CK|DT|CD|HC|H[ABEFIKLMNPRSTVX]|MA|OT|R[A-Z]) \\d{2}-\\d{2})|(CD \\d{3}-\\d{3})|(C-(C|X) \\d{4})|(X-(A|B|C) \\d{4})|(([EPVZ]-\\d{5}))|(S A[A-Z]{2} \\d{2})|(SP \\d{2}-\\d{2}))$/.test(str);\n    },\n    'pt-BR': function ptBR(str) {\n      return /^[A-Z]{3}[ -]?[0-9][A-Z][0-9]{2}|[A-Z]{3}[ -]?[0-9]{4}$/.test(str);\n    },\n    'pt-PT': function ptPT(str) {\n      return /^([A-Z]{2}|[0-9]{2})[ -·]?([A-Z]{2}|[0-9]{2})[ -·]?([A-Z]{2}|[0-9]{2})$/.test(str);\n    },\n    'sq-AL': function sqAL(str) {\n      return /^[A-Z]{2}[- ]?((\\d{3}[- ]?(([A-Z]{2})|T))|(R[- ]?\\d{3}))$/.test(str);\n    },\n    'sv-SE': function svSE(str) {\n      return /^[A-HJ-PR-UW-Z]{3} ?[\\d]{2}[A-HJ-PR-UW-Z1-9]$|(^[A-ZÅÄÖ ]{2,7}$)/.test(str.trim());\n    }\n  };\n  function isLicensePlate(str, locale) {\n    (0, _assertString.default)(str);\n    if (locale in validators) {\n      return validators[locale](str);\n    } else if (locale === 'any') {\n      for (var key in validators) {\n        /* eslint guard-for-in: 0 */\n        var validator = validators[key];\n        if (validator(str)) {\n          return true;\n        }\n      }\n      return false;\n    }\n    throw new Error(\"Invalid locale '\".concat(locale, \"'\"));\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(isLicensePlate, isLicensePlate.exports);\nvar isLicensePlateExports = isLicensePlate.exports;\nvar isStrongPassword = {\n  exports: {}\n};\n(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isStrongPassword;\n  var _merge = _interopRequireDefault(mergeExports);\n  var _assertString = _interopRequireDefault(assertStringExports);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  var upperCaseRegex = /^[A-Z]$/;\n  var lowerCaseRegex = /^[a-z]$/;\n  var numberRegex = /^[0-9]$/;\n  var symbolRegex = /^[-#!$@£%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/ ]$/;\n  var defaultOptions = {\n    minLength: 8,\n    minLowercase: 1,\n    minUppercase: 1,\n    minNumbers: 1,\n    minSymbols: 1,\n    returnScore: false,\n    pointsPerUnique: 1,\n    pointsPerRepeat: 0.5,\n    pointsForContainingLower: 10,\n    pointsForContainingUpper: 10,\n    pointsForContainingNumber: 10,\n    pointsForContainingSymbol: 10\n  };\n  /* Counts number of occurrences of each char in a string\n   * could be moved to util/ ?\n  */\n\n  function countChars(str) {\n    var result = {};\n    Array.from(str).forEach(function (char) {\n      var curVal = result[char];\n      if (curVal) {\n        result[char] += 1;\n      } else {\n        result[char] = 1;\n      }\n    });\n    return result;\n  }\n  /* Return information about a password */\n\n  function analyzePassword(password) {\n    var charMap = countChars(password);\n    var analysis = {\n      length: password.length,\n      uniqueChars: Object.keys(charMap).length,\n      uppercaseCount: 0,\n      lowercaseCount: 0,\n      numberCount: 0,\n      symbolCount: 0\n    };\n    Object.keys(charMap).forEach(function (char) {\n      /* istanbul ignore else */\n      if (upperCaseRegex.test(char)) {\n        analysis.uppercaseCount += charMap[char];\n      } else if (lowerCaseRegex.test(char)) {\n        analysis.lowercaseCount += charMap[char];\n      } else if (numberRegex.test(char)) {\n        analysis.numberCount += charMap[char];\n      } else if (symbolRegex.test(char)) {\n        analysis.symbolCount += charMap[char];\n      }\n    });\n    return analysis;\n  }\n  function scorePassword(analysis, scoringOptions) {\n    var points = 0;\n    points += analysis.uniqueChars * scoringOptions.pointsPerUnique;\n    points += (analysis.length - analysis.uniqueChars) * scoringOptions.pointsPerRepeat;\n    if (analysis.lowercaseCount > 0) {\n      points += scoringOptions.pointsForContainingLower;\n    }\n    if (analysis.uppercaseCount > 0) {\n      points += scoringOptions.pointsForContainingUpper;\n    }\n    if (analysis.numberCount > 0) {\n      points += scoringOptions.pointsForContainingNumber;\n    }\n    if (analysis.symbolCount > 0) {\n      points += scoringOptions.pointsForContainingSymbol;\n    }\n    return points;\n  }\n  function isStrongPassword(str) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    (0, _assertString.default)(str);\n    var analysis = analyzePassword(str);\n    options = (0, _merge.default)(options || {}, defaultOptions);\n    if (options.returnScore) {\n      return scorePassword(analysis, options);\n    }\n    return analysis.length >= options.minLength && analysis.lowercaseCount >= options.minLowercase && analysis.uppercaseCount >= options.minUppercase && analysis.numberCount >= options.minNumbers && analysis.symbolCount >= options.minSymbols;\n  }\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(isStrongPassword, isStrongPassword.exports);\nvar isStrongPasswordExports = isStrongPassword.exports;\nvar isVAT$1 = {};\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nObject.defineProperty(isVAT$1, \"__esModule\", {\n  value: true\n});\nisVAT$1.default = isVAT;\nisVAT$1.vatMatchers = void 0;\nvar _assertString = _interopRequireDefault(assertStringExports);\nvar algorithms = _interopRequireWildcard(algorithms$1);\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n  return cache;\n}\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n  var cache = _getRequireWildcardCache();\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar CH = function CH(str) {\n  // @see {@link https://www.ech.ch/de/ech/ech-0097/5.2.0}\n  var hasValidCheckNumber = function hasValidCheckNumber(digits) {\n    var lastDigit = digits.pop(); // used as check number\n\n    var weights = [5, 4, 3, 2, 7, 6, 5, 4];\n    var calculatedCheckNumber = (11 - digits.reduce(function (acc, el, idx) {\n      return acc + el * weights[idx];\n    }, 0) % 11) % 11;\n    return lastDigit === calculatedCheckNumber;\n  }; // @see {@link https://www.estv.admin.ch/estv/de/home/mehrwertsteuer/uid/mwst-uid-nummer.html}\n\n  return /^(CHE[- ]?)?(\\d{9}|(\\d{3}\\.\\d{3}\\.\\d{3})|(\\d{3} \\d{3} \\d{3})) ?(TVA|MWST|IVA)?$/.test(str) && hasValidCheckNumber(str.match(/\\d/g).map(function (el) {\n    return +el;\n  }));\n};\nvar PT = function PT(str) {\n  var match = str.match(/^(PT)?(\\d{9})$/);\n  if (!match) {\n    return false;\n  }\n  var tin = match[2];\n  var checksum = 11 - algorithms.reverseMultiplyAndSum(tin.split('').slice(0, 8).map(function (a) {\n    return parseInt(a, 10);\n  }), 9) % 11;\n  if (checksum > 9) {\n    return parseInt(tin[8], 10) === 0;\n  }\n  return checksum === parseInt(tin[8], 10);\n};\nvar vatMatchers = {\n  /**\r\n   * European Union VAT identification numbers\r\n   */\n  AT: function AT(str) {\n    return /^(AT)?U\\d{8}$/.test(str);\n  },\n  BE: function BE(str) {\n    return /^(BE)?\\d{10}$/.test(str);\n  },\n  BG: function BG(str) {\n    return /^(BG)?\\d{9,10}$/.test(str);\n  },\n  HR: function HR(str) {\n    return /^(HR)?\\d{11}$/.test(str);\n  },\n  CY: function CY(str) {\n    return /^(CY)?\\w{9}$/.test(str);\n  },\n  CZ: function CZ(str) {\n    return /^(CZ)?\\d{8,10}$/.test(str);\n  },\n  DK: function DK(str) {\n    return /^(DK)?\\d{8}$/.test(str);\n  },\n  EE: function EE(str) {\n    return /^(EE)?\\d{9}$/.test(str);\n  },\n  FI: function FI(str) {\n    return /^(FI)?\\d{8}$/.test(str);\n  },\n  FR: function FR(str) {\n    return /^(FR)?\\w{2}\\d{9}$/.test(str);\n  },\n  DE: function DE(str) {\n    return /^(DE)?\\d{9}$/.test(str);\n  },\n  EL: function EL(str) {\n    return /^(EL)?\\d{9}$/.test(str);\n  },\n  HU: function HU(str) {\n    return /^(HU)?\\d{8}$/.test(str);\n  },\n  IE: function IE(str) {\n    return /^(IE)?\\d{7}\\w{1}(W)?$/.test(str);\n  },\n  IT: function IT(str) {\n    return /^(IT)?\\d{11}$/.test(str);\n  },\n  LV: function LV(str) {\n    return /^(LV)?\\d{11}$/.test(str);\n  },\n  LT: function LT(str) {\n    return /^(LT)?\\d{9,12}$/.test(str);\n  },\n  LU: function LU(str) {\n    return /^(LU)?\\d{8}$/.test(str);\n  },\n  MT: function MT(str) {\n    return /^(MT)?\\d{8}$/.test(str);\n  },\n  NL: function NL(str) {\n    return /^(NL)?\\d{9}B\\d{2}$/.test(str);\n  },\n  PL: function PL(str) {\n    return /^(PL)?(\\d{10}|(\\d{3}-\\d{3}-\\d{2}-\\d{2})|(\\d{3}-\\d{2}-\\d{2}-\\d{3}))$/.test(str);\n  },\n  PT: PT,\n  RO: function RO(str) {\n    return /^(RO)?\\d{2,10}$/.test(str);\n  },\n  SK: function SK(str) {\n    return /^(SK)?\\d{10}$/.test(str);\n  },\n  SI: function SI(str) {\n    return /^(SI)?\\d{8}$/.test(str);\n  },\n  ES: function ES(str) {\n    return /^(ES)?\\w\\d{7}[A-Z]$/.test(str);\n  },\n  SE: function SE(str) {\n    return /^(SE)?\\d{12}$/.test(str);\n  },\n  /**\r\n   * VAT numbers of non-EU countries\r\n   */\n  AL: function AL(str) {\n    return /^(AL)?\\w{9}[A-Z]$/.test(str);\n  },\n  MK: function MK(str) {\n    return /^(MK)?\\d{13}$/.test(str);\n  },\n  AU: function AU(str) {\n    return /^(AU)?\\d{11}$/.test(str);\n  },\n  BY: function BY(str) {\n    return /^(УНП )?\\d{9}$/.test(str);\n  },\n  CA: function CA(str) {\n    return /^(CA)?\\d{9}$/.test(str);\n  },\n  IS: function IS(str) {\n    return /^(IS)?\\d{5,6}$/.test(str);\n  },\n  IN: function IN(str) {\n    return /^(IN)?\\d{15}$/.test(str);\n  },\n  ID: function ID(str) {\n    return /^(ID)?(\\d{15}|(\\d{2}.\\d{3}.\\d{3}.\\d{1}-\\d{3}.\\d{3}))$/.test(str);\n  },\n  IL: function IL(str) {\n    return /^(IL)?\\d{9}$/.test(str);\n  },\n  KZ: function KZ(str) {\n    return /^(KZ)?\\d{9}$/.test(str);\n  },\n  NZ: function NZ(str) {\n    return /^(NZ)?\\d{9}$/.test(str);\n  },\n  NG: function NG(str) {\n    return /^(NG)?(\\d{12}|(\\d{8}-\\d{4}))$/.test(str);\n  },\n  NO: function NO(str) {\n    return /^(NO)?\\d{9}MVA$/.test(str);\n  },\n  PH: function PH(str) {\n    return /^(PH)?(\\d{12}|\\d{3} \\d{3} \\d{3} \\d{3})$/.test(str);\n  },\n  RU: function RU(str) {\n    return /^(RU)?(\\d{10}|\\d{12})$/.test(str);\n  },\n  SM: function SM(str) {\n    return /^(SM)?\\d{5}$/.test(str);\n  },\n  SA: function SA(str) {\n    return /^(SA)?\\d{15}$/.test(str);\n  },\n  RS: function RS(str) {\n    return /^(RS)?\\d{9}$/.test(str);\n  },\n  CH: CH,\n  TR: function TR(str) {\n    return /^(TR)?\\d{10}$/.test(str);\n  },\n  UA: function UA(str) {\n    return /^(UA)?\\d{12}$/.test(str);\n  },\n  GB: function GB(str) {\n    return /^GB((\\d{3} \\d{4} ([0-8][0-9]|9[0-6]))|(\\d{9} \\d{3})|(((GD[0-4])|(HA[5-9]))[0-9]{2}))$/.test(str);\n  },\n  UZ: function UZ(str) {\n    return /^(UZ)?\\d{9}$/.test(str);\n  },\n  /**\r\n   * VAT numbers of Latin American countries\r\n   */\n  AR: function AR(str) {\n    return /^(AR)?\\d{11}$/.test(str);\n  },\n  BO: function BO(str) {\n    return /^(BO)?\\d{7}$/.test(str);\n  },\n  BR: function BR(str) {\n    return /^(BR)?((\\d{2}.\\d{3}.\\d{3}\\/\\d{4}-\\d{2})|(\\d{3}.\\d{3}.\\d{3}-\\d{2}))$/.test(str);\n  },\n  CL: function CL(str) {\n    return /^(CL)?\\d{8}-\\d{1}$/.test(str);\n  },\n  CO: function CO(str) {\n    return /^(CO)?\\d{10}$/.test(str);\n  },\n  CR: function CR(str) {\n    return /^(CR)?\\d{9,12}$/.test(str);\n  },\n  EC: function EC(str) {\n    return /^(EC)?\\d{13}$/.test(str);\n  },\n  SV: function SV(str) {\n    return /^(SV)?\\d{4}-\\d{6}-\\d{3}-\\d{1}$/.test(str);\n  },\n  GT: function GT(str) {\n    return /^(GT)?\\d{7}-\\d{1}$/.test(str);\n  },\n  HN: function HN(str) {\n    return /^(HN)?$/.test(str);\n  },\n  MX: function MX(str) {\n    return /^(MX)?\\w{3,4}\\d{6}\\w{3}$/.test(str);\n  },\n  NI: function NI(str) {\n    return /^(NI)?\\d{3}-\\d{6}-\\d{4}\\w{1}$/.test(str);\n  },\n  PA: function PA(str) {\n    return /^(PA)?$/.test(str);\n  },\n  PY: function PY(str) {\n    return /^(PY)?\\d{6,8}-\\d{1}$/.test(str);\n  },\n  PE: function PE(str) {\n    return /^(PE)?\\d{11}$/.test(str);\n  },\n  DO: function DO(str) {\n    return /^(DO)?(\\d{11}|(\\d{3}-\\d{7}-\\d{1})|[1,4,5]{1}\\d{8}|([1,4,5]{1})-\\d{2}-\\d{5}-\\d{1})$/.test(str);\n  },\n  UY: function UY(str) {\n    return /^(UY)?\\d{12}$/.test(str);\n  },\n  VE: function VE(str) {\n    return /^(VE)?[J,G,V,E]{1}-(\\d{9}|(\\d{8}-\\d{1}))$/.test(str);\n  }\n};\nisVAT$1.vatMatchers = vatMatchers;\nfunction isVAT(str, countryCode) {\n  (0, _assertString.default)(str);\n  (0, _assertString.default)(countryCode);\n  if (countryCode in vatMatchers) {\n    return vatMatchers[countryCode](str);\n  }\n  throw new Error(\"Invalid country code: '\".concat(countryCode, \"'\"));\n}\n(function (module, exports) {\n  function _typeof(obj) {\n    \"@babel/helpers - typeof\";\n\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function _typeof(obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function _typeof(obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n    return _typeof(obj);\n  }\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _toDate = _interopRequireDefault(toDateExports);\n  var _toFloat = _interopRequireDefault(toFloatExports);\n  var _toInt = _interopRequireDefault(toIntExports);\n  var _toBoolean = _interopRequireDefault(toBooleanExports);\n  var _equals = _interopRequireDefault(equalsExports);\n  var _contains = _interopRequireDefault(containsExports);\n  var _matches = _interopRequireDefault(matchesExports);\n  var _isEmail = _interopRequireDefault(isEmailExports);\n  var _isURL = _interopRequireDefault(isURLExports);\n  var _isMACAddress = _interopRequireDefault(isMACAddressExports);\n  var _isIP = _interopRequireDefault(isIPExports);\n  var _isIPRange = _interopRequireDefault(isIPRangeExports);\n  var _isFQDN = _interopRequireDefault(isFQDNExports);\n  var _isDate = _interopRequireDefault(isDateExports);\n  var _isTime = _interopRequireDefault(isTimeExports);\n  var _isBoolean = _interopRequireDefault(isBooleanExports);\n  var _isLocale = _interopRequireDefault(isLocaleExports);\n  var _isAlpha = _interopRequireWildcard(isAlpha$1);\n  var _isAlphanumeric = _interopRequireWildcard(isAlphanumeric$1);\n  var _isNumeric = _interopRequireDefault(isNumericExports);\n  var _isPassportNumber = _interopRequireDefault(isPassportNumberExports);\n  var _isPort = _interopRequireDefault(isPortExports);\n  var _isLowercase = _interopRequireDefault(isLowercaseExports);\n  var _isUppercase = _interopRequireDefault(isUppercaseExports);\n  var _isIMEI = _interopRequireDefault(isIMEIExports);\n  var _isAscii = _interopRequireDefault(isAsciiExports);\n  var _isFullWidth = _interopRequireDefault(isFullWidth$1);\n  var _isHalfWidth = _interopRequireDefault(isHalfWidth$1);\n  var _isVariableWidth = _interopRequireDefault(isVariableWidthExports);\n  var _isMultibyte = _interopRequireDefault(isMultibyteExports);\n  var _isSemVer = _interopRequireDefault(isSemVerExports);\n  var _isSurrogatePair = _interopRequireDefault(isSurrogatePairExports);\n  var _isInt = _interopRequireDefault(isIntExports);\n  var _isFloat = _interopRequireWildcard(isFloat$1);\n  var _isDecimal = _interopRequireDefault(isDecimalExports);\n  var _isHexadecimal = _interopRequireDefault(isHexadecimalExports);\n  var _isOctal = _interopRequireDefault(isOctalExports);\n  var _isDivisibleBy = _interopRequireDefault(isDivisibleByExports);\n  var _isHexColor = _interopRequireDefault(isHexColorExports);\n  var _isRgbColor = _interopRequireDefault(isRgbColorExports);\n  var _isHSL = _interopRequireDefault(isHSLExports);\n  var _isISRC = _interopRequireDefault(isISRCExports);\n  var _isIBAN = _interopRequireWildcard(isIBAN$1);\n  var _isBIC = _interopRequireDefault(isBICExports);\n  var _isMD = _interopRequireDefault(isMD5Exports);\n  var _isHash = _interopRequireDefault(isHashExports);\n  var _isJWT = _interopRequireDefault(isJWTExports);\n  var _isJSON = _interopRequireDefault(isJSONExports);\n  var _isEmpty = _interopRequireDefault(isEmptyExports);\n  var _isLength = _interopRequireDefault(isLengthExports);\n  var _isByteLength = _interopRequireDefault(isByteLengthExports);\n  var _isUUID = _interopRequireDefault(isUUIDExports);\n  var _isMongoId = _interopRequireDefault(isMongoIdExports);\n  var _isAfter = _interopRequireDefault(isAfterExports);\n  var _isBefore = _interopRequireDefault(isBeforeExports);\n  var _isIn = _interopRequireDefault(isInExports);\n  var _isLuhnNumber = _interopRequireDefault(isLuhnNumberExports);\n  var _isCreditCard = _interopRequireDefault(isCreditCardExports);\n  var _isIdentityCard = _interopRequireDefault(isIdentityCardExports);\n  var _isEAN = _interopRequireDefault(isEANExports);\n  var _isISIN = _interopRequireDefault(isISINExports);\n  var _isISBN = _interopRequireDefault(isISBNExports);\n  var _isISSN = _interopRequireDefault(isISSNExports);\n  var _isTaxID = _interopRequireDefault(isTaxIDExports);\n  var _isMobilePhone = _interopRequireWildcard(isMobilePhone$1);\n  var _isEthereumAddress = _interopRequireDefault(isEthereumAddressExports);\n  var _isCurrency = _interopRequireDefault(isCurrencyExports);\n  var _isBtcAddress = _interopRequireDefault(isBtcAddressExports);\n  var _isISO = isISO6346$1;\n  var _isISO2 = _interopRequireDefault(isISO6391Exports);\n  var _isISO3 = _interopRequireDefault(isISO8601Exports);\n  var _isRFC = _interopRequireDefault(isRFC3339Exports);\n  var _isISO31661Alpha = _interopRequireDefault(isISO31661Alpha2$1);\n  var _isISO31661Alpha2 = _interopRequireDefault(isISO31661Alpha3Exports);\n  var _isISO4 = _interopRequireDefault(isISO4217$1);\n  var _isBase = _interopRequireDefault(isBase32Exports);\n  var _isBase2 = _interopRequireDefault(isBase58Exports);\n  var _isBase3 = _interopRequireDefault(isBase64Exports);\n  var _isDataURI = _interopRequireDefault(isDataURIExports);\n  var _isMagnetURI = _interopRequireDefault(isMagnetURIExports);\n  var _isMailtoURI = _interopRequireDefault(isMailtoURIExports);\n  var _isMimeType = _interopRequireDefault(isMimeTypeExports);\n  var _isLatLong = _interopRequireDefault(isLatLongExports);\n  var _isPostalCode = _interopRequireWildcard(isPostalCode$1);\n  var _ltrim = _interopRequireDefault(ltrimExports);\n  var _rtrim = _interopRequireDefault(rtrimExports);\n  var _trim = _interopRequireDefault(trimExports);\n  var _escape = _interopRequireDefault(_escapeExports);\n  var _unescape = _interopRequireDefault(_unescapeExports);\n  var _stripLow = _interopRequireDefault(stripLowExports);\n  var _whitelist = _interopRequireDefault(whitelistExports);\n  var _blacklist = _interopRequireDefault(blacklistExports);\n  var _isWhitelisted = _interopRequireDefault(isWhitelistedExports);\n  var _normalizeEmail = _interopRequireDefault(normalizeEmailExports);\n  var _isSlug = _interopRequireDefault(isSlugExports);\n  var _isLicensePlate = _interopRequireDefault(isLicensePlateExports);\n  var _isStrongPassword = _interopRequireDefault(isStrongPasswordExports);\n  var _isVAT = _interopRequireDefault(isVAT$1);\n  function _getRequireWildcardCache() {\n    if (typeof WeakMap !== \"function\") return null;\n    var cache = new WeakMap();\n    _getRequireWildcardCache = function _getRequireWildcardCache() {\n      return cache;\n    };\n    return cache;\n  }\n  function _interopRequireWildcard(obj) {\n    if (obj && obj.__esModule) {\n      return obj;\n    }\n    if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n      return {\n        default: obj\n      };\n    }\n    var cache = _getRequireWildcardCache();\n    if (cache && cache.has(obj)) {\n      return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n        if (desc && (desc.get || desc.set)) {\n          Object.defineProperty(newObj, key, desc);\n        } else {\n          newObj[key] = obj[key];\n        }\n      }\n    }\n    newObj.default = obj;\n    if (cache) {\n      cache.set(obj, newObj);\n    }\n    return newObj;\n  }\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  var version = '13.11.0';\n  var validator = {\n    version: version,\n    toDate: _toDate.default,\n    toFloat: _toFloat.default,\n    toInt: _toInt.default,\n    toBoolean: _toBoolean.default,\n    equals: _equals.default,\n    contains: _contains.default,\n    matches: _matches.default,\n    isEmail: _isEmail.default,\n    isURL: _isURL.default,\n    isMACAddress: _isMACAddress.default,\n    isIP: _isIP.default,\n    isIPRange: _isIPRange.default,\n    isFQDN: _isFQDN.default,\n    isBoolean: _isBoolean.default,\n    isIBAN: _isIBAN.default,\n    isBIC: _isBIC.default,\n    isAlpha: _isAlpha.default,\n    isAlphaLocales: _isAlpha.locales,\n    isAlphanumeric: _isAlphanumeric.default,\n    isAlphanumericLocales: _isAlphanumeric.locales,\n    isNumeric: _isNumeric.default,\n    isPassportNumber: _isPassportNumber.default,\n    isPort: _isPort.default,\n    isLowercase: _isLowercase.default,\n    isUppercase: _isUppercase.default,\n    isAscii: _isAscii.default,\n    isFullWidth: _isFullWidth.default,\n    isHalfWidth: _isHalfWidth.default,\n    isVariableWidth: _isVariableWidth.default,\n    isMultibyte: _isMultibyte.default,\n    isSemVer: _isSemVer.default,\n    isSurrogatePair: _isSurrogatePair.default,\n    isInt: _isInt.default,\n    isIMEI: _isIMEI.default,\n    isFloat: _isFloat.default,\n    isFloatLocales: _isFloat.locales,\n    isDecimal: _isDecimal.default,\n    isHexadecimal: _isHexadecimal.default,\n    isOctal: _isOctal.default,\n    isDivisibleBy: _isDivisibleBy.default,\n    isHexColor: _isHexColor.default,\n    isRgbColor: _isRgbColor.default,\n    isHSL: _isHSL.default,\n    isISRC: _isISRC.default,\n    isMD5: _isMD.default,\n    isHash: _isHash.default,\n    isJWT: _isJWT.default,\n    isJSON: _isJSON.default,\n    isEmpty: _isEmpty.default,\n    isLength: _isLength.default,\n    isLocale: _isLocale.default,\n    isByteLength: _isByteLength.default,\n    isUUID: _isUUID.default,\n    isMongoId: _isMongoId.default,\n    isAfter: _isAfter.default,\n    isBefore: _isBefore.default,\n    isIn: _isIn.default,\n    isLuhnNumber: _isLuhnNumber.default,\n    isCreditCard: _isCreditCard.default,\n    isIdentityCard: _isIdentityCard.default,\n    isEAN: _isEAN.default,\n    isISIN: _isISIN.default,\n    isISBN: _isISBN.default,\n    isISSN: _isISSN.default,\n    isMobilePhone: _isMobilePhone.default,\n    isMobilePhoneLocales: _isMobilePhone.locales,\n    isPostalCode: _isPostalCode.default,\n    isPostalCodeLocales: _isPostalCode.locales,\n    isEthereumAddress: _isEthereumAddress.default,\n    isCurrency: _isCurrency.default,\n    isBtcAddress: _isBtcAddress.default,\n    isISO6346: _isISO.isISO6346,\n    isFreightContainerID: _isISO.isFreightContainerID,\n    isISO6391: _isISO2.default,\n    isISO8601: _isISO3.default,\n    isRFC3339: _isRFC.default,\n    isISO31661Alpha2: _isISO31661Alpha.default,\n    isISO31661Alpha3: _isISO31661Alpha2.default,\n    isISO4217: _isISO4.default,\n    isBase32: _isBase.default,\n    isBase58: _isBase2.default,\n    isBase64: _isBase3.default,\n    isDataURI: _isDataURI.default,\n    isMagnetURI: _isMagnetURI.default,\n    isMailtoURI: _isMailtoURI.default,\n    isMimeType: _isMimeType.default,\n    isLatLong: _isLatLong.default,\n    ltrim: _ltrim.default,\n    rtrim: _rtrim.default,\n    trim: _trim.default,\n    escape: _escape.default,\n    unescape: _unescape.default,\n    stripLow: _stripLow.default,\n    whitelist: _whitelist.default,\n    blacklist: _blacklist.default,\n    isWhitelisted: _isWhitelisted.default,\n    normalizeEmail: _normalizeEmail.default,\n    toString: toString,\n    isSlug: _isSlug.default,\n    isStrongPassword: _isStrongPassword.default,\n    isTaxID: _isTaxID.default,\n    isDate: _isDate.default,\n    isTime: _isTime.default,\n    isLicensePlate: _isLicensePlate.default,\n    isVAT: _isVAT.default,\n    ibanLocales: _isIBAN.locales\n  };\n  var _default = validator;\n  exports.default = _default;\n  module.exports = exports.default;\n  module.exports.default = exports.default;\n})(validator$1, validator$1.exports);\nvar validatorExports = validator$1.exports;\nvar validator = /*@__PURE__*/getDefaultExportFromCjs(validatorExports);\n\n// Copyright (c) Cosmo Tech.\n// Licensed under the MIT license.\n\nvar isBool = dataStr => {\n  return validator.isBoolean(dataStr, {\n    loose: true\n  });\n};\nvar isDate = (dataStr, dateFormat) => {\n  return DateUtils.isValid(dataStr, dateFormat);\n};\nvar isEnum = (dataStr, enumValues) => {\n  return enumValues.indexOf(dataStr) !== -1;\n};\nvar isInt = dataStr => {\n  return validator.isInt(dataStr);\n};\nvar isNumber = dataStr => {\n  return validator.isNumeric(dataStr);\n};\nvar isString = data => {\n  return typeof data === 'string';\n};\nvar isValid = function isValid(dataStr, type, options) {\n  var canBeEmpty = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  if (canBeEmpty && dataStr === '') {\n    return true;\n  }\n  switch (type) {\n    case 'bool':\n      return isBool(dataStr);\n    case 'date':\n      if (!options.dateFormat) {\n        console.error(\"Missing option dateFormat, can't perform date validation.\");\n        return false;\n      }\n      return isDate(dataStr, options.dateFormat);\n    case 'enum':\n      if (!options.enumValues) {\n        console.error(\"Missing option enumValues, can't perform enum validation.\");\n        return false;\n      }\n      return isEnum(dataStr, options.enumValues);\n    case 'int':\n      return isInt(dataStr);\n    case 'number':\n      return isNumber(dataStr);\n    case 'string':\n      return isString(dataStr);\n    default:\n      console.error(\"Unknown type \\\"\".concat(type, \"\\\", can't perform type validation.\"));\n      return false;\n  }\n};\nvar ValidationUtils = {\n  isBool,\n  isDate,\n  isEnum,\n  isInt,\n  isNumber,\n  isValid\n};\n\n// Copyright (c) Cosmo Tech.\n// Licensed under the MIT license.\n\nlet Error$1 = class Error {\n  constructor(summary, loc, context) {\n    this.summary = summary;\n    this.loc = loc;\n    this.context = context;\n  }\n  toString() {\n    return \"Summary: \".concat(this.summary, \"\\n\") + \"Loc: \".concat(this.loc, \"\\n\") + \"Context: \".concat(this.context);\n  }\n};\nvar getFlattenColumnsWithoutGroups = columns => {\n  if (columns == null) {\n    console.warn(\"Columns list shouldn't be null or undefined\");\n    return [];\n  }\n  return columns.flatMap(columnOrGroup => {\n    if (columnOrGroup == null) {\n      console.warn('Null or undefined values found in columns list');\n    }\n    return columnOrGroup !== null && columnOrGroup !== void 0 && columnOrGroup.children ? getFlattenColumnsWithoutGroups(columnOrGroup.children) : columnOrGroup;\n  }).filter(column => column != null);\n};\nvar getColumnsWithHeaderName = columns => {\n  if (!Array.isArray(columns)) {\n    console.warn('Columns list must be an array');\n    return [];\n  }\n  columns.forEach(columnOrGroup => {\n    if (columnOrGroup !== null && columnOrGroup !== void 0 && columnOrGroup.children) getColumnsWithHeaderName(columnOrGroup.children);else {\n      if (columnOrGroup.headerName === undefined) columnOrGroup.headerName = columnOrGroup.field;\n    }\n  });\n  return columns;\n};\nvar _buildEmptyFieldError = (rowLineNumber, expectedCols, colIndex) => {\n  var errorSummary = \"Empty field\";\n  var errorLoc = \"Line \".concat(rowLineNumber, \", Column \").concat(colIndex + 1, \" (\\\"\").concat(expectedCols[colIndex].field, \"\\\")\");\n  var errorContext = \"\".concat(errorSummary, \": \").concat(errorLoc, \" is required\");\n  return new Error$1(errorSummary, errorLoc, errorContext);\n};\nvar _buildNumberColumnsError = (rowLineNumber, expectedCols, row) => {\n  var expectedColsCount = expectedCols.length;\n  var expectedColsName = expectedCols.map(col => col.field).join();\n  var errorSummary = row.length > expectedColsCount ? 'Too many fields' : 'Too few fields';\n  var errorLoc = \"Line \".concat(rowLineNumber);\n  var errorContext = \"\".concat(errorSummary, \" (\").concat(errorLoc, \") : Expected \").concat(expectedColsCount, \" fields, found \").concat(row.length, \"\\n\") + \"Expected data format : \\\"\".concat(expectedColsName, \"\\\"\\n\") + \"Incorrect Row : \\\"\".concat(row, \"\\\"\");\n  return new Error$1(errorSummary, errorLoc, errorContext);\n};\nvar _buildTypeError = (type, rowLineNumber, colIndex, colsData, value, expected) => {\n  var errorSummary = \"Incorrect \".concat(type, \" value\");\n  var errorLoc = \"Line \".concat(rowLineNumber, \" , Column \").concat(colIndex + 1, \" (\\\"\").concat(colsData[colIndex].field, \"\\\")\");\n  var errorContext = \"\".concat(errorSummary, \" (\").concat(errorLoc, \")\\n\") + \"Incorrect value : \\\"\".concat(value, \"\\\" for type \").concat(type);\n  if (!expected || expected.length === 0) {\n    return new Error$1(errorSummary, errorLoc, errorContext);\n  }\n  return new Error$1(errorSummary, errorLoc, errorContext + '\\n' + expected);\n};\nvar DEFAULT_CSV_EXPORT_OPTIONS = {\n  colSep: ',',\n  dateFormat: 'yyyy-MM-dd',\n  rowSep: '\\n',\n  writeHeader: true\n};\nvar DEFAULT_XLSX_EXPORT_OPTIONS = {\n  writeHeader: true\n};\nvar _forgeColumnsCountError = (row, rowLineNumber, expectedCols, errors) => {\n  var valuesInRange = row.slice(0, expectedCols.length);\n  valuesInRange.forEach((column, i) => {\n    if (column === undefined) errors.push(_buildEmptyFieldError(rowLineNumber, expectedCols, i));\n  });\n  if (row.length !== expectedCols.length) errors.push(_buildNumberColumnsError(rowLineNumber, expectedCols, row));\n};\nvar _forgeTypeError = (value, rowLineNumber, type, options, colsData, colIndex) => {\n  var expected = '';\n  if (type === 'enum') {\n    expected = \"Expected values: [\".concat(options.enumValues.join(), \"]\");\n  } else if (type === 'date') {\n    expected = \"Expected format: \".concat(options.dateFormat);\n  }\n  return _buildTypeError(type, rowLineNumber, colIndex, colsData, value, expected);\n};\nvar _getColTypeFromTypeArray = typeArray => {\n  if (!typeArray || typeArray.length === 0) {\n    return 'string'; // Fall back to default type\n  }\n\n  var knownTypes = ['bool', 'date', 'enum', 'int', 'number'];\n  for (var type of knownTypes) {\n    if (typeArray.indexOf(type) !== -1) {\n      return type;\n    }\n  }\n  return 'string'; // Fall back to default type\n};\n\nvar _validateFormat = (rows, hasHeader, cols, options) => {\n  var colsData = cols.map(col => _objectSpread2(_objectSpread2({}, col), {}, {\n    type: _getColTypeFromTypeArray(col.type)\n  }));\n  var errors = [];\n  var knownColsCount = colsData.length;\n  var startIndex = hasHeader ? 1 : 0;\n  var _loop = function _loop(rowIndex) {\n    var row = rows[rowIndex];\n    while (row[row.length - 1] === undefined && row.length > knownColsCount) row.pop();\n    if (row.length !== knownColsCount || row.includes(undefined)) _forgeColumnsCountError(row, rowIndex + 1, colsData, errors);\n    row.forEach((rowCell, colIndex) => {\n      if (colIndex < knownColsCount) {\n        var colType = colsData[colIndex].type;\n        if (colType && rowCell !== undefined) {\n          var _colsData$colIndex$en, _colsData$colIndex, _colsData$colIndex2, _ref, _colsData$colIndex$ac, _colsData$colIndex$ce;\n          // use of cellEditorParams is deprecated\n          var enumValues = (_colsData$colIndex$en = (_colsData$colIndex = colsData[colIndex]) === null || _colsData$colIndex === void 0 ? void 0 : _colsData$colIndex.enumValues) !== null && _colsData$colIndex$en !== void 0 ? _colsData$colIndex$en : (_colsData$colIndex2 = colsData[colIndex]) === null || _colsData$colIndex2 === void 0 || (_colsData$colIndex2 = _colsData$colIndex2.cellEditorParams) === null || _colsData$colIndex2 === void 0 ? void 0 : _colsData$colIndex2.enumValues;\n          var colOptions = _objectSpread2(_objectSpread2({}, options), {}, {\n            enumValues\n          });\n          var acceptsEmptyFields =\n          // use of cellEditorParams is deprecated\n          (_ref = (_colsData$colIndex$ac = colsData[colIndex].acceptsEmptyFields) !== null && _colsData$colIndex$ac !== void 0 ? _colsData$colIndex$ac : (_colsData$colIndex$ce = colsData[colIndex].cellEditorParams) === null || _colsData$colIndex$ce === void 0 ? void 0 : _colsData$colIndex$ce.acceptsEmptyFields) !== null && _ref !== void 0 ? _ref : false;\n          if (!ValidationUtils.isValid(rowCell, colType, colOptions, acceptsEmptyFields)) {\n            errors.push(_forgeTypeError(rowCell, rowIndex + 1, colType, colOptions, colsData, colIndex));\n          }\n        }\n      }\n    });\n  };\n  for (var rowIndex = startIndex; rowIndex < rows.length; rowIndex++) {\n    _loop(rowIndex);\n  }\n  return errors;\n};\nvar _reformatBoolValue = csvCellValue => {\n  csvCellValue = csvCellValue.toLowerCase();\n  if (['0', 'false', 'no'].includes(csvCellValue)) {\n    return 'false';\n  } else if (['1', 'true', 'yes'].includes(csvCellValue)) {\n    return 'true';\n  }\n};\nvar _reformatValue = (csvCellValue, colTypes) => {\n  if (colTypes && colTypes.includes('bool')) {\n    return _reformatBoolValue(csvCellValue);\n  }\n  return csvCellValue;\n};\nvar _buildCols = header => header.map(col => ({\n  field: col\n}));\nvar _calculateEmptyCols = cols => {\n  if (cols === undefined) {\n    return [];\n  }\n  // use of cellEditorParams is deprecated\n  return cols.map((_, index) => index).filter(colIndex => {\n    var _cols$colIndex$accept, _cols$colIndex$cellEd;\n    return (_cols$colIndex$accept = cols[colIndex].acceptsEmptyFields) !== null && _cols$colIndex$accept !== void 0 ? _cols$colIndex$accept : (_cols$colIndex$cellEd = cols[colIndex].cellEditorParams) === null || _cols$colIndex$cellEd === void 0 ? void 0 : _cols$colIndex$cellEd.acceptsEmptyFields;\n  });\n};\nvar _processTableToTransformNonAcceptableEmptyCols = (lines, emptyCols) => {\n  return lines.map(line => line.map((cell, index) => cell === '' && !emptyCols.includes(index) ? undefined : cell));\n};\nvar _buildRows = (rows, hasHeader, cols) => {\n  var formattedData = [];\n  var startIndex = hasHeader ? 1 : 0;\n  for (var rowIndex = startIndex; rowIndex < rows.length; rowIndex++) {\n    var row = {};\n    for (var colIndex = 0; colIndex < cols.length; colIndex++) {\n      var csvCellValue = rows[rowIndex][colIndex];\n      row[cols[colIndex].field] = _reformatValue(csvCellValue, cols[colIndex].type);\n    }\n    formattedData.push(row);\n  }\n  return formattedData;\n};\nvar fromCSV = function fromCSV(dataStr) {\n  var hasHeader = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var nestedCols = arguments.length > 2 ? arguments[2] : undefined;\n  var options = arguments.length > 3 ? arguments[3] : undefined;\n  if (!hasHeader && !nestedCols) {\n    return {\n      error: [new Error$1('cols must be defined if hasHeader=false', null, null)]\n    };\n  }\n  if (!dataStr || dataStr.length === 0) {\n    return {\n      cols: [],\n      rows: []\n    };\n  }\n  var cols = getFlattenColumnsWithoutGroups(nestedCols);\n  var rows = [];\n  var csvLines;\n  var emptyCols = _calculateEmptyCols(cols);\n  try {\n    csvLines = _processTableToTransformNonAcceptableEmptyCols(CSVUtils.read(dataStr), emptyCols);\n  } catch (err) {\n    return {\n      error: [err]\n    };\n  }\n  if (!cols || cols.length === 0) {\n    cols = _buildCols(csvLines[0]);\n  }\n  var errors = _validateFormat(csvLines, hasHeader, cols, options);\n  if (errors.length > 0) return {\n    error: errors\n  };\n  rows = _buildRows(csvLines, hasHeader, cols);\n  return {\n    cols,\n    rows\n  };\n};\nvar _generateHeader = function _generateHeader(cols) {\n  var separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ',';\n  return cols.map(col => col.field).join(separator);\n};\nvar _generateRow = function _generateRow(row, cols) {\n  var separator = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : ',';\n  var fields = [cols.map(col => row[col.field])];\n  var csvLine = CSVUtils.write(fields, separator);\n  // CSV.write(...) adds a newline at the end of the string, we need to remove it before returning the row\n  return csvLine.replace(/\\r?\\n$/, '');\n};\nvar _generateRows = function _generateRows(rows, cols) {\n  var colSep = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : ',';\n  var rowSep = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '\\n';\n  return rows.map(row => _generateRow(row, cols, colSep)).join(rowSep);\n};\nvar toCSV = (rows, nestedCols, options) => {\n  if (nestedCols == null || nestedCols.length === 0) {\n    return {\n      error: [\"Cols must be defined\"]\n    };\n  }\n  var cols = getFlattenColumnsWithoutGroups(nestedCols);\n  if (!rows) {\n    rows = [];\n  }\n  options = _objectSpread2(_objectSpread2({}, DEFAULT_CSV_EXPORT_OPTIONS), options);\n  var rowsStr = _generateRows(rows, cols, options.colSep, options.rowSep);\n  var header = '';\n  if (options.writeHeader) {\n    header = _generateHeader(cols);\n    if (rowsStr.length > 0) {\n      header = header.concat(options.rowSep);\n    }\n  }\n  return header.concat(rowsStr);\n};\n\n// TODO: some metadata of cols & options ('acceptsEmptyFields', columns types, dates format, ...) are not used right\n// now, but they could be used in a future version to improve the format of the exported Excel file\nvar toXLSX = (rows, nestedCols, options) => {\n  if (!rows) {\n    rows = [];\n  }\n  var cols = getFlattenColumnsWithoutGroups(nestedCols);\n  options = _objectSpread2(_objectSpread2({}, DEFAULT_XLSX_EXPORT_OPTIONS), options);\n  var header = options.writeHeader ? cols.map(col => col.field) : null;\n  return XLSXUtils.write(rows, header);\n};\nvar fromXLSX = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator(function* (fileBlob) {\n    var hasHeader = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    var nestedCols = arguments.length > 2 ? arguments[2] : undefined;\n    var options = arguments.length > 3 ? arguments[3] : undefined;\n    if (!hasHeader && !nestedCols) {\n      return {\n        error: [new Error$1('cols must be defined if hasHeader=false', null, null)]\n      };\n    }\n    if (!fileBlob) {\n      return {\n        cols: [],\n        rows: []\n      };\n    }\n    var cols = getFlattenColumnsWithoutGroups(nestedCols);\n    var rows = [];\n    var xlsxLines;\n    var emptyCols = _calculateEmptyCols(cols);\n    try {\n      xlsxLines = yield XLSXUtils.read(fileBlob, true, emptyCols.length > 0, cols, options, hasHeader);\n      if (emptyCols.length > 0) xlsxLines = _processTableToTransformNonAcceptableEmptyCols(xlsxLines, emptyCols);\n    } catch (err) {\n      return {\n        error: [new Error$1((err === null || err === void 0 ? void 0 : err.message) || err, fileBlob.name, (err === null || err === void 0 ? void 0 : err.stack) || null)]\n      };\n    }\n    if (!cols || cols.length === 0) {\n      cols = _buildCols(xlsxLines[0]);\n    }\n    var errors = _validateFormat(xlsxLines, hasHeader, cols, options);\n    if (errors.length > 0) return {\n      error: errors\n    };\n    rows = _buildRows(xlsxLines, hasHeader, cols);\n    return {\n      cols,\n      rows\n    };\n  });\n  return function fromXLSX(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nvar AgGridUtils = {\n  fromCSV,\n  fromXLSX,\n  getFlattenColumnsWithoutGroups,\n  getColumnsWithHeaderName,\n  toCSV,\n  toXLSX\n};\nvar fileDownload = function (data, filename, mime, bom) {\n  var blobData = typeof bom !== 'undefined' ? [bom, data] : [data];\n  var blob = new Blob(blobData, {\n    type: mime || 'application/octet-stream'\n  });\n  if (typeof window.navigator.msSaveBlob !== 'undefined') {\n    // IE workaround for \"HTML7007: One or more blob URLs were\n    // revoked by closing the blob for which they were created.\n    // These URLs will no longer resolve as the data backing\n    // the URL has been freed.\"\n    window.navigator.msSaveBlob(blob, filename);\n  } else {\n    var blobURL = window.URL && window.URL.createObjectURL ? window.URL.createObjectURL(blob) : window.webkitURL.createObjectURL(blob);\n    var tempLink = document.createElement('a');\n    tempLink.style.display = 'none';\n    tempLink.href = blobURL;\n    tempLink.setAttribute('download', filename);\n\n    // Safari thinks _blank anchor are pop ups. We only want to set _blank\n    // target if the browser does not support the HTML5 download attribute.\n    // This allows you to download files in desktop safari if pop up blocking\n    // is enabled.\n    if (typeof tempLink.download === 'undefined') {\n      tempLink.setAttribute('target', '_blank');\n    }\n    document.body.appendChild(tempLink);\n    tempLink.click();\n\n    // Fixes \"webkit blob resource error 1\"\n    setTimeout(function () {\n      document.body.removeChild(tempLink);\n      window.URL.revokeObjectURL(blobURL);\n    }, 200);\n  }\n};\nvar fileDownload$1 = /*@__PURE__*/getDefaultExportFromCjs(fileDownload);\n\n// Copyright (c) Cosmo Tech.\n// Licensed under the MIT license.\n\nfunction downloadFileFromData(fileData, fileName) {\n  fileDownload$1(fileData, fileName);\n}\nfunction readFileBlobAsync(fileBlob) {\n  return new Promise((resolve, reject) => {\n    var reader = new FileReader();\n    reader.onload = () => {\n      resolve(reader.result);\n    };\n    reader.onerror = reject;\n    reader.readAsText(fileBlob);\n  });\n}\nvar FileBlobUtils = {\n  downloadFileFromData,\n  readFileBlobAsync\n};\n\n// Copyright (c) Cosmo Tech.\n// Licensed under the MIT license.\n\nvar getBaseNameFromFileName = fileName => {\n  if (fileName.indexOf('.') === -1) {\n    return fileName;\n  }\n  var nameParts = fileName.split('.');\n  var extension = nameParts.pop();\n  var baseName = nameParts.join('.');\n  if (extension.length === 0 || baseName.length === 0) {\n    return fileName;\n  }\n  return baseName;\n};\nvar getExtensionFromFileName = fileName => {\n  if (typeof fileName !== 'string' || fileName.indexOf('.') === -1) {\n    return '';\n  }\n  var nameParts = fileName.split('.');\n  var extension = nameParts.pop();\n  var baseName = nameParts.join('.');\n  if (extension.length === 0 || baseName.length === 0) {\n    return '';\n  }\n  return extension;\n};\nvar isExtensionInFileTypeFilter = (extension, fileTypeFilter) => {\n  if (typeof extension !== 'string' || typeof fileTypeFilter !== 'string') return false;\n  var fileTypes = fileTypeFilter.split(',').map(fileType => fileType.replace('.', '').trim());\n  return fileTypes.includes(extension);\n};\nvar PathUtils = {\n  getBaseNameFromFileName,\n  getExtensionFromFileName,\n  isExtensionInFileTypeFilter\n};\n\n// Copyright (c) Cosmo Tech.\n// Licensed under the MIT license.\n\n// Functions to read & write from storage.\n// Notes : local storage works on Chromium but not on Firefox if \"Delete\n// cookies and site data when Firefox is closed\" is selected (for more\n// details, see https://bugzilla.mozilla.org/show_bug.cgi?id=1453699)\nfunction writeToStorage(key, value) {\n  localStorage.setItem(key, value);\n}\nfunction readFromStorage$1(key) {\n  return localStorage.getItem(key);\n}\nfunction clearFromStorage(key) {\n  localStorage.removeItem(key);\n}\n\n// Currently selected provider\nvar currentProvider;\n// Dict of registered providers\nvar providers = {};\n// List of callbacks to call on authentication data change\nvar onAuthChangeCallbacks = [];\nfunction addProvider(newProvider) {\n  // Check that provider name is defined\n  if (newProvider.name === undefined) {\n    console.error('Trying to add a provider without name. Please make sure ' + 'that the provider name is defined and exported.');\n    return null;\n  } else if (providers[newProvider.name] !== undefined) {\n    // Do nothing if provider already exists\n    console.warn('Provider \"' + newProvider.name + '\" already exists');\n  } else {\n    // Otherwise, store new provider\n    providers[newProvider.name] = newProvider;\n  }\n  return providers[newProvider.name];\n}\nfunction setProvider(providerName) {\n  // Set new provider if it exists\n  if (providers[providerName] === undefined) {\n    console.error('Provider \"' + providerName + '\" does not exist, you have ' + 'to register authentication providers with \"addProvider\" function ' + 'before using them');\n    currentProvider = undefined;\n  } else {\n    currentProvider = providers[providerName];\n    // Update callbacks for the new provider\n    if (currentProvider.setAuthChangeCallbacks) {\n      currentProvider.setAuthChangeCallbacks(onAuthChangeCallbacks);\n    }\n    // Store the provider used in local storage\n    writeToStorage('authProvider', providerName);\n  }\n}\n\n// If no provider is currently selected but local storage has the information\n// of a provider used (in another tab or before a page refresh, for instance),\n// this provider will be selected\nfunction initProviderIfNull() {\n  if (currentProvider === undefined) {\n    var newProviderName = readFromStorage$1('authProvider');\n    if (newProviderName !== undefined && newProviderName !== null) {\n      setProvider(newProviderName);\n    }\n  }\n}\nfunction signIn$1() {\n  return currentProvider.signIn();\n}\nfunction signOut$1() {\n  initProviderIfNull();\n  // Clear last auth provider used from local storage\n  clearFromStorage('authProvider');\n  return currentProvider.signOut();\n}\nfunction onAuthStateChanged(newCallback) {\n  onAuthChangeCallbacks.push(newCallback);\n}\nfunction isAsync$1() {\n  initProviderIfNull();\n  if (currentProvider && currentProvider.isAsync) {\n    return currentProvider.isAsync();\n  }\n  return false;\n}\nfunction acquireTokens$1(callback) {\n  initProviderIfNull();\n  if (currentProvider === undefined) {\n    return undefined;\n  }\n  return currentProvider.acquireTokens(callback);\n}\nfunction acquireTokensByRequest$1(tokenReq) {\n  initProviderIfNull();\n  if (currentProvider === undefined) {\n    return undefined;\n  }\n  return currentProvider.acquireTokensByRequest(tokenReq);\n}\nfunction isUserSignedIn$1(callback) {\n  initProviderIfNull();\n  if (currentProvider === undefined) {\n    return false;\n  }\n  return currentProvider.isUserSignedIn(callback);\n}\nfunction getUserEmail$1() {\n  if (currentProvider === undefined) {\n    return undefined;\n  }\n  return currentProvider.getUserEmail();\n}\nfunction getUserName$1() {\n  if (currentProvider === undefined) {\n    return undefined;\n  }\n  return currentProvider.getUserName();\n}\nfunction getUserRoles$1() {\n  if (currentProvider === undefined) {\n    return undefined;\n  }\n  return currentProvider.getUserRoles();\n}\nfunction getUserId$1() {\n  if (currentProvider === undefined) {\n    return undefined;\n  }\n  return currentProvider.getUserId();\n}\nfunction getUserPicUrl$1() {\n  if (currentProvider === undefined) {\n    return undefined;\n  }\n  return currentProvider.getUserPicUrl();\n}\nvar Auth = {\n  addProvider,\n  setProvider,\n  signIn: signIn$1,\n  signOut: signOut$1,\n  onAuthStateChanged,\n  isUserSignedIn: isUserSignedIn$1,\n  getUserEmail: getUserEmail$1,\n  getUserName: getUserName$1,\n  getUserId: getUserId$1,\n  getUserRoles: getUserRoles$1,\n  getUserPicUrl: getUserPicUrl$1,\n  isAsync: isAsync$1,\n  acquireTokens: acquireTokens$1,\n  acquireTokensByRequest: acquireTokensByRequest$1\n};\n\n// Copyright (c) Cosmo Tech.\n// Licensed under the MIT license.\n\nfunction readFromStorage(key) {\n  return localStorage.getItem(key);\n}\nvar name = 'auth-dev';\nvar authData = null;\nfunction setDefaultUser() {\n  authData = {\n    authenticated: true,\n    accountId: 'xxxxxxxx-xxxx-dave-xxxx-xxxxxxxxxxxx',\n    userEmail: 'dev.sample.webapp@example.com',\n    userId: 'xxxxxxxx-xxxx-dave-xxxx-xxxxxxxxxxxx',\n    userName: 'Dave Lauper',\n    roles: ['Organization.User']\n  };\n}\nfunction signIn() {\n  setDefaultUser();\n  window.location.href = '/';\n}\nfunction signOut() {\n  authData = null;\n  window.location.href = '/';\n}\nfunction isAsync() {\n  return false;\n}\nfunction isUserSignedIn() {\n  setDefaultUser();\n  return true;\n}\nfunction getUserEmail() {\n  var _authData;\n  return (_authData = authData) === null || _authData === void 0 ? void 0 : _authData.userEmail;\n}\nfunction getUserName() {\n  var _authData2;\n  return (_authData2 = authData) === null || _authData2 === void 0 ? void 0 : _authData2.userName;\n}\nfunction acquireTokens() {\n  var accessToken = readFromStorage('authAccessToken');\n  return accessToken ? {\n    accessToken\n  } : undefined;\n}\nfunction acquireTokensByRequest(tokenReq) {\n  var accessToken = readFromStorage('authAccessToken');\n  return accessToken ? {\n    accessToken\n  } : undefined;\n}\nfunction getUserId() {\n  if (authData) {\n    return authData.userId;\n  }\n  return undefined;\n}\nfunction getUserRoles() {\n  var _authData3;\n  return (_authData3 = authData) === null || _authData3 === void 0 ? void 0 : _authData3.roles;\n}\nfunction getUserPicUrl() {\n  return undefined;\n}\nvar AuthDev = {\n  name,\n  signIn,\n  signOut,\n  isUserSignedIn,\n  getUserEmail,\n  getUserName,\n  getUserRoles,\n  getUserId,\n  getUserPicUrl,\n  isAsync,\n  acquireTokens,\n  acquireTokensByRequest\n};\n\n// Copyright (c) Cosmo Tech.\n// Licensed under the MIT license.\n\nvar getDatasetNames = (datasets, scenarioDatasets) => {\n  if (!scenarioDatasets || !datasets) {\n    return '';\n  }\n  var names = [];\n  var _loop = function _loop(datasetId) {\n    var dataset = datasets.find(el => el.id === datasetId);\n    if (dataset) {\n      names.push(dataset.name);\n    }\n  };\n  for (var datasetId of scenarioDatasets) {\n    _loop(datasetId);\n  }\n  return names.join(', ');\n};\nvar DatasetUtils = {\n  getDatasetNames\n};\n\n// Copyright (c) Cosmo Tech.\n// Licensed under the MIT license.\n\nvar NAME_VALIDATOR = /^[a-zA-Z0-9][\\w\\s.-]*$/;\n\n// Copyright (c) Cosmo Tech.\n// Licensed under the MIT license.\n\nvar scenarioExistsInList = (scenarioName, scenarioList) => {\n  scenarioName = scenarioName.trim();\n  return scenarioList.find(scenario => scenario.name.trim() === scenarioName) !== undefined;\n};\nvar scenarioExistsInTree = (scenarioName, scenarioTree) => {\n  var treeSearch = node => {\n    for (var scenario of node) {\n      if (scenarioName.trim() === scenario.name.trim() || treeSearch(scenario.children)) {\n        return true;\n      }\n    }\n    return false;\n  };\n  return treeSearch(scenarioTree);\n};\nvar scenarioNameIsValid = (scenarioName, scenarioList) => {\n  scenarioName = scenarioName.trimEnd();\n  if (scenarioName.length === 0) {\n    return 'emptyScenarioName';\n  } else {\n    if (scenarioName.match(NAME_VALIDATOR) === null) {\n      return 'forbiddenCharsInScenarioName';\n    } else if (scenarioExistsInList(scenarioName, scenarioList)) {\n      return 'existingScenarioName';\n    }\n  }\n  return null;\n};\nvar getScenarioTree = (scenarioList, compareFn) => {\n  var scenarioTree = [];\n  // Sort scenario list based on optional user-defined function\n  scenarioList.sort(compareFn);\n  // Set master & orphan scenarios as root scenarios, and add all their children\n  var _loop = function _loop(parentScenario) {\n    if (!parentScenario.parentId || scenarioList.find(grandParent => grandParent.id === parentScenario.parentId) === undefined) {\n      scenarioTree.push(parentScenario);\n    }\n    parentScenario.children = [];\n    for (var childScenario of scenarioList) {\n      if (childScenario.parentId === parentScenario.id) {\n        parentScenario.children.push(childScenario);\n      }\n    }\n  };\n  for (var parentScenario of scenarioList) {\n    _loop(parentScenario);\n  }\n  return scenarioTree;\n};\nfunction countScenariosInTree(treeData) {\n  if (!treeData) {\n    return 0;\n  }\n  var count = treeData.length;\n  for (var node of treeData) {\n    count += countScenariosInTree(node.children);\n  }\n  return count;\n}\nvar ScenarioUtils = {\n  scenarioExistsInList,\n  scenarioExistsInTree,\n  scenarioNameIsValid,\n  getScenarioTree,\n  countScenariosInTree\n};\nvar rfdc_1 = rfdc;\nfunction copyBuffer(cur) {\n  if (cur instanceof Buffer) {\n    return Buffer.from(cur);\n  }\n  return new cur.constructor(cur.buffer.slice(), cur.byteOffset, cur.length);\n}\nfunction rfdc(opts) {\n  opts = opts || {};\n  if (opts.circles) return rfdcCircles(opts);\n  return opts.proto ? cloneProto : clone;\n  function cloneArray(a, fn) {\n    var keys = Object.keys(a);\n    var a2 = new Array(keys.length);\n    for (var i = 0; i < keys.length; i++) {\n      var k = keys[i];\n      var cur = a[k];\n      if (typeof cur !== 'object' || cur === null) {\n        a2[k] = cur;\n      } else if (cur instanceof Date) {\n        a2[k] = new Date(cur);\n      } else if (ArrayBuffer.isView(cur)) {\n        a2[k] = copyBuffer(cur);\n      } else {\n        a2[k] = fn(cur);\n      }\n    }\n    return a2;\n  }\n  function clone(o) {\n    if (typeof o !== 'object' || o === null) return o;\n    if (o instanceof Date) return new Date(o);\n    if (Array.isArray(o)) return cloneArray(o, clone);\n    if (o instanceof Map) return new Map(cloneArray(Array.from(o), clone));\n    if (o instanceof Set) return new Set(cloneArray(Array.from(o), clone));\n    var o2 = {};\n    for (var k in o) {\n      if (Object.hasOwnProperty.call(o, k) === false) continue;\n      var cur = o[k];\n      if (typeof cur !== 'object' || cur === null) {\n        o2[k] = cur;\n      } else if (cur instanceof Date) {\n        o2[k] = new Date(cur);\n      } else if (cur instanceof Map) {\n        o2[k] = new Map(cloneArray(Array.from(cur), clone));\n      } else if (cur instanceof Set) {\n        o2[k] = new Set(cloneArray(Array.from(cur), clone));\n      } else if (ArrayBuffer.isView(cur)) {\n        o2[k] = copyBuffer(cur);\n      } else {\n        o2[k] = clone(cur);\n      }\n    }\n    return o2;\n  }\n  function cloneProto(o) {\n    if (typeof o !== 'object' || o === null) return o;\n    if (o instanceof Date) return new Date(o);\n    if (Array.isArray(o)) return cloneArray(o, cloneProto);\n    if (o instanceof Map) return new Map(cloneArray(Array.from(o), cloneProto));\n    if (o instanceof Set) return new Set(cloneArray(Array.from(o), cloneProto));\n    var o2 = {};\n    for (var k in o) {\n      var cur = o[k];\n      if (typeof cur !== 'object' || cur === null) {\n        o2[k] = cur;\n      } else if (cur instanceof Date) {\n        o2[k] = new Date(cur);\n      } else if (cur instanceof Map) {\n        o2[k] = new Map(cloneArray(Array.from(cur), cloneProto));\n      } else if (cur instanceof Set) {\n        o2[k] = new Set(cloneArray(Array.from(cur), cloneProto));\n      } else if (ArrayBuffer.isView(cur)) {\n        o2[k] = copyBuffer(cur);\n      } else {\n        o2[k] = cloneProto(cur);\n      }\n    }\n    return o2;\n  }\n}\nfunction rfdcCircles(opts) {\n  var refs = [];\n  var refsNew = [];\n  return opts.proto ? cloneProto : clone;\n  function cloneArray(a, fn) {\n    var keys = Object.keys(a);\n    var a2 = new Array(keys.length);\n    for (var i = 0; i < keys.length; i++) {\n      var k = keys[i];\n      var cur = a[k];\n      if (typeof cur !== 'object' || cur === null) {\n        a2[k] = cur;\n      } else if (cur instanceof Date) {\n        a2[k] = new Date(cur);\n      } else if (ArrayBuffer.isView(cur)) {\n        a2[k] = copyBuffer(cur);\n      } else {\n        var index = refs.indexOf(cur);\n        if (index !== -1) {\n          a2[k] = refsNew[index];\n        } else {\n          a2[k] = fn(cur);\n        }\n      }\n    }\n    return a2;\n  }\n  function clone(o) {\n    if (typeof o !== 'object' || o === null) return o;\n    if (o instanceof Date) return new Date(o);\n    if (Array.isArray(o)) return cloneArray(o, clone);\n    if (o instanceof Map) return new Map(cloneArray(Array.from(o), clone));\n    if (o instanceof Set) return new Set(cloneArray(Array.from(o), clone));\n    var o2 = {};\n    refs.push(o);\n    refsNew.push(o2);\n    for (var k in o) {\n      if (Object.hasOwnProperty.call(o, k) === false) continue;\n      var cur = o[k];\n      if (typeof cur !== 'object' || cur === null) {\n        o2[k] = cur;\n      } else if (cur instanceof Date) {\n        o2[k] = new Date(cur);\n      } else if (cur instanceof Map) {\n        o2[k] = new Map(cloneArray(Array.from(cur), clone));\n      } else if (cur instanceof Set) {\n        o2[k] = new Set(cloneArray(Array.from(cur), clone));\n      } else if (ArrayBuffer.isView(cur)) {\n        o2[k] = copyBuffer(cur);\n      } else {\n        var i = refs.indexOf(cur);\n        if (i !== -1) {\n          o2[k] = refsNew[i];\n        } else {\n          o2[k] = clone(cur);\n        }\n      }\n    }\n    refs.pop();\n    refsNew.pop();\n    return o2;\n  }\n  function cloneProto(o) {\n    if (typeof o !== 'object' || o === null) return o;\n    if (o instanceof Date) return new Date(o);\n    if (Array.isArray(o)) return cloneArray(o, cloneProto);\n    if (o instanceof Map) return new Map(cloneArray(Array.from(o), cloneProto));\n    if (o instanceof Set) return new Set(cloneArray(Array.from(o), cloneProto));\n    var o2 = {};\n    refs.push(o);\n    refsNew.push(o2);\n    for (var k in o) {\n      var cur = o[k];\n      if (typeof cur !== 'object' || cur === null) {\n        o2[k] = cur;\n      } else if (cur instanceof Date) {\n        o2[k] = new Date(cur);\n      } else if (cur instanceof Map) {\n        o2[k] = new Map(cloneArray(Array.from(cur), cloneProto));\n      } else if (cur instanceof Set) {\n        o2[k] = new Set(cloneArray(Array.from(cur), cloneProto));\n      } else if (ArrayBuffer.isView(cur)) {\n        o2[k] = copyBuffer(cur);\n      } else {\n        var i = refs.indexOf(cur);\n        if (i !== -1) {\n          o2[k] = refsNew[i];\n        } else {\n          o2[k] = cloneProto(cur);\n        }\n      }\n    }\n    refs.pop();\n    refsNew.pop();\n    return o2;\n  }\n}\nvar rfdc$1 = /*@__PURE__*/getDefaultExportFromCjs(rfdc_1);\n\n// Copyright (c) Cosmo Tech.\n// Licensed under the MIT license.\n\nvar clone = rfdc$1();\nvar sortResourceListByName = resourceList => {\n  if (!Array.isArray(resourceList)) return [];\n  return clone(resourceList).sort((resourceA, resourceB) => resourceA.name.toUpperCase() < resourceB.name.toUpperCase() ? -1 : 1);\n};\nvar getResourceTree = resourceList => {\n  var sortedList = [];\n  var resourceListCopy = sortResourceListByName(resourceList);\n  var buildResourceTree = (idParent, depth) => {\n    var resourceListToFilter = [];\n    var _loop = function _loop(resource) {\n      var parentNotFound = !resourceList.some(parentScenario => parentScenario.id === resource.parentId);\n      if (resource.parentId === idParent || idParent === null && parentNotFound) {\n        resource.depth = depth;\n        sortedList.push(resource);\n        resourceListToFilter.push(resource);\n        buildResourceTree(resource.id, depth + 1);\n      }\n    };\n    for (var resource of resourceListCopy) {\n      _loop(resource);\n    }\n    resourceListCopy = resourceListCopy.filter(resource => !resourceListToFilter.includes(resource));\n  };\n  buildResourceTree(null, 0);\n  return sortedList;\n};\nvar getFirstRootResource = resourceList => {\n  if (resourceList.length > 0) {\n    var resourceMasterList = resourceList.filter(resource => resource.parentId === null);\n    if (resourceMasterList.length === 0) {\n      // The list has not root resources: they may not be shared with the current user, or the list may be\n      // corrupted.\n      return sortResourceListByName(resourceList)[0];\n    }\n    return sortResourceListByName(resourceMasterList)[0];\n  } else {\n    return null;\n  }\n};\nvar ResourceUtils = {\n  sortResourceListByName,\n  getResourceTree,\n  getFirstRootResource\n};\nexport { AgGridUtils, Auth, AuthDev, CSVUtils, DatasetUtils, DateUtils, Error$1 as Error, FileBlobUtils, PathUtils, ResourceUtils, ScenarioUtils, ValidationUtils, XLSXUtils };"],"sourceRoot":""}