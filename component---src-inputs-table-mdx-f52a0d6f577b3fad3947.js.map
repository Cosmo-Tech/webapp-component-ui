{"version":3,"sources":["webpack:///../src/inputs/Table.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","of","Table","__position","__code","__scope","Playground","Props","editMode","dataStatus","errors","summary","loc","context","columns","field","type","rows","a","b","c","onCellChange","console","log","onClearErrors","buildErrorsPanelTitle","errorsCount","isMDXComponent"],"mappings":"6SAUaA,EAAe,Q,4NAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,EACF,iBACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,kBACE,GAAM,SADR,SAGA,gIAEA,kBACE,GAAM,SADR,SAGA,YAAC,IAAD,CAAOC,GAAIC,IAAOF,QAAQ,UAC1B,kBACE,GAAM,eADR,eAGA,YAAC,IAAD,CAAYG,WAAY,EAAGC,OAAQ,soBAA0qBC,SAAO,GACltBN,QACAH,kBACAU,eACAC,UACAL,WALktB,gBAMltBN,IANktB,EAOltBH,eAPktB,GAQjtBO,QAAQ,cACb,YAAC,IAAD,CAAOQ,UAAU,EAAMC,WAAW,QAAQC,OAAQ,CAAC,CAC7CC,QAAS,aACTC,IAAK,SACLC,QAAS,gCACPC,QAAS,CAAC,CACZC,MAAO,IACPC,KAAM,CAAC,WACN,CACDD,MAAO,IACPC,KAAM,CAAC,QACN,CACDD,MAAO,IACPC,KAAM,CAAC,UACLC,KAAM,CAAC,CACTC,EAAG,MACHC,EAAG,KACHC,EAAG,SACF,CACDF,EAAG,MACHC,EAAG,KACHC,EAAG,SACDC,aAAc,WAChBC,QAAQC,IAAI,kBACXC,cAAe,WAChBF,QAAQC,IAAI,iBACXE,sBAAuB,SAAAC,GAAW,OAAOA,EAAP,gCAAkD1B,QAAQ,iB,0NAMrGH,EAAW8B,gBAAiB","file":"component---src-inputs-table-mdx-f52a0d6f577b3fad3947.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/webapp-component-ui/webapp-component-ui/doc/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { Table } from '@cosmotech/ui';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"table\"\n    }}>{`Table`}</h1>\n    <p>{`The aim of this component is to display a dataset CSV file in a table\nand lets users edit its content.`}</p>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Table} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic Usage`}</h2>\n    <Playground __position={1} __code={'<Table\\n  editMode={true}\\n  dataStatus=\\\"READY\\\"\\n  errors={[\\n    {\\n      summary: \\'Wrong type\\',\\n      loc: \\'Line 3\\',\\n      context: \\'Can\\\\\\'t convert \\\"foo\\\" to int\\',\\n    },\\n  ]}\\n  columns={[\\n    { field: \\'a\\', type: [\\'string\\'] },\\n    { field: \\'b\\', type: [\\'int\\'] },\\n    { field: \\'c\\', type: [\\'bool\\'] },\\n  ]}\\n  rows={[\\n    { a: \\'foo\\', b: \\'12\\', c: \\'false\\' },\\n    { a: \\'bar\\', b: \\'53\\', c: \\'true\\' },\\n  ]}\\n  onCellChange={() => {\\n    console.log(\\'cells changed\\')\\n  }}\\n  onClearErrors={() => {\\n    console.log(\\'clear errors\\')\\n  }}\\n  buildErrorsPanelTitle={errorsCount =>\\n    `${errorsCount} errors found during import:`\\n  }\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Table,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Table editMode={true} dataStatus=\"READY\" errors={[{\n        summary: 'Wrong type',\n        loc: 'Line 3',\n        context: 'Can\\'t convert \"foo\" to int'\n      }]} columns={[{\n        field: 'a',\n        type: ['string']\n      }, {\n        field: 'b',\n        type: ['int']\n      }, {\n        field: 'c',\n        type: ['bool']\n      }]} rows={[{\n        a: 'foo',\n        b: '12',\n        c: 'false'\n      }, {\n        a: 'bar',\n        b: '53',\n        c: 'true'\n      }]} onCellChange={() => {\n        console.log('cells changed');\n      }} onClearErrors={() => {\n        console.log('clear errors');\n      }} buildErrorsPanelTitle={errorsCount => `${errorsCount} errors found during import:`} mdxType=\"Table\" />\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}