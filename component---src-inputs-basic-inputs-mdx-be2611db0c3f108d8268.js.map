{"version":3,"sources":["webpack:///../src/inputs/BasicInputs.mdx"],"names":["_frontmatter","Object","isExtensible","prototype","hasOwnProperty","call","defineProperty","configurable","value","name","filename","makeShortcode","props","console","warn","mdx","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutProperties","_excluded","_extends","mdxType","Props","of","BasicEnumInput","Playground","__position","__code","__scope","BasicRadioInput","BasicNumberInput","BasicTextInput","BasicToggleInput","BasicDateInput","BasicSliderInput","BasicEnumInputExample","_React$Component","_this","state","_inheritsLoose","_proto","changeEnumValue","this","setState","render","React","label","tooltipText","changeEnumField","enumValues","key","BasicRadioInputExample","_React$Component2","_this2","_proto2","changeRadioValue","disabled","changeRadioOption","BasicNumberInputExample","_React$Component3","_this3","_proto3","changeNumberValue","changeNumberField","BasicTextInputExample","_React$Component4","_this4","_proto4","changeTextValue","changeTextField","BasicToggleInputExample","_React$Component5","_this5","_proto5","changeSwitchValue","changeSwitchType","BasicDateInputExample","_React$Component6","_this6","Date","_proto6","changeDateValue","id","changeSelectedDate","format","dateProps","minDate","maxDate","minDateMessage","maxDateMessage","invalidDateMessage","BasicSliderInputExample","_React$Component7","_this7","_proto7","changeSliderValue","handleSliderValueChange","isMDXComponent"],"mappings":"6TAQaA,EAAe,QAAG,IAAAA,UAAAC,OAAAD,IAAAC,OAAAC,aAAAF,KAAAC,OAAAE,UAAAC,eAAAC,KAAAL,EAAA,eAAAC,OAAAK,eAAAN,EAAA,cAAAO,cAAA,EAAAC,MAAA,CAAAC,KAAA,eAAAC,SAAA,gCAC/B,MAAMC,EAAgBF,GAAQ,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,2EAC5BM,YAAA,MAASH,IASZI,GAPwBL,EAAc,yBACbA,EAAc,0BACbA,EAAc,2BAChBA,EAAc,yBACZA,EAAc,2BAChBA,EAAc,yBACZA,EAAc,2BAC1B,CAClBX,iBAEIiB,EAAYC,IACH,SAASC,EAAUC,GAG/B,IAHgC,WACjCC,GAEDD,EADIR,EAAKU,YAAAF,EAAAG,GAER,OAAOR,YAACE,EAASO,YAAA,GAAKR,EAAiBJ,EAAK,CAAES,WAAYA,EAAYI,QAAQ,cAI5EV,YAAA,MACE,GAAM,gBACH,gBACLA,YAAA,SAAK,0DACLA,YAAA,MACE,GAAM,kBACH,kBACLA,YAAA,MACE,GAAM,SACH,SACLA,YAACW,IAAK,CAACC,GAAIC,IAAgBH,QAAQ,UACnCV,YAAA,MACE,GAAM,eACH,eACLA,YAACc,IAAU,CAACC,WAAY,EAAGC,OAAQ,8+BAAmgCC,QAAS,CAC7iCpB,QACAM,kBACAW,eACAH,UACAE,mBACAK,oBACAC,qBACAC,mBACAC,qBACAC,mBACAC,qBACApB,kBACAlB,gBACCyB,QAAQ,cACZ,KAAM,IACKc,EAAqB,SAAAC,GACzB,SAAAD,EAAY3B,GAAO,IAAA6B,EAIf,OAHFA,EAAAD,EAAAnC,KAAA,KAAMO,IAAM,MACP8B,MAAQ,CACXlC,MAAO,OACPiC,EALqBE,YAAAJ,EAAAC,GAMxB,IAAAI,EAAAL,EAAApC,UAsBA,OAtBAyC,EACDC,gBAAA,SAAgBrC,GACdsC,KAAKC,SAAS,CACZvC,MAAOA,KAEVoC,EACDI,OAAA,WACE,OAAOjC,YAAAkC,WAAA,KACPlC,YAACa,IAAc,CAACsB,MAAM,kBAAkB1C,MAAOsC,KAAKJ,MAAMlC,MAAO2C,YAAa,2BAA4BC,gBAAiB5C,GAASsC,KAAKD,gBAAgBrC,GAAQ6C,WAAY,CAAC,CAC1KC,IAAK,MACL9C,MAAO,KACN,CACD8C,IAAK,MACL9C,MAAO,KACN,CACD8C,IAAK,MACL9C,MAAO,KACN,CACD8C,IAAK,OACL9C,MAAO,MACLiB,QAAQ,qBAEfc,EA5BwB,CAASU,aA8BpC,OAAOlC,YAACwB,EAAqB,CAACd,QAAQ,4BAG1CV,YAAA,MACE,GAAM,mBACH,mBACLA,YAAA,MACE,GAAM,WACH,SACLA,YAACW,IAAK,CAACC,GAAIM,IAAiBR,QAAQ,UACpCV,YAAA,MACE,GAAM,iBACH,eACLA,YAACc,IAAU,CAACC,WAAY,EAAGC,OAAQ,ggCAAuhCC,QAAS,CACjkCpB,QACAM,kBACAW,eACAH,UACAE,mBACAK,oBACAC,qBACAC,mBACAC,qBACAC,mBACAC,qBACApB,kBACAlB,gBACCyB,QAAQ,cACZ,KAAM,IACK8B,EAAsB,SAAAC,GAC1B,SAAAD,EAAY3C,GAAO,IAAA6C,EAIf,OAHFA,EAAAD,EAAAnD,KAAA,KAAMO,IAAM,MACP8B,MAAQ,CACXlC,MAAO,IACPiD,EALsBd,YAAAY,EAAAC,GAMzB,IAAAE,EAAAH,EAAApD,UAsBA,OAtBAuD,EACDC,iBAAA,SAAiBnD,GACfsC,KAAKC,SAAS,CACZvC,MAAOA,KAEVkD,EACDV,OAAA,WACE,OAAOjC,YAAAkC,WAAA,KACPlC,YAACkB,IAAe,CAACiB,MAAO,kBAAmB1C,MAAOsC,KAAKJ,MAAMlC,MAAO2C,YAAa,oBAAqBS,UAAU,EAAOC,kBAAmBrD,GAASsC,KAAKa,iBAAiBnD,GAAQ6C,WAAY,CAAC,CAC1LC,IAAK,IACL9C,MAAO,KACN,CACD8C,IAAK,IACL9C,MAAO,KACN,CACD8C,IAAK,IACL9C,MAAO,KACN,CACD8C,IAAK,IACL9C,MAAO,MACLiB,QAAQ,sBAEf8B,EA5ByB,CAASN,aA8BrC,OAAOlC,YAACwC,EAAsB,CAAC9B,QAAQ,6BAG3CV,YAAA,MACE,GAAM,oBACH,oBACLA,YAAA,MACE,GAAM,WACH,SACLA,YAACW,IAAK,CAACC,GAAIO,IAAkBT,QAAQ,UACrCV,YAAA,MACE,GAAM,iBACH,eACLA,YAACc,IAAU,CAACC,WAAY,EAAGC,OAAQ,ilBAAolBC,QAAS,CAC9nBpB,QACAM,kBACAW,eACAH,UACAE,mBACAK,oBACAC,qBACAC,mBACAC,qBACAC,mBACAC,qBACApB,kBACAlB,gBACCyB,QAAQ,cACZ,KAAM,IACKqC,EAAuB,SAAAC,GAC3B,SAAAD,EAAYlD,GAAO,IAAAoD,EAIf,OAHFA,EAAAD,EAAA1D,KAAA,KAAMO,IAAM,MACP8B,MAAQ,CACXlC,MAAO,KACPwD,EALuBrB,YAAAmB,EAAAC,GAM1B,IAAAE,EAAAH,EAAA3D,UAUA,OAVA8D,EACDC,kBAAA,SAAkB1D,GAChBsC,KAAKC,SAAS,CACZvC,MAAOA,KAEVyD,EACDjB,OAAA,WACE,OAAOjC,YAAAkC,WAAA,KACPlC,YAACmB,IAAgB,CAACgB,MAAM,kBAAkB1C,MAAOsC,KAAKJ,MAAMlC,MAAO2C,YAAa,oBAAqBgB,kBAAmB3D,GAASsC,KAAKoB,kBAAkB1D,GAAQiB,QAAQ,uBAEzKqC,EAhB0B,CAASb,aAkBtC,OAAOlC,YAAC+C,EAAuB,CAACrC,QAAQ,8BAG5CV,YAAA,MACE,GAAM,kBACH,kBACLA,YAAA,MACE,GAAM,WACH,SACLA,YAACW,IAAK,CAACC,GAAIQ,IAAgBV,QAAQ,UACnCV,YAAA,MACE,GAAM,iBACH,eACLA,YAACc,IAAU,CAACC,WAAY,EAAGC,OAAQ,okBAAykBC,QAAS,CACnnBpB,QACAM,kBACAW,eACAH,UACAE,mBACAK,oBACAC,qBACAC,mBACAC,qBACAC,mBACAC,qBACApB,kBACAlB,gBACCyB,QAAQ,cACZ,KAAM,IACK2C,EAAqB,SAAAC,GACzB,SAAAD,EAAYxD,GAAO,IAAA0D,EAIf,OAHFA,EAAAD,EAAAhE,KAAA,KAAMO,IAAM,MACP8B,MAAQ,CACXlC,MAAO,IACP8D,EALqB3B,YAAAyB,EAAAC,GAMxB,IAAAE,EAAAH,EAAAjE,UAUA,OAVAoE,EACDC,gBAAA,SAAgBhE,GACdsC,KAAKC,SAAS,CACZvC,MAAOA,KAEV+D,EACDvB,OAAA,WACE,OAAOjC,YAAAkC,WAAA,KACPlC,YAACoB,IAAc,CAACe,MAAM,kBAAkB1C,MAAOsC,KAAKJ,MAAMlC,MAAO2C,YAAa,oBAAqBsB,gBAAiBjE,GAASsC,KAAK0B,gBAAgBhE,GAAQiB,QAAQ,qBAEnK2C,EAhBwB,CAASnB,aAkBpC,OAAOlC,YAACqD,EAAqB,CAAC3C,QAAQ,4BAG1CV,YAAA,MACE,GAAM,oBACH,oBACLA,YAAA,MACE,GAAM,WACH,SACLA,YAACW,IAAK,CAACC,GAAIS,IAAkBX,QAAQ,UACrCV,YAAA,MACE,GAAM,iBACH,eACLA,YAACc,IAAU,CAACC,WAAY,EAAGC,OAAQ,ilBAAolBC,QAAS,CAC9nBpB,QACAM,kBACAW,eACAH,UACAE,mBACAK,oBACAC,qBACAC,mBACAC,qBACAC,mBACAC,qBACApB,kBACAlB,gBACCyB,QAAQ,cACZ,KAAM,IACKiD,EAAuB,SAAAC,GAC3B,SAAAD,EAAY9D,GAAO,IAAAgE,EAIf,OAHFA,EAAAD,EAAAtE,KAAA,KAAMO,IAAM,MACP8B,MAAQ,CACXlC,OAAO,GACPoE,EALuBjC,YAAA+B,EAAAC,GAM1B,IAAAE,EAAAH,EAAAvE,UAUA,OAVA0E,EACDC,kBAAA,SAAkBtE,GAChBsC,KAAKC,SAAS,CACZvC,MAAOA,KAEVqE,EACD7B,OAAA,WACE,OAAOjC,YAAAkC,WAAA,KACPlC,YAACqB,IAAgB,CAACc,MAAM,kBAAkB1C,MAAOsC,KAAKJ,MAAMlC,MAAO2C,YAAa,oBAAqB4B,iBAAkBvE,GAASsC,KAAKgC,kBAAkBtE,GAAQiB,QAAQ,uBAExKiD,EAhB0B,CAASzB,aAkBtC,OAAOlC,YAAC2D,EAAuB,CAACjD,QAAQ,8BAG5CV,YAAA,MACE,GAAM,kBACH,kBACLA,YAAA,MACE,GAAM,WACH,SACLA,YAACW,IAAK,CAACC,GAAIU,IAAgBZ,QAAQ,UACnCV,YAAA,MACE,GAAM,iBACH,eACLA,YAACc,IAAU,CAACC,WAAY,GAAIC,OAAQ,ygCAA8hCC,QAAS,CACzkCpB,QACAM,kBACAW,eACAH,UACAE,mBACAK,oBACAC,qBACAC,mBACAC,qBACAC,mBACAC,qBACApB,kBACAlB,gBACCyB,QAAQ,cACZ,KAAM,IACKuD,EAAqB,SAAAC,GACzB,SAAAD,EAAYpE,GAAO,IAAAsE,EAIf,OAHFA,EAAAD,EAAA5E,KAAA,KAAMO,IAAM,MACP8B,MAAQ,CACXlC,MAAO,IAAI2E,KAAK,eAChBD,EALqBvC,YAAAqC,EAAAC,GAMxB,IAAAG,EAAAJ,EAAA7E,UAiBA,OAjBAiF,EACDC,gBAAA,SAAgB7E,GACdsC,KAAKC,SAAS,CACZvC,MAAOA,KAEV4E,EACDpC,OAAA,WACE,OAAOjC,YAAAkC,WAAA,KACPlC,YAACsB,IAAc,CAACiD,GAAG,mBAAmB9E,MAAOsC,KAAKJ,MAAMlC,MAAO2C,YAAa,oBAAqBoC,mBAAoB/E,GAASsC,KAAKuC,gBAAgB7E,GAAQgF,OAAQ,aAActC,MAAO,cAAeuC,UAAW,CAC9MH,GAAI,sBACJI,QAAS,IAAIP,KAAK,cAClBQ,QAAS,IAAIR,KAAK,cAClBS,eAAgB,gCAChBC,eAAgB,gCAChBC,mBAAoB,mBACnBrE,QAAQ,qBAEduD,EAvBwB,CAAS/B,aAyBpC,OAAOlC,YAACiE,EAAqB,CAACvD,QAAQ,4BAG1CV,YAAA,MACE,GAAM,oBACH,oBACLA,YAAA,MACE,GAAM,WACH,SACLA,YAACW,IAAK,CAACC,GAAIW,IAAkBb,QAAQ,UACrCV,YAAA,MACE,GAAM,iBACH,eACLA,YAACc,IAAU,CAACC,WAAY,GAAIC,OAAQ,mnBAAsnBC,QAAS,CACjqBpB,QACAM,kBACAW,eACAH,UACAE,mBACAK,oBACAC,qBACAC,mBACAC,qBACAC,mBACAC,qBACApB,kBACAlB,gBACCyB,QAAQ,cACZ,KAAM,IACKsE,EAAuB,SAAAC,GAC3B,SAAAD,EAAYnF,GAAO,IAAAqF,EAIf,OAHFA,EAAAD,EAAA3F,KAAA,KAAMO,IAAM,MACP8B,MAAQ,CACXlC,MAAO,GACPyF,EALuBtD,YAAAoD,EAAAC,GAM1B,IAAAE,EAAAH,EAAA5F,UAUA,OAVA+F,EACDC,kBAAA,SAAkB3F,GAChBsC,KAAKC,SAAS,CACZvC,MAAOA,KAEV0F,EACDlD,OAAA,WACE,OAAOjC,YAAAkC,WAAA,KACPlC,YAACuB,IAAgB,CAACsB,UAAU,EAAOV,MAAM,kBAAkBC,YAAa,oBAAqB3C,MAAOsC,KAAKJ,MAAMlC,MAAO4F,wBAAyB5F,GAASsC,KAAKqD,kBAAkB3F,GAAQiB,QAAQ,uBAEhMsE,EAhB0B,CAAS9C,aAkBtC,OAAOlC,YAACgF,EAAuB,CAACtE,QAAQ,oCAK/C,IAAAN,UAAAlB,OAAAkB,IAAAlB,OAAAC,aAAAiB,KAAAlB,OAAAE,UAAAC,eAAAC,KAAAc,EAAA,eAAAlB,OAAAK,eAAAa,EAAA,cAAAZ,cAAA,EAAAC,MAAA,CAAAC,KAAA,aAAAC,SAAA,gCAEDS,EAAWkF,gBAAiB","file":"component---src-inputs-basic-inputs-mdx-be2611db0c3f108d8268.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/webapp-component-ui/webapp-component-ui/doc/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { BasicEnumInput, BasicRadioInput, BasicNumberInput, BasicTextInput, BasicToggleInput, BasicDateInput, BasicSliderInput } from '@cosmotech/ui';\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst BasicEnumInputExample = makeShortcode(\"BasicEnumInputExample\");\nconst BasicRadioInputExample = makeShortcode(\"BasicRadioInputExample\");\nconst BasicNumberInputExample = makeShortcode(\"BasicNumberInputExample\");\nconst BasicTextInputExample = makeShortcode(\"BasicTextInputExample\");\nconst BasicToggleInputExample = makeShortcode(\"BasicToggleInputExample\");\nconst BasicDateInputExample = makeShortcode(\"BasicDateInputExample\");\nconst BasicSliderInputExample = makeShortcode(\"BasicSliderInputExample\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"basic-inputs\"\n    }}>{`Basic Inputs`}</h1>\n    <p>{`This part will list all basic inputs that you can use.`}</p>\n    <h2 {...{\n      \"id\": \"basicenuminput\"\n    }}>{`BasicEnumInput`}</h2>\n    <h3 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h3>\n    <Props of={BasicEnumInput} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic Usage`}</h3>\n    <Playground __position={1} __code={'() => {\\n  class BasicEnumInputExample extends React.Component {\\n    constructor(props) {\\n      super(props)\\n      this.state = { value: \\'USD\\' }\\n    }\\n    changeEnumValue(value) {\\n      this.setState({ value: value })\\n    }\\n    render() {\\n      return (\\n        <>\\n          <BasicEnumInput\\n            label=\\\"Here is a label\\\"\\n            value={this.state.value}\\n            tooltipText={\\'Basic enum input tooltip\\'}\\n            changeEnumField={value => this.changeEnumValue(value)}\\n            enumValues={[\\n              {\\n                key: \\'USD\\',\\n                value: \\'$\\',\\n              },\\n              {\\n                key: \\'EUR\\',\\n                value: \\'€\\',\\n              },\\n              {\\n                key: \\'BTC\\',\\n                value: \\'฿\\',\\n              },\\n              {\\n                key: \\'YUAN\\',\\n                value: \\'¥\\',\\n              },\\n            ]}\\n          />\\n        </>\\n      )\\n    }\\n  }\\n  return <BasicEnumInputExample />\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      BasicEnumInput,\n      BasicRadioInput,\n      BasicNumberInput,\n      BasicTextInput,\n      BasicToggleInput,\n      BasicDateInput,\n      BasicSliderInput,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        class BasicEnumInputExample extends React.Component {\n          constructor(props) {\n            super(props);\n            this.state = {\n              value: 'USD'\n            };\n          }\n          changeEnumValue(value) {\n            this.setState({\n              value: value\n            });\n          }\n          render() {\n            return <>\n            <BasicEnumInput label=\"Here is a label\" value={this.state.value} tooltipText={'Basic enum input tooltip'} changeEnumField={value => this.changeEnumValue(value)} enumValues={[{\n                key: 'USD',\n                value: '$'\n              }, {\n                key: 'EUR',\n                value: '€'\n              }, {\n                key: 'BTC',\n                value: '฿'\n              }, {\n                key: 'YUAN',\n                value: '¥'\n              }]} mdxType=\"BasicEnumInput\" />\n          </>;\n          }\n        }\n        return <BasicEnumInputExample mdxType=\"BasicEnumInputExample\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"basicradioinput\"\n    }}>{`BasicRadioInput`}</h2>\n    <h3 {...{\n      \"id\": \"props-1\"\n    }}>{`Props`}</h3>\n    <Props of={BasicRadioInput} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"basic-usage-1\"\n    }}>{`Basic Usage`}</h3>\n    <Playground __position={3} __code={'() => {\\n  class BasicRadioInputExample extends React.Component {\\n    constructor(props) {\\n      super(props)\\n      this.state = { value: \\'\\' }\\n    }\\n    changeRadioValue(value) {\\n      this.setState({ value: value })\\n    }\\n    render() {\\n      return (\\n        <>\\n          <BasicRadioInput\\n            label={\\'Here is a label\\'}\\n            value={this.state.value}\\n            tooltipText={\\'Here is a tooltip\\'}\\n            disabled={false}\\n            changeRadioOption={value => this.changeRadioValue(value)}\\n            enumValues={[\\n              {\\n                key: \\'A\\',\\n                value: \\'A\\',\\n              },\\n              {\\n                key: \\'B\\',\\n                value: \\'B\\',\\n              },\\n              {\\n                key: \\'C\\',\\n                value: \\'C\\',\\n              },\\n              {\\n                key: \\'D\\',\\n                value: \\'D\\',\\n              },\\n            ]}\\n          />\\n        </>\\n      )\\n    }\\n  }\\n  return <BasicRadioInputExample />\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      BasicEnumInput,\n      BasicRadioInput,\n      BasicNumberInput,\n      BasicTextInput,\n      BasicToggleInput,\n      BasicDateInput,\n      BasicSliderInput,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        class BasicRadioInputExample extends React.Component {\n          constructor(props) {\n            super(props);\n            this.state = {\n              value: ''\n            };\n          }\n          changeRadioValue(value) {\n            this.setState({\n              value: value\n            });\n          }\n          render() {\n            return <>\n            <BasicRadioInput label={'Here is a label'} value={this.state.value} tooltipText={'Here is a tooltip'} disabled={false} changeRadioOption={value => this.changeRadioValue(value)} enumValues={[{\n                key: 'A',\n                value: 'A'\n              }, {\n                key: 'B',\n                value: 'B'\n              }, {\n                key: 'C',\n                value: 'C'\n              }, {\n                key: 'D',\n                value: 'D'\n              }]} mdxType=\"BasicRadioInput\" />\n          </>;\n          }\n        }\n        return <BasicRadioInputExample mdxType=\"BasicRadioInputExample\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"basicnumberinput\"\n    }}>{`BasicNumberInput`}</h2>\n    <h3 {...{\n      \"id\": \"props-2\"\n    }}>{`Props`}</h3>\n    <Props of={BasicNumberInput} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"basic-usage-2\"\n    }}>{`Basic Usage`}</h3>\n    <Playground __position={5} __code={'() => {\\n  class BasicNumberInputExample extends React.Component {\\n    constructor(props) {\\n      super(props)\\n      this.state = { value: 5.3 }\\n    }\\n    changeNumberValue(value) {\\n      this.setState({ value: value })\\n    }\\n    render() {\\n      return (\\n        <>\\n          <BasicNumberInput\\n            label=\\\"Here is a label\\\"\\n            value={this.state.value}\\n            tooltipText={\\'Here is a tooltip\\'}\\n            changeNumberField={value => this.changeNumberValue(value)}\\n          />\\n        </>\\n      )\\n    }\\n  }\\n  return <BasicNumberInputExample />\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      BasicEnumInput,\n      BasicRadioInput,\n      BasicNumberInput,\n      BasicTextInput,\n      BasicToggleInput,\n      BasicDateInput,\n      BasicSliderInput,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        class BasicNumberInputExample extends React.Component {\n          constructor(props) {\n            super(props);\n            this.state = {\n              value: 5.3\n            };\n          }\n          changeNumberValue(value) {\n            this.setState({\n              value: value\n            });\n          }\n          render() {\n            return <>\n            <BasicNumberInput label=\"Here is a label\" value={this.state.value} tooltipText={'Here is a tooltip'} changeNumberField={value => this.changeNumberValue(value)} mdxType=\"BasicNumberInput\" />\n          </>;\n          }\n        }\n        return <BasicNumberInputExample mdxType=\"BasicNumberInputExample\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"basictextinput\"\n    }}>{`BasicTextInput`}</h2>\n    <h3 {...{\n      \"id\": \"props-3\"\n    }}>{`Props`}</h3>\n    <Props of={BasicTextInput} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"basic-usage-3\"\n    }}>{`Basic Usage`}</h3>\n    <Playground __position={7} __code={'() => {\\n  class BasicTextInputExample extends React.Component {\\n    constructor(props) {\\n      super(props)\\n      this.state = { value: \\'\\' }\\n    }\\n    changeTextValue(value) {\\n      this.setState({ value: value })\\n    }\\n    render() {\\n      return (\\n        <>\\n          <BasicTextInput\\n            label=\\\"Here is a label\\\"\\n            value={this.state.value}\\n            tooltipText={\\'Here is a tooltip\\'}\\n            changeTextField={value => this.changeTextValue(value)}\\n          />\\n        </>\\n      )\\n    }\\n  }\\n  return <BasicTextInputExample />\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      BasicEnumInput,\n      BasicRadioInput,\n      BasicNumberInput,\n      BasicTextInput,\n      BasicToggleInput,\n      BasicDateInput,\n      BasicSliderInput,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        class BasicTextInputExample extends React.Component {\n          constructor(props) {\n            super(props);\n            this.state = {\n              value: ''\n            };\n          }\n          changeTextValue(value) {\n            this.setState({\n              value: value\n            });\n          }\n          render() {\n            return <>\n            <BasicTextInput label=\"Here is a label\" value={this.state.value} tooltipText={'Here is a tooltip'} changeTextField={value => this.changeTextValue(value)} mdxType=\"BasicTextInput\" />\n          </>;\n          }\n        }\n        return <BasicTextInputExample mdxType=\"BasicTextInputExample\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"basictoggleinput\"\n    }}>{`BasicToggleInput`}</h2>\n    <h3 {...{\n      \"id\": \"props-4\"\n    }}>{`Props`}</h3>\n    <Props of={BasicToggleInput} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"basic-usage-4\"\n    }}>{`Basic Usage`}</h3>\n    <Playground __position={9} __code={'() => {\\n  class BasicToggleInputExample extends React.Component {\\n    constructor(props) {\\n      super(props)\\n      this.state = { value: true }\\n    }\\n    changeSwitchValue(value) {\\n      this.setState({ value: value })\\n    }\\n    render() {\\n      return (\\n        <>\\n          <BasicToggleInput\\n            label=\\\"Here is a label\\\"\\n            value={this.state.value}\\n            tooltipText={\\'Here is a tooltip\\'}\\n            changeSwitchType={value => this.changeSwitchValue(value)}\\n          />\\n        </>\\n      )\\n    }\\n  }\\n  return <BasicToggleInputExample />\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      BasicEnumInput,\n      BasicRadioInput,\n      BasicNumberInput,\n      BasicTextInput,\n      BasicToggleInput,\n      BasicDateInput,\n      BasicSliderInput,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        class BasicToggleInputExample extends React.Component {\n          constructor(props) {\n            super(props);\n            this.state = {\n              value: true\n            };\n          }\n          changeSwitchValue(value) {\n            this.setState({\n              value: value\n            });\n          }\n          render() {\n            return <>\n            <BasicToggleInput label=\"Here is a label\" value={this.state.value} tooltipText={'Here is a tooltip'} changeSwitchType={value => this.changeSwitchValue(value)} mdxType=\"BasicToggleInput\" />\n          </>;\n          }\n        }\n        return <BasicToggleInputExample mdxType=\"BasicToggleInputExample\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"basicdateinput\"\n    }}>{`BasicDateInput`}</h2>\n    <h3 {...{\n      \"id\": \"props-5\"\n    }}>{`Props`}</h3>\n    <Props of={BasicDateInput} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"basic-usage-5\"\n    }}>{`Basic Usage`}</h3>\n    <Playground __position={11} __code={'() => {\\n  class BasicDateInputExample extends React.Component {\\n    constructor(props) {\\n      super(props)\\n      this.state = { value: new Date(\\'09/03/2021\\') }\\n    }\\n    changeDateValue(value) {\\n      this.setState({ value: value })\\n    }\\n    render() {\\n      return (\\n        <>\\n          <BasicDateInput\\n            id=\\\"BasicDateInputId\\\"\\n            value={this.state.value}\\n            tooltipText={\\'Here is a tooltip\\'}\\n            changeSelectedDate={value => this.changeDateValue(value)}\\n            format={\\'MM/dd/yyyy\\'}\\n            label={\\'Pick a date\\'}\\n            dateProps={{\\n              id: \\'basic-date-input-id\\',\\n              minDate: new Date(\\'2014-01-01\\'),\\n              maxDate: new Date(\\'2023-01-01\\'),\\n              minDateMessage: \\'Minimum date is not respected\\',\\n              maxDateMessage: \\'Maximum date is not respected\\',\\n              invalidDateMessage: \\'Date is invalid\\',\\n            }}\\n          />\\n        </>\\n      )\\n    }\\n  }\\n  return <BasicDateInputExample />\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      BasicEnumInput,\n      BasicRadioInput,\n      BasicNumberInput,\n      BasicTextInput,\n      BasicToggleInput,\n      BasicDateInput,\n      BasicSliderInput,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        class BasicDateInputExample extends React.Component {\n          constructor(props) {\n            super(props);\n            this.state = {\n              value: new Date('09/03/2021')\n            };\n          }\n          changeDateValue(value) {\n            this.setState({\n              value: value\n            });\n          }\n          render() {\n            return <>\n            <BasicDateInput id=\"BasicDateInputId\" value={this.state.value} tooltipText={'Here is a tooltip'} changeSelectedDate={value => this.changeDateValue(value)} format={'MM/dd/yyyy'} label={'Pick a date'} dateProps={{\n                id: 'basic-date-input-id',\n                minDate: new Date('2014-01-01'),\n                maxDate: new Date('2023-01-01'),\n                minDateMessage: 'Minimum date is not respected',\n                maxDateMessage: 'Maximum date is not respected',\n                invalidDateMessage: 'Date is invalid'\n              }} mdxType=\"BasicDateInput\" />\n          </>;\n          }\n        }\n        return <BasicDateInputExample mdxType=\"BasicDateInputExample\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"basicsliderinput\"\n    }}>{`BasicSliderInput`}</h2>\n    <h3 {...{\n      \"id\": \"props-6\"\n    }}>{`Props`}</h3>\n    <Props of={BasicSliderInput} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"basic-usage-6\"\n    }}>{`Basic Usage`}</h3>\n    <Playground __position={13} __code={'() => {\\n  class BasicSliderInputExample extends React.Component {\\n    constructor(props) {\\n      super(props)\\n      this.state = { value: 1 }\\n    }\\n    changeSliderValue(value) {\\n      this.setState({ value: value })\\n    }\\n    render() {\\n      return (\\n        <>\\n          <BasicSliderInput\\n            disabled={false}\\n            label=\\\"Here is a label\\\"\\n            tooltipText={\\'Here is a tooltip\\'}\\n            value={this.state.value}\\n            handleSliderValueChange={value => this.changeSliderValue(value)}\\n          />\\n        </>\\n      )\\n    }\\n  }\\n  return <BasicSliderInputExample />\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      BasicEnumInput,\n      BasicRadioInput,\n      BasicNumberInput,\n      BasicTextInput,\n      BasicToggleInput,\n      BasicDateInput,\n      BasicSliderInput,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        class BasicSliderInputExample extends React.Component {\n          constructor(props) {\n            super(props);\n            this.state = {\n              value: 1\n            };\n          }\n          changeSliderValue(value) {\n            this.setState({\n              value: value\n            });\n          }\n          render() {\n            return <>\n            <BasicSliderInput disabled={false} label=\"Here is a label\" tooltipText={'Here is a tooltip'} value={this.state.value} handleSliderValueChange={value => this.changeSliderValue(value)} mdxType=\"BasicSliderInput\" />\n          </>;\n          }\n        }\n        return <BasicSliderInputExample mdxType=\"BasicSliderInputExample\" />;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}