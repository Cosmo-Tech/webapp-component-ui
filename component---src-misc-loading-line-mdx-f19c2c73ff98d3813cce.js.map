{"version":3,"sources":["webpack:///../src/misc/LoadingLine.mdx"],"names":["animationsData","dataLoading","dataError","dataLoaded","Object","isExtensible","prototype","hasOwnProperty","call","defineProperty","configurable","value","name","filename","style","height","width","variant","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutProperties","_excluded","mdx","_extends","mdxType","Props","of","LoadingLine","Playground","__position","__code","__scope","title","hasError","isLoading","animations","isMDXComponent"],"mappings":"4dAWaA,EAAiB,CAC5BC,YAAaA,EACbC,UAAWA,EACXC,WAAYA,QACZ,IAAAH,UAAAI,OAAAJ,IAAAI,OAAAC,aAAAL,KAAAI,OAAAE,UAAAC,eAAAC,KAAAR,EAAA,eAAAI,OAAAK,eAAAT,EAAA,cAAAU,cAAA,EAAAC,MAAA,CAAAC,KAAA,iBAAAC,SAAA,8BACK,MAAMC,EAAQ,CACnBC,OAAQ,GACRC,MAAO,GACPC,QAAS,WACT,IAAAH,UAAAV,OAAAU,IAAAV,OAAAC,aAAAS,KAAAV,OAAAE,UAAAC,eAAAC,KAAAM,EAAA,eAAAV,OAAAK,eAAAK,EAAA,cAAAJ,cAAA,EAAAC,MAAA,CAAAC,KAAA,QAAAC,SAAA,8BACK,MAAMK,EAAe,QAAG,IAAAA,UAAAd,OAAAc,IAAAd,OAAAC,aAAAa,KAAAd,OAAAE,UAAAC,eAAAC,KAAAU,EAAA,eAAAd,OAAAK,eAAAS,EAAA,cAAAR,cAAA,EAAAC,MAAA,CAAAC,KAAA,eAAAC,SAAA,8BAC/B,MAAMM,EAAc,CAClBnB,iBACAc,QACAI,gBAEIE,EAAYC,IACH,SAASC,EAAUC,GAG/B,IAHgC,WACjCC,GAEDD,EADIE,EAAKC,YAAAH,EAAAI,GAER,OAAOC,YAACR,EAASS,YAAA,GAAKV,EAAiBM,EAAK,CAAED,WAAYA,EAAYM,QAAQ,cAM5EF,YAAA,MACE,GAAM,eACH,eACLA,YAAA,SAAK,mFACLA,YAAA,MACE,GAAM,SACH,SACLA,YAACG,IAAK,CAACC,GAAIC,IAAaH,QAAQ,UAChCF,YAAA,MACE,GAAM,mCACH,qCACLA,YAACM,IAAU,CAACC,WAAY,EAAGC,OAAQ,qIAAwIC,QAAS,CAClLZ,QACAJ,kBACAa,eACAH,UACAE,gBACAhC,cACAE,aACAD,YACAmB,kBACArB,iBACAc,QACAI,gBACCY,QAAQ,cACbF,YAACK,IAAW,CAACK,MAAO,eAAgBC,UAAU,EAAOC,WAAW,EAAMC,WAAYzC,EAAgBc,MAAOA,EAAOgB,QAAQ,iBAEtHF,YAAA,MACE,GAAM,sCACH,wCACLA,YAACM,IAAU,CAACC,WAAY,EAAGC,OAAQ,2IAA8IC,QAAS,CACxLZ,QACAJ,kBACAa,eACAH,UACAE,gBACAhC,cACAE,aACAD,YACAmB,kBACArB,iBACAc,QACAI,gBACCY,QAAQ,cACbF,YAACK,IAAW,CAACK,MAAO,oBAAqBC,UAAU,EAAOC,WAAW,EAAOC,WAAYzC,EAAgBc,MAAOA,EAAOgB,QAAQ,iBAE5HF,YAAA,MACE,GAAM,kCACH,oCACLA,YAACM,IAAU,CAACC,WAAY,EAAGC,OAAQ,yIAA4IC,QAAS,CACtLZ,QACAJ,kBACAa,eACAH,UACAE,gBACAhC,cACAE,aACAD,YACAmB,kBACArB,iBACAc,QACAI,gBACCY,QAAQ,cACbF,YAACK,IAAW,CAACK,MAAO,mBAAoBC,UAAU,EAAMC,WAAW,EAAOC,WAAYzC,EAAgBc,MAAOA,EAAOgB,QAAQ,uBAI7H,IAAAR,UAAAlB,OAAAkB,IAAAlB,OAAAC,aAAAiB,KAAAlB,OAAAE,UAAAC,eAAAC,KAAAc,EAAA,eAAAlB,OAAAK,eAAAa,EAAA,cAAAZ,cAAA,EAAAC,MAAA,CAAAC,KAAA,aAAAC,SAAA,8BAEDS,EAAWoB,gBAAiB","file":"component---src-misc-loading-line-mdx-f19c2c73ff98d3813cce.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/webapp-component-ui/webapp-component-ui/doc/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { LoadingLine } from '@cosmotech/ui';\nimport * as dataLoading from '../../../assets/loadingLine/dataLoading.json';\nimport * as dataLoaded from '../../../assets/loadingLine/dataLoaded.json';\nimport * as dataError from '../../../assets/loadingLine/dataError.json';\nexport const animationsData = {\n  dataLoading: dataLoading.default,\n  dataError: dataError.default,\n  dataLoaded: dataLoaded.default\n};\nexport const style = {\n  height: 75,\n  width: 90,\n  variant: 'h5'\n};\nexport const _frontmatter = {};\nconst layoutProps = {\n  animationsData,\n  style,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n\n    <h1 {...{\n      \"id\": \"loadingline\"\n    }}>{`LoadingLine`}</h1>\n    <p>{`The aim of this component is to render loading animation then success or failed`}</p>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={LoadingLine} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"basic-usage-with-status-loading\"\n    }}>{`Basic Usage with status 'Loading'`}</h2>\n    <Playground __position={1} __code={'<LoadingLine\\n  title={\\'Data loading\\'}\\n  hasError={false}\\n  isLoading={true}\\n  animations={animationsData}\\n  style={style}\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      LoadingLine,\n      dataLoading,\n      dataLoaded,\n      dataError,\n      DefaultLayout,\n      animationsData,\n      style,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <LoadingLine title={'Data loading'} hasError={false} isLoading={true} animations={animationsData} style={style} mdxType=\"LoadingLine\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"basic-usage-with-status-successful\"\n    }}>{`Basic Usage with status 'Successful'`}</h2>\n    <Playground __position={2} __code={'<LoadingLine\\n  title={\\'Data load success\\'}\\n  hasError={false}\\n  isLoading={false}\\n  animations={animationsData}\\n  style={style}\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      LoadingLine,\n      dataLoading,\n      dataLoaded,\n      dataError,\n      DefaultLayout,\n      animationsData,\n      style,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <LoadingLine title={'Data load success'} hasError={false} isLoading={false} animations={animationsData} style={style} mdxType=\"LoadingLine\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"basic-usage-with-status-failed\"\n    }}>{`Basic Usage with status 'Failed'`}</h2>\n    <Playground __position={3} __code={'<LoadingLine\\n  title={\\'Data load failed\\'}\\n  hasError={true}\\n  isLoading={false}\\n  animations={animationsData}\\n  style={style}\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      LoadingLine,\n      dataLoading,\n      dataLoaded,\n      dataError,\n      DefaultLayout,\n      animationsData,\n      style,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <LoadingLine title={'Data load failed'} hasError={true} isLoading={false} animations={animationsData} style={style} mdxType=\"LoadingLine\" />\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}