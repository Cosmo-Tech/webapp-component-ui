{"version":3,"sources":["webpack:///../src/inputs/EditableLabel.mdx"],"names":["_frontmatter","Object","isExtensible","prototype","hasOwnProperty","call","defineProperty","configurable","value","name","filename","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutProperties","_excluded","mdx","_extends","mdxType","Props","of","EditableLabel","Playground","__position","__code","__scope","onNewValue","console","log","checkValue","length","labels","title","typographyProps","variant","textFieldProps","isMDXComponent"],"mappings":"iTAQaA,EAAe,QAAG,IAAAA,UAAAC,OAAAD,IAAAC,OAAAC,aAAAF,KAAAC,OAAAE,UAAAC,eAAAC,KAAAL,EAAA,eAAAC,OAAAK,eAAAN,EAAA,cAAAO,cAAA,EAAAC,MAAA,CAAAC,KAAA,eAAAC,SAAA,kCAC/B,MAAMC,EAAc,CAClBX,gBAEIY,EAAYC,IACH,SAASC,EAAUC,GAG/B,IAHgC,WACjCC,GAEDD,EADIE,EAAKC,YAAAH,EAAAI,GAER,OAAOC,YAACR,EAASS,YAAA,GAAKV,EAAiBM,EAAK,CAAED,WAAYA,EAAYM,QAAQ,cAI5EF,YAAA,MACE,GAAM,iBACH,iBACLA,YAAA,SAAK,wFACLA,YAAA,MACE,GAAM,SACH,SACLA,YAACG,IAAK,CAACC,GAAIC,IAAeH,QAAQ,UAClCF,YAAA,MACE,GAAM,eACH,eACLA,YAACM,IAAU,CAACC,WAAY,EAAGC,OAAQ,8VAAyWC,QAAS,CACnZZ,QACAJ,kBACAa,eACAH,UACAE,kBACAZ,kBACAb,gBACCsB,QAAQ,cACbF,YAACK,IAAa,CAACjB,MAAM,MAAMsB,WAAYA,IAAMC,QAAQC,IAAI,sBAAuBC,WAAYzB,GACjE,IAAjBA,EAAM0B,OACD,4BAEF,KACNC,OAAQ,CACTC,MAAO,aACNC,gBAAiB,CAClBC,QAAS,MACRC,eAAgB,CACjBD,QAAS,YACRhB,QAAQ,yBAIhB,IAAAR,UAAAb,OAAAa,IAAAb,OAAAC,aAAAY,KAAAb,OAAAE,UAAAC,eAAAC,KAAAS,EAAA,eAAAb,OAAAK,eAAAQ,EAAA,cAAAP,cAAA,EAAAC,MAAA,CAAAC,KAAA,aAAAC,SAAA,kCAEDI,EAAW0B,gBAAiB","file":"component---src-inputs-editable-label-mdx-dbd647a045f915e04b20.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/webapp-component-ui/webapp-component-ui/doc/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { EditableLabel } from '@cosmotech/ui';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"editablelabel\"\n    }}>{`EditableLabel`}</h1>\n    <p>{`The aim of this component is to display an editable label whose value can be checked`}</p>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={EditableLabel} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic Usage`}</h2>\n    <Playground __position={1} __code={'<EditableLabel\\n  value=\\\"Foo\\\"\\n  onNewValue={() => console.log(\\'New value accepted\\')}\\n  checkValue={value => {\\n    if (value.length === 0) {\\n      return \\'TextField cannot be empty\\'\\n    }\\n    return null\\n  }}\\n  labels={{\\n    title: \\'TextField\\',\\n  }}\\n  typographyProps={{ variant: \\'h4\\' }}\\n  textFieldProps={{ variant: \\'outlined\\' }}\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      EditableLabel,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <EditableLabel value=\"Foo\" onNewValue={() => console.log('New value accepted')} checkValue={value => {\n        if (value.length === 0) {\n          return 'TextField cannot be empty';\n        }\n        return null;\n      }} labels={{\n        title: 'TextField'\n      }} typographyProps={{\n        variant: 'h4'\n      }} textFieldProps={{\n        variant: 'outlined'\n      }} mdxType=\"EditableLabel\" />\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}