{"version":3,"sources":["webpack:///../src/misc/LoadingLine.mdx"],"names":["animationsData","dataLoading","dataError","dataLoaded","style","height","width","variant","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","of","LoadingLine","title","hasError","isLoading","animations","isMDXComponent"],"mappings":"waAWaA,EAAiB,CAC5BC,YAAaA,EACbC,UAAWA,EACXC,WAAYA,QACZ,kOACK,IAAMC,EAAQ,CACnBC,OAAQ,GACRC,MAAO,GACPC,QAAS,WACT,yNACK,IAAMC,EAAe,QAAG,gOAC/B,IAAMC,EAAc,CAClBT,iBACAI,QACAI,gBAEIE,EAAYC,IACH,SAASC,EAAW,GAGhC,IAFDC,EAAU,EAAVA,WACGC,EAAK,iBAER,OAAO,YAACJ,EAAS,eAAKD,EAAiBK,EAAK,CAAED,WAAYA,EAAYE,QAAQ,cAM5E,kBACE,GAAM,eAAa,eAErB,wGACA,kBACE,GAAM,SAAO,SAEf,YAAC,IAAK,CAACC,GAAIC,IAAaF,QAAQ,UAChC,kBACE,GAAM,eAAa,eAErB,uBACF,YAAC,IAAU,CAACA,QAAQ,cAClB,YAAC,IAAW,CAACG,MAAO,eAAgBC,UAAU,EAAOC,WAAW,EAAMC,WAAYrB,EAAgBI,MAAOA,EAAOW,QAAQ,iBAE1H,YAAC,IAAU,CAACA,QAAQ,cAClB,YAAC,IAAW,CAACG,MAAO,mBAAoBC,UAAU,EAAOC,WAAW,EAAOC,WAAYrB,EAAgBI,MAAOA,EAAOW,QAAQ,iBAE/H,YAAC,IAAU,CAACA,QAAQ,cAClB,YAAC,IAAW,CAACG,MAAO,mBAAoBC,UAAU,EAAMC,WAAW,EAAOC,WAAYrB,EAAgBI,MAAOA,EAAOW,QAAQ,wBAK/H,8NAEDH,EAAWU,gBAAiB","file":"component---src-misc-loading-line-mdx-646fae98074ace91457e.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/webapp-component-ui/webapp-component-ui/doc/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { LoadingLine } from '@cosmotech/ui';\nimport * as dataLoading from '../../../assets/loadingLine/dataLoading.json';\nimport * as dataLoaded from '../../../assets/loadingLine/dataLoaded.json';\nimport * as dataError from '../../../assets/loadingLine/dataError.json';\nexport const animationsData = {\n  dataLoading: dataLoading.default,\n  dataError: dataError.default,\n  dataLoaded: dataLoaded.default\n};\nexport const style = {\n  height: 75,\n  width: 90,\n  variant: 'h5'\n};\nexport const _frontmatter = {};\nconst layoutProps = {\n  animationsData,\n  style,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n\n    <h1 {...{\n      \"id\": \"loadingline\"\n    }}>{`LoadingLine`}</h1>\n    <p>{`The aim of this component is to render loading animation then success or failed`}</p>\n    <h3 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h3>\n    <Props of={LoadingLine} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic Usage`}</h3>\n    <div>\n  <Playground mdxType=\"Playground\">\n    <LoadingLine title={'Data loading'} hasError={false} isLoading={true} animations={animationsData} style={style} mdxType=\"LoadingLine\" />\n  </Playground>\n  <Playground mdxType=\"Playground\">\n    <LoadingLine title={'Data load sucess'} hasError={false} isLoading={false} animations={animationsData} style={style} mdxType=\"LoadingLine\" />\n  </Playground>\n  <Playground mdxType=\"Playground\">\n    <LoadingLine title={'Data load failed'} hasError={true} isLoading={false} animations={animationsData} style={style} mdxType=\"LoadingLine\" />\n  </Playground>\n    </div>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}