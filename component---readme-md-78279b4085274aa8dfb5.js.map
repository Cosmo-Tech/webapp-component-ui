{"version":3,"sources":["webpack:///../README.md"],"names":["_frontmatter","Object","isExtensible","prototype","hasOwnProperty","call","defineProperty","configurable","value","name","filename","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutProperties","_excluded","mdx","_extends","mdxType","parentName","isMDXComponent"],"mappings":"0RAMaA,EAAe,QAAG,IAAAA,UAAAC,OAAAD,IAAAC,OAAAC,aAAAF,KAAAC,OAAAE,UAAAC,eAAAC,KAAAL,EAAA,eAAAC,OAAAK,eAAAN,EAAA,cAAAO,cAAA,EAAAC,MAAA,CAAAC,KAAA,eAAAC,SAAA,eAC/B,MAAMC,EAAc,CAClBX,gBAEIY,EAAYC,IACH,SAASC,EAAUC,GAG/B,IAHgC,WACjCC,GAEDD,EADIE,EAAKC,YAAAH,EAAAI,GAER,OAAOC,YAACR,EAASS,YAAA,GAAKV,EAAiBM,EAAK,CAAED,WAAYA,EAAYM,QAAQ,cAG5EF,YAAA,MACE,GAAM,4CACH,8CACLA,YAAA,SAAK,0CAAyCA,YAAA,KAAGG,WAAW,IACxD,KAAQ,qDACL,kCAAsC,kEAE7CH,YAAA,SAAK,UAASA,YAAA,KAAGG,WAAW,IACxB,KAAQ,kCACL,QAAY,gCACnBH,YAAA,MACE,GAAM,qCACH,sCACLA,YAAA,SAAK,cAAaA,YAAA,cAAYG,WAAW,KAAM,gBAA6B,wFAC5DH,YAAA,cAAYG,WAAW,KAAM,iBAA8B,yFAC3EH,YAAA,MACE,GAAM,uBACH,uBACLA,YAAA,SAAGA,YAAA,cAAYG,WAAW,KAAM,mBAAgC,iDAAgDH,YAAA,cAAYG,WAAW,KAAM,eAA4B,KACzKH,YAAA,SAAK,2BAA0BA,YAAA,cAAYG,WAAW,KAAM,mBAAgC,iFAAgFH,YAAA,cAAYG,WAAW,KAAM,wBAAqC,0CAC7MH,YAAA,cAAYG,WAAW,KAAM,QAAqB,mBAAkBH,YAAA,UAAQG,WAAW,KAAM,aAAsB,qBAAoBH,YAAA,cAAYG,WAAW,KAAM,mBAAgC,oBACxNH,YAAA,cAAYG,WAAW,KAAM,QAAqB,sEAC/DH,YAAA,SAAK,gBAAeA,YAAA,cAAYG,WAAW,KAAM,mBAAgC,6DAA4DH,YAAA,cAAYG,WAAW,KAAM,QAAqB,kBAAiBH,YAAA,UAAQG,WAAW,KAAM,aAAsB,+BAA8BH,YAAA,cAAYG,WAAW,KAAM,8CAA2D,KACrXH,YAAA,MACE,GAAM,wBACH,wBACLA,YAAA,SAAK,+FAA8FA,YAAA,cAAYG,WAAW,KAAM,QAAqB,2DACrJH,YAAA,SAAK,oCAAmCA,YAAA,cAAYG,WAAW,KAAM,mBAAgC,+BAA8BH,YAAA,cAAYG,WAAW,KAAM,QAAqB,mEAAkEH,YAAA,cAAYG,WAAW,KAAM,cAA2B,2BAC/SH,YAAA,MACE,GAAM,2BACH,2BACLA,YAAA,SAAK,oDAAmDA,YAAA,cAAYG,WAAW,KAAM,0BAGxF,IAAAT,UAAAb,OAAAa,IAAAb,OAAAC,aAAAY,KAAAb,OAAAE,UAAAC,eAAAC,KAAAS,EAAA,eAAAb,OAAAK,eAAAQ,EAAA,cAAAP,cAAA,EAAAC,MAAA,CAAAC,KAAA,aAAAC,SAAA,eAEDI,EAAWU,gBAAiB","file":"component---readme-md-78279b4085274aa8dfb5.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/webapp-component-ui/webapp-component-ui/doc/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"documentation-for-cosmotechui-components\"\n    }}>{`Documentation for @cosmotech/ui components`}</h1>\n    <p>{`Documentation for the UI components of `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/Cosmo-Tech/azure-sample-webapp\"\n      }}>{`Cosmo Tech Azure Sample Webapp`}</a>{`.\nThis project documents and shows how to use the components.`}</p>\n    <p>{`We use `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/doczjs/docz\"\n      }}>{`docz`}</a>{` to build our documentation.`}</p>\n    <h2 {...{\n      \"id\": \"build--host-documentation-locally\"\n    }}>{`Build & host documentation locally`}</h2>\n    <p>{`Start with `}<inlineCode parentName=\"p\">{`yarn install`}</inlineCode>{` to install all dependencies requried to build the documentation.\nThen, you can use `}<inlineCode parentName=\"p\">{`yarn docz:dev`}</inlineCode>{` to build the documentation and serve it locally at http://localhost:3000/ (default).`}</p>\n    <h2 {...{\n      \"id\": \"build-documentation\"\n    }}>{`Build Documentation`}</h2>\n    <p><inlineCode parentName=\"p\">{`yarn docz:build`}</inlineCode>{` will generate a static site for your site in `}<inlineCode parentName=\"p\">{`.docz/dist/`}</inlineCode>{`.`}</p>\n    <p>{`You can try it out with `}<inlineCode parentName=\"p\">{`yarn docz:serve`}</inlineCode>{` or by serving the generated site with your favorite static file server (e.g. `}<inlineCode parentName=\"p\">{`npx serve .docz/dist`}</inlineCode>{`).\nBe careful if you have specified a `}<inlineCode parentName=\"p\">{`base`}</inlineCode>{` config in your `}<strong parentName=\"p\">{`doczrc.js`}</strong>{` it's not used in `}<inlineCode parentName=\"p\">{`yarn docz:serve`}</inlineCode>{`\nBy default the `}<inlineCode parentName=\"p\">{`base`}</inlineCode>{` config is specified for automatic deployment on our Github pages.`}</p>\n    <p>{`You can have `}<inlineCode parentName=\"p\">{`yarn docz:build`}</inlineCode>{` emit to a different directory by providing a path to the `}<inlineCode parentName=\"p\">{`dest`}</inlineCode>{` field in your `}<strong parentName=\"p\">{`doczrc.js`}</strong>{` or from the command line : `}<inlineCode parentName=\"p\">{`yarn docz:build --dest docs-site-directory`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"deploy-documentation\"\n    }}>{`Deploy Documentation`}</h2>\n    <p>{`The output of docz consists of static assets only. This allows you to deploy your generated `}<inlineCode parentName=\"p\">{`docz`}</inlineCode>{` site with any static site hosting provider you'd like.`}</p>\n    <p>{`Start by building your site with `}<inlineCode parentName=\"p\">{`yarn docz:build`}</inlineCode>{`, if you haven't provided a `}<inlineCode parentName=\"p\">{`dest`}</inlineCode>{` flag to your config then you will find your generated files in `}<inlineCode parentName=\"p\">{`.docz/dist`}</inlineCode>{` to copy to the server.`}</p>\n    <h2 {...{\n      \"id\": \"clean-docz-dependencies\"\n    }}>{`Clean docz dependencies`}</h2>\n    <p>{`To remove docz build and clear dependencies, run `}<inlineCode parentName=\"p\">{`yarn docz:clean`}</inlineCode></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}