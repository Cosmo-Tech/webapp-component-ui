{"version":3,"sources":["webpack:///../src/inputs/BasicInputs.mdx"],"names":["_frontmatter","makeShortcode","name","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","of","BasicEnumInput","__position","__code","__scope","Playground","Props","BasicRadioInput","BasicNumberInput","BasicTextInput","BasicToggleInput","BasicDateInput","BasicSliderInput","BasicEnumInputExample","state","value","changeEnumValue","this","setState","render","label","tooltipText","changeEnumField","enumValues","key","React","BasicRadioInputExample","changeRadioValue","disabled","changeRadioOption","BasicNumberInputExample","changeNumberValue","changeNumberField","BasicTextInputExample","changeTextValue","changeTextField","BasicToggleInputExample","changeSwitchValue","changeSwitchType","BasicDateInputExample","Date","changeDateValue","id","changeSelectedDate","format","dateProps","minDate","maxDate","minDateMessage","maxDateMessage","invalidDateMessage","BasicSliderInputExample","changeSliderValue","handleSliderValueChange","isMDXComponent"],"mappings":"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","file":"component---src-inputs-basic-inputs-mdx-41dd06d121a3ad388f73.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/webapp-component-ui/webapp-component-ui/doc/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { BasicEnumInput, BasicRadioInput, BasicNumberInput, BasicTextInput, BasicToggleInput, BasicDateInput, BasicSliderInput } from '@cosmotech/ui';\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst BasicEnumInputExample = makeShortcode(\"BasicEnumInputExample\");\nconst BasicRadioInputExample = makeShortcode(\"BasicRadioInputExample\");\nconst BasicNumberInputExample = makeShortcode(\"BasicNumberInputExample\");\nconst BasicTextInputExample = makeShortcode(\"BasicTextInputExample\");\nconst BasicToggleInputExample = makeShortcode(\"BasicToggleInputExample\");\nconst BasicDateInputExample = makeShortcode(\"BasicDateInputExample\");\nconst BasicSliderInputExample = makeShortcode(\"BasicSliderInputExample\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"basic-inputs\"\n    }}>{`Basic Inputs`}</h1>\n    <p>{`This part will list all basic inputs that you can use.`}</p>\n    <h2 {...{\n      \"id\": \"basicenuminput\"\n    }}>{`BasicEnumInput`}</h2>\n    <h3 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h3>\n    <Props of={BasicEnumInput} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic Usage`}</h3>\n    <Playground __position={1} __code={'() => {\\n  class BasicEnumInputExample extends React.Component {\\n    constructor(props) {\\n      super(props)\\n      this.state = { value: \\'USD\\' }\\n    }\\n    changeEnumValue(value) {\\n      this.setState({ value: value })\\n    }\\n    render() {\\n      return (\\n        <>\\n          <BasicEnumInput\\n            label=\\\"Here is a label\\\"\\n            value={this.state.value}\\n            tooltipText={\\'Basic enum input tooltip\\'}\\n            changeEnumField={value => this.changeEnumValue(value)}\\n            enumValues={[\\n              {\\n                key: \\'USD\\',\\n                value: \\'$\\',\\n              },\\n              {\\n                key: \\'EUR\\',\\n                value: \\'€\\',\\n              },\\n              {\\n                key: \\'BTC\\',\\n                value: \\'฿\\',\\n              },\\n              {\\n                key: \\'YUAN\\',\\n                value: \\'¥\\',\\n              },\\n            ]}\\n          />\\n        </>\\n      )\\n    }\\n  }\\n  return <BasicEnumInputExample />\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      BasicEnumInput,\n      BasicRadioInput,\n      BasicNumberInput,\n      BasicTextInput,\n      BasicToggleInput,\n      BasicDateInput,\n      BasicSliderInput,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        class BasicEnumInputExample extends React.Component {\n          constructor(props) {\n            super(props);\n            this.state = {\n              value: 'USD'\n            };\n          }\n          changeEnumValue(value) {\n            this.setState({\n              value: value\n            });\n          }\n          render() {\n            return <>\n            <BasicEnumInput label=\"Here is a label\" value={this.state.value} tooltipText={'Basic enum input tooltip'} changeEnumField={value => this.changeEnumValue(value)} enumValues={[{\n                key: 'USD',\n                value: '$'\n              }, {\n                key: 'EUR',\n                value: '€'\n              }, {\n                key: 'BTC',\n                value: '฿'\n              }, {\n                key: 'YUAN',\n                value: '¥'\n              }]} mdxType=\"BasicEnumInput\" />\n          </>;\n          }\n        }\n        return <BasicEnumInputExample mdxType=\"BasicEnumInputExample\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"basicradioinput\"\n    }}>{`BasicRadioInput`}</h2>\n    <h3 {...{\n      \"id\": \"props-1\"\n    }}>{`Props`}</h3>\n    <Props of={BasicRadioInput} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"basic-usage-1\"\n    }}>{`Basic Usage`}</h3>\n    <Playground __position={3} __code={'() => {\\n  class BasicRadioInputExample extends React.Component {\\n    constructor(props) {\\n      super(props)\\n      this.state = { value: \\'\\' }\\n    }\\n    changeRadioValue(value) {\\n      this.setState({ value: value })\\n    }\\n    render() {\\n      return (\\n        <>\\n          <BasicRadioInput\\n            label={\\'Here is a label\\'}\\n            value={this.state.value}\\n            tooltipText={\\'Here is a tooltip\\'}\\n            disabled={false}\\n            changeRadioOption={value => this.changeRadioValue(value)}\\n            enumValues={[\\n              {\\n                key: \\'A\\',\\n                value: \\'A\\',\\n              },\\n              {\\n                key: \\'B\\',\\n                value: \\'B\\',\\n              },\\n              {\\n                key: \\'C\\',\\n                value: \\'C\\',\\n              },\\n              {\\n                key: \\'D\\',\\n                value: \\'D\\',\\n              },\\n            ]}\\n          />\\n        </>\\n      )\\n    }\\n  }\\n  return <BasicRadioInputExample />\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      BasicEnumInput,\n      BasicRadioInput,\n      BasicNumberInput,\n      BasicTextInput,\n      BasicToggleInput,\n      BasicDateInput,\n      BasicSliderInput,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        class BasicRadioInputExample extends React.Component {\n          constructor(props) {\n            super(props);\n            this.state = {\n              value: ''\n            };\n          }\n          changeRadioValue(value) {\n            this.setState({\n              value: value\n            });\n          }\n          render() {\n            return <>\n            <BasicRadioInput label={'Here is a label'} value={this.state.value} tooltipText={'Here is a tooltip'} disabled={false} changeRadioOption={value => this.changeRadioValue(value)} enumValues={[{\n                key: 'A',\n                value: 'A'\n              }, {\n                key: 'B',\n                value: 'B'\n              }, {\n                key: 'C',\n                value: 'C'\n              }, {\n                key: 'D',\n                value: 'D'\n              }]} mdxType=\"BasicRadioInput\" />\n          </>;\n          }\n        }\n        return <BasicRadioInputExample mdxType=\"BasicRadioInputExample\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"basicnumberinput\"\n    }}>{`BasicNumberInput`}</h2>\n    <h3 {...{\n      \"id\": \"props-2\"\n    }}>{`Props`}</h3>\n    <Props of={BasicNumberInput} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"basic-usage-2\"\n    }}>{`Basic Usage`}</h3>\n    <Playground __position={5} __code={'() => {\\n  class BasicNumberInputExample extends React.Component {\\n    constructor(props) {\\n      super(props)\\n      this.state = { value: 5.3 }\\n    }\\n    changeNumberValue(value) {\\n      this.setState({ value: value })\\n    }\\n    render() {\\n      return (\\n        <>\\n          <BasicNumberInput\\n            label=\\\"Here is a label\\\"\\n            value={this.state.value}\\n            tooltipText={\\'Here is a tooltip\\'}\\n            changeNumberField={value => this.changeNumberValue(value)}\\n          />\\n        </>\\n      )\\n    }\\n  }\\n  return <BasicNumberInputExample />\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      BasicEnumInput,\n      BasicRadioInput,\n      BasicNumberInput,\n      BasicTextInput,\n      BasicToggleInput,\n      BasicDateInput,\n      BasicSliderInput,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        class BasicNumberInputExample extends React.Component {\n          constructor(props) {\n            super(props);\n            this.state = {\n              value: 5.3\n            };\n          }\n          changeNumberValue(value) {\n            this.setState({\n              value: value\n            });\n          }\n          render() {\n            return <>\n            <BasicNumberInput label=\"Here is a label\" value={this.state.value} tooltipText={'Here is a tooltip'} changeNumberField={value => this.changeNumberValue(value)} mdxType=\"BasicNumberInput\" />\n          </>;\n          }\n        }\n        return <BasicNumberInputExample mdxType=\"BasicNumberInputExample\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"basictextinput\"\n    }}>{`BasicTextInput`}</h2>\n    <h3 {...{\n      \"id\": \"props-3\"\n    }}>{`Props`}</h3>\n    <Props of={BasicTextInput} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"basic-usage-3\"\n    }}>{`Basic Usage`}</h3>\n    <Playground __position={7} __code={'() => {\\n  class BasicTextInputExample extends React.Component {\\n    constructor(props) {\\n      super(props)\\n      this.state = { value: \\'\\' }\\n    }\\n    changeTextValue(value) {\\n      this.setState({ value: value })\\n    }\\n    render() {\\n      return (\\n        <>\\n          <BasicTextInput\\n            label=\\\"Here is a label\\\"\\n            value={this.state.value}\\n            tooltipText={\\'Here is a tooltip\\'}\\n            changeTextField={value => this.changeTextValue(value)}\\n          />\\n        </>\\n      )\\n    }\\n  }\\n  return <BasicTextInputExample />\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      BasicEnumInput,\n      BasicRadioInput,\n      BasicNumberInput,\n      BasicTextInput,\n      BasicToggleInput,\n      BasicDateInput,\n      BasicSliderInput,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        class BasicTextInputExample extends React.Component {\n          constructor(props) {\n            super(props);\n            this.state = {\n              value: ''\n            };\n          }\n          changeTextValue(value) {\n            this.setState({\n              value: value\n            });\n          }\n          render() {\n            return <>\n            <BasicTextInput label=\"Here is a label\" value={this.state.value} tooltipText={'Here is a tooltip'} changeTextField={value => this.changeTextValue(value)} mdxType=\"BasicTextInput\" />\n          </>;\n          }\n        }\n        return <BasicTextInputExample mdxType=\"BasicTextInputExample\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"basictoggleinput\"\n    }}>{`BasicToggleInput`}</h2>\n    <h3 {...{\n      \"id\": \"props-4\"\n    }}>{`Props`}</h3>\n    <Props of={BasicToggleInput} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"basic-usage-4\"\n    }}>{`Basic Usage`}</h3>\n    <Playground __position={9} __code={'() => {\\n  class BasicToggleInputExample extends React.Component {\\n    constructor(props) {\\n      super(props)\\n      this.state = { value: true }\\n    }\\n    changeSwitchValue(value) {\\n      this.setState({ value: value })\\n    }\\n    render() {\\n      return (\\n        <>\\n          <BasicToggleInput\\n            label=\\\"Here is a label\\\"\\n            value={this.state.value}\\n            tooltipText={\\'Here is a tooltip\\'}\\n            changeSwitchType={value => this.changeSwitchValue(value)}\\n          />\\n        </>\\n      )\\n    }\\n  }\\n  return <BasicToggleInputExample />\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      BasicEnumInput,\n      BasicRadioInput,\n      BasicNumberInput,\n      BasicTextInput,\n      BasicToggleInput,\n      BasicDateInput,\n      BasicSliderInput,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        class BasicToggleInputExample extends React.Component {\n          constructor(props) {\n            super(props);\n            this.state = {\n              value: true\n            };\n          }\n          changeSwitchValue(value) {\n            this.setState({\n              value: value\n            });\n          }\n          render() {\n            return <>\n            <BasicToggleInput label=\"Here is a label\" value={this.state.value} tooltipText={'Here is a tooltip'} changeSwitchType={value => this.changeSwitchValue(value)} mdxType=\"BasicToggleInput\" />\n          </>;\n          }\n        }\n        return <BasicToggleInputExample mdxType=\"BasicToggleInputExample\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"basicdateinput\"\n    }}>{`BasicDateInput`}</h2>\n    <h3 {...{\n      \"id\": \"props-5\"\n    }}>{`Props`}</h3>\n    <Props of={BasicDateInput} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"basic-usage-5\"\n    }}>{`Basic Usage`}</h3>\n    <Playground __position={11} __code={'() => {\\n  class BasicDateInputExample extends React.Component {\\n    constructor(props) {\\n      super(props)\\n      this.state = { value: new Date(\\'09/03/2021\\') }\\n    }\\n    changeDateValue(value) {\\n      this.setState({ value: value })\\n    }\\n    render() {\\n      return (\\n        <>\\n          <BasicDateInput\\n            id=\\\"BasicDateInputId\\\"\\n            value={this.state.value}\\n            tooltipText={\\'Here is a tooltip\\'}\\n            changeSelectedDate={value => this.changeDateValue(value)}\\n            format={\\'MM/dd/yyyy\\'}\\n            label={\\'Pick a date\\'}\\n            dateProps={{\\n              id: \\'basic-date-input-id\\',\\n              minDate: new Date(\\'2014-01-01\\'),\\n              maxDate: new Date(\\'2023-01-01\\'),\\n              minDateMessage: \\'Minimum date is not respected\\',\\n              maxDateMessage: \\'Maximum date is not respected\\',\\n              invalidDateMessage: \\'Date is invalid\\',\\n            }}\\n          />\\n        </>\\n      )\\n    }\\n  }\\n  return <BasicDateInputExample />\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      BasicEnumInput,\n      BasicRadioInput,\n      BasicNumberInput,\n      BasicTextInput,\n      BasicToggleInput,\n      BasicDateInput,\n      BasicSliderInput,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        class BasicDateInputExample extends React.Component {\n          constructor(props) {\n            super(props);\n            this.state = {\n              value: new Date('09/03/2021')\n            };\n          }\n          changeDateValue(value) {\n            this.setState({\n              value: value\n            });\n          }\n          render() {\n            return <>\n            <BasicDateInput id=\"BasicDateInputId\" value={this.state.value} tooltipText={'Here is a tooltip'} changeSelectedDate={value => this.changeDateValue(value)} format={'MM/dd/yyyy'} label={'Pick a date'} dateProps={{\n                id: 'basic-date-input-id',\n                minDate: new Date('2014-01-01'),\n                maxDate: new Date('2023-01-01'),\n                minDateMessage: 'Minimum date is not respected',\n                maxDateMessage: 'Maximum date is not respected',\n                invalidDateMessage: 'Date is invalid'\n              }} mdxType=\"BasicDateInput\" />\n          </>;\n          }\n        }\n        return <BasicDateInputExample mdxType=\"BasicDateInputExample\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"basicsliderinput\"\n    }}>{`BasicSliderInput`}</h2>\n    <h3 {...{\n      \"id\": \"props-6\"\n    }}>{`Props`}</h3>\n    <Props of={BasicSliderInput} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"basic-usage-6\"\n    }}>{`Basic Usage`}</h3>\n    <Playground __position={13} __code={'() => {\\n  class BasicSliderInputExample extends React.Component {\\n    constructor(props) {\\n      super(props)\\n      this.state = { value: 1 }\\n    }\\n    changeSliderValue(value) {\\n      this.setState({ value: value })\\n    }\\n    render() {\\n      return (\\n        <>\\n          <BasicSliderInput\\n            disabled={false}\\n            label=\\\"Here is a label\\\"\\n            tooltipText={\\'Here is a tooltip\\'}\\n            value={this.state.value}\\n            handleSliderValueChange={value => this.changeSliderValue(value)}\\n          />\\n        </>\\n      )\\n    }\\n  }\\n  return <BasicSliderInputExample />\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      BasicEnumInput,\n      BasicRadioInput,\n      BasicNumberInput,\n      BasicTextInput,\n      BasicToggleInput,\n      BasicDateInput,\n      BasicSliderInput,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        class BasicSliderInputExample extends React.Component {\n          constructor(props) {\n            super(props);\n            this.state = {\n              value: 1\n            };\n          }\n          changeSliderValue(value) {\n            this.setState({\n              value: value\n            });\n          }\n          render() {\n            return <>\n            <BasicSliderInput disabled={false} label=\"Here is a label\" tooltipText={'Here is a tooltip'} value={this.state.value} handleSliderValueChange={value => this.changeSliderValue(value)} mdxType=\"BasicSliderInput\" />\n          </>;\n          }\n        }\n        return <BasicSliderInputExample mdxType=\"BasicSliderInputExample\" />;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}