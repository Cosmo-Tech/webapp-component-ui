{"version":3,"sources":["webpack:///../src/cards/ScenarioNode.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","of","ScenarioNode","__position","__code","__scope","Playground","Props","useState","open","setOpen","datasets","id","name","tags","scenario","parentId","creationDate","datasetList","ownerName","state","showDeleteIcon","isExpanded","setIsExpanded","newIsExpanded","deleteScenario","alert","onScenarioRename","buildScenarioNameToDelete","isMDXComponent"],"mappings":"6SASaA,EAAe,QAAG,kOAC/B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAW,GAGhC,UAFDC,EAAU,EAAVA,WACGC,EAAK,iBAER,OAAO,YAACJ,EAAS,eAAKD,EAAiBK,EAAK,CAAED,WAAYA,EAAYE,QAAQ,cAI5E,kBACE,GAAM,gBAAc,gBAEtB,uGACA,kBACE,GAAM,SAAO,SAEf,YAAC,IAAK,CAACC,GAAIC,IAAcF,QAAQ,UACjC,kBACE,GAAM,4CAA0C,8CAElD,YAAC,IAAU,CAACG,WAAY,EAAGC,OAAQ,s6BAAq8BC,SAAO,GAC7+BN,QACAH,kBACAU,eACAC,UACAC,oBACAN,kBAAY,gBACZN,IAAa,EACbH,eAAY,GACXO,QAAQ,eACZ,WACK,MAAwBQ,oBAAS,GAA1BC,EAAI,KAAEC,EAAO,KACpB,OAAO,YAAC,IAAY,CAACC,SAAU,CAAC,CAC9BC,GAAI,WACJC,KAAM,2BACNC,KAAM,CAAC,YACN,CACDF,GAAI,WACJC,KAAM,gCACNC,KAAM,CAAC,aACLC,SAAU,CACZH,GAAI,UACJC,KAAM,UACNG,SAAU,KACVC,aAAc,iCACdC,YAAa,CAAC,YACdC,UAAW,eACXC,MAAO,WACNC,gBAAgB,EAAMC,WAAYb,EAAMc,cAAe,SAAAC,GAAa,OAAId,EAAQc,IAAgBC,eAAgB,kBAAMC,MAAM,qBAAqBC,iBAAkB,kBAAMD,MAAM,qBAAqBE,0BAA2B,iBAAM,oBAAoB5B,QAAQ,oBAGxQ,kBACE,GAAM,+CAA6C,iDAErD,YAAC,IAAU,CAACG,WAAY,EAAGC,OAAQ,y6BAAw8BC,SAAO,GACh/BN,QACAH,kBACAU,eACAC,UACAC,oBACAN,kBAAY,gBACZN,IAAa,EACbH,eAAY,GACXO,QAAQ,eACZ,WACK,MAAwBQ,oBAAS,GAA1BC,EAAI,KAAEC,EAAO,KACpB,OAAO,YAAC,IAAY,CAACC,SAAU,CAAC,CAC9BC,GAAI,WACJC,KAAM,2BACNC,KAAM,CAAC,YACN,CACDF,GAAI,WACJC,KAAM,gCACNC,KAAM,CAAC,aACLC,SAAU,CACZH,GAAI,UACJC,KAAM,UACNG,SAAU,KACVC,aAAc,iCACdC,YAAa,CAAC,YACdC,UAAW,eACXC,MAAO,cACNC,gBAAgB,EAAMC,WAAYb,EAAMc,cAAe,SAAAC,GAAa,OAAId,EAAQc,IAAgBC,eAAgB,kBAAMC,MAAM,qBAAqBC,iBAAkB,kBAAMD,MAAM,qBAAqBE,0BAA2B,iBAAM,oBAAoB5B,QAAQ,oBAGxQ,kBACE,GAAM,2CAAyC,6CAEjD,YAAC,IAAU,CAACG,WAAY,EAAGC,OAAQ,q6BAAo8BC,SAAO,GAC5+BN,QACAH,kBACAU,eACAC,UACAC,oBACAN,kBAAY,gBACZN,IAAa,EACbH,eAAY,GACXO,QAAQ,eACZ,WACK,MAAwBQ,oBAAS,GAA1BC,EAAI,KAAEC,EAAO,KACpB,OAAO,YAAC,IAAY,CAACC,SAAU,CAAC,CAC9BC,GAAI,WACJC,KAAM,2BACNC,KAAM,CAAC,YACN,CACDF,GAAI,WACJC,KAAM,gCACNC,KAAM,CAAC,aACLC,SAAU,CACZH,GAAI,UACJC,KAAM,UACNG,SAAU,KACVC,aAAc,iCACdC,YAAa,CAAC,YACdC,UAAW,eACXC,MAAO,UACNC,gBAAgB,EAAMC,WAAYb,EAAMc,cAAe,SAAAC,GAAa,OAAId,EAAQc,IAAgBC,eAAgB,kBAAMC,MAAM,qBAAqBC,iBAAkB,kBAAMD,MAAM,qBAAqBE,0BAA2B,iBAAM,oBAAoB5B,QAAQ,0BAK3Q,gOAEDH,EAAWgC,gBAAiB","file":"component---src-cards-scenario-node-mdx-fccd878dfc7c6a506c6d.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/webapp-component-ui/webapp-component-ui/doc/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { useState } from 'react';\nimport { ScenarioNode } from '@cosmotech/ui';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"scenarionode\"\n    }}>{`ScenarioNode`}</h1>\n    <p>{`The aim of this component is to easily display a short scenario's description.`}</p>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={ScenarioNode} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"basic-usage-with-scenario-status-created\"\n    }}>{`Basic Usage with scenario status 'Created'`}</h2>\n    <Playground __position={1} __code={'() => {\\n  const [open, setOpen] = useState(true)\\n  return (\\n    <ScenarioNode\\n      datasets={[\\n        {\\n          id: \\'D-000001\\',\\n          name: \\'A wonderful dataset name\\',\\n          tags: [\\'dataset\\'],\\n        },\\n        {\\n          id: \\'D-000002\\',\\n          name: \\'Second wonderful dataset name\\',\\n          tags: [\\'dataset\\'],\\n        },\\n      ]}\\n      scenario={{\\n        id: \\'s-00001\\',\\n        name: \\'Value 1\\',\\n        parentId: null,\\n        creationDate: \\'2021-09-22T15:53:22.622797996Z\\',\\n        datasetList: [\\'D-000001\\'],\\n        ownerName: \\'Bob Bobinson\\',\\n        state: \\'Created\\',\\n      }}\\n      showDeleteIcon={true}\\n      isExpanded={open}\\n      setIsExpanded={newIsExpanded => setOpen(newIsExpanded)}\\n      deleteScenario={() => alert(\\'Scenario deleted\\')}\\n      onScenarioRename={() => alert(\\'Scenario renamed\\')}\\n      buildScenarioNameToDelete={() => \\'Remove scenario?\\'}\\n    />\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      useState,\n      ScenarioNode,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [open, setOpen] = useState(true);\n        return <ScenarioNode datasets={[{\n          id: 'D-000001',\n          name: 'A wonderful dataset name',\n          tags: ['dataset']\n        }, {\n          id: 'D-000002',\n          name: 'Second wonderful dataset name',\n          tags: ['dataset']\n        }]} scenario={{\n          id: 's-00001',\n          name: 'Value 1',\n          parentId: null,\n          creationDate: '2021-09-22T15:53:22.622797996Z',\n          datasetList: ['D-000001'],\n          ownerName: 'Bob Bobinson',\n          state: 'Created'\n        }} showDeleteIcon={true} isExpanded={open} setIsExpanded={newIsExpanded => setOpen(newIsExpanded)} deleteScenario={() => alert('Scenario deleted')} onScenarioRename={() => alert('Scenario renamed')} buildScenarioNameToDelete={() => 'Remove scenario?'} mdxType=\"ScenarioNode\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"basic-usage-with-scenario-status-successful\"\n    }}>{`Basic Usage with scenario status 'Successful'`}</h2>\n    <Playground __position={2} __code={'() => {\\n  const [open, setOpen] = useState(true)\\n  return (\\n    <ScenarioNode\\n      datasets={[\\n        {\\n          id: \\'D-000001\\',\\n          name: \\'A wonderful dataset name\\',\\n          tags: [\\'dataset\\'],\\n        },\\n        {\\n          id: \\'D-000002\\',\\n          name: \\'Second wonderful dataset name\\',\\n          tags: [\\'dataset\\'],\\n        },\\n      ]}\\n      scenario={{\\n        id: \\'s-00001\\',\\n        name: \\'Value 1\\',\\n        parentId: null,\\n        creationDate: \\'2021-09-22T15:53:22.622797996Z\\',\\n        datasetList: [\\'D-000001\\'],\\n        ownerName: \\'Bob Bobinson\\',\\n        state: \\'Successful\\',\\n      }}\\n      showDeleteIcon={true}\\n      isExpanded={open}\\n      setIsExpanded={newIsExpanded => setOpen(newIsExpanded)}\\n      deleteScenario={() => alert(\\'Scenario deleted\\')}\\n      onScenarioRename={() => alert(\\'Scenario renamed\\')}\\n      buildScenarioNameToDelete={() => \\'Remove scenario?\\'}\\n    />\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      useState,\n      ScenarioNode,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [open, setOpen] = useState(true);\n        return <ScenarioNode datasets={[{\n          id: 'D-000001',\n          name: 'A wonderful dataset name',\n          tags: ['dataset']\n        }, {\n          id: 'D-000002',\n          name: 'Second wonderful dataset name',\n          tags: ['dataset']\n        }]} scenario={{\n          id: 's-00001',\n          name: 'Value 1',\n          parentId: null,\n          creationDate: '2021-09-22T15:53:22.622797996Z',\n          datasetList: ['D-000001'],\n          ownerName: 'Bob Bobinson',\n          state: 'Successful'\n        }} showDeleteIcon={true} isExpanded={open} setIsExpanded={newIsExpanded => setOpen(newIsExpanded)} deleteScenario={() => alert('Scenario deleted')} onScenarioRename={() => alert('Scenario renamed')} buildScenarioNameToDelete={() => 'Remove scenario?'} mdxType=\"ScenarioNode\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"basic-usage-with-scenario-status-failed\"\n    }}>{`Basic Usage with scenario status 'Failed'`}</h2>\n    <Playground __position={3} __code={'() => {\\n  const [open, setOpen] = useState(true)\\n  return (\\n    <ScenarioNode\\n      datasets={[\\n        {\\n          id: \\'D-000001\\',\\n          name: \\'A wonderful dataset name\\',\\n          tags: [\\'dataset\\'],\\n        },\\n        {\\n          id: \\'D-000002\\',\\n          name: \\'Second wonderful dataset name\\',\\n          tags: [\\'dataset\\'],\\n        },\\n      ]}\\n      scenario={{\\n        id: \\'s-00001\\',\\n        name: \\'Value 1\\',\\n        parentId: null,\\n        creationDate: \\'2021-09-22T15:53:22.622797996Z\\',\\n        datasetList: [\\'D-000001\\'],\\n        ownerName: \\'Bob Bobinson\\',\\n        state: \\'Failed\\',\\n      }}\\n      showDeleteIcon={true}\\n      isExpanded={open}\\n      setIsExpanded={newIsExpanded => setOpen(newIsExpanded)}\\n      deleteScenario={() => alert(\\'Scenario deleted\\')}\\n      onScenarioRename={() => alert(\\'Scenario renamed\\')}\\n      buildScenarioNameToDelete={() => \\'Remove scenario?\\'}\\n    />\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      useState,\n      ScenarioNode,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [open, setOpen] = useState(true);\n        return <ScenarioNode datasets={[{\n          id: 'D-000001',\n          name: 'A wonderful dataset name',\n          tags: ['dataset']\n        }, {\n          id: 'D-000002',\n          name: 'Second wonderful dataset name',\n          tags: ['dataset']\n        }]} scenario={{\n          id: 's-00001',\n          name: 'Value 1',\n          parentId: null,\n          creationDate: '2021-09-22T15:53:22.622797996Z',\n          datasetList: ['D-000001'],\n          ownerName: 'Bob Bobinson',\n          state: 'Failed'\n        }} showDeleteIcon={true} isExpanded={open} setIsExpanded={newIsExpanded => setOpen(newIsExpanded)} deleteScenario={() => alert('Scenario deleted')} onScenarioRename={() => alert('Scenario renamed')} buildScenarioNameToDelete={() => 'Remove scenario?'} mdxType=\"ScenarioNode\" />;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}